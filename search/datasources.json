[
{
"id": 1109,
"title": "Data Sources",
"path": "/datasources/index.html",
"content": " Data Sources Data sources represent the various subjects/topics of information that can be collected by sensors/logs. Data sources also include data components, which identify specific properties/values of a data source relevant to detecting a given ATT&CK technique or sub-technique. ID Name Domain Enterprise Mobile ICS Description DS0026 Active Directory Enterprise A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices) DS0015 Application Log Enterprise ICS Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform) DS0041 Application Vetting Mobile Application vetting report generated by an external cloud service. DS0039 Asset ICS Data sources with information about the set of devices found within the network, along with their current software and configurations DS0037 Certificate Enterprise A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications DS0025 Cloud Service Enterprise Infrastructure, platforms, or software that are hosted on-premise or by third-party providers, made available to users through network connections and/or APIs DS0010 Cloud Storage Enterprise Data object storage infrastructure hosted on-premise or by third-party providers, made available to users through network connections and/or APIs DS0017 Command Enterprise Mobile ICS A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task DS0032 Container Enterprise A standard unit of virtualized software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another DS0038 Domain Name Enterprise Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names (ex: mitre.org) DS0016 Drive Enterprise ICS A non-volatile data storage device (hard drive, floppy disk, USB flash drive) with at least one formatted partition, typically mounted to the file system and/or assigned a drive letter DS0027 Driver Enterprise A computer program that operates or controls a particular type of device that is attached to a computer. Provides a software interface to hardware devices, enabling operating systems and other computer programs to access hardware functions without needing to know precise details about the hardware being used DS0022 File Enterprise ICS A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media). DS0018 Firewall Enterprise A network security system, running locally on an endpoint or remotely as a service (ex: cloud environment), that monitors and controls incoming/outgoing network traffic based on predefined rules DS0001 Firmware Enterprise ICS Computer software that provides low-level control for the hardware and device(s) of a host, such as BIOS or UEFI/EFI DS0036 Group Enterprise A collection of multiple user accounts that share the same access rights to the computer and/or network resources and have common security rights DS0007 Image Enterprise A single file used to deploy a virtual machine/bootable disk into an on-premise or third-party cloud environment DS0030 Instance Enterprise A virtual server environment which runs workloads, hosted on-premise or by third-party cloud providers DS0035 Internet Scan Enterprise Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet DS0008 Kernel Enterprise A computer program, at the core of a computer OS, that resides in memory and facilitates interactions between hardware and software components DS0028 Logon Session Enterprise ICS Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization DS0004 Malware Repository Enterprise Information obtained (via shared or submitted samples) regarding malicious software (droppers, backdoors, etc.) used by adversaries DS0011 Module Enterprise ICS Executable files consisting of one or more shared classes and interfaces, such as portable executable (PE) format binaries/dynamic link libraries (DLL), executable and linkable format (ELF) binaries/shared libraries, and Mach-O format binaries/shared libraries DS0023 Named Pipe Enterprise Mechanisms that allow inter-process communication locally or over the network. A named pipe is usually found as a file and processes attach to it DS0033 Network Share Enterprise ICS A storage resource (typically a folder or drive) made available from one host to others using network protocols, such as Server Message Block (SMB) or Network File System (NFS) DS0029 Network Traffic Enterprise Mobile ICS Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP) DS0040 Operational Databases ICS Operational databases contain information about the status of the operational process and associated devices, including any measurements, events, history, or alarms that have occurred DS0021 Persona Enterprise A malicious online profile representing a user commonly used by adversaries to social engineer or otherwise target victims DS0014 Pod Enterprise A single unit of shared resources within a cluster, comprised of one or more containers DS0009 Process Enterprise Mobile ICS Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures DS0003 Scheduled Job Enterprise ICS Automated tasks that can be executed at a specific time or on a recurring schedule running in the background (ex: Cron daemon, task scheduler, BITS) DS0012 Script Enterprise ICS A file or stream containing a list of commands, allowing them to be launched in sequence DS0013 Sensor Health Enterprise Mobile Information from host telemetry providing insights about system status, errors, or other notable functional activity DS0019 Service Enterprise ICS A computer process that is configured to execute continuously in the background and perform system tasks, in some cases before any user has logged in DS0020 Snapshot Enterprise A point-in-time copy of cloud volumes (files, settings, etc.) that can be created and/or deployed in cloud environments DS0002 User Account Enterprise ICS A profile representing a user, device, service, or application used to authenticate and access resources DS0042 User Interface Mobile Visual activity on the device that could alert the user to potentially malicious behavior. DS0034 Volume Enterprise Block object storage hosted on-premise or by third-party providers, typically made available to resources as virtualized hard drives DS0006 Web Credential Enterprise Credential material, such as session cookies or tokens, used to authenticate to web applications and services DS0024 Windows Registry Enterprise ICS A Windows OS hierarchical database that stores much of the information and settings for software programs, hardware devices, user preferences, and operating-system configurations DS0005 WMI Enterprise The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers "
},
{
"id": 1110,
"title": "Container, Data Source DS0032",
"path": "/datasources/DS0032/index.html",
"content": " Container A standard unit of virtualized software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another[1] ID: DS0032 \u24d8 Platform: Containers \u24d8 Collection Layer: Container Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 24 December 2024 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Container: Container Creation \"Container Creation\" data component captures details about the initial construction of a container in a containerized environment. This includes events where a new container is instantiated, such as through Docker, Kubernetes, or other container orchestration platforms. Monitoring these events helps detect unauthorized or potentially malicious container creation. Examples: Docker Example: docker create my-container, docker run --name=my-container nginx:latest Kubernetes Example: kubectl run my-pod --image=nginx, kubectl create deployment my-deployment --image=nginx Cloud Container Services Example AWS ECS: Task or service creation (RunTask or CreateService). Azure Container Instances: Deployment of a container group. Google Kubernetes Engine (GKE): Creation of new pods via GCP APIs. This data component can be collected through the following measures: Docker Audit Logging: Enable Docker daemon logging to capture create commands. Configure the Docker daemon to use a log driver such as syslog or json-file. Kubernetes Audit Logs: Enable Kubernetes API server audit logging: Cloud Provider Logs AWS CloudTrail: Enable logging for ECS RunTask or CreateService events. Azure Monitor: Enable activity logging for container group creation. GCP Cloud Logging: Monitor API calls such as container.projects.zones.clusters.create. SIEM Integration: Use a SIEM to collect logs from Docker, Kubernetes, or cloud platforms. Container: Container Creation \"Container Creation\" data component captures details about the initial construction of a container in a containerized environment. This includes events where a new container is instantiated, such as through Docker, Kubernetes, or other container orchestration platforms. Monitoring these events helps detect unauthorized or potentially malicious container creation. Examples: Docker Example: docker create my-container, docker run --name=my-container nginx:latest Kubernetes Example: kubectl run my-pod --image=nginx, kubectl create deployment my-deployment --image=nginx Cloud Container Services Example AWS ECS: Task or service creation (RunTask or CreateService). Azure Container Instances: Deployment of a container group. Google Kubernetes Engine (GKE): Creation of new pods via GCP APIs. This data component can be collected through the following measures: Docker Audit Logging: Enable Docker daemon logging to capture create commands. Configure the Docker daemon to use a log driver such as syslog or json-file. Kubernetes Audit Logs: Enable Kubernetes API server audit logging: Cloud Provider Logs AWS CloudTrail: Enable logging for ECS RunTask or CreateService events. Azure Monitor: Enable activity logging for container group creation. GCP Cloud Logging: Monitor API calls such as container.projects.zones.clusters.create. SIEM Integration: Use a SIEM to collect logs from Docker, Kubernetes, or cloud platforms. Domain ID Name Detects Enterprise T1543 Create or Modify System Process Monitor for newly constructed containers that repeatedly execute malicious payloads as part of persistence or privilege escalation. .005 Container Service Monitor for newly constructed containers that repeatedly execute malicious payloads as part of persistence or privilege escalation. Enterprise T1610 Deploy Container Monitor container creation to detect suspicious or unknown images being deployed. Ensure that only authorized images are being used in the environment, especially in sensitive areas. Analytic 1 - Creation of unexpected or unauthorized containers sourcetype=docker:daemon OR sourcetype=kubernetes:event| search action=\"create\"| where image NOT IN (\"known_images_list\") Enterprise T1611 Escape to Host Monitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root. Enterprise T1053 Scheduled Task/Job Monitor for newly constructed containers that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Analytic 1 - Look for new container creation events with unusual parameters. index=container_logs sourcetype=\"docker_events\" OR sourcetype=\"kubernetes_events\"| eval event_action=coalesce(action, status)| where (event_action=\"create\" OR event_action=\"start\")| search event_type=\"container\"| search (parameters=\"--privileged\" OR parameters=\"--cap-add=\" OR parameters=\"--volume=\" OR parameters=\"--network=host\" OR parameters=\"--device\") .007 Container Orchestration Job Monitor for container creation events within Kubernetes clusters. This helps track when new containers are being deployed, especially by jobs that could have been scheduled by adversaries. Analytic 1 - Look for new container creation events with unusual parameters. sourcetype=kubernetes:container_creation | stats count by container_name namespace pod_name container_id image_name| where NOT [search index=container_baseline container_name=* earliest=-30d@d latest=now() | table container_name] Enterprise T1204 User Execution Monitor for newly constructed containers that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Analytic 1 - Containers communicating with unexpected external services. sourcetype=container_creation OR sourcetype=container_start| stats count by container_name event_description user| where container_name NOT IN (\"\") AND event_description IN (\"created\", \"started\") .003 Malicious Image Track the deployment of new containers, especially from newly built images. Container: Container Enumeration \"Container Enumeration\" data component captures events and actions related to listing and identifying active or available containers within a containerized environment. This includes information about running, stopped, or configured containers, such as their names, IDs, statuses, or associated images. Monitoring this activity is crucial for detecting unauthorized discovery or reconnaissance efforts. Examples: Docker Example: docker ps, docker ps -a Kubernetes Example: kubectl get pods, kubectl get deployments Cloud Container Services Example AWS ECS: API Call: ListTasks or ListContainers Azure Kubernetes Service: API Call: List pod or container instances. Google Kubernetes Engine (GKE): API Call: Retrieve deployments and their associated containers. This data component can be collected through the following measures: Docker Audit Logging: Enable Docker daemon logging to capture enumeration commands. Use tools like auditd to monitor terminal activity involving docker ps or similar commands. Kubernetes Audit Logs: Enable Kubernetes API server audit logging. Capture events where users query resources such as pods, deployments, or services. Cloud Provider Logs AWS CloudTrail: Enable logging for API calls like ListTasks or DescribeTasks. Azure Monitor: Enable activity logging to track container-related queries. GCP Cloud Logging: Track API events involving container enumerations or deployments. SIEM Integration: Collect logs from Docker, Kubernetes, and cloud services for centralized analysis. Container: Container Enumeration \"Container Enumeration\" data component captures events and actions related to listing and identifying active or available containers within a containerized environment. This includes information about running, stopped, or configured containers, such as their names, IDs, statuses, or associated images. Monitoring this activity is crucial for detecting unauthorized discovery or reconnaissance efforts. Examples: Docker Example: docker ps, docker ps -a Kubernetes Example: kubectl get pods, kubectl get deployments Cloud Container Services Example AWS ECS: API Call: ListTasks or ListContainers Azure Kubernetes Service: API Call: List pod or container instances. Google Kubernetes Engine (GKE): API Call: Retrieve deployments and their associated containers. This data component can be collected through the following measures: Docker Audit Logging: Enable Docker daemon logging to capture enumeration commands. Use tools like auditd to monitor terminal activity involving docker ps or similar commands. Kubernetes Audit Logs: Enable Kubernetes API server audit logging. Capture events where users query resources such as pods, deployments, or services. Cloud Provider Logs AWS CloudTrail: Enable logging for API calls like ListTasks or DescribeTasks. Azure Monitor: Enable activity logging to track container-related queries. GCP Cloud Logging: Track API events involving container enumerations or deployments. SIEM Integration: Collect logs from Docker, Kubernetes, and cloud services for centralized analysis. Domain ID Name Detects Enterprise T1613 Container and Resource Discovery Monitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications. Container: Container Start \"Container Start\" data component captures events related to the activation or invocation of a container within a containerized environment. This includes starting a previously stopped container, restarting an existing container, or initializing a container for runtime. Monitoring these activities is critical for identifying unauthorized or unexpected container activations, which may indicate potential adversarial activity or misconfigurations. Examples: Docker Example: docker start <container_name>, docker restart <container_name> Kubernetes Example: Kubernetes automatically restarts containers as part of pod lifecycle management (e.g., due to health checks or configuration changes). Cloud-Native Example AWS ECS: API Call: StartTask to activate a stopped ECS task. Azure Container Instances: Command to restart a container group instance. GCP Kubernetes Engine: Automatic restarts as part of node or pod management. This data component can be collected through the following measures: Docker Audit Logging: Enable Docker logging to capture start and restart events. Use tools like auditd to monitor terminal activity involving container lifecycle commands. Kubernetes Audit Logs: Enable Kubernetes API server audit logging. Cloud Provider Logs AWS CloudTrail: Capture StartTask or related API calls for ECS. Azure Monitor: Track activity in container groups that indicate start or restart events. GCP Cloud Logging: Record logs related to pod restarts or scaling events in Kubernetes Engine. SIEM Integration: Collect logs from Docker, Kubernetes, and cloud services to correlate container start events. Container: Container Start \"Container Start\" data component captures events related to the activation or invocation of a container within a containerized environment. This includes starting a previously stopped container, restarting an existing container, or initializing a container for runtime. Monitoring these activities is critical for identifying unauthorized or unexpected container activations, which may indicate potential adversarial activity or misconfigurations. Examples: Docker Example: docker start <container_name>, docker restart <container_name> Kubernetes Example: Kubernetes automatically restarts containers as part of pod lifecycle management (e.g., due to health checks or configuration changes). Cloud-Native Example AWS ECS: API Call: StartTask to activate a stopped ECS task. Azure Container Instances: Command to restart a container group instance. GCP Kubernetes Engine: Automatic restarts as part of node or pod management. This data component can be collected through the following measures: Docker Audit Logging: Enable Docker logging to capture start and restart events. Use tools like auditd to monitor terminal activity involving container lifecycle commands. Kubernetes Audit Logs: Enable Kubernetes API server audit logging. Cloud Provider Logs AWS CloudTrail: Capture StartTask or related API calls for ECS. Azure Monitor: Track activity in container groups that indicate start or restart events. GCP Cloud Logging: Record logs related to pod restarts or scaling events in Kubernetes Engine. SIEM Integration: Collect logs from Docker, Kubernetes, and cloud services to correlate container start events. Domain ID Name Detects Enterprise T1610 Deploy Container Monitor for the start of containers, especially those not aligned with expected images or known administrative schedules. Analytic 1 - Unexpected container starts sourcetype=docker:daemon OR sourcetype=kubernetes:event| search action=\"start\"| where user NOT IN (\"known_admins\") Enterprise T1204 User Execution Monitor for the activation or invocation of a container (ex: docker start or docker restart) .003 Malicious Image Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images. References docker docs. (n.d.). Containers. Retrieved October 13, 2021. "
},
{
"id": 1111,
"title": "Sensor Health, Data Source DS0013",
"path": "/datasources/DS0013/index.html",
"content": " Sensor Health Information from host telemetry providing insights about system status, errors, or other notable functional activity ID: DS0013 \u24d8 Platforms: Android, Linux, Windows, iOS, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.1 Created: 20 October 2021 Last Modified: 16 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Sensor Health: Host Status Logging, messaging, and other artifacts that highlight the health and operational state of host-based security sensors, such as Endpoint Detection and Response (EDR) agents, antivirus software, logging services, and system monitoring tools. Monitoring sensor health is essential for detecting misconfigurations, sensor failures, tampering, or deliberate security control evasion by adversaries. Data Collection Measures: Windows Event Logs: Event ID 1074 (System Shutdown): Detects unexpected system reboots/shutdowns. Event ID 6006 (Event Log Stopped): Logs when Windows event logging is stopped. Event ID 16 (Sysmon): Detects configuration state changes that may indicate log tampering. Event ID 12 (Windows Defender Status Change) \u2013 Detects changes in Windows Defender state. Linux/macOS Monitoring: /var/log/syslog, /var/log/auth.log, /var/log/kern.log Journald (journalctl) for kernel and system alerts. Endpoint Detection and Response (EDR) Tools: Monitor agent health status, detect sensor tampering, and alert on missing telemetry. Mobile Threat Intelligence Logs: Samsung Knox, SafetyNet, iOS Secure Enclave provide sensor health status for mobile endpoints. Sensor Health: Host Status Logging, messaging, and other artifacts that highlight the health and operational state of host-based security sensors, such as Endpoint Detection and Response (EDR) agents, antivirus software, logging services, and system monitoring tools. Monitoring sensor health is essential for detecting misconfigurations, sensor failures, tampering, or deliberate security control evasion by adversaries. Data Collection Measures: Windows Event Logs: Event ID 1074 (System Shutdown): Detects unexpected system reboots/shutdowns. Event ID 6006 (Event Log Stopped): Logs when Windows event logging is stopped. Event ID 16 (Sysmon): Detects configuration state changes that may indicate log tampering. Event ID 12 (Windows Defender Status Change) \u2013 Detects changes in Windows Defender state. Linux/macOS Monitoring: /var/log/syslog, /var/log/auth.log, /var/log/kern.log Journald (journalctl) for kernel and system alerts. Endpoint Detection and Response (EDR) Tools: Monitor agent health status, detect sensor tampering, and alert on missing telemetry. Mobile Threat Intelligence Logs: Samsung Knox, SafetyNet, iOS Secure Enclave provide sensor health status for mobile endpoints. Domain ID Name Detects Mobile T1398 Boot or Logon Initialization Scripts On Android, Verified Boot can detect unauthorized modifications to the system partition.[1] Android's SafetyNet API provides remote attestation capabilities, which could potentially be used to identify and respond to compromise devices. Samsung Knox provides a similar remote attestation capability on supported Samsung devices. Mobile T1645 Compromise Client Software Binary Verified Boot can detect unauthorized modifications to the system partition.[1] Android\u2019s SafetyNet API provides remote attestation capabilities, which could potentially be used to identify and respond to compromised devices. Samsung Knox provides a similar remote attestation capability on supported Samsung devices. Mobile T1634 Credentials from Password Store Mobile security products can potentially detect jailbroken devices. .001 Keychain Mobile security products can potentially detect jailbroken devices. Mobile T1456 Drive-By Compromise Mobile security products can often alert the user if their device is vulnerable to known exploits. Enterprise T1499 Endpoint Denial of Service Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) .001 OS Exhaustion Flood Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) .002 Service Exhaustion Flood Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) .003 Application Exhaustion Flood Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) .004 Application or System Exploitation Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) Mobile T1664 Exploitation for Initial Access Mobile security products can often alert the user if their device is vulnerable to known exploits. Mobile T1404 Exploitation for Privilege Escalation Mobile security products can potentially utilize device APIs to determine if a device has been rooted or jailbroken. Mobile T1625 Hijack Execution Flow Mobile threat defense agents could detect unauthorized operating system modifications by using attestation. .001 System Runtime API Hijacking Mobile threat defense agents could detect unauthorized operating system modifications by using attestation. Enterprise T1562 Impair Defenses Monitor logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. Lack of log events may be suspicious. .001 Disable or Modify Tools Lack of expected log events may be suspicious. Monitor for telemetry that provides context for modification or deletion of information related to security software processes or services such as Windows Defender definition files in Windows and System log files in Linux. .002 Disable Windows Event Logging Monitor for logging, messaging that may disable Windows event logging to limit data that can be leveraged for detections and audits. For example, adversaries may modify the EventLog file path to a different file name and location.[2] .003 Impair Command History Logging Users checking or changing their HISTCONTROL, HISTFILE, or HISTFILESIZE environment variables may be suspicious. .006 Indicator Blocking Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data. Depending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session. [3] .011 Spoof Security Alerting Monitor logging, messaging, and other artifacts highlighting the health of host sensors (e.g., metrics, errors, and/or exceptions from logging applications), especially correlating and comparing centralized telemetry against potentially suspicious notifications presented on individual systems. Mobile T1630 .003 Indicator Removal on Host: Disguise Root/Jailbreak Indicators Mobile security products can use attestation to detect compromised devices. Mobile T1461 Lockscreen Bypass Mobile security products can often alert the user if their device is vulnerable to known exploits. Enterprise T1498 Network Denial of Service Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) .001 Direct Network Flood Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) .002 Reflection Amplification Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) Mobile T1458 Replication Through Removable Media Mobile security products can often alert the user if their device is vulnerable to known exploits. Enterprise T1496 Resource Hijacking Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. .001 Compute Hijacking Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Enterprise T1195 Supply Chain Compromise Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and compare against known good baseline behavior. (EventCode=7045 OR EventCode=1116)OR (source=\"/var/log/system.log\" message=\"Blocked binary execution\")| eval risk_score=case( like(Image, \"%Temp%\"), 7, like(Image, \"%AppData%\"), 6, like(Image, \"%C:\\Users\\Public%\"), 8)| where risk_score >= 6| stats count by host, user, Image, CommandLine, risk_score| table _time, host, user, Image, CommandLine, risk_score .003 Compromise Hardware Supply Chain Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and and compare against known good baseline behavior. Mobile T1474 .002 Supply Chain Compromise: Compromise Hardware Supply Chain Integrity checking mechanisms can potentially detect unauthorized hardware modifications. .003 Supply Chain Compromise: Compromise Software Supply Chain System partition integrity checking mechanisms can detect unauthorized or malicious code contained in the system partition. Enterprise T1529 System Shutdown/Reboot Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may suggest the shutting down or rebooting of the system. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006. References Android. (n.d.). Verified Boot. Retrieved December 21, 2016. Heiligenstein, L. (n.d.). REP-25: Disable Windows Event Logging. Retrieved April 7, 2022. Palantir. (2018, December 24). Tampering with Windows Event Tracing: Background, Offense, and Defense. Retrieved June 7, 2019. "
},
{
"id": 1112,
"title": "Windows Registry, Data Source DS0024",
"path": "/datasources/DS0024/index.html",
"content": " Windows Registry A Windows OS hierarchical database that stores much of the information and settings for software programs, hardware devices, user preferences, and operating-system configurations[1] ID: DS0024 \u24d8 Platform: Windows \u24d8 Collection Layer: Host Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Windows Registry: Windows Registry Key Access The action of opening a specific Windows Registry key, typically to read its associated value. This activity can be used for system configuration, application settings retrieval, and security policies. Data Collection Measures: Windows Event Logs Event ID 4656 - Handle to an Object was Requested: Logs attempts to open registry keys. Event ID 4663 - An Object was Accessed: Captures read/write operations on registry keys. Event ID 4657 - Registry Value Modification: Useful for detecting changes to registry keys after being accessed. Sysmon Sysmon Event ID 13 - Registry Value Set: Captures modifications to existing registry keys. Endpoint Detection and Response (EDR) Solutions Provide telemetry on registry key access activities, especially when linked to suspicious processes. Windows Registry: Windows Registry Key Access The action of opening a specific Windows Registry key, typically to read its associated value. This activity can be used for system configuration, application settings retrieval, and security policies. Data Collection Measures: Windows Event Logs Event ID 4656 - Handle to an Object was Requested: Logs attempts to open registry keys. Event ID 4663 - An Object was Accessed: Captures read/write operations on registry keys. Event ID 4657 - Registry Value Modification: Useful for detecting changes to registry keys after being accessed. Sysmon Sysmon Event ID 13 - Registry Value Set: Captures modifications to existing registry keys. Endpoint Detection and Response (EDR) Solutions Provide telemetry on registry key access activities, especially when linked to suspicious processes. Domain ID Name Detects Enterprise T1652 Device Driver Discovery Monitor for attempts to access information stored in the Registry about devices and their associated drivers, such as values under HKLM\\SYSTEM\\CurrentControlSet\\Services and HKLM\\SYSTEM\\CurrentControlSet\\HardwareProfiles.[2] Enterprise T1003 OS Credential Dumping Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Analytic 1 - Unauthorized registry access to SAM key. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"*\\SAM\" | where ProcessName IN (\"mimikatz.exe\", \"procdump.exe\", \"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\") .002 Security Account Manager Monitor for the SAM registry key dump being created to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. Analytic 1 - Unauthorized registry access to SAM key. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"*\\SAM\" | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\", \"mimikatz.exe\", \"procdump.exe\") .004 LSA Secrets Monitor for the LSA secrets are stored in the registry at HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets being accessed Analytic 1 - Unauthorized registry access to LSA secrets. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"\\Policy\\Secrets\" | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\", \"mimikatz.exe\", \"procdump.exe\") Enterprise T1012 Query Registry Monitor for unexpected process interactions with the Windows Registry (i.e. reads) that may be related to gathering information. Note: For Security Auditing event ids 4656 and 4663, a System Access Control List (SACL) that controls the use of specific access rights such as Enumerate sub-keys and Query key value is required for event generation. Depending on the Registry key you are monitoring, the implementation of a new System Access Control List (SACL) might be required. Depending of Registry key used for the creation of a System Access Control List (SACL), the generation of event ids 4656 and 4663 might be noisy. Analytic 1 - Suspicious Registry (sourcetype=\"WinEventLog:Security\" EventCode IN (4663, 4656)) AND ObjectType=\"Key\" | WHERE ObjectName LIKE \"%SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall%\" AND (UserAccessList LIKE \"%4435%\" OR UserAccessList LIKE \"%Enumerate sub-keys%\" OR UserAccessList LIKE \"%4432%\" OR UserAccessList LIKE \"%Query key value%\") AND Image NOT IN ('FilePathToExpectedProcess01.exe','FilePathToExpectedProcess02.exe') Enterprise T1649 Steal or Forge Authentication Certificates Monitor for attempts to access information stored in the Registry about certificates and their associated private keys. For example, user certificates are commonly stored under HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\SystemCertificates.[3][4] Enterprise T1614 .001 System Location Discovery: System Language Discovery Monitor for access to windows registry keys that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. Enterprise T1033 System Owner/User Discovery Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Enterprise T1552 Unsecured Credentials Monitor for unexpected windows registry key being accessed that may search compromised systems to find and obtain insecurely stored credentials. Analytic 1 - Unauthorized access to registry keys associated with credentials. index=security sourcetype=\"WinEventLog:Microsoft-Windows-Security-Auditing\" EventCode=4663 ObjectType=\"Registry\" (ObjectName=\"password\" OR ObjectName=\"credential\") | eval AccessAttempt=case( AccessMask=\"0x1\", \"Read\", AccessMask=\"0x2\", \"Write\", AccessMask=\"0x3\", \"Read/Write\", AccessMask=\"0x4\", \"Delete\", true(), \"Unknown\") .002 Credentials in Registry Monitor for unexpected windows registry key being accessed that may search the Registry on compromised systems for insecurely stored credentials. Analytic 1 - Unauthorized access to registry keys associated with credentials. ndex=security sourcetype=\"WinEventLog:Microsoft-Windows-Security-Auditing\" EventCode=4663 ObjectType=\"Registry\" (ObjectName=\"password\" OR ObjectName=\"credential\")| eval AccessType=case( AccessMask=\"0x1\", \"Read\", AccessMask=\"0x2\", \"Write\", AccessMask=\"0x3\", \"Read/Write\", AccessMask=\"0x4\", \"Delete\", true(), \"Unknown\") Windows Registry: Windows Registry Key Creation Initial construction of a new registry key within the Windows operating system. Data Collection Measures: Windows Event Logs Event ID 4656 - Registry Object Handle Requested: Tracks registry key access, including newly created keys. Event ID 4657 - Registry Value Modification: Detects modifications to an existing registry key after creation. Sysmon (System Monitor) for Windows Sysmon Event ID 12 - Registry Key Created: Logs when a new registry key is created. Windows Registry: Windows Registry Key Creation Initial construction of a new registry key within the Windows operating system. Data Collection Measures: Windows Event Logs Event ID 4656 - Registry Object Handle Requested: Tracks registry key access, including newly created keys. Event ID 4657 - Registry Value Modification: Detects modifications to an existing registry key after creation. Sysmon (System Monitor) for Windows Sysmon Event ID 12 - Registry Key Created: Logs when a new registry key is created. Domain ID Name Detects Enterprise T1547 Boot or Logon Autostart Execution Monitor for additions of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry. .001 Registry Run Keys / Startup Folder Monitor for newly created windows registry keys that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. .014 Active Setup Monitor Registry key additions to HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\.Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.[5] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data. Enterprise T1037 Boot or Logon Initialization Scripts Monitor for newly constructed windows registry keys that may use scripts automatically executed at boot or logon initialization to establish persistence. .001 Logon Script (Windows) Monitor for the creation to Registry keys associated with Windows logon scrips, nameley HKCU\\Environment\\UserInitMprLogonScript. Adversaries may schedule software to run whenever a user logs into the system; this is done to establish persistence and sometimes for lateral movement. This trigger is established through the registry key HKEY_CURRENT_USER\\EnvironmentUserInitMprLogonScript. This signature looks edits to existing keys or creation of new keys in that path. Users purposefully adding benign scripts to this path will result in false positives; that case is rare, however. There are other ways of running a script at startup or login that are not covered in this signature. Note that this signature overlaps with the Windows Sysinternals Autoruns tool, which would also show changes to this registry path. Analytic 1 - Boot or Logon Initialization Scripts (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode IN (12, 14, 13)) TargetObject= \"\\EnvironmentUserInitMprLogonScript\") Enterprise T1543 Create or Modify System Process Monitor for newly constructed windows registry keys that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. .003 Windows Service Monitor for new constructed windows registry keys that may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. Analytic 1 - Creation of the HKLM\\System\\CurrentControlSet\\Services Registry key sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"12\" TargetObject=\"HKLM\\System\\CurrentControlSet\\Services*\" Enterprise T1562 .002 Impair Defenses: Disable Windows Event Logging Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control, which may disable Event Viewer.[6][7] .009 Impair Defenses: Safe Mode Boot Monitor Registry creation for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a * in front of the \"Startup\" value name: HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run[\"*Startup\"=\"{Path}\"] or by adding a key to HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal.[8][9] Enterprise T1556 Modify Authentication Process Monitor for the addition of network provider Registry keys (e.g., HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<NetworkProviderName>\\NetworkProvider). Analytic 1 - Unauthorized addition of network provider Registry keys. sourcetype=WinEventLog:Security(EventCode=4663 OR EventCode=4657) | eval registry_path=mvindex(split(ObjectName,\"\\\"), 0, mvcount(split(ObjectName,\"\\\"))-1)| search registry_path IN (\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\", \"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Authentication\", \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\Parameters\") .008 Network Provider DLL Monitor for the addition of network provider Registry keys (e.g., HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<NetworkProviderName>\\NetworkProvider). Enterprise T1112 Modify Registry Monitor for newly constructed registry keys or values to aid in persistence and execution - for example, the creation of the registry key HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\SafeDllSearchMode. The key SafeDllSearchMode, if set to 0, will block the Windows mechanism for the search DLL order and adversaries may execute their own malicious dll. Analytic 1 - Registry Edit with Creation of SafeDllSearchMode Key Set to 0 ((source=\"WinEventLog:Security\" EventCode=\"4657\")(ObjectValueName=\"SafeDllSearchMode\" value=\"0\")) OR ((source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\") EventType=\"SetValue\" TargetObject=\"*SafeDllSearchMode\" Details=\"DWORD (0x00000000)\"))) Enterprise T1027 Obfuscated Files or Information Monitor for the creation of Registry values that may highlight storage of malicious data such as commands or payloads. .011 Fileless Storage Monitor for the creation of Registry values that may highlight storage of malicious data such as commands or payloads. Enterprise T1137 Office Application Startup Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.[10][11] .001 Office Template Macros Collect events related to Registry key creation for keys that could be used for Office-based persistence.[10][11] .002 Office Test Monitor for the creation of the Office Test Registry key. Collect events related to Registry key creation for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.[12] .006 Add-ins Audit the Registry entries relevant for enabling add-ins.[13][14] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Monitor for newly constructed registry keys upon creation of new task. Deletion of values/keys in the registry may further indicate malicious activity. Analytic 1 - Suspicious Creations under Schedule Registry Key ((source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"12\") OR (sourcetype=WinEventLog:Security EventCode=4657) | search (registry_path=\"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tree\\\" OR registry_path=\"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks\\*\") Enterprise T1176 Software Extensions Monitor for any new items written to the Registry or PE files written to disk. That may correlate with extension installation. .001 Browser Extensions Monitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation. Chrome extension registry keys under: HKCU\\Software\\Google\\Chrome\\ExtensionsFirefox entries under: HKCU\\Software\\Mozilla\\Firefox\\ExtensionsUnexpected changes or new GUIDs Analytic 1 - browser registry keys created sourcetype=WinEventLog:Sysmon EventCode=13(TargetObject=\"\\Software\\Google\\Chrome\\Extensions\\\" OR TargetObject=\"\\Software\\Mozilla\\Firefox\\Extensions\\\")| stats count by TargetObject, Details, User, Computer, _time| sort -_time Enterprise T1553 Subvert Trust Controls Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry under HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\ and [HKLM or HKCU]\\Software[\\Policies]\\Microsoft\\SystemCertificates\\Root\\Certificates\\. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: [15]* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072 .004 Install Root Certificate Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry under HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\ and HKLM\\SOFTWARE\\Microsoft\\SystemCertificates\\Root\\Certificates\\ or HKCU\\Policies\\Microsoft\\SystemCertificates\\Root\\Certificates\\ There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: [15]* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072 Windows Registry: Windows Registry Key Deletion The removal of a registry key within the Windows operating system. Data Collection Measures: Windows Event Logs Event ID 4658 - Registry Key Handle Closed: Captures when a handle to a registry key is closed, which may indicate deletion. Event ID 4660 - Object Deleted: Logs when a registry key is deleted. Sysmon (System Monitor) for Windows Sysmon Event ID 12 - Registry Key Deleted: Logs when a registry key is removed. Sysmon Event ID 13 - Registry Value Deleted: Captures removal of specific registry values. Endpoint Detection and Response (EDR) Solutions Monitor registry deletions for suspicious behavior. Windows Registry: Windows Registry Key Deletion The removal of a registry key within the Windows operating system. Data Collection Measures: Windows Event Logs Event ID 4658 - Registry Key Handle Closed: Captures when a handle to a registry key is closed, which may indicate deletion. Event ID 4660 - Object Deleted: Logs when a registry key is deleted. Sysmon (System Monitor) for Windows Sysmon Event ID 12 - Registry Key Deleted: Logs when a registry key is removed. Sysmon Event ID 13 - Registry Value Deleted: Captures removal of specific registry values. Endpoint Detection and Response (EDR) Solutions Monitor registry deletions for suspicious behavior. Domain ID Name Detects Enterprise T1562 Impair Defenses Monitor for unexpected deletion of windows registry keys that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. .001 Disable or Modify Tools Monitor for deletion of Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers. Enterprise T1070 Indicator Removal Monitor windows registry keys that may be deleted or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. .009 Clear Persistence Monitor windows registry keys that may be deleted or alter generated artifacts associated with persistence on a host system. ICS T0872 Indicator Removal on Host Monitor Windows registry keys that may be deleted or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. For added context on adversary procedures and background see Indicator Removal on Host Mitigation and applicable sub-techniques. Enterprise T1112 Modify Registry Monitor for unexpected deletion of windows registry keys to hide configuration information, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution. Windows Registry: Windows Registry Key Modification Changes made to an existing registry key or its values. These modifications can include altering permissions, modifying stored data, or updating configuration settings. Data Collection Measures: Windows Event Logs Event ID 4657 - Registry Value Modified: Logs changes to registry values, including modifications to startup entries, security settings, or system configurations. Sysmon (System Monitor) for Windows Sysmon Event ID 13 - Registry Value Set: Captures changes to specific registry values. Sysmon Event ID 14 - Registry Key & Value Renamed: Logs renaming of registry keys, which may indicate evasion attempts. Endpoint Detection and Response (EDR) Solutions Monitor registry modifications for suspicious behavior. Windows Registry: Windows Registry Key Modification Changes made to an existing registry key or its values. These modifications can include altering permissions, modifying stored data, or updating configuration settings. Data Collection Measures: Windows Event Logs Event ID 4657 - Registry Value Modified: Logs changes to registry values, including modifications to startup entries, security settings, or system configurations. Sysmon (System Monitor) for Windows Sysmon Event ID 13 - Registry Value Set: Captures changes to specific registry values. Sysmon Event ID 14 - Registry Key & Value Renamed: Logs renaming of registry keys, which may indicate evasion attempts. Endpoint Detection and Response (EDR) Solutions Monitor registry modifications for suspicious behavior. Domain ID Name Detects Enterprise T1548 Abuse Elevation Control Mechanism There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes. .002 Bypass User Account Control Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:* The eventvwr.exe bypass uses the [HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command Registry key.[16]* The sdclt.exe bypass uses the [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe and [HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand Registry keys.[17][18]Analysts should monitor these Registry settings for unauthorized changes. UAC Bypass is an interesting technique in that new implementations are regularly found and existing implementations may be fixed (i.e., patched) by Microsoft in new builds of Windows. Therefore, it is important to validate than detections for UAC Bypass are still relevant (i.e., they target non-patched implementations). Note: Sysmon Event ID 12 (Registry Key Create/Delete), Sysmon Event ID 13 (Registry Value Set), and Sysmon Event ID 14 (Registry Key and Value Rename) are useful for creating detections around Registry Key Modification in the context of UAC Bypass. Enterprise T1557 Adversary-in-the-Middle Monitor HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient for changes to the \"EnableMulticast\" DWORD value. A value of \"0\" indicates LLMNR is disabled. .001 LLMNR/NBT-NS Poisoning and SMB Relay Monitor HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient for changes to the \"EnableMulticast\" DWORD value. A value of \"0\" indicates LLMNR is disabled. ICS T0830 Adversary-in-the-Middle Monitor HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient for changes to the \"EnableMulticast\" DWORD value. A value of \"0\" indicates LLMNR is disabled. Enterprise T1547 Boot or Logon Autostart Execution Monitor for modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry. .001 Registry Run Keys / Startup Folder Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations. [5] Detection of the modification of the registry key Common Startup located in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\ and HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders. When a user logs on, any files located in the Startup Folder are launched. Attackers may modify these folders with other files in order to evade detection set on these default folders. This detection focuses on EventIDs 4688 and 1 for process creation and EventID 4657 for the modification of the Registry Keys. Analytic 1 - Modification of Default Startup Folder in the Registry Key \u2018Common Startup\u2019 (source=\"WinEventLog:Security\" EventCode=\"4657\" ObjectValueName=\"Common Startup\") OR (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\" TargetObject=\"*Common Startup\") .002 Authentication Package Monitor the Registry for changes to the LSA Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe with AuditLevel = 8. [19] [20] .003 Time Providers Monitor for changes made to windows registry keys and/or values modifying W32Time information in the Registry. .004 Winlogon Helper DLL Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. [5] Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notify source=\"WinEventLog:Security\" EventCode=\"4657\" (ObjectValueName=\"Userinit\" OR ObjectValueName=\"Shell\" OR ObjectValueName=\"Notify\") OR source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\" (TargetObject=\"Userinit\" OR TargetObject=\"Shell\" OR TargetObject=\"*Notify\") .005 Security Support Provider Monitor the Registry for changes to the SSP Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe with AuditLevel = 8. [19] [20] .010 Port Monitors Monitor Registry writes to HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism [5] .012 Print Processors Monitor Registry writes to HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\[Windows architecture]\\Print Processors\\[user defined]\\Driver or HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\[Windows architecture]\\Print Processors\\[user defined]\\Driver as they pertain to print processor installations. .014 Active Setup Monitor Registry key modifications to HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\.Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.[5] Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data. Enterprise T1543 Create or Modify System Process Monitor for changes to windows registry keys and/or values that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. .003 Windows Service Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at HKLM\\SYSTEM\\CurrentControlSet\\Services. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.[5] Analytic 1 - Modification of the HKLM\\System\\CurrentControlSet\\Services Registry key (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode IN (13, 14) EventType= \"SetValue\" TargetObject=\"HKLM\\System\\CurrentControlSet\\Services*\" | where RegistryKeyPath LIKE \"%ImagePath%\" OR RegistryKeyPath LIKE \"%Type%\" OR RegistryKeyPath LIKE \"%DisplayName%\" OR RegistryKeyPath LIKE \"%Objectname%\" Enterprise T1074 Data Staged Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection. .001 Local Data Staging Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection. Enterprise T1546 Event Triggered Execution Monitor for changes made to windows registry keys and/or values that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. .001 Change Default File Association Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process. User file association preferences are stored under [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts and override associations configured under [HKEY_CLASSES_ROOT]. Changes to a user's preference will occur under this entry's subkeys. .002 Screensaver Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior. Tools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Default screen saver files are stored in C:\\Windows\\System32. Use these files as a reference when defining list of not suspicious screen saver files. Analytic 1 - Registry Edit from Screensaver source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode IN (13, 14) TargetObject=\"\\Software\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop\\SCRNSAVE.EXE\" .007 Netsh Helper DLL Monitor the HKLM\\SOFTWARE\\Microsoft\\Netsh registry key for any new or suspicious entries that do not correlate with known system files or benign software. [21] .008 Accessibility Features Monitor Registry keys within HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options. .009 AppCert DLLs Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. .010 AppInit DLLs Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows or HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows are loaded by user32.dll into every process that loads user32.dll. These values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes. Accordingly, this analytic looks for modifications to these registry keys that may be indicative of this type of abuse. Analytic 1 - AppInit DLLs source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode IN (12, 13, 14) TargetObject= \"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Appinit_Dlls*\" OR TargetObject= \"*\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\Appinit_Dlls*\" .011 Application Shimming Monitor for changes to windows registry keys and/or values that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. .012 Image File Execution Options Injection Monitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. .015 Component Object Model Hijacking There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: Reg) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID.[22] Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated. Analytic 1 - Component Object Model Hijacking source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode IN (12, 13, 14) TargetObject= \"\\Software\\Classes\\CLSID*\" Enterprise T1564 Hide Artifacts Monitor for changes made to windows registry keys and/or values that may attempt to hide artifacts associated with their behaviors to evade detection. .002 Hidden Users Monitor for changes made to windows registry key or values for unexpected modifications of the HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList key. .003 Hidden Window Monitor for changes in Registry keys such as HKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_WindowsPowerShell_v1.0_PowerShell.exe and HKEY_CURRENT_USER\\Console\\%SystemRoot%_SysWOW64_WindowsPowerShell_v1.0_PowerShell.exe, especially setting the subkey WindowPosition to a maximum value or the subkeys ScreenBufferSize and WindowSize to 1. .005 Hidden File System Monitor for changes made to windows registry keys and/or values that may use a hidden file system to conceal malicious activity from users and security tools. .006 Run Virtual Instance Monitor for changes made to Windows Registry keys and/or values that may be the result of using a virtual instance to avoid detection. For example, if virtualization software is installed by the adversary the Registry may provide detection opportunities. Enterprise T1574 Hijack Execution Flow Monitor for changes made to windows registry keys and/or values that may execute their own malicious payloads by hijacking the way operating systems run programs. .007 Path Interception by PATH Environment Variable Monitor for modifications of PATH environment variable Registry keys such as HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\\Path. An adversary can add a new directory or list of directories before other locations where programs can be executed from. .011 Services Registry Permissions Weakness Monitor for modification of Registry keys and values used by services such as HKLM\\SYSTEM\\CurrentControlSet\\Services that may allow adversaries to launch their own code when a service starts. .012 COR_PROFILER For detecting system and user scope abuse of the COR_PROFILER variable, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Enterprise T1562 Impair Defenses Monitor Registry edits for modifications to services and startup programs that correspond to security tools and settings. For example, HVCI (Hypervisor-Protected Code Integrity) can be disabled by modifying the registry key HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender to 0, allowing the system to run custom unsigned kernel code.[23][24] .001 Disable or Modify Tools Monitor for changes made to Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender. .002 Disable Windows Event Logging Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control, which may disable Event Viewer.[6] Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. There are different ways to perform this attack.1. The first one is to create the Registry Key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\MiniNt. This action will not generate Security EventLog 4657 or Sysmon EventLog 13 because the value of the key remains empty. However, if an attacker uses powershell to perform this attack (and not cmd), a Security EventLog 4663 will be generated (but 4663 generates a lot of noise).2. The second way is to disable the service EventLog (display name Windows Event Log). After disabed, attacker must reboot the system. The action of disabling or put in manual the service will modify the Registry Key value HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\start, therefore Security EventLog 4657 or Sysmon EventLog 13 will be generated on the system.3. The third way is linked with the second. By default, the EventLog service cannot be stopped. If an attacker tries to stop the service, this one will restart immediately. Why ? Because to stop completely, this service must stop others, one in particular called netprofm (display name Network List Service). This service remains running until it is disabled. So Attacker must either disable EventLog and after to stop it or disable netprofm and after stop EventLog. Only stopping the service (even as admin) will not have an effect on the EventLog service because of the link with netprofm. Security EventLog 1100 will log the stop of the EventLog service (but also generates a lot of noise because it will generate a log everytime the system shutdown).4. The fourth way is to use auditpol.exe to modify the audit configuration and disable/modify important parameters that will lead to disable the creation of EventLog.5. The last one is to modify the Registry Key value HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security\\file (or other kind of log) to modify the path where the EventLog are stocked. Importantly, with this technique, the EventViewer will use the value of the Registry Key \"file\" to know where to find the Log. Thus, using the EventViewer will always show the current event logs, but the old one will be stocked in another evtx. Also, the path must be in a folder that the Eventlog process has access (like it doesn\u2019t work if attacker set up the new path in the Desktop). Attacker can also decrease the maxsize value of the Log to force the system to rewrite on the older EventLog (but the minimum cannot be less than 1028 KB). As the Registry key is modified, Security EventLog 4657 or Sysmon EventLog 13 will be generated on the system. All of these attacks required administrative right. Attacks number three, four and five do not require a system reboot to be effective immediately. Analytic 1 - Disable Windows Event Logging (source=\"WinEventLog:Security\" EventCode IN (4657, 4719) OR source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\") (ObjectName=\"EventLog\") (ObjectValueName=\"Start\" OR ObjectValueName=\"File\" OR ObjectValueName=\"MaxSize\") .004 Disable or Modify System Firewall Monitor for changes made to windows Registry keys and/or values that adversaries might use to disable or modify System Firewall settings such as HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy. .006 Indicator Blocking To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: HKLM\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\AUTOLOGGER_NAME{PROVIDER_GUID} .009 Safe Mode Boot Monitor modifications to Registry data associated with enabling safe mode. For example, a service can be forced to start on safe mode boot by adding a * in front of the \"Startup\" value name: HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run[\"*Startup\"=\"{Path}\"] or by adding a key to HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal.[8][9] Enterprise T1070 Indicator Removal Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. .007 Clear Network Connection History and Configurations Monitor for changes to Registry keys (ex: HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default) and associated values that may be malicious attempts to conceal adversary network connection history. .009 Clear Persistence Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts associated with persistence on a host system. ICS T0872 Indicator Removal on Host Monitor for changes made to Windows Registry keys or values that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. For added context on adversary procedures and background see Indicator Removal on Host Mitigation and applicable sub-techniques. Enterprise T1490 Inhibit System Recovery Monitor the registry for changes associated with system recovery features (ex: the creation of HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\PreviousVersions\\DisableLocalPage). Enterprise T1056 Input Capture Monitor for changes made to windows registry keys or values for unexpected modifications .001 Keylogging Monitor for changes made to windows registry keys or values for unexpected modifications Enterprise T1556 Modify Authentication Process Monitor for changes to Registry entries for password filters (ex: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages) and correlate then investigate the DLL files these files reference. Monitor for changes to Registry entries for network providers (e.g., HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order) and correlate then investigate the DLL files these values reference. Analytic 1 - Unauthorized modifications to Registry entries for password filters or network providers. index=wineventlog| eval suspicious_activity=if((EventCode=4657 AND (RegistryKeyPath=\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages\" OR RegistryKeyPath=\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order\")) OR (EventCode=4663 AND AccessMask=\"0x2\" AND (ObjectName=\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages\" OR ObjectName=\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order\")), \"true\", \"false\") Analytic 2 - Unauthorized modification of windows Registry keys may modify authentication mechanism sourcetype=WinEventLog:Security(EventCode=4657 OR EventCode=4663) | eval registry_path=mvindex(split(ObjectName,\"\\\"), 0, mvcount(split(ObjectName,\"\\\"))-1)| search registry_path IN (\"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\", \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\WDigest\\Parameters\", \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\", \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\") .002 Password Filter DLL Monitor for changes to Registry entries for password filters (ex: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages) and correlate then investigate the DLL files these files reference. Analytic 1 - Unauthorized modifications to Registry entries for password filters. index=windows_logs sourcetype=\"WinEventLog:Security\" (EventCode=4657 OR EventCode=4688)| search ( (TargetObject=\"\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" AND ValueName=\"Notification Packages\") OR (TargetObject=\"\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" AND ValueName=\"Authentication Packages\") OR (CommandLine=\"reg.exe\" AND CommandLine=\"add\" AND CommandLine=\"Lsa\") )| eval Modification_Type=case( like(CommandLine, \"%reg.exe% add%\"), \"Command Line Registry Edit\", EventCode=4657, \"Direct Registry Modification\" ) .008 Network Provider DLL Monitor for changes to Registry entries for network providers (e.g., HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\NetworkProvider\\Order) and correlate then investigate the DLL files these values reference. Enterprise T1112 Modify Registry Monitor for changes made to windows registry keys or values. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods).[25] Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file. Detection of modification of the registry key values of Notify, Userinit, and Shell located in HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKEY_LOCAL_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\. When a user logs on, the Registry key values of Notify, Userinit and Shell are used to load dedicated Windows component. Attackers may insert malicious payload following the legitimate value to launch a malicious payload. Detection of the modification of the registry key Common Startup located in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\ and HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\. When a user logs on, any files located in the Startup Folder are launched. Attackers may modify these folders with other files in order to evade detection set on these default folders. This detection focuses on EventIDs 4688 and 1 for process creation and EventID 4657 for the modification of the Registry Keys. Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notify source=\"WinEventLog:Security\" EventCode=\"4657\" (ObjectValueName=\"Userinit\" OR ObjectValueName=\"Shell\" OR ObjectValueName=\"Notify\") OR source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\" (TargetObject=\"Userinit\" OR TargetObject=\"Shell\" OR TargetObject=\"*Notify\") Analytic 2 - Modification of Default Startup Folder in the Registry Key 'Common Startup' (source=\"WinEventLog:Security\" EventCode=\"4657\" ObjectValueName=\"Common Startup\") OR (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"13\" TargetObject=\"*Common Startup\") Enterprise T1111 Multi-Factor Authentication Interception Monitor for changes to windows registry keys or values that may target multi-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources. Analytic 1 - Unauthorized registry changes related to MFA settings. index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=13 | where match(RegistryKeyPath, \"(?i)(MFA|2FA|MultiFactorAuth|SmartCard|Token|SecureID|OTP|OneTimePasscode)\") Enterprise T1137 Office Application Startup Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.[10][11] .001 Office Template Macros Collect events related to Registry key modification for keys that could be used for Office-based persistence.[10][11] .002 Office Test Monitor for changes made to the Office Test Registry key. Collect events related to Registry key modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.[12] .006 Add-ins Audit the Registry entries relevant for enabling add-ins.[13][14] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Monitor for changes to Registry entries associated with credential access that is stored in the process memory of the LSASS. For example, the adversary can modify the SAM and SYSTEM files. Analytics 1 - Unauthorized registry modifications related to LSASS. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"\\SYSTEM\\CurrentControlSet\\Services\\\", \"\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest\", \"\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Kerberos\", \"*\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\MSV1_0\") | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\") Enterprise T1505 .005 Server Software Component: Terminal Services DLL Monitor for changes to Registry keys associated with ServiceDll and other subkey values under HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\. Enterprise T1489 Service Stop Monitor for changes made to windows registry keys and/or values that may stop or disable services on a system to render those services unavailable to legitimate users. ICS T0881 Service Stop Monitor for changes made to Windows registry keys and/or values that may stop or disable services on a system to render those services unavailable to legitimate users. ICS T0856 Spoof Reporting Message Various techniques enable spoofing a reporting message. Monitor for LLMNR/NBT-NS poisoning via new services/daemons which may be used to enable this technique. For added context on adversary procedures and background see LLMNR/NBT-NS Poisoning and SMB Relay. Enterprise T1553 Subvert Trust Controls Monitoring changes to the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry under HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\ and [HKLM or HKCU]\\Software[\\Policies]\\Microsoft\\SystemCertificates\\Root\\Certificates\\. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: [15] Also consider enabling the Registry Global Object Access Auditing [26] setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:[27] .003 SIP and Trust Provider Hijacking Enable the Registry Global Object Access Auditing [26] setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:[27]* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\OID* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust Note: As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using Regsvr32.[28] Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[28] .004 Install Root Certificate Monitoring changes to the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry under HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\ and HKLM\\SOFTWARE\\Microsoft\\SystemCertificates\\Root\\Certificates\\ or HKCU\\Policies\\Microsoft\\SystemCertificates\\Root\\Certificates\\. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: [15]* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85* 3B1EFD3A66EA28B16697394703A72CA340A05BD5* 7F88CD7223F3C813818C994614A89C99FA3B5247* 8F43288AD272F3103B6FB1428485EA3014C0BCFE* A43489159A520F0D93D032CCAF37E7FE20A8B419* BE36A4562FB2EE05DBB3D32323ADF445084ED656* CDD4EEAE6000AC7F40C3802C171E30148030C072 .006 Code Signing Policy Modification Consider monitoring for modifications made to Registry keys associated with code signing policies, such as HKCU\\Software\\Policies\\Microsoft\\Windows NT\\Driver Signing. Modifications to the code signing policy of a system are likely to be rare. Enterprise T1218 System Binary Proxy Execution Monitor for changes made to Windows Registry keys and/or values that may forge credential materials that can be used to gain access to web applications or Internet services. .002 Control Panel Inventory Control Panel items to locate unregistered and potentially malicious files present on systems:* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace and HKEY_CLASSES_ROOT\\CLSID{GUID}. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. [29]* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the CPLs and Extended Properties Registry keys of HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically ( WinExec(\"c:\\windows\\system32\\control.exe {Canonical_Name}\", SW_NORMAL);) or from a command line (control.exe /name {Canonical_Name}).[29]* Some Control Panel items are extensible via Shell extensions registered in HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Controls Folder{name}\\Shellex\\PropertySheetHandlers where {name} is the predefined name of the system item.[29] Enterprise T1569 System Services Monitor for changes made to windows registry keys and/or values that may abuse system services or daemons to execute commands or programs. Analytic 1 - Malicious service modification sourcetype= Sysmon EventCode=12| search registry_path=\"HKLM\\SYSTEM\\CurrentControlSet\\Services\\*\" | where registry_action=\"modified\" AND user NOT IN (\"known_admins\") .002 Service Execution Monitor for changes made to windows registry keys and/or values that may abuse the Windows service control manager to execute malicious commands or payloads. Analytic 1 - Registry changes related to service execution. sourcetype=WinEventLog:Security OR sourcetype=Sysmon EventCode=13 OR EventCode=4657| search registry_path IN (\"HKLM\\SYSTEM\\CurrentControlSet\\Services\")| where registry_value != \"legitimate_software_registry*\" // Filter out common services References Microsoft. (2018, May 31). Registry. Retrieved September 29, 2021. Microsoft. (2021, December 14). Registry Trees for Devices and Drivers. Retrieved March 28, 2023. Schroeder, W. & Christensen, L. (2021, June 22). Certified Pre-Owned - Abusing Active Directory Certificate Services. Retrieved August 2, 2022. Syynimaa, N. (2022, February 15). Stealing and faking Azure AD device identities. Retrieved August 3, 2022. Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016. Chandel, R. (2021, April 22). Defense Evasion: Windows Event Logging (T1562.002). Retrieved September 14, 2021. Heiligenstein, L. (n.d.). REP-25: Disable Windows Event Logging. Retrieved April 7, 2022. Abrams, L. (2021, March 19). REvil ransomware has a new \u2018Windows Safe Mode\u2019 encryption mode. Retrieved June 23, 2021. Sophos. (2019, December 9). Snatch ransomware reboots PCs into Safe Mode to bypass protection. Retrieved June 23, 2021. Parisi, T., et al. (2017, July). Using Outlook Forms for Lateral Movement and Persistence. Retrieved February 5, 2019. Soutcast. (2018, September 14). Outlook Today Homepage Persistence. Retrieved February 5, 2019. Falcone, R. (2016, July 20). Technical Walkthrough: Office Test Persistence Method Used In Recent Sofacy Attacks. Retrieved July 3, 2017. Shukrun, S. (2019, June 2). Office Templates and GlobalDotName - A Stealthy Office Persistence Technique. Retrieved August 26, 2019. Knowles, W. (2017, April 21). Add-In Opportunities for Office Persistence. Retrieved November 17, 2024. Smith, T. (2016, October 27). AppUNBlocker: Bypassing AppLocker. Retrieved December 19, 2017. Nelson, M. (2016, August 15). \"Fileless\" UAC Bypass using eventvwr.exe and Registry Hijacking. Retrieved December 27, 2016. Nelson, M. (2017, March 14). Bypassing UAC using App Paths. Retrieved May 25, 2017. Nelson, M. (2017, March 17). \"Fileless\" UAC Bypass Using sdclt.exe. Retrieved May 25, 2017. Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017. Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015. Demaske, M. (2016, September 23). USING NETSHELL TO EXECUTE EVIL DLLS AND PERSIST ON A HOST. Retrieved April 8, 2017. Ewing, P. Strom, B. (2016, September 15). How to Hunt: Detecting Persistence & Evasion with the COM. Retrieved September 15, 2016. Martin Smol\u00e1r. (2023, March 1). BlackLotus UEFI bootkit: Myth confirmed. Retrieved February 11, 2025. Microsoft Incident Response. (2023, April 11). Guidance for investigating attacks using CVE-2022-21894: The BlackLotus campaign. Retrieved February 12, 2025. Miroshnikov, A. & Hall, J. (2017, April 18). 4657(S): A registry value was modified. Retrieved August 9, 2018. Microsoft. (2016, August 31). Registry (Global Object Access Auditing). Retrieved January 31, 2018. Microsoft. (2012, July 2). Audit Registry. Retrieved January 31, 2018. Graeber, M. (2017, September). Subverting Trust in Windows. Retrieved January 31, 2018. M. (n.d.). Implementing Control Panel Items. Retrieved January 18, 2018. "
},
{
"id": 1113,
"title": "Script, Data Source DS0012",
"path": "/datasources/DS0012/index.html",
"content": " Script A file or stream containing a list of commands, allowing them to be launched in sequence[1][2][3] ID: DS0012 \u24d8 Platforms: ESXi, Windows \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.2 Created: 20 October 2021 Last Modified: 18 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Script: Script Execution The execution of a text file that contains code via the interpreter. Data Collection Measures: Windows Event Logs: Event ID 4104 (PowerShell Script Block Logging) \u2013 Captures full command-line execution of PowerShell scripts. Event ID 4688 (Process Creation) \u2013 Detects script execution by tracking process launches (powershell.exe, wscript.exe, cscript.exe). Event ID 5861 (Script Execution) \u2013 Captures script execution via Windows Defender AMSI logging. Sysmon (Windows): Event ID 1 (Process Creation) \u2013 Monitors script execution initiated by scripting engines. Event ID 11 (File Creation) \u2013 Detects new script files written to disk before execution. Endpoint Detection and Response (EDR) Tools: Track script execution behavior, detect obfuscated commands, and prevent malicious scripts. PowerShell Logging: Enable Module Logging: Logs all loaded modules and cmdlets. Enable Script Block Logging: Captures complete PowerShell script execution history. SIEM Detection Rules: Detect script execution with obfuscated, encoded, or remote URLs. Alert on script executions using -EncodedCommand or iex(iwr). Script: Script Execution The execution of a text file that contains code via the interpreter. Data Collection Measures: Windows Event Logs: Event ID 4104 (PowerShell Script Block Logging) \u2013 Captures full command-line execution of PowerShell scripts. Event ID 4688 (Process Creation) \u2013 Detects script execution by tracking process launches (powershell.exe, wscript.exe, cscript.exe). Event ID 5861 (Script Execution) \u2013 Captures script execution via Windows Defender AMSI logging. Sysmon (Windows): Event ID 1 (Process Creation) \u2013 Monitors script execution initiated by scripting engines. Event ID 11 (File Creation) \u2013 Detects new script files written to disk before execution. Endpoint Detection and Response (EDR) Tools: Track script execution behavior, detect obfuscated commands, and prevent malicious scripts. PowerShell Logging: Enable Module Logging: Logs all loaded modules and cmdlets. Enable Script Block Logging: Captures complete PowerShell script execution history. SIEM Detection Rules: Detect script execution with obfuscated, encoded, or remote URLs. Alert on script executions using -EncodedCommand or iex(iwr). Domain ID Name Detects Enterprise T1560 Archive Collected Data Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. .002 Archive via Library Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. .003 Archive via Custom Method Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1119 Automated Collection Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. ICS T0802 Automated Collection Monitor for any suspicious attempts to enable script execution on a system. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible, to determine their actions and intent. Enterprise T1020 Automated Exfiltration Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Analytic 1 - Detecting Automated Script Execution for Exfiltration (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (script_path IN (\".ps1\", \".sh\", \".py\", \".bat\"))| where (command IN (\"scp\", \"rsync\", \"ftp\", \"curl\", \"wget\"))| eval risk_score=case( script_path LIKE \"%.ps1\", 9, script_path LIKE \"%.sh\", 8, script_path LIKE \"%.bat\", 7)| where risk_score >= 8| stats count by _time, host, user, script_path, command, risk_score Enterprise T1651 Cloud Administration Command Monitor the execution of scripts within virtual machines, especially those initiated via cloud management services like Azure RunCommand. In Azure, usage of Azure RunCommand can be identified via the Azure Activity Logs, and additional details on the result of executed jobs are available in the C:\\Packages\\Plugins\\Microsoft.CPlat.Core.RunCommandWindows directory on Windows virtual machines.[4] Analytic 1 - Unauthorized script execution sourcetype=azure:activity| search script_name IN (\"script.sh\", \"run.ps1\", \"start.cmd\")| where script_name IN (\"script.sh\", \"run.ps1\", \"start.cmd\") AND user NOT IN (\"known_admins\") Enterprise T1059 Command and Scripting Interpreter Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Analytic 1 - Look for attempts to enable scripts on the system. index=windows (EventCode=1 OR EventCode=4688 OR EventCode=4103 OR EventCode=4104) (CommandLine=\"script\")| search script_name IN (\".ps1\", \".sh\", \".py\", \".rb\", \".js\", \".vbs\")| eval suspicious_script=if(like(script_name, \"%.sh\") AND hour(_time) NOT BETWEEN 8 AND 18, \"Yes\", \"No\")| where suspicious_script=\"Yes\" .001 PowerShell Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Analytic 1 - Script Block Logging Events (source=WinEventLog:\"Microsoft-Windows-PowerShell/Operational\" EventID=\"4104\" AND Image=\"powershell.exe\" AND (CommandLine=\"-enc\" OR CommandLine=\"-ep bypass\" OR CommandLine=\"-noni*\") .005 Visual Basic Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Note: Be aware of VBScript execution from temporary or unusual file locations, which may indicate malicious activity. Analytic 1 - Script Execution from Temporary Locations (source=WinEventLog:\"Microsoft-Windows-PowerShell/Operational\" EventID=\"4103\") | WHERE CommandLine LIKE \"AppData.vbs\" OR CommandLine LIKE \"AppData.vbe\" OR CommandLine LIKE \"AppData.vba\" .007 JavaScript Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. .011 Lua Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1005 Data from Local System Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. ICS T0893 Data from Local System Monitor for any suspicious attempts to enable scripts running on a system. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. Enterprise T1140 Deobfuscate/Decode Files or Information Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1482 Domain Trust Discovery Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1615 Group Policy Discovery Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1564 Hide Artifacts Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. .003 Hidden Window Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. .007 VBA Stomping Detection efforts should be placed finding differences between VBA source code and p-code.[5] VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.[6][7] Enterprise T1562 Impair Defenses Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. .002 Disable Windows Event Logging Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1056 .002 Input Capture: GUI Input Capture Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1674 Input Injection Monitor for any attempts to enable scripts running on a system that would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Analytic 1 - Scripts injected via clipboard or keystroke simulation (index=main sourcetype=\"WinEventLog:Microsoft-Windows-PowerShell/Operational\" EventCode=4104)OR (index=main sourcetype=sysmon EventCode=1 CommandLine=\"osascript\" OR CommandLine=\"python\" OR CommandLine=\"bash\")| transaction user maxspan=15s| join user [ search index=wineventlog sourcetype=\"WinEventLog:System\" (EventCode=400 OR EventCode=20001) | search DeviceName=\"HID\" OR DeviceName=\"Keyboard\" | stats count by user, _time, DeviceName ]| table _time, user, CommandLine, DeviceName Enterprise T1559 Inter-Process Communication Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. .001 Component Object Model Monitor for any attempts to enable scripts running on a system would be considered suspicious. Enumeration of COM objects, via Query Registry or PowerShell, may also proceed malicious use.[8][9] .002 Dynamic Data Exchange Monitor for any attempts to enable scripts running on a system would be considered suspicious. OLE and Office Open XML files can be scanned for \u2018DDEAUTO', \u2018DDE\u2019, and other strings indicative of DDE execution.https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/ Enterprise T1556 .005 Modify Authentication Process: Reversible Encryption Consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such as Set-ADUser and Set-ADAccountControl, that change account configurations. ICS T0840 Network Connection Enumeration Monitor for any suspicious attempts to enable script execution on a system. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1027 Obfuscated Files or Information Monitor executed scripts for indicators of obfuscation and potentially suspicious command syntax, such as uninterpreted escape characters (e.g., ^). Also monitor commands within scripts for syntax-specific signs of obfuscation, such as encoded or otherwise unreadable blobs of characters. .010 Command Obfuscation Monitor executed scripts for indicators of obfuscation and potentially suspicious command syntax, such as uninterpreted escape characters (e.g., ^). Also monitor commands within scripts for syntax-specific signs of obfuscation, such as encoded or otherwise unreadable blobs of characters. Enterprise T1620 Reflective Code Loading Similarly, AMSI / ETW traces can be used to identify signs of arbitrary code execution from within the memory of potentially compromised processes.[10][11] ICS T0853 Scripting Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. ICS T0894 System Binary Proxy Execution Monitor for any suspicious attempts to enable script execution on a system. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1016 System Network Configuration Discovery Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Enterprise T1216 System Script Proxy Execution Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. .001 PubPrn Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. .002 SyncAppvPublishingServer Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. References Microsoft. (2020, March 30). about_Logging_Windows. Retrieved September 28, 2021. Dunwoody, M. (2016, February 11). Greater Visibility Through PowerShell Logging. Retrieved September 28, 2021. Microsoft. (2019, April 19). Antimalware Scan Interface (AMSI). Retrieved September 28, 2021. Adrien Bataille, Anders Vejlby, Jared Scott Wilson, and Nader Zaveri. (2021, December 14). Azure Run Command for Dummies. Retrieved March 13, 2023. Sayre, K., Ogden, H., Roberts, C. (2018, October 10). VBA Stomping \u2014 Advanced Maldoc Techniques. Retrieved September 17, 2020. Bontchev, V. (2019, July 30). pcodedmp.py - A VBA p-code disassembler. Retrieved September 17, 2020. decalage2. (2019, December 3). python-oletools. Retrieved September 18, 2020. Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019. Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017. MDSec Research. (n.d.). Detecting and Advancing In-Memory .NET Tradecraft. Retrieved October 4, 2021. The Wover. (2019, May 9). Donut - Injecting .NET Assemblies as Shellcode. Retrieved October 4, 2021. "
},
{
"id": 1114,
"title": "Persona, Data Source DS0021",
"path": "/datasources/DS0021/index.html",
"content": " Persona A malicious online profile representing a user commonly used by adversaries to social engineer or otherwise target victims ID: DS0021 \u24d8 Platform: PRE \u24d8 Collection Layer: OSINT Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Persona: Social Media Established, compromised, or otherwise acquired by adversaries to conduct reconnaissance, influence operations, social engineering, or other cyber threats. Data Collection Measures: API Monitoring Social media APIs (e.g., Twitter API, Facebook Graph API) can extract behavioral patterns of accounts. Web Scraping Extracts public profile data, friend lists, or interactions to identify impersonation attempts. Threat Intelligence Feeds External feeds track malicious personas linked to disinformation campaigns or phishing. OSINT Tools Maltego, SpiderFoot, and OpenCTI can map social media persona relationships. Endpoint Detection EDR logs user behavior and alerts on suspicious social media interactions. SIEM Logging Detects access to known phishing pages or social media abuse via proxy logs. Dark Web Monitoring Identifies compromised social media credentials being sold. Persona: Social Media Established, compromised, or otherwise acquired by adversaries to conduct reconnaissance, influence operations, social engineering, or other cyber threats. Data Collection Measures: API Monitoring Social media APIs (e.g., Twitter API, Facebook Graph API) can extract behavioral patterns of accounts. Web Scraping Extracts public profile data, friend lists, or interactions to identify impersonation attempts. Threat Intelligence Feeds External feeds track malicious personas linked to disinformation campaigns or phishing. OSINT Tools Maltego, SpiderFoot, and OpenCTI can map social media persona relationships. Endpoint Detection EDR logs user behavior and alerts on suspicious social media interactions. SIEM Logging Detects access to known phishing pages or social media abuse via proxy logs. Dark Web Monitoring Identifies compromised social media credentials being sold. Domain ID Name Detects Enterprise T1586 Compromise Accounts Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing). .001 Social Media Accounts Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Spearphishing via Service). Enterprise T1585 Establish Accounts Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Phishing). .001 Social Media Accounts Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: Spearphishing via Service). "
},
{
"id": 1115,
"title": "Cloud Service, Data Source DS0025",
"path": "/datasources/DS0025/index.html",
"content": " Cloud Service Infrastructure, platforms, or software that are hosted on-premise or by third-party providers, made available to users through network connections and/or APIs[1][2] ID: DS0025 \u24d8 Platforms: IaaS, Identity Provider, Office Suite, SaaS \u24d8 Collection Layer: Cloud Control Plane Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 17 November 2024 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Cloud Service: Cloud Service Disable This data component refers to monitoring actions that deactivate or stop a cloud service in a cloud control plane. Examples include disabling essential logging services like AWS CloudTrail (StopLogging API call), Microsoft Azure Monitor Logs, or Google Cloud's Operations Suite (formerly Stackdriver). Disabling such services can hinder visibility into adversary activities within the cloud environment. Examples: AWS CloudTrail StopLogging: This action stops logging of API activity for a particular trail, effectively reducing the monitoring and visibility of AWS resources and activities. Microsoft Azure Monitor Logs: Disabling these logs hinders the organization\u2019s ability to detect anomalous activities and trace malicious actions. Google Cloud Logging: Disabling cloud logging removes visibility into resource activity, preventing monitoring of service access or configuration changes. SaaS Applications: Stopping logging removes visibility into user activities, such as email access or file downloads, enabling undetected malicious behavior. This data component can be collected through the following measures: Enable and Monitor Cloud Service Logging Ensure logging is enabled for all cloud services, including administrative actions like StopLogging. Example: Use AWS Config to verify that CloudTrail is enabled and enforce logging as a compliance rule. API Monitoring Use API monitoring tools to detect calls like StopLogging or equivalent service-stopping actions in other platforms. Example: Monitor AWS CloudWatch for specific API events such as StopLogging and flag unauthorized users. SIEM Integration Collect logs and events from the cloud control plane into a centralized SIEM for real-time analysis and correlation. Example: Ingest AWS CloudTrail logs into Splunk or Azure Monitor logs into Sentinel. Cloud Security Posture Management (CSPM) Tools Leverage CSPM tools like Prisma Cloud, Dome9, or AWS Security Hub to detect misconfigurations or suspicious activity, such as disabled logging. Example: Set alerts for changes to logging configurations in CSPM dashboards. Configure Alerts in Cloud Platforms Create native alerts in cloud platforms to detect service stoppages. Example: Configure an AWS CloudWatch alarm to trigger when StopLogging is invoked. Cloud Service: Cloud Service Disable This data component refers to monitoring actions that deactivate or stop a cloud service in a cloud control plane. Examples include disabling essential logging services like AWS CloudTrail (StopLogging API call), Microsoft Azure Monitor Logs, or Google Cloud's Operations Suite (formerly Stackdriver). Disabling such services can hinder visibility into adversary activities within the cloud environment. Examples: AWS CloudTrail StopLogging: This action stops logging of API activity for a particular trail, effectively reducing the monitoring and visibility of AWS resources and activities. Microsoft Azure Monitor Logs: Disabling these logs hinders the organization\u2019s ability to detect anomalous activities and trace malicious actions. Google Cloud Logging: Disabling cloud logging removes visibility into resource activity, preventing monitoring of service access or configuration changes. SaaS Applications: Stopping logging removes visibility into user activities, such as email access or file downloads, enabling undetected malicious behavior. This data component can be collected through the following measures: Enable and Monitor Cloud Service Logging Ensure logging is enabled for all cloud services, including administrative actions like StopLogging. Example: Use AWS Config to verify that CloudTrail is enabled and enforce logging as a compliance rule. API Monitoring Use API monitoring tools to detect calls like StopLogging or equivalent service-stopping actions in other platforms. Example: Monitor AWS CloudWatch for specific API events such as StopLogging and flag unauthorized users. SIEM Integration Collect logs and events from the cloud control plane into a centralized SIEM for real-time analysis and correlation. Example: Ingest AWS CloudTrail logs into Splunk or Azure Monitor logs into Sentinel. Cloud Security Posture Management (CSPM) Tools Leverage CSPM tools like Prisma Cloud, Dome9, or AWS Security Hub to detect misconfigurations or suspicious activity, such as disabled logging. Example: Set alerts for changes to logging configurations in CSPM dashboards. Configure Alerts in Cloud Platforms Create native alerts in cloud platforms to detect service stoppages. Example: Configure an AWS CloudWatch alarm to trigger when StopLogging is invoked. Domain ID Name Detects Enterprise T1562 Impair Defenses Monitor logs for API calls to disable logging. In AWS, monitor for: StopLogging and DeleteTrail.[3] In GCP, monitor for: google.logging.v2.ConfigServiceV2.UpdateSink.[4] In Azure, monitor for az monitor diagnostic-settings delete.[5] Additionally, a sudden loss of a log source may indicate that it has been disabled. .008 Disable or Modify Cloud Logs Monitor logs for API calls to disable logging. In AWS, monitor for: StopLogging, UpdateTrail DeleteTrail.[3] In GCP, monitor for: google.logging.v2.ConfigServiceV2.UpdateSink and google.logging.v2.ConfigServiceV2.DeleteSink.[4] In Azure, monitor for az monitor diagnostic-settings update and az monitor diagnostic-settings delete.[5] Additionally, a sudden loss of a log source may indicate that it has been disabled. Cloud Service: Cloud Service Enumeration Cloud service enumeration involves listing or querying available cloud services in a cloud control plane. This activity is often performed to identify resources such as virtual machines, storage buckets, compute clusters, or other services within a cloud environment. Examples include API calls like AWS ECS ListServices, Azure ListAllResources, or Google Cloud ListInstances. Examples: AWS Cloud Service Enumeration: The adversary gathers details about existing ECS services to identify opportunities for privilege escalation or exfiltration.- Azure Resource Enumeration: The adversary collects information about virtual machines, resource groups, and other Azure assets for reconnaissance purposes.- Google Cloud Resource Enumeration: The attacker seeks to map the environment and find misconfigured or underutilized resources for exploitation.- Office 365 Service Enumeration: The attacker may look for data repositories or collaboration tools to exfiltrate sensitive information. This data component can be collected through the following measures: Enable Cloud Activity Logging Ensure cloud service logs are enabled for API calls and resource usage. Example: Enable AWS CloudTrail, Azure Monitor, or Google Cloud Logging to track resource queries. Centralize Logs in a SIEM Aggregate logs from cloud control planes into a centralized SIEM (e.g., Splunk, Azure Sentinel). Example: Collect AWS CloudTrail logs and set up alerts for API calls related to service enumeration. Use Native Cloud Security Tools Leverage cloud-native security solutions like AWS GuardDuty, Azure Defender, or Google Security Command Center. Example: Use GuardDuty to detect anomalous API activity, such as ListServices being executed by an unknown user. Implement Network Flow Logging Monitor and analyze VPC flow logs to identify lateral movement or enumeration activity. Example: Inspect flow logs for unexpected traffic between compute instances and the cloud control plane. API Access Monitoring Monitor API keys and tokens used for enumeration to identify misuse or compromise. Example: Use AWS Secrets Manager or Azure Key Vault to manage and rotate keys securely. Cloud Service: Cloud Service Enumeration Cloud service enumeration involves listing or querying available cloud services in a cloud control plane. This activity is often performed to identify resources such as virtual machines, storage buckets, compute clusters, or other services within a cloud environment. Examples include API calls like AWS ECS ListServices, Azure ListAllResources, or Google Cloud ListInstances. Examples: AWS Cloud Service Enumeration: The adversary gathers details about existing ECS services to identify opportunities for privilege escalation or exfiltration.- Azure Resource Enumeration: The adversary collects information about virtual machines, resource groups, and other Azure assets for reconnaissance purposes.- Google Cloud Resource Enumeration: The attacker seeks to map the environment and find misconfigured or underutilized resources for exploitation.- Office 365 Service Enumeration: The attacker may look for data repositories or collaboration tools to exfiltrate sensitive information. This data component can be collected through the following measures: Enable Cloud Activity Logging Ensure cloud service logs are enabled for API calls and resource usage. Example: Enable AWS CloudTrail, Azure Monitor, or Google Cloud Logging to track resource queries. Centralize Logs in a SIEM Aggregate logs from cloud control planes into a centralized SIEM (e.g., Splunk, Azure Sentinel). Example: Collect AWS CloudTrail logs and set up alerts for API calls related to service enumeration. Use Native Cloud Security Tools Leverage cloud-native security solutions like AWS GuardDuty, Azure Defender, or Google Security Command Center. Example: Use GuardDuty to detect anomalous API activity, such as ListServices being executed by an unknown user. Implement Network Flow Logging Monitor and analyze VPC flow logs to identify lateral movement or enumeration activity. Example: Inspect flow logs for unexpected traffic between compute instances and the cloud control plane. API Access Monitoring Monitor API keys and tokens used for enumeration to identify misuse or compromise. Example: Use AWS Secrets Manager or Azure Key Vault to manage and rotate keys securely. Domain ID Name Detects Enterprise T1526 Cloud Service Discovery Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment. Enterprise T1555 Credentials from Password Stores Monitor for API calls and CLI commands that attempt to enumerate and fetch credential material from cloud secrets managers, such as get-secret-value in AWS, gcloud secrets describe in GCP, and az key vault secret show in Azure. Alert on any suspicious usages of these commands, such as an account or service generating an unusually high number of secret requests. Analytic 1 - High volume of secret requests from unusual accounts or services. index=security sourcetype IN (\"aws:cloudtrail\", \"azure:activity\", \"gcp:activity\")(eventName IN (\"ListAccessKeys\", \"GetLoginProfile\", \"ListSecrets\", \"GetSecretValue\", \"GetParametersByPath\", \"ListKeys\") ORoperationName IN (\"ListAccessKeys\", \"GetLoginProfile\", \"ListSecrets\", \"GetSecretValue\", \"GetParametersByPath\", \"ListKeys\") ORprotoPayload.methodName IN (\"ListAccessKeys\", \"GetLoginProfile\", \"ListSecrets\", \"GetSecretValue\", \"GetParametersByPath\", \"ListKeys\")) .006 Cloud Secrets Management Stores Monitor for API calls and CLI commands that attempt to enumerate and fetch credential material from the secrets manager, such as get-secret-value in AWS, gcloud secrets describe in GCP, and az key vault secret show in Azure. Alert on any suspicious usages of these commands, such as an account or service generating an unusually high number of secret requests. Analytic 1 - High volume of secret requests from unusual accounts or services. index=cloud_logs sourcetype IN (\"aws:cloudtrail\", \"gcp:logging\", \"azure:activity\")(eventName IN (\"GetSecretValue\", \"gcloud secrets describe\", \"az key vault secret show\"))| eval User=coalesce(userIdentity.arn, protoPayload.authenticationInfo.principalEmail, claims.user)| eval Service=coalesce(eventSource, protoPayload.serviceName, claims.aud)| eval AccountType=case( match(User, \"root|admin|superuser\"), \"High-Privilege\", match(User, \"serviceaccount|svc|automation\"), \"Service-Account\", true(), \"Standard-User\")| eval Platform=case( sourcetype==\"aws:cloudtrail\", \"AWS\", sourcetype==\"gcp:logging\", \"GCP\", sourcetype==\"azure:activity\", \"Azure\", true(), \"Unknown\")| where AccountType != \"High-Privilege\" Analytic 2 - Cloud Service Enumeration index=cloud_logs sourcetype IN (\"aws:cloudtrail\", \"gcp:logging\", \"azure:activity\") | search (sourcetype=\"aws:cloudtrail\" eventName=\"GetSecretValue\" OR sourcetype=\"gcp:pubsub:message\" methodName=\"google.iam.credentials.v1.*\" OR sourcetype=\"azure:eventhub\" operationName=\"Microsoft.KeyVault/vaults/secrets/read\") Enterprise T1046 Network Service Discovery Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment. Cloud Service: Cloud Service Metadata Cloud service metadata refers to the contextual and descriptive information about cloud services, including their name, type, purpose, configuration, and activity around them. This metadata is essential for understanding the roles and functions of cloud services, their operational status, and their potential misuse. Examples: Azure Service Metadata: Metadata describing a resource in Azure, such as an Azure Storage Account or a Virtual Machine. AWS Cloud Service Metadata: Metadata for an AWS EC2 instance collected using the DescribeInstances API call. Google Cloud Service Metadata: Metadata for a Google Compute Engine instance collected using gcloud compute instances describe. Office 365 Metadata: Metadata about an Office 365 SharePoint site. This data component can be collected through the following measures: Enable Cloud Metadata APIs Leverage APIs provided by cloud providers to query metadata about services. AWS: Use AWS CLI or SDKs for DescribeInstances, DescribeBuckets, etc. Azure: Use az resource list or SDKs. Google Cloud: Use gcloud compute instances describe or related commands. Office 365: Use Microsoft Graph API. Centralize Metadata in a Security Platform Aggregate metadata from multiple clouds into a SIEM or CSPM (Cloud Security Posture Management) tool. Example: Integrate AWS CloudTrail with Splunk or Azure Monitor with Sentinel. Enable Continuous Monitoring Set up automated jobs or workflows to regularly query and update metadata. Example: Use AWS Config to track resource configurations and changes over time. Configure Access and Logging Enable logging for API queries to ensure access and usage of metadata are monitored. Example: Use AWS CloudTrail to log API activity for metadata queries. Use Cloud Security Tools Employ CSPM tools like Prisma Cloud, Wiz, or Dome9 to gather metadata and identify misconfigurations. Example: Prisma Cloud provides consolidated views of metadata for resources across AWS, Azure, and GCP. Cloud Service: Cloud Service Metadata Cloud service metadata refers to the contextual and descriptive information about cloud services, including their name, type, purpose, configuration, and activity around them. This metadata is essential for understanding the roles and functions of cloud services, their operational status, and their potential misuse. Examples: Azure Service Metadata: Metadata describing a resource in Azure, such as an Azure Storage Account or a Virtual Machine. AWS Cloud Service Metadata: Metadata for an AWS EC2 instance collected using the DescribeInstances API call. Google Cloud Service Metadata: Metadata for a Google Compute Engine instance collected using gcloud compute instances describe. Office 365 Metadata: Metadata about an Office 365 SharePoint site. This data component can be collected through the following measures: Enable Cloud Metadata APIs Leverage APIs provided by cloud providers to query metadata about services. AWS: Use AWS CLI or SDKs for DescribeInstances, DescribeBuckets, etc. Azure: Use az resource list or SDKs. Google Cloud: Use gcloud compute instances describe or related commands. Office 365: Use Microsoft Graph API. Centralize Metadata in a Security Platform Aggregate metadata from multiple clouds into a SIEM or CSPM (Cloud Security Posture Management) tool. Example: Integrate AWS CloudTrail with Splunk or Azure Monitor with Sentinel. Enable Continuous Monitoring Set up automated jobs or workflows to regularly query and update metadata. Example: Use AWS Config to track resource configurations and changes over time. Configure Access and Logging Enable logging for API queries to ensure access and usage of metadata are monitored. Example: Use AWS CloudTrail to log API activity for metadata queries. Use Cloud Security Tools Employ CSPM tools like Prisma Cloud, Wiz, or Dome9 to gather metadata and identify misconfigurations. Example: Prisma Cloud provides consolidated views of metadata for resources across AWS, Azure, and GCP. Domain ID Name Detects Enterprise T1530 Data from Cloud Storage Monitor M365 Audit logs for TeamsSessionStarted Operations against MicrosoftTeams workloads involving suspicious ClientIPs and suspect accounts (UserId). Analytic 1 - Sessions initiated from unusual IP addresses, high volume of sessions from a single account, sessions at unusual times \"`index=\"\"m365_audit_logs\"\" Operation=\"\"TeamsSessionStarted\"\"| stats count by UserId, ClientIP, CreationTime| where ClientIP!=\"\"expected_ip\"\" OR UserId!=\"\"expected_user\"\"| sort by CreationTime\" Enterprise T1213 .002 Data from Information Repositories: Sharepoint Monitor M365 Audit logs for FileAccessed operations against Sharepoint workloads. Scrutinize event metadata such as client IP address, ObjectId, UserId, User Agent, and Authentication type. Analytic 1 - Unusual file access patterns by users, anomalous IP addresses, or suspicious User Agents index=\"m365_audit_logs\" Operation=\"FileAccessed\"| stats count by UserId, ClientIP, ObjectId, UserAgent, AuthenticationType| where UserId!=\"expected_user\" OR ClientIP!=\"expected_ip\" OR UserAgent!=\"expected_user_agent\" OR AuthenticationType!=\"expected_auth_type\" Enterprise T1114 .003 Email Collection: Email Forwarding Rule Monitor M365 Audit logs for AlertTriggered operations with rule name \"Creation of forwarding/redirect rule.\" or for New-InboxRule operations against Exchange Workloads. Look for anomalous modification properties such as actor user ID. An example event can show the creation of an email forwarding rule for a victim user Analytic 1 - Unauthorized email forwarding rule creation activities Note: To detect unauthorized email forwarding rule creation activities in M365 Audit logs. `index=\"m365_audit_logs\" Operation=\"AlertTriggered\" RuleName=\"Creation of forwarding/redirect rule\"| stats count by Actor, TargetUser| where Actor!=\"expected_actor\" AND TargetUser!=\"expected_target_user\" Analytic 2 - Unauthorized email forwarding rule creation activities `index=\"m365_audit_logs\" Operation=\"New-InboxRule\"| stats count by UserId, Parameters.ForwardTo| where UserId!=\"expected_user\" AND Parameters.ForwardTo!=\"expected_forwarding_address\" Enterprise T1578 Modify Cloud Compute Infrastructure Monitor for quota increases across all regions, especially multiple quota increases in a short period of time or quota increases in unused regions. Monitor for changes to tenant-level settings such as subscriptions and enabled regions.[6] Cloud Service: Cloud Service Modification Cloud service modification refers to changes made to the configuration, settings, or data of a cloud service. These modifications can include administrative changes such as enabling or disabling features, altering permissions, or deleting critical components. Monitoring these changes is critical to detect potential misconfigurations or malicious activity. Examples: AWS Cloud Service Modifications: A user disables AWS CloudTrail logging (StopLogging) or deletes a CloudWatch configuration rule (DeleteConfigRule). Azure Cloud Service Modifications: Changes to Azure Role-Based Access Control (RBAC) roles, such as adding a new Contributor role to a sensitive resource. Google Cloud Service Modifications: Deletion of a Google Cloud Storage bucket or disabling a Google Cloud Function. Office 365 Cloud Service Modifications: Altering mailbox permissions or disabling auditing in Microsoft 365. This data component can be collected through the following measures: Enable Cloud Audit Logging AWS: Enable AWS CloudTrail for logging management events such as StopLogging or DeleteTrail. Azure: Use Azure Activity Logs to monitor resource changes and access actions. Google Cloud: Enable Google Cloud Audit Logs to track API calls, resource modifications, and policy changes. Office 365: Use Unified Audit Logs in Microsoft Purview to track administrative actions. Centralize Log Storage Consolidate logs from all cloud providers into a SIEM or CSPM (Cloud Security Posture Management) tool. Example: Use Splunk or Elastic Stack to ingest and analyze logs from AWS, Azure, and Google Cloud. Automate Alerts for Sensitive Changes Configure alerts for high-risk actions, such as disabling logging or modifying IAM roles. AWS Example: Use AWS Config rules to detect and notify changes to critical services. Azure Example: Set up Azure Monitor alerts for write actions on sensitive resources. Enable Continuous Monitoring Use tools like AWS Security Hub, Azure Defender, or Google Chronicle to continuously monitor cloud service modifications for anomalies. Cloud Service: Cloud Service Modification Cloud service modification refers to changes made to the configuration, settings, or data of a cloud service. These modifications can include administrative changes such as enabling or disabling features, altering permissions, or deleting critical components. Monitoring these changes is critical to detect potential misconfigurations or malicious activity. Examples: AWS Cloud Service Modifications: A user disables AWS CloudTrail logging (StopLogging) or deletes a CloudWatch configuration rule (DeleteConfigRule). Azure Cloud Service Modifications: Changes to Azure Role-Based Access Control (RBAC) roles, such as adding a new Contributor role to a sensitive resource. Google Cloud Service Modifications: Deletion of a Google Cloud Storage bucket or disabling a Google Cloud Function. Office 365 Cloud Service Modifications: Altering mailbox permissions or disabling auditing in Microsoft 365. This data component can be collected through the following measures: Enable Cloud Audit Logging AWS: Enable AWS CloudTrail for logging management events such as StopLogging or DeleteTrail. Azure: Use Azure Activity Logs to monitor resource changes and access actions. Google Cloud: Enable Google Cloud Audit Logs to track API calls, resource modifications, and policy changes. Office 365: Use Unified Audit Logs in Microsoft Purview to track administrative actions. Centralize Log Storage Consolidate logs from all cloud providers into a SIEM or CSPM (Cloud Security Posture Management) tool. Example: Use Splunk or Elastic Stack to ingest and analyze logs from AWS, Azure, and Google Cloud. Automate Alerts for Sensitive Changes Configure alerts for high-risk actions, such as disabling logging or modifying IAM roles. AWS Example: Use AWS Config rules to detect and notify changes to critical services. Azure Example: Set up Azure Monitor alerts for write actions on sensitive resources. Enable Continuous Monitoring Use tools like AWS Security Hub, Azure Defender, or Google Chronicle to continuously monitor cloud service modifications for anomalies. Domain ID Name Detects Enterprise T1671 Cloud Application Integration Monitor for additions and changes to applications in the SaaS environment. Enterprise T1546 Event Triggered Execution Monitor the creation and modification of cloud resources that may be abused for persistence, such as functions and workflows monitoring cloud events. Enterprise T1562 Impair Defenses Monitor changes made to cloud services for unexpected modifications to settings and/or data. .008 Disable or Modify Cloud Logs Monitor changes made to cloud services for unexpected modifications to settings and/or data. Analytic 1 - Operations performed by unexpected initiators, frequent modifications, changes to critical resources index=\"azure_activity_logs\" OperationName=\"Create or update resource diagnostic setting\"| stats count by InitiatorName, ResourceID, Status| where Status!=\"Succeeded\" OR InitiatorName!=\"expected_initiator\"| sort by Time Enterprise T1556 Modify Authentication Process Monitor for changes made to conditional access policies used by SaaS identity providers and internal IaaS identity and access management systems. Analytic 1 - Changes to access policies without corresponding change requests. index=cloud_logs sourcetype IN (\"azure:activity\", \"gsuite:reports:activity\", \"aws:cloudtrail\", \"office365:management\", \"saas_audit\")(eventName IN (\"UpdateServicePrincipal\", \"UpdateUser\", \"UpdateGroup\", \"UpdatePolicy\", \"UpdateRole\", \"PutRolePolicy\", \"AttachUserPolicy\", \"AttachGroupPolicy\", \"AttachRolePolicy\", \"ModifyAuthenticationMethod\") OR protoPayload.methodName IN (\"directory.users.update\", \"admin.directory.group.update\", \"admin.directory.roleAssignments.update\", \"Set-AzureADApplicationProxyConnector\", \"Update-PassThroughAuthentication\") OR (eventName=\"Sign-in\" AND targetResourceType=\"applicationProxyConnector\")) .009 Conditional Access Policies Monitor for changes made to conditional access policies used by SaaS identity providers and internal IaaS identity and access management systems. Enterprise T1578 .005 Modify Cloud Compute Infrastructure: Modify Cloud Compute Configurations Monitor for quota increases across all regions, especially multiple quota increases in a short period of time or quota increases in unused regions. In Azure environments, monitor for changes to tenant-level settings such as enabled regions.[6] Enterprise T1666 Modify Cloud Resource Hierarchy Monitor for changes to resource groups, such as creating new resource groups or leaving top-level management groups. In Azure environments, monitor for changes to subscriptions.[6] In AWS environments, monitor for API calls such as CreateAccount or LeaveOrganization.[7] Enterprise T1496 Resource Hijacking Monitor for changes to SaaS services, especially when quotas are raised or when new services are enabled. .004 Cloud Service Hijacking Monitor for changes to SaaS services, especially when quotas are raised or when new services are enabled. In AWS environments, watch for calls to Bedrock APIs like PutUseCaseForModelAccess, PutFoundationModelEntitlement, and InvokeModel and SES APIs like UpdateAccountSendingEnabled.[8][9] Enterprise T1648 Serverless Execution Monitor for unusual Serverless function modifications, such as adding roles to a function that allow unauthorized access or execution. Analytic 1 - Tracks actions related to creating or modifying serverless functions index=cloud_logs sourcetype=aws:iam OR sourcetype=azure:activity OR sourcetype=gcp:iam| search action IN (\"iam:PassRole\", \"iam:CreateFunction\", \"iam:AddPermission\", \"iam:UpdateFunctionConfiguration\") References Amazon. (n.d.). Start Building on AWS Today. Retrieved October 13, 2021. Microsoft. (n.d.). Azure products. Retrieved November 17, 2024. Amazon Web Services. (n.d.). Stopping CloudTrail from Sending Events to CloudWatch Logs. Retrieved October 16, 2020. Google. (n.d.). Configuring Data Access audit logs. Retrieved October 16, 2020. Microsoft. (n.d.). az monitor diagnostic-settings. Retrieved October 16, 2020. Microsoft Threat Intelligence. (2023, July 25). Cryptojacking: Understanding and defending against cloud compute resource abuse. Retrieved September 5, 2023. Ben Fletcher and Steve de Vera. (2024, June). New tactics and techniques for proactive threat detection. Retrieved September 25, 2024. Lacework Labs. (2024, June 6). Detecting AI resource-hijacking with Composite Alerts. Retrieved September 25, 2024. Nathan Eades. (2023, January 12). SES-pionage. Retrieved September 25, 2024. "
},
{
"id": 1116,
"title": "Driver, Data Source DS0027",
"path": "/datasources/DS0027/index.html",
"content": " Driver A computer program that operates or controls a particular type of device that is attached to a computer. Provides a software interface to hardware devices, enabling operating systems and other computer programs to access hardware functions without needing to know precise details about the hardware being used[1][2] ID: DS0027 \u24d8 Platforms: Linux, Windows, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Driver: Driver Load The process of attaching a driver, which is a software component that allows the operating system and applications to interact with hardware devices, to either user-mode or kernel-mode of a system. This can include benign actions (e.g., hardware drivers) or malicious behavior (e.g., rootkits or unsigned drivers). Examples: Legitimate Driver Loading: A new graphics driver from a vendor like NVIDIA or AMD is loaded into the system. Unsigned Driver Loading: A driver without a valid digital signature is loaded into the kernel. Rootkit Installation: A malicious rootkit driver is loaded to manipulate kernel-mode processes. Anti-Virus or EDR Driver Loading: An Endpoint Detection and Response (EDR) solution loads its driver to monitor system activities. Driver Misuse: A legitimate driver is loaded and exploited to execute malicious actions, such as using vulnerable drivers for bypassing defenses (e.g., Bring Your Own Vulnerable Driver (BYOVD) attacks). This data component can be collected through the following measures: Windows Sysmon Logs: Event ID 6: Captures driver loading activity, including file path, hashes, and signature information. Configuration: Ensure Sysmon is configured with a ruleset that monitors driver loading events Windows Event Logs: Enable \"Audit Kernel Object\" to capture kernel-related driver loading events. Linux Auditd: Configure audit rules to capture driver loading events: auditctl -w /lib/modules/ -p rwxa -k driver_load Kernel Logs (dmesg): Use dmesg to monitor driver-related activities: dmesg | grep \"module\" Syslog or journald: Review logs for module insertion or removal activities. macOS Unified Logs: Use the macOS unified logging system to monitor kext (kernel extension) loads:log show --predicate 'eventMessage contains \"kext load\"' Endpoint Security Framework: Monitor driver loading via third-party security tools that leverage Apple\u2019s Endpoint Security Framework. SIEM Tools Ingest driver load logs from Sysmon, Auditd, or macOS unified logs into a centralized SIEM (e.g., Splunk). Create rules to detect unsigned drivers, rootkit activity, or known vulnerable drivers. EDR Solutions Use EDR tools to detect and alert on anomalous driver loading activity. Driver: Driver Load The process of attaching a driver, which is a software component that allows the operating system and applications to interact with hardware devices, to either user-mode or kernel-mode of a system. This can include benign actions (e.g., hardware drivers) or malicious behavior (e.g., rootkits or unsigned drivers). Examples: Legitimate Driver Loading: A new graphics driver from a vendor like NVIDIA or AMD is loaded into the system. Unsigned Driver Loading: A driver without a valid digital signature is loaded into the kernel. Rootkit Installation: A malicious rootkit driver is loaded to manipulate kernel-mode processes. Anti-Virus or EDR Driver Loading: An Endpoint Detection and Response (EDR) solution loads its driver to monitor system activities. Driver Misuse: A legitimate driver is loaded and exploited to execute malicious actions, such as using vulnerable drivers for bypassing defenses (e.g., Bring Your Own Vulnerable Driver (BYOVD) attacks). This data component can be collected through the following measures: Windows Sysmon Logs: Event ID 6: Captures driver loading activity, including file path, hashes, and signature information. Configuration: Ensure Sysmon is configured with a ruleset that monitors driver loading events Windows Event Logs: Enable \"Audit Kernel Object\" to capture kernel-related driver loading events. Linux Auditd: Configure audit rules to capture driver loading events: auditctl -w /lib/modules/ -p rwxa -k driver_load Kernel Logs (dmesg): Use dmesg to monitor driver-related activities: dmesg | grep \"module\" Syslog or journald: Review logs for module insertion or removal activities. macOS Unified Logs: Use the macOS unified logging system to monitor kext (kernel extension) loads:log show --predicate 'eventMessage contains \"kext load\"' Endpoint Security Framework: Monitor driver loading via third-party security tools that leverage Apple\u2019s Endpoint Security Framework. SIEM Tools Ingest driver load logs from Sysmon, Auditd, or macOS unified logs into a centralized SIEM (e.g., Splunk). Create rules to detect unsigned drivers, rootkit activity, or known vulnerable drivers. EDR Solutions Use EDR tools to detect and alert on anomalous driver loading activity. Domain ID Name Detects Enterprise T1547 Boot or Logon Autostart Execution Monitor for unusual kernel driver installation activity that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. .008 LSASS Driver With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. [3] Utilize the Sysinternals Autoruns/Autorunsc utility [4] to examine loaded drivers associated with the LSA. .012 Print Processors Monitor for unusual kernel driver installation activity that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Enterprise T1543 Create or Modify System Process Monitor for new service driver installations and loads (ex: Sysmon Event ID 6) that are not part of known software update/patch cycles. .003 Windows Service Monitor for new service driver installations and loads (ex: Sysmon Event ID 6) that are not part of known software update/patch cycles. Note: Sysmon Event ID 6 (driver load) provides information on whether the loaded driver was signed with a valid signature (via the Signature and SignatureStatus fields). As such, one way to help reduce the volume of alerts and false positives associated with this event is to filter and exclude any driver load events signed by common and legitimate publishers like Microsoft. Enterprise T1561 Disk Wipe Monitor for unusual kernel driver installation activity that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. .001 Disk Content Wipe Monitor for unusual kernel driver installation activity may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources. .002 Disk Structure Wipe Monitor for unusual kernel driver installation activity may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. Enterprise T1068 Exploitation for Privilege Escalation Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.[5] Higher privileges are often necessary to perform additional actions such as some methods of OS Credential Dumping. Look for additional activity that may indicate an adversary has gained higher privileges. Enterprise T1562 Impair Defenses Monitor for unusual/suspicious driver activity, especially regarding EDR and drivers associated with security tools as well as those that may be abused to disable security products. .001 Disable or Modify Tools Monitor for unusual/suspicious driver activity, especially regarding EDR and drivers associated with security tools as well as those that may be abused to disable security products. Enterprise T1056 Input Capture Monitor for unusual kernel driver installation activity. Analytic 1 - Unexpected kernel driver installations. index=security sourcetype=\"WinEventLog:System\" EventCode=7045 | where match(Service_Name, \"(?i)(keylogger|input|capture|sniff|monitor|keyboard|logger|driver)\") .001 Keylogging Monitor for unusual kernel driver installation activity Enterprise T1111 Multi-Factor Authentication Interception Monitor for use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior. Similar to Input Capture, keylogging activity can take various forms but can may be detected via installation of a driver. Analytic 1 - Unexpected kernel driver installations. (index=security sourcetype=\"WinEventLog:System\" EventCode=7045) OR(index=os sourcetype=\"linux_audit\" action=\"add\" path=\"/lib/modules/*/kernel/drivers/\" OR path=\"/etc/udev/rules.d/\") OR(index=os sourcetype=\"macos_secure\" message=\"kextload\") Driver: Driver Metadata to contextual data about a driver, including its attributes, functionality, and activity. This can involve details such as the driver's origin, integrity, cryptographic signature, issues reported during its use, and runtime behavior. Examples include metadata captured during driver integrity checks, hash validation, or error reporting. Examples: Driver Signature Validation: A driver is validated to ensure it is signed by a trusted Certificate Authority (CA). Driver Hash Verification: The hash of a driver is compared to a known good hash stored in a database. Driver Compatibility Issues: A driver error is logged due to compatibility issues with a particular version of the operating system. Vulnerable Driver Identification: Metadata indicates the driver version is outdated or contains a known vulnerability. Monitoring Driver Integrity: Drivers are monitored for any unauthorized modifications to their binary or associated files. This data component can be collected through the following measures: Windows Windows Event Logs: Event ID 3000-3006: Logs metadata about driver signature validation. Event ID 2000-2011 (Windows Defender Application Control): Tracks driver integrity and policy enforcement. Sysmon Logs: Configure Sysmon to capture driver loading metadata (Event ID 6). Driver Verifier: Use Driver Verifier to collect diagnostic and performance data about drivers, including stability and compatibility metrics. PowerShell: Use commands to retrieve metadata about installed drivers:Get-WindowsDriver -Online | Select-Object Driver, ProviderName, Version Linux Auditd: Configure audit rules to monitor driver interactions and collect metadata: auditctl -w /lib/modules/ -p rwxa -k driver_metadata dmesg: Use dmesg to extract kernel logs with driver metadata: dmesg | grep \"module\" lsmod and modinfo: Commands to list loaded modules and retrieve metadata about drivers: lsmod | modinfo <module_name> macOS Unified Logs: Collect metadata from system logs about kernel extensions (kexts): log show --predicate 'eventMessage contains \"kext load\"' --info kextstat: Command to retrieve information about loaded kernel extensions: kextstat SIEM Tools Ingest Driver Metadata: Collect driver metadata logs from Sysmon, Auditd, or macOS logs into SIEMs like Splunk or Elastic. Vulnerability Management Tools Use these tools to collect metadata about vulnerable drivers across enterprise systems. Driver: Driver Metadata to contextual data about a driver, including its attributes, functionality, and activity. This can involve details such as the driver's origin, integrity, cryptographic signature, issues reported during its use, and runtime behavior. Examples include metadata captured during driver integrity checks, hash validation, or error reporting. Examples: Driver Signature Validation: A driver is validated to ensure it is signed by a trusted Certificate Authority (CA). Driver Hash Verification: The hash of a driver is compared to a known good hash stored in a database. Driver Compatibility Issues: A driver error is logged due to compatibility issues with a particular version of the operating system. Vulnerable Driver Identification: Metadata indicates the driver version is outdated or contains a known vulnerability. Monitoring Driver Integrity: Drivers are monitored for any unauthorized modifications to their binary or associated files. This data component can be collected through the following measures: Windows Windows Event Logs: Event ID 3000-3006: Logs metadata about driver signature validation. Event ID 2000-2011 (Windows Defender Application Control): Tracks driver integrity and policy enforcement. Sysmon Logs: Configure Sysmon to capture driver loading metadata (Event ID 6). Driver Verifier: Use Driver Verifier to collect diagnostic and performance data about drivers, including stability and compatibility metrics. PowerShell: Use commands to retrieve metadata about installed drivers:Get-WindowsDriver -Online | Select-Object Driver, ProviderName, Version Linux Auditd: Configure audit rules to monitor driver interactions and collect metadata: auditctl -w /lib/modules/ -p rwxa -k driver_metadata dmesg: Use dmesg to extract kernel logs with driver metadata: dmesg | grep \"module\" lsmod and modinfo: Commands to list loaded modules and retrieve metadata about drivers: lsmod | modinfo <module_name> macOS Unified Logs: Collect metadata from system logs about kernel extensions (kexts): log show --predicate 'eventMessage contains \"kext load\"' --info kextstat: Command to retrieve information about loaded kernel extensions: kextstat SIEM Tools Ingest Driver Metadata: Collect driver metadata logs from Sysmon, Auditd, or macOS logs into SIEMs like Splunk or Elastic. Vulnerability Management Tools Use these tools to collect metadata about vulnerable drivers across enterprise systems. Domain ID Name Detects Enterprise T1542 Pre-OS Boot Disk check, forensic utilities, and data from device drivers (i.e. processes and API calls) may reveal anomalies that warrant deeper investigation .002 Component Firmware Monitor for unexpected disk partition table entries, or blocks of otherwise unusual memory that warrant deeper investigation References Apple. (2014, April 9). What Is the I/O Kit?. Retrieved September 24, 2021. Viviano, A. (2021, August 17). Getting started with Windows drivers: User mode and kernel mode. Retrieved September 24, 2021. Microsoft. (2014, March 12). Configuring Additional LSA Protection. Retrieved November 27, 2017. Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016. Microsoft. (2020, October 15). Microsoft recommended driver block rules. Retrieved March 16, 2021. "
},
{
"id": 1117,
"title": "Internet Scan, Data Source DS0035",
"path": "/datasources/DS0035/index.html",
"content": " Internet Scan Information obtained (commonly via active network traffic probes or web crawling) regarding various types of resources and servers connected to the public Internet ID: DS0035 \u24d8 Platform: PRE \u24d8 Collection Layer: OSINT Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Internet Scan: Response Content Captured network traffic that provides details about responses received during an internet scan. This data includes both protocol header values (e.g., HTTP status codes, IP headers, or DNS response codes) and response body content (e.g., HTML, JSON, or raw data). Examples: HTTP Scan: A web server responds to a probe with an HTTP 200 status code and an HTML body indicating the default page is accessible. DNS Scan: A DNS server replies to a query with a resolved IP address for a domain, along with details like Time-To-Live (TTL) and authoritative information. TCP Banner Grab: A service listening on a port (e.g., SSH or FTP) responds with a banner containing service name, version, or other metadata. Data Collection Measures: Network Traffic Monitoring: Deploy packet capture tools like Wireshark, tcpdump, or Suricata to log both headers and body content of response traffic. Use network appliances like firewalls, intrusion detection systems (IDS), or intrusion prevention systems (IPS) with logging enabled to capture scan responses. Cloud Logging Services: AWS VPC Flow Logs: Capture metadata about network flows, including source and destination, protocol, and response codes. GCP Packet Mirroring: Use mirrored packets to analyze responses. Azure NSG Flow Logs: Record network traffic flow information for analysis. Specific Tools: Zmap or Masscan: Can perform internet-wide scans and collect response content for analysis. Nmap: Use custom scripts to capture and log detailed response data during scans. Internet Scan: Response Content Captured network traffic that provides details about responses received during an internet scan. This data includes both protocol header values (e.g., HTTP status codes, IP headers, or DNS response codes) and response body content (e.g., HTML, JSON, or raw data). Examples: HTTP Scan: A web server responds to a probe with an HTTP 200 status code and an HTML body indicating the default page is accessible. DNS Scan: A DNS server replies to a query with a resolved IP address for a domain, along with details like Time-To-Live (TTL) and authoritative information. TCP Banner Grab: A service listening on a port (e.g., SSH or FTP) responds with a banner containing service name, version, or other metadata. Data Collection Measures: Network Traffic Monitoring: Deploy packet capture tools like Wireshark, tcpdump, or Suricata to log both headers and body content of response traffic. Use network appliances like firewalls, intrusion detection systems (IDS), or intrusion prevention systems (IPS) with logging enabled to capture scan responses. Cloud Logging Services: AWS VPC Flow Logs: Capture metadata about network flows, including source and destination, protocol, and response codes. GCP Packet Mirroring: Use mirrored packets to analyze responses. Azure NSG Flow Logs: Record network traffic flow information for analysis. Specific Tools: Zmap or Masscan: Can perform internet-wide scans and collect response content for analysis. Nmap: Use custom scripts to capture and log detailed response data during scans. Domain ID Name Detects Enterprise T1583 Acquire Infrastructure Once adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[1][2][3] Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .003 Virtual Private Server Once adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[1][2][3] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .004 Server Once adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[1][2][3] .006 Web Services Once adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[1] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control (Web Service) or Exfiltration Over Web Service. .007 Serverless Once adversaries leverage serverless functions as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[1] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle. .008 Malvertising If infrastructure or patterns in the malicious web content related to malvertising have been previously identified, internet scanning may uncover when an adversary has staged malicious web content. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as Drive-by Compromise or Exploitation for Client Execution. Enterprise T1584 Compromise Infrastructure Once adversaries have provisioned compromised infrastructure (ex: a server for use in command and control), internet scans may help proactively discover compromised infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[1][2][3] .003 Virtual Private Server Once adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[1][2][3] .004 Server Once adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.[1][2][3] .006 Web Services Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[1]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control Web Service or Exfiltration Over Web Service . .007 Serverless Once adversaries leverage serverless functions as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[1] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle. .008 Network Devices Once adversaries leverage compromised network devices as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.[1] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle. Enterprise T1587 Develop Capabilities Consider use of services that may aid in the tracking of capabilities, such as certificates, in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of information to uncover other adversary infrastructure.[4] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control. .003 Digital Certificates Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.[4]Detection efforts may be focused on related behaviors, such as Web Protocols , Asymmetric Cryptography , and/or Install Root Certificate . Enterprise T1592 Gather Victim Host Information Internet scanners may be used to look for patterns associated with malicious content designed to collect host information from visitors.[1][5]Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access. .001 Hardware Internet scanners may be used to look for patterns associated with malicious content designed to collect host hardware information from visitors.[1][5]Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access. .002 Software Internet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.[1][5]Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access. .004 Client Configurations Internet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.[1][5]Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access. Enterprise T1665 Hide Infrastructure Once adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. If requests are filtered or blocked, the specifics of this action, such as the response sent, can be used to gain further insight into the resource's nature or creation. Enterprise T1588 Obtain Capabilities Monitor for logged network traffic in response to a scan showing both protocol header and body values that may buy and/or steal capabilities that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control. .004 Digital Certificates Monitor for logged network traffic in response to a scan showing both protocol header and body values that may buy and/or steal SSL/TLS certificates that can be used during targeting. Detection efforts may be focused on related behaviors, such as Web Protocols, Asymmetric Cryptography, and/or Install Root Certificate. Enterprise T1608 Stage Capabilities If infrastructure or patterns in malware, tooling, certificates, or malicious web content have been previously identified, internet scanning may uncover when an adversary has staged their capabilities.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as initial access and post-compromise behaviors. .001 Upload Malware If infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as User Execution or Ingress Tool Transfer . .002 Upload Tool If infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as Ingress Tool Transfer. .003 Install Digital Certificate Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.[4]Detection efforts may be focused on related behaviors, such as Web Protocols or Asymmetric Cryptography. .004 Drive-by Target If infrastructure or patterns in the malicious web content utilized to deliver a Drive-by Compromise have been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as Drive-by Compromise or Exploitation for Client Execution. .005 Link Target If infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as during Spearphishing Link , Spearphishing Link , or Malicious Link . .006 SEO Poisoning If infrastructure or patterns in the malicious web content related to SEO poisoning or Drive-by Target have been previously identified, internet scanning may uncover when an adversary has staged web content supporting a strategic web compromise. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as Drive-by Compromise or Exploitation for Client Execution. Internet Scan: Response Metadata Contextual information about an Internet-facing resource collected during a scan, including details such as open ports, running services, protocols, and versions. This metadata is typically derived from interpreting scan results and helps build a profile of the targeted system. Examples: Port and Service Details: Open ports (e.g., 22, 80, 443). Identified services running on those ports (e.g., SSH, HTTP, HTTPS). Service Versions: Detected software version information (e.g., Apache 2.4.41, OpenSSH 8.2). Operating System Information: OS fingerprinting data (e.g., Linux Kernel 5.4.0). TLS/SSL Certificate Data: Information about the TLS/SSL certificate, such as the expiration date, issuer, and cipher suites. Data Collection Measures: Scanning Tools: Nmap: Collects port, service, and version information using commands like nmap -sV . Masscan: High-speed scanning tool for discovering open ports and active services. Zmap: Focused on large-scale Internet scanning, collecting metadata about discovered services. Shodan API: Retrieves scan metadata for publicly exposed devices and services. Network Logs: Use logs from firewalls, intrusion detection systems (IDS), or intrusion prevention systems (IPS) to gather metadata from scan attempts. Example: Zeek or Suricata logs for incoming scan traffic. OSINT Platforms: Platforms like Censys, GreyNoise, or Shodan provide aggregated metadata about Internet-facing resources. Cloud Metadata Services: AWS Security Hub, Azure Monitor, or GCP Security Command Center can collect and centralize scan-related metadata for Internet-facing resources in cloud environments. Internet Scan: Response Metadata Contextual information about an Internet-facing resource collected during a scan, including details such as open ports, running services, protocols, and versions. This metadata is typically derived from interpreting scan results and helps build a profile of the targeted system. Examples: Port and Service Details: Open ports (e.g., 22, 80, 443). Identified services running on those ports (e.g., SSH, HTTP, HTTPS). Service Versions: Detected software version information (e.g., Apache 2.4.41, OpenSSH 8.2). Operating System Information: OS fingerprinting data (e.g., Linux Kernel 5.4.0). TLS/SSL Certificate Data: Information about the TLS/SSL certificate, such as the expiration date, issuer, and cipher suites. Data Collection Measures: Scanning Tools: Nmap: Collects port, service, and version information using commands like nmap -sV . Masscan: High-speed scanning tool for discovering open ports and active services. Zmap: Focused on large-scale Internet scanning, collecting metadata about discovered services. Shodan API: Retrieves scan metadata for publicly exposed devices and services. Network Logs: Use logs from firewalls, intrusion detection systems (IDS), or intrusion prevention systems (IPS) to gather metadata from scan attempts. Example: Zeek or Suricata logs for incoming scan traffic. OSINT Platforms: Platforms like Censys, GreyNoise, or Shodan provide aggregated metadata about Internet-facing resources. Cloud Metadata Services: AWS Security Hub, Azure Monitor, or GCP Security Command Center can collect and centralize scan-related metadata for Internet-facing resources in cloud environments. Domain ID Name Detects Enterprise T1583 Acquire Infrastructure Monitor for contextual data about an Internet-facing resource gathered from a scan, such as running services or ports that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .003 Virtual Private Server Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .004 Server Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. Enterprise T1584 Compromise Infrastructure Monitor for contextual data about an Internet-facing resource gathered from a scan, such as running services or ports that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .003 Virtual Private Server Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .004 Server Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. Enterprise T1665 Hide Infrastructure Internet scanners may be used to look for artifacts associated with malicious C2 infrastructure. Correlate data and patterns from Internet-facing resources gathered from scans with network traffic to gain further insight into potential adversary C2 networks. References ThreatConnect. (2020, December 15). Infrastructure Research and Hunting: Boiling the Domain Ocean. Retrieved October 12, 2021. Stephens, A. (2020, July 13). SCANdalous! (External Detection Using Network Scan Data and Automation). Retrieved November 17, 2024. Koczwara, M. (2021, September 7). Hunting Cobalt Strike C2 with Shodan. Retrieved October 12, 2021. Kovar, R. (2017, December 11). Tall Tales of Hunting with TLS/SSL Certificates. Retrieved October 16, 2020. Blasco, J. (2014, August 28). Scanbox: A Reconnaissance Framework Used with Watering Hole Attacks. Retrieved October 19, 2020. "
},
{
"id": 1118,
"title": "Cloud Storage, Data Source DS0010",
"path": "/datasources/DS0010/index.html",
"content": " Cloud Storage Data object storage infrastructure hosted on-premise or by third-party providers, made available to users through network connections and/or APIs[1][2][3] ID: DS0010 \u24d8 Platform: IaaS \u24d8 Collection Layer: Cloud Control Plane Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 17 November 2024 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Cloud Storage: Cloud Storage Access Cloud storage access refers to the retrieval or interaction with data stored in cloud infrastructure. This data component includes activities such as reading, downloading, or accessing files and objects within cloud storage systems. Common examples include API calls like GetObject in AWS S3, which retrieves objects from cloud buckets. Examples: AWS S3 Access: An adversary uses the GetObject API to retrieve sensitive data from an AWS S3 bucket. Azure Blob Storage Access: A user accesses a blob in Azure Storage using Get Blob or Get Blob Properties. Google Cloud Storage Access: An adversary uses storage.objects.get to download objects from - OpenStack Swift Storage Access: A user retrieves an object from OpenStack Swift using the GET method. This data component can be collected through the following measures: Enable Logging for Cloud Storage Services AWS S3: Enable Server Access Logging to capture API calls like GetObject and store them in a designated S3 bucket. Azure Storage: Enable Azure Storage Logging to capture operations like GetBlob and log metadata. Google Cloud Storage: Enable Data Access audit logs for storage.objects.get API calls. OpenStack Swift: Configure middleware for object logging to capture GET requests. Centralize and Aggregate Logs Use a centralized logging solution (e.g., Splunk, ELK, or a cloud-native SIEM) to ingest and analyze logs from different cloud providers. AWS Example: Use AWS CloudTrail to collect API activity logs and forward them to your SIEM. Azure Example: Use Azure Monitor and Log Analytics to analyze storage access logs. Correlate with IAM Logs Combine storage access logs with IAM activity logs to correlate user actions with specific permissions and identities. Cloud Storage: Cloud Storage Access Cloud storage access refers to the retrieval or interaction with data stored in cloud infrastructure. This data component includes activities such as reading, downloading, or accessing files and objects within cloud storage systems. Common examples include API calls like GetObject in AWS S3, which retrieves objects from cloud buckets. Examples: AWS S3 Access: An adversary uses the GetObject API to retrieve sensitive data from an AWS S3 bucket. Azure Blob Storage Access: A user accesses a blob in Azure Storage using Get Blob or Get Blob Properties. Google Cloud Storage Access: An adversary uses storage.objects.get to download objects from - OpenStack Swift Storage Access: A user retrieves an object from OpenStack Swift using the GET method. This data component can be collected through the following measures: Enable Logging for Cloud Storage Services AWS S3: Enable Server Access Logging to capture API calls like GetObject and store them in a designated S3 bucket. Azure Storage: Enable Azure Storage Logging to capture operations like GetBlob and log metadata. Google Cloud Storage: Enable Data Access audit logs for storage.objects.get API calls. OpenStack Swift: Configure middleware for object logging to capture GET requests. Centralize and Aggregate Logs Use a centralized logging solution (e.g., Splunk, ELK, or a cloud-native SIEM) to ingest and analyze logs from different cloud providers. AWS Example: Use AWS CloudTrail to collect API activity logs and forward them to your SIEM. Azure Example: Use Azure Monitor and Log Analytics to analyze storage access logs. Correlate with IAM Logs Combine storage access logs with IAM activity logs to correlate user actions with specific permissions and identities. Domain ID Name Detects Enterprise T1619 Cloud Storage Object Discovery Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity. Enterprise T1530 Data from Cloud Storage Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set and are allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity. Enterprise T1048 Exfiltration Over Alternative Protocol Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set and are allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity. Analytic 1 - Detecting Suspicious Cloud Storage Exfiltration (EventCode=\"PutObject\" OR EventCode=\"FileSharedExternally\" OR source=\"Google_Admin_Logs\")| where (file_size > 5000000 OR file_access_count > 10)| stats count by _time, host, user, file_name, action, storage_bucket, file_size| where count >= 5| eval risk_score=case( file_size > 50000000, 9, file_size > 10000000, 8)| where risk_score >= 8| table _time, host, user, file_name, action, storage_bucket, file_size, risk_score Cloud Storage: Cloud Storage Creation Cloud Storage Creation refers to the initial creation of a new cloud storage resource, such as buckets, containers, or directories, within a cloud environment. This action is critical to track as it might indicate the legitimate provisioning of resources or unauthorized actions taken by adversaries to stage, store, or exfiltrate data. Examples: AWS S3 Bucket Creation: An AWS user creates a new S3 bucket using the CreateBucket API call. Azure Blob Storage Container Creation: A user creates a new container in Azure Blob Storage using the Create Container operation. Google Cloud Storage Bucket Creation: A Google Cloud user creates a new bucket using storage.buckets.create. OpenStack Swift Container Creation: A user creates a new container in OpenStack Swift using the PUT method. This data component can be collected through the following measures: Enable Logging for Cloud Storage Services AWS S3: Enable AWS CloudTrail to log CreateBucket API actions. Azure Blob Storage: Enable Azure Monitor and Diagnostic Logs for storage account activity. Use Azure Event Grid to capture Create Container operations. Google Cloud Storage: Enable Data Access logs in Cloud Audit Logs to monitor storage.buckets.create API calls. OpenStack Swift: Configure Swift logging to capture PUT requests to new containers. Centralized Logging and Analysis Forward logs to centralized platforms like Splunk or cloud-native SIEM solutions for correlation and analysis. Cloud Storage: Cloud Storage Creation Cloud Storage Creation refers to the initial creation of a new cloud storage resource, such as buckets, containers, or directories, within a cloud environment. This action is critical to track as it might indicate the legitimate provisioning of resources or unauthorized actions taken by adversaries to stage, store, or exfiltrate data. Examples: AWS S3 Bucket Creation: An AWS user creates a new S3 bucket using the CreateBucket API call. Azure Blob Storage Container Creation: A user creates a new container in Azure Blob Storage using the Create Container operation. Google Cloud Storage Bucket Creation: A Google Cloud user creates a new bucket using storage.buckets.create. OpenStack Swift Container Creation: A user creates a new container in OpenStack Swift using the PUT method. This data component can be collected through the following measures: Enable Logging for Cloud Storage Services AWS S3: Enable AWS CloudTrail to log CreateBucket API actions. Azure Blob Storage: Enable Azure Monitor and Diagnostic Logs for storage account activity. Use Azure Event Grid to capture Create Container operations. Google Cloud Storage: Enable Data Access logs in Cloud Audit Logs to monitor storage.buckets.create API calls. OpenStack Swift: Configure Swift logging to capture PUT requests to new containers. Centralized Logging and Analysis Forward logs to centralized platforms like Splunk or cloud-native SIEM solutions for correlation and analysis. Domain ID Name Detects Enterprise T1537 Transfer Data to Cloud Account Monitor account activity for attempts to create and share data, such as snapshots or backups, with untrusted or unusual accounts. Analytic 1 - Detecting Creation of Storage for Exfiltration (EventCode=\"CreateBucket\" OR EventCode=\"StorageAccountCreated\" OR source=\"Google_Admin_Logs\")| where (action IN (\"create_bucket\", \"create_storage_account\", \"create_shared_drive\"))| stats count by _time, host, user, action, storage_name| where count >= 3| eval risk_score=case( storage_name LIKE \"%backup%\" OR storage_name LIKE \"%export%\", 9, storage_name LIKE \"%temp%\" OR storage_name LIKE \"%new%\", 8)| where risk_score >= 8| table _time, host, user, action, storage_name, risk_score Cloud Storage: Cloud Storage Deletion Cloud Storage Deletion refers to the removal or destruction of cloud storage infrastructure, such as buckets, containers, or directories, within a cloud environment. Monitoring this activity is critical to detecting potential unauthorized or malicious actions, such as data destruction by adversaries or accidental deletions that may lead to data loss. Examples: AWS S3 Bucket Deletion: An AWS user deletes an S3 bucket using the DeleteBucket API call. Azure Blob Storage Container Deletion: A user deletes a container in Azure Blob Storage using the Delete Container operation. Google Cloud Storage Bucket Deletion: A Google Cloud user deletes a bucket using the storage.buckets.delete API. OpenStack Swift Container Deletion: A user deletes a container in OpenStack Swift using the DELETE method. This data component can be collected through the following measures: Enable Logging for Cloud Storage Services AWS S3: Enable AWS CloudTrail to log DeleteBucket API actions. Azure Blob Storage: Enable Azure Monitor and Diagnostic Logs to capture Delete Container operations. Use Azure Event Grid to capture and trigger alerts for container deletion. Google Cloud Storage: Enable Data Access logs in Cloud Audit Logs to monitor storage.buckets.delete API calls. OpenStack Swift: Configure Swift logging to capture DELETE requests for containers. Centralized Logging and Analysis Use platforms like Splunk or native SIEMs to forward and analyze logs for anomalies in cloud storage deletions. Cloud Storage: Cloud Storage Deletion Cloud Storage Deletion refers to the removal or destruction of cloud storage infrastructure, such as buckets, containers, or directories, within a cloud environment. Monitoring this activity is critical to detecting potential unauthorized or malicious actions, such as data destruction by adversaries or accidental deletions that may lead to data loss. Examples: AWS S3 Bucket Deletion: An AWS user deletes an S3 bucket using the DeleteBucket API call. Azure Blob Storage Container Deletion: A user deletes a container in Azure Blob Storage using the Delete Container operation. Google Cloud Storage Bucket Deletion: A Google Cloud user deletes a bucket using the storage.buckets.delete API. OpenStack Swift Container Deletion: A user deletes a container in OpenStack Swift using the DELETE method. This data component can be collected through the following measures: Enable Logging for Cloud Storage Services AWS S3: Enable AWS CloudTrail to log DeleteBucket API actions. Azure Blob Storage: Enable Azure Monitor and Diagnostic Logs to capture Delete Container operations. Use Azure Event Grid to capture and trigger alerts for container deletion. Google Cloud Storage: Enable Data Access logs in Cloud Audit Logs to monitor storage.buckets.delete API calls. OpenStack Swift: Configure Swift logging to capture DELETE requests for containers. Centralized Logging and Analysis Use platforms like Splunk or native SIEMs to forward and analyze logs for anomalies in cloud storage deletions. Domain ID Name Detects Enterprise T1485 Data Destruction Monitor for unexpected deletion of a cloud storage infrastructure, such as the DeleteDBCluster and DeleteGlobalCluster events in AWS, or a high quantity of data deletion events, such as DeleteBucket. Many of these events within a short period of time may indicate malicious activity. Enterprise T1490 Inhibit System Recovery Monitor for unexpected deletion of a cloud storage objects (ex: AWS DeleteObject), especially those associated with cloud backups. Cloud Storage: Cloud Storage Enumeration Cloud Storage Enumeration involves retrieving a list of available cloud storage infrastructure, such as buckets, containers, or objects, within a cloud environment. This activity may be performed for legitimate administrative purposes or malicious reconnaissance by adversaries seeking to identify accessible storage resources.Examples: AWS S3 Bucket Enumeration: An AWS user lists all buckets using the ListBuckets API call. Azure Blob Storage Container Enumeration: A user retrieves a list of all containers within a storage account using the Azure Storage SDK or API. Google Cloud Storage Bucket Enumeration: A Google Cloud user lists all buckets within a project using the storage.buckets.list API. OpenStack Swift Container Enumeration: A user retrieves a list of containers in OpenStack Swift using the GET method on the storage endpoint. This data component can be collected through the following measures: Enable Logging for Cloud Storage Enumeration AWS S3: Enable AWS CloudTrail to capture ListBuckets and ListObjects API calls. Azure Blob Storage: Enable Azure Monitor and Diagnostic Logs to capture enumeration operations like List Containers. Use Azure Event Grid to trigger alerts for container enumeration. Google Cloud Storage: Enable Audit Logs in Google Cloud to track storage.buckets.list API activity. OpenStack Swift: Configure Swift logging to capture GET requests for container enumeration. Centralized Log Aggregation Use platforms like Splunk or native SIEM solutions to collect and analyze enumeration logs. Cloud Storage: Cloud Storage Enumeration Cloud Storage Enumeration involves retrieving a list of available cloud storage infrastructure, such as buckets, containers, or objects, within a cloud environment. This activity may be performed for legitimate administrative purposes or malicious reconnaissance by adversaries seeking to identify accessible storage resources.Examples: AWS S3 Bucket Enumeration: An AWS user lists all buckets using the ListBuckets API call. Azure Blob Storage Container Enumeration: A user retrieves a list of all containers within a storage account using the Azure Storage SDK or API. Google Cloud Storage Bucket Enumeration: A Google Cloud user lists all buckets within a project using the storage.buckets.list API. OpenStack Swift Container Enumeration: A user retrieves a list of containers in OpenStack Swift using the GET method on the storage endpoint. This data component can be collected through the following measures: Enable Logging for Cloud Storage Enumeration AWS S3: Enable AWS CloudTrail to capture ListBuckets and ListObjects API calls. Azure Blob Storage: Enable Azure Monitor and Diagnostic Logs to capture enumeration operations like List Containers. Use Azure Event Grid to trigger alerts for container enumeration. Google Cloud Storage: Enable Audit Logs in Google Cloud to track storage.buckets.list API activity. OpenStack Swift: Configure Swift logging to capture GET requests for container enumeration. Centralized Log Aggregation Use platforms like Splunk or native SIEM solutions to collect and analyze enumeration logs. Domain ID Name Detects Enterprise T1580 Cloud Infrastructure Discovery Monitor cloud logs for API calls and other potentially unusual activity related to cloud data object storage enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. Enterprise T1619 Cloud Storage Object Discovery Monitor cloud logs for API calls used for file or object enumeration for unusual activity. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. Cloud Storage: Cloud Storage Metadata Cloud Storage Metadata provides contextual information about cloud storage infrastructure and its associated activity. This data may include attributes such as storage name, size, owner, permissions, creation date, region, and activity metadata. It is essential for monitoring, auditing, and identifying anomalies in cloud storage environments. Examples: AWS S3 Bucket Metadata: Metadata about an S3 bucket includes the bucket name, region, creation date, owner, storage class, and permissions. Azure Blob Storage Metadata: Metadata for an Azure Blob container includes container name, access level (e.g., private or public), size, and tags. Google Cloud Storage Metadata: Metadata includes bucket name, storage class, location, labels, lifecycle policies, and versioning status. OpenStack Swift Metadata: Metadata for a Swift container includes name, access level, quota, and custom attributes. This data component can be collected through the following measures: Enable Logging for Metadata Collection AWS S3: Use AWS CloudTrail to log GetBucketAcl, GetBucketPolicy, and HeadBucket API calls. Azure Blob Storage: Use Azure Monitor to log container metadata retrieval and updates. Google Cloud Storage: Enable Google Cloud Audit Logs to capture storage.buckets.get and storage.buckets.update. OpenStack Swift: Enable logging of HEAD or GET requests to containers. Centralized Log Aggregation Use a SIEM solution (e.g., Splunk) to aggregate and analyze metadata retrieval and modification logs. Correlate metadata access with user actions, IP addresses, and other contextual data. API Polling Use cloud SDKs or APIs to periodically query metadata for analysis: AWS CLI Example: aws s3api get-bucket-acl --bucket company-sensitive-data Azure CLI Example: az storage container show --name customer-records Google Cloud CLI Example: gcloud storage buckets describe user-uploads Cloud Storage: Cloud Storage Metadata Cloud Storage Metadata provides contextual information about cloud storage infrastructure and its associated activity. This data may include attributes such as storage name, size, owner, permissions, creation date, region, and activity metadata. It is essential for monitoring, auditing, and identifying anomalies in cloud storage environments. Examples: AWS S3 Bucket Metadata: Metadata about an S3 bucket includes the bucket name, region, creation date, owner, storage class, and permissions. Azure Blob Storage Metadata: Metadata for an Azure Blob container includes container name, access level (e.g., private or public), size, and tags. Google Cloud Storage Metadata: Metadata includes bucket name, storage class, location, labels, lifecycle policies, and versioning status. OpenStack Swift Metadata: Metadata for a Swift container includes name, access level, quota, and custom attributes. This data component can be collected through the following measures: Enable Logging for Metadata Collection AWS S3: Use AWS CloudTrail to log GetBucketAcl, GetBucketPolicy, and HeadBucket API calls. Azure Blob Storage: Use Azure Monitor to log container metadata retrieval and updates. Google Cloud Storage: Enable Google Cloud Audit Logs to capture storage.buckets.get and storage.buckets.update. OpenStack Swift: Enable logging of HEAD or GET requests to containers. Centralized Log Aggregation Use a SIEM solution (e.g., Splunk) to aggregate and analyze metadata retrieval and modification logs. Correlate metadata access with user actions, IP addresses, and other contextual data. API Polling Use cloud SDKs or APIs to periodically query metadata for analysis: AWS CLI Example: aws s3api get-bucket-acl --bucket company-sensitive-data Azure CLI Example: az storage container show --name customer-records Google Cloud CLI Example: gcloud storage buckets describe user-uploads Domain ID Name Detects Enterprise T1537 Transfer Data to Cloud Account Periodically baseline cloud storage infrastructure to identify malicious modifications or additions. Cloud Storage: Cloud Storage Modification Cloud Storage Modification involves tracking changes made to cloud storage infrastructure, including updates to settings, permissions, or stored data. Examples include modifying object access control lists (ACLs), uploading new objects, or updating bucket policies. Examples: AWS S3: An object is uploaded or its ACL is modified.- Azure Blob Storage: A blob's metadata or permissions are updated.- Google Cloud Storage: An object's lifecycle policy is updated, or a bucket policy is changed.- OpenStack Swift: Modifications to container settings or uploading of new objects. This data component can be collected through the following measures: Enable Logging AWS S3: Enable AWS CloudTrail to log API events like PutObject, PutObjectAcl, and PutBucketPolicy. Azure Blob Storage: Use Azure Monitor to log write and update operations. Google Cloud Storage: Enable Google Cloud Audit Logs to track storage.objects.update and storage.buckets.update. OpenStack Swift: Enable logging for PUT and POST requests to track object uploads and container metadata updates. Use Cloud Monitoring Tools Integrate with tools like AWS Config, Azure Security Center, or Google Cloud Monitoring to detect configuration drift or unauthorized changes. Centralized Log Aggregation Use a SIEM (e.g., Splunk) to aggregate logs across multiple cloud providers for unified monitoring and analysis. Periodic API Queries AWS CLI Example: Query recent modifications to bucket policies: aws s3api get-bucket-policy --bucket sensitive-data Azure CLI Example: List changes to a blob container: az storage blob show --container-name private-docs Google Cloud CLI Example: Check metadata updates: gcloud storage objects describe gs://user-uploads/document.txt Cloud Storage: Cloud Storage Modification Cloud Storage Modification involves tracking changes made to cloud storage infrastructure, including updates to settings, permissions, or stored data. Examples include modifying object access control lists (ACLs), uploading new objects, or updating bucket policies. Examples: AWS S3: An object is uploaded or its ACL is modified.- Azure Blob Storage: A blob's metadata or permissions are updated.- Google Cloud Storage: An object's lifecycle policy is updated, or a bucket policy is changed.- OpenStack Swift: Modifications to container settings or uploading of new objects. This data component can be collected through the following measures: Enable Logging AWS S3: Enable AWS CloudTrail to log API events like PutObject, PutObjectAcl, and PutBucketPolicy. Azure Blob Storage: Use Azure Monitor to log write and update operations. Google Cloud Storage: Enable Google Cloud Audit Logs to track storage.objects.update and storage.buckets.update. OpenStack Swift: Enable logging for PUT and POST requests to track object uploads and container metadata updates. Use Cloud Monitoring Tools Integrate with tools like AWS Config, Azure Security Center, or Google Cloud Monitoring to detect configuration drift or unauthorized changes. Centralized Log Aggregation Use a SIEM (e.g., Splunk) to aggregate logs across multiple cloud providers for unified monitoring and analysis. Periodic API Queries AWS CLI Example: Query recent modifications to bucket policies: aws s3api get-bucket-policy --bucket sensitive-data Azure CLI Example: List changes to a blob container: az storage blob show --container-name private-docs Google Cloud CLI Example: Check metadata updates: gcloud storage objects describe gs://user-uploads/document.txt Domain ID Name Detects Enterprise T1485 Data Destruction Monitor for unexpected use of lifecycle policies. Where lifecycle policies are already in use, monitor for changes to cloud storage configurations and policies, such as buckets configured in the policy or unusually short retention periods. In AWS environments, monitor for PutBucketLifecycle events with a requestParameters.LifecycleConfiguration.Rule.Expiration.Days attribute below expected values.[4] .001 Lifecycle-Triggered Deletion Monitor for unexpected use of lifecycle policies. Where lifecycle policies are already in use, monitor for changes to cloud storage configurations and policies, such as buckets configured in the policy or unusually short retention periods. In AWS environments, monitor for PutBucketLifecycle events with a requestParameters.LifecycleConfiguration.Rule.Expiration.Days attribute below expected values.[4] Enterprise T1486 Data Encrypted for Impact Monitor for changes made in cloud environments for events that indicate storage objects have been anomalously modified. Enterprise T1537 Transfer Data to Cloud Account Monitor for anomalous file transfer activity between accounts and/or to untrusted/unexpected VPCs. Analytic 1 - Detecting Cloud Storage Permission Changes for Exfiltration (EventCode=\"PutBucketPolicy\" OR EventCode=\"ModifyStoragePermissions\" OR source=\"Google_Admin_Logs\")| where (action IN (\"modify_acl\", \"change_permissions\", \"public_read_enabled\"))| stats count by _time, host, user, action, storage_name| where count >= 3| eval risk_score=case( action=\"public_read_enabled\", 9, action=\"modify_acl\", 8)| where risk_score >= 8| table _time, host, user, action, storage_name, risk_score References Amazon. (n.d.). Amazon S3. Retrieved October 13, 2021. Microsoft. (n.d.). Azure Blob Storage. Retrieved November 17, 2024. Google. (n.d.). Cloud Storage. Retrieved October 13, 2021. Stratus Red Team. (n.d.). CloudTrail Logs Impairment Through S3 Lifecycle Rule. Retrieved September 25, 2024. "
},
{
"id": 1119,
"title": "Drive, Data Source DS0016",
"path": "/datasources/DS0016/index.html",
"content": " Drive A non-volatile data storage device (hard drive, floppy disk, USB flash drive) with at least one formatted partition, typically mounted to the file system and/or assigned a drive letter[1] ID: DS0016 \u24d8 Platforms: Linux, Windows, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Drive: Drive Access Refers to the act of accessing a data storage device, such as a hard drive, SSD, USB, or network-mounted drive. This data component logs the opening or mounting of drives, capturing activities such as reading, writing, or executing files within an assigned drive letter (e.g., C:\\, /mnt/drive) or mount point. Examples: Removable Drive Insertion: A USB drive is inserted, assigned the letter F:\\, and files are accessed. Network Drive Mounting: A network share \\\\server\\share is mapped to the drive Z:\\. External Hard Drive Access: An external drive is connected, mounted at /mnt/backup, and accessed for copying files. System Volume Access: The system volume C:\\ is accessed for modifications to critical files. Cloud-Synced Drives: Cloud storage drives like OneDrive or Google Drive are accessed via local mounts. This data component can be collected through the following measures: Windows Event Logs- Relevant Events: - Event ID 4663: Logs access to file or folder objects. - Event ID 4656: Tracks a handle to an object like a drive or file.- Configuration: - Enable auditing for \"Object Access\" in Local Security Policy. - Use Group Policy for broader deployment: Computer Configuration > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access Linux System Logs Command-Line Monitoring: Use the dmesg or journalctl command to monitor drive mount/unmount events. Auditd Configuration: Add an audit rule for drive access: auditctl -w /mnt/drive -p rwxa -k drive_access Review logs via /var/log/audit/audit.log. macOS System Logs Command-Line Monitoring: Use diskutil list or fs_usage to monitor drive access and mount points. Unified Logs: Query unified logs using log show for drive-related activities: log show --info | grep \"mount\" Endpoint Detection and Response (EDR) Tools Use EDR solutions to monitor drive activities and collect detailed forensic data. SIEM Tools Ingest logs from endpoints to detect drive access patterns. Configure rules to alert on unusual or unauthorized drive access. Drive: Drive Access Refers to the act of accessing a data storage device, such as a hard drive, SSD, USB, or network-mounted drive. This data component logs the opening or mounting of drives, capturing activities such as reading, writing, or executing files within an assigned drive letter (e.g., C:\\, /mnt/drive) or mount point. Examples: Removable Drive Insertion: A USB drive is inserted, assigned the letter F:\\, and files are accessed. Network Drive Mounting: A network share \\\\server\\share is mapped to the drive Z:\\. External Hard Drive Access: An external drive is connected, mounted at /mnt/backup, and accessed for copying files. System Volume Access: The system volume C:\\ is accessed for modifications to critical files. Cloud-Synced Drives: Cloud storage drives like OneDrive or Google Drive are accessed via local mounts. This data component can be collected through the following measures: Windows Event Logs- Relevant Events: - Event ID 4663: Logs access to file or folder objects. - Event ID 4656: Tracks a handle to an object like a drive or file.- Configuration: - Enable auditing for \"Object Access\" in Local Security Policy. - Use Group Policy for broader deployment: Computer Configuration > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Object Access Linux System Logs Command-Line Monitoring: Use the dmesg or journalctl command to monitor drive mount/unmount events. Auditd Configuration: Add an audit rule for drive access: auditctl -w /mnt/drive -p rwxa -k drive_access Review logs via /var/log/audit/audit.log. macOS System Logs Command-Line Monitoring: Use diskutil list or fs_usage to monitor drive access and mount points. Unified Logs: Query unified logs using log show for drive-related activities: log show --info | grep \"mount\" Endpoint Detection and Response (EDR) Tools Use EDR solutions to monitor drive activities and collect detailed forensic data. SIEM Tools Ingest logs from endpoints to detect drive access patterns. Configure rules to alert on unusual or unauthorized drive access. Domain ID Name Detects Enterprise T1092 Communication Through Removable Media Monitor for unexpected file access on removable media Enterprise T1006 Direct Volume Access Monitor handle opens on volumes that are made by processes to determine when they may be directly collecting data from logical drives. [2] Enterprise T1561 Disk Wipe Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. .001 Disk Content Wipe Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. .002 Disk Structure Wipe Monitor for newly constructed drive letters or mount points to a data storage device for attempts to write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. Drive: Drive Creation The activity of assigning a new drive letter or creating a mount point for a data storage device, such as a USB, network share, or external hard drive, enabling access to its content on a host system. Examples: USB Drive Insertion: A USB drive is plugged in and automatically assigned the letter E:\\ on a Windows machine. Network Drive Mapping: A network share \\\\server\\share is mapped to the drive Z:\\. Virtual Drive Creation: A virtual disk is mounted on /mnt/virtualdrive using an ISO image or a virtual hard disk (VHD). Cloud Storage Mounting: Google Drive is mounted as G:\\ on a Windows machine using a cloud sync tool. External Storage Integration: An external HDD or SSD is connected and assigned /mnt/external on a Linux system. This data component can be collected through the following measures: Windows Event Logs Relevant Events: Event ID 98: Logs the creation of a volume (mount or new drive letter assignment). Event ID 1006: Logs removable storage device insertions. Configuration: Enable \"Removable Storage Events\" in the Group Policy settings:Computer Configuration > Administrative Templates > System > Removable Storage Access Linux System Logs Command-Line Monitoring: Use dmesg or journalctl to monitor mount events. Auditd Configuration: Add audit rules to track mount points. Logs can be reviewed in /var/log/audit/audit.log. macOS System Logs Unified Logs: Monitor system logs for mount activity: Command-Line Tools: Use diskutil list to verify newly created or mounted drives. Endpoint Detection and Response (EDR) Tools EDR solutions can log removable drive usage and network-mounted drives. Configure EDR policies to alert on suspicious drive creation events. SIEM Tools Centralize logs from multiple platforms into a SIEM (e.g., Splunk) to correlate and alert on suspicious drive creation activities. Drive: Drive Creation The activity of assigning a new drive letter or creating a mount point for a data storage device, such as a USB, network share, or external hard drive, enabling access to its content on a host system. Examples: USB Drive Insertion: A USB drive is plugged in and automatically assigned the letter E:\\ on a Windows machine. Network Drive Mapping: A network share \\\\server\\share is mapped to the drive Z:\\. Virtual Drive Creation: A virtual disk is mounted on /mnt/virtualdrive using an ISO image or a virtual hard disk (VHD). Cloud Storage Mounting: Google Drive is mounted as G:\\ on a Windows machine using a cloud sync tool. External Storage Integration: An external HDD or SSD is connected and assigned /mnt/external on a Linux system. This data component can be collected through the following measures: Windows Event Logs Relevant Events: Event ID 98: Logs the creation of a volume (mount or new drive letter assignment). Event ID 1006: Logs removable storage device insertions. Configuration: Enable \"Removable Storage Events\" in the Group Policy settings:Computer Configuration > Administrative Templates > System > Removable Storage Access Linux System Logs Command-Line Monitoring: Use dmesg or journalctl to monitor mount events. Auditd Configuration: Add audit rules to track mount points. Logs can be reviewed in /var/log/audit/audit.log. macOS System Logs Unified Logs: Monitor system logs for mount activity: Command-Line Tools: Use diskutil list to verify newly created or mounted drives. Endpoint Detection and Response (EDR) Tools EDR solutions can log removable drive usage and network-mounted drives. Configure EDR policies to alert on suspicious drive creation events. SIEM Tools Centralize logs from multiple platforms into a SIEM (e.g., Splunk) to correlate and alert on suspicious drive creation activities. Domain ID Name Detects ICS T0895 Autorun Image Monitor for newly constructed drive letters or mount points to removable media. Enterprise T1092 Communication Through Removable Media Monitor for newly executed processes when removable media is mounted. Enterprise T1052 Exfiltration Over Physical Medium Detection of newly mounted USB or external drives, unusual storage devices connected to a system (e.g., large capacity, high-speed), or frequent device mount/unmount activity indicative of exfiltration attempts. Analytic 1 - Detecting New External Drive Mounting Events (EventCode=6 OR EventCode=4663 OR source=\"/var/log/syslog\" \"usb-storage added\" OR source=\"com.apple.DiskArbitration\")| where (device_type IN (\"USB\", \"Removable Storage\"))| stats count by _time, host, user, device_name, device_type| eval risk_score=case( device_type=\"USB\", 9, device_type=\"Removable Storage\", 8)| where risk_score >= 8| table host, user, device_name, device_type, risk_score .001 Exfiltration over USB Monitor for newly assigned drive letters or mount points to a data storage device that may attempt to exfiltrate data over a USB connected physical device. Analytic 1 - Detecting New USB Drive Mounting Events (EventCode=6 OR EventCode=4663 OR source=\"/var/log/syslog\" \"usb-storage added\" OR source=\"com.apple.DiskArbitration\")| where (device_type IN (\"USB\", \"Removable Storage\"))| stats count by _time, host, user, device_name, device_type| eval risk_score=case( device_type=\"USB\", 9, device_type=\"Removable Storage\", 8)| where risk_score >= 8| table host, user, device_name, device_type, risk_score Enterprise T1200 Hardware Additions Monitor for newly constructed drives or other related events associated with computer hardware and other accessories (especially new or unknown) being connected to systems. Endpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports. Analytic 1 - Detecting Unauthorized External Drives (EventCode=4663 OR EventCode=11)OR (source=\"/var/log/messages\" OR source=\"/var/log/syslog\" \"block device added\")OR (source=\"macOS_logs\" Event=\"com.apple.diskarbitrationd\")| eval risk_score=case( like(DeviceName, \"%Kingston%\"), 7, like(DeviceName, \"%SanDisk%\"), 6, like(DeviceName, \"%Unknown%\"), 9)| where risk_score >= 7| stats count by _time, host, DeviceName, user, risk_score Enterprise T1674 Input Injection Monitor for newly executed processes when removable media is mounted. Additionally, monitor for unexpected or rapid USB HID enumeration events (e.g., a USB HID device connecting and immediately issuing keystrokes) or anomalies (e.g., a device claiming to be a keyboard but has a suspicious vendor ID) that could indicate a possible rogue device. Tools like Windows Event Logs (e.g., event IDs 20001 - 20003), sysfs on Linux (e.g., /sys/bus/usb/devices/), and macOS IORegistry (e.g., ioreg -p IOUSB) can provide insight into input devices. Additionally, consider leveraging keyboard hook APIs to monitor for keystrokes that are too fast and too uniform (e.g., a script executing keystrokes with no human variation or that are too precise). Analytic 1 Detect HID like Device Injection index=wineventlog sourcetype=\"WinEventLog:System\" EventCode=400 OR EventCode=20001| eval usb_device=coalesce(UsbDevice, DeviceName)| search usb_device=\"keyboard\" OR usb_device=\"HID\"| transaction usb_device maxspan=30s| join usb_device [ search index=main sourcetype=\"WinEventLog:Security\" (EventCode=4688 OR EventCode=4104) | stats count by usb_device, _time, CommandLine, ParentProcessName, NewProcessName ]| where count > 0| table _time, usb_device, NewProcessName, CommandLine, ParentProcessName Enterprise T1219 Remote Access Tools Monitor for newly constructed drives or other related events associated with computer hardware and other accessories (especially new or unknown) being connected to systems. Endpoint sensors may be able to detect the addition of hardware via USB and other external device communication ports. .003 Remote Access Hardware Monitor for newly constructed drives or other related events associated with computer hardware and other accessories (especially new or unknown) being connected to systems. Endpoint sensors may be able to detect the addition of hardware via USB and other external device communication ports. For example, by default TinyPilot declares its manufacturer name as tinypilot and its serial number as 6b65796d696d6570690 within the /opt/tinypilot-privileged/init-usb-gadget directory. It also announces itself as TinyPilot within its EDID (Extended Display Identification Data).[3] Analytic 1 - USB Device Enumeration (sourcetype=\"WinEventLog:Microsoft-Windows-DriverFrameworks-UserMode/Operational\" OR sourcetype=\"syslog\")(EventCode=2003 OR EventCode=2100 OR message=\"tinypilot\" OR message=\"TinyPilot\")| eval timestamp=_time| table timestamp, host, user, DeviceClass, FriendlyName, VendorID, ProductID, SerialNumber| sort by timestamp desc Enterprise T1091 Replication Through Removable Media Monitor for newly constructed drive letters or mount points to removable media Analytic 1 - Removable Media Mount Events index=windows sourcetype=\"WinEventLog:Microsoft-Windows-Partition/Operational\" EventID=1006| stats count by DeviceName, VolumeName, EventID, ComputerName, _time| where count > 1| table _time, DeviceName, VolumeName, ComputerName ICS T0847 Replication Through Removable Media Monitor for newly constructed drive letters or mount points to removable media. Drive: Drive Modification The alteration of a drive letter, mount point, or other attributes of a data storage device, which could involve reassignment, renaming, permissions changes, or other modifications. Examples: Drive Letter Reassignment: A USB drive previously assigned E:\\ is reassigned to D:\\ on a Windows machine. Mount Point Change: On a Linux system, a mounted storage device at /mnt/external is moved to /mnt/storage. Drive Permission Changes: A shared drive's permissions are modified to allow write access for unauthorized users or processes. Renaming of a Drive: A network drive labeled \"HR_Share\" is renamed to \"Shared_Resources.\" Modification of Cloud-Integrated Drives: A cloud storage mount such as Google Drive is modified to sync only specific folders. This data component can be collected through the following measures: Windows Event Logs Relevant Events: Event ID 98: Indicates changes to a volume (e.g., drive letter reassignment). Event ID 1006: Logs permission modifications or changes to removable storage. Configuration: Enable \"Storage Operational Logs\" in the Event Viewer:Applications and Services Logs > Microsoft > Windows > Storage-Tiering > Operational Linux System Logs Auditd Configuration: Add audit rules to track changes to mounted drives: auditctl -w /mnt/ -p w -k drive_modification Command-Line Monitoring: Use dmesg or journalctl to observe drive modifications. macOS System Logs Unified Logs: Collect mount or drive modification events: log show --info | grep \"Volume modified\" Command-Line Monitoring: Use diskutil to track changes: Endpoint Detection and Response (EDR) Tools Configure policies in EDR solutions to monitor and log changes to drive configurations or attributes. SIEM Tools Aggregate logs from multiple systems into a centralized platform like Splunk to correlate events and alert on suspicious drive modification activities. Drive: Drive Modification The alteration of a drive letter, mount point, or other attributes of a data storage device, which could involve reassignment, renaming, permissions changes, or other modifications. Examples: Drive Letter Reassignment: A USB drive previously assigned E:\\ is reassigned to D:\\ on a Windows machine. Mount Point Change: On a Linux system, a mounted storage device at /mnt/external is moved to /mnt/storage. Drive Permission Changes: A shared drive's permissions are modified to allow write access for unauthorized users or processes. Renaming of a Drive: A network drive labeled \"HR_Share\" is renamed to \"Shared_Resources.\" Modification of Cloud-Integrated Drives: A cloud storage mount such as Google Drive is modified to sync only specific folders. This data component can be collected through the following measures: Windows Event Logs Relevant Events: Event ID 98: Indicates changes to a volume (e.g., drive letter reassignment). Event ID 1006: Logs permission modifications or changes to removable storage. Configuration: Enable \"Storage Operational Logs\" in the Event Viewer:Applications and Services Logs > Microsoft > Windows > Storage-Tiering > Operational Linux System Logs Auditd Configuration: Add audit rules to track changes to mounted drives: auditctl -w /mnt/ -p w -k drive_modification Command-Line Monitoring: Use dmesg or journalctl to observe drive modifications. macOS System Logs Unified Logs: Collect mount or drive modification events: log show --info | grep \"Volume modified\" Command-Line Monitoring: Use diskutil to track changes: Endpoint Detection and Response (EDR) Tools Configure policies in EDR solutions to monitor and log changes to drive configurations or attributes. SIEM Tools Aggregate logs from multiple systems into a centralized platform like Splunk to correlate events and alert on suspicious drive modification activities. Domain ID Name Detects Enterprise T1561 Disk Wipe Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. .001 Disk Content Wipe Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. .002 Disk Structure Wipe Monitor for changes made to drive letters or mount points of data storage devices for attempts to read to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. Enterprise T1542 Pre-OS Boot Monitor for changes to MBR and VBR as they occur for indicators for suspicious activity and further analysis. Take snapshots of MBR and VBR and compare against known good samples. .003 Bootkit On BIOS boot systems, monitor for changes to MBR and VBR as they occur for indicators for suspicious activity and further analysis. Take snapshots of MBR and VBR and compare against known good samples. Enterprise T1014 Rootkit Monitor for changes made to drive letters or mount points of data storage devices for unexpected modifications that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. References Russinovich, R. & Garnier, T. (2021, August 18). Sysmon Event ID 9. Retrieved September 24, 2021. Bialek, J. (2015, December 16). Invoke-NinjaCopy.ps1. Retrieved June 2, 2016. TinyPilot. (n.d.). Can anyone detect when I'm using TinyPilot?. Retrieved March 26, 2025. "
},
{
"id": 1120,
"title": "Command, Data Source DS0017",
"path": "/datasources/DS0017/index.html",
"content": " Command A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task[1][2] ID: DS0017 \u24d8 Platforms: Android, Containers, ESXi, Linux, Network Devices, Windows, iOS, macOS \u24d8 Collection Layers: Container, Host Contributors: Center for Threat-Informed Defense (CTID); Austin Clark, @c2defense Version: 1.2 Created: 20 October 2021 Last Modified: 18 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Command: Command Execution Command Execution involves monitoring and capturing the execution of textual commands (including shell commands, cmdlets, and scripts) within an operating system or application. These commands may include arguments or parameters and are typically executed through interpreters such as cmd.exe, bash, zsh, PowerShell, or programmatic execution. Examples: Windows Command Prompt dir \u2013 Lists directory contents. net user \u2013 Queries or manipulates user accounts. tasklist \u2013 Lists running processes. PowerShell Get-Process \u2013 Retrieves processes running on a system. Set-ExecutionPolicy \u2013 Changes PowerShell script execution policies. Invoke-WebRequest \u2013 Downloads remote resources. Linux Shell ls \u2013 Lists files in a directory. cat /etc/passwd \u2013 Reads the user accounts file. curl http://malicious-site.com \u2013 Retrieves content from a malicious URL. Container Environments docker exec \u2013 Executes a command inside a running container. kubectl exec \u2013 Runs commands in Kubernetes pods. macOS Terminal open \u2013 Opens files or URLs. dscl . -list /Users \u2013 Lists all users on the system. osascript -e \u2013 Executes AppleScript commands. This data component can be collected through the following measures: Enable Command Logging Windows: Enable PowerShell logging: Set-ExecutionPolicy Bypass, Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" -Name EnableScriptBlockLogging -Value 1 Enable Windows Event Logging: Event ID 4688: Tracks process creation, including command-line arguments. Event ID 4104: Logs PowerShell script block execution. Linux/macOS: Enable shell history logging in .bashrc or .zshrc: export HISTTIMEFORMAT=\"%d/%m/%y %T \", export PROMPT_COMMAND='history -a; history -w' Use audit frameworks (e.g., auditd) to log command executions. Example rule to log all execve syscalls: -a always,exit -F arch=b64 -S execve -k cmd_exec Containers: Use runtime-specific tools like Docker\u2019s --log-driver or Kubernetes Audit Logs to capture exec commands. Integrate with Centralized Logging Collect logs using a SIEM (e.g., Splunk) or cloud-based log aggregation tools like AWS CloudWatch or Azure Monitor. Example Splunk Search for Windows Event 4688:index=windows EventID=4688 CommandLine=* Use Endpoint Detection and Response (EDR) Tools Monitor command executions via EDR solutions Deploy Sysmon for Advanced Logging (Windows) Use Sysmon's Event ID 1 to log process creation with command-line arguments Command: Command Execution Command Execution involves monitoring and capturing the execution of textual commands (including shell commands, cmdlets, and scripts) within an operating system or application. These commands may include arguments or parameters and are typically executed through interpreters such as cmd.exe, bash, zsh, PowerShell, or programmatic execution. Examples: Windows Command Prompt dir \u2013 Lists directory contents. net user \u2013 Queries or manipulates user accounts. tasklist \u2013 Lists running processes. PowerShell Get-Process \u2013 Retrieves processes running on a system. Set-ExecutionPolicy \u2013 Changes PowerShell script execution policies. Invoke-WebRequest \u2013 Downloads remote resources. Linux Shell ls \u2013 Lists files in a directory. cat /etc/passwd \u2013 Reads the user accounts file. curl http://malicious-site.com \u2013 Retrieves content from a malicious URL. Container Environments docker exec \u2013 Executes a command inside a running container. kubectl exec \u2013 Runs commands in Kubernetes pods. macOS Terminal open \u2013 Opens files or URLs. dscl . -list /Users \u2013 Lists all users on the system. osascript -e \u2013 Executes AppleScript commands. This data component can be collected through the following measures: Enable Command Logging Windows: Enable PowerShell logging: Set-ExecutionPolicy Bypass, Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging\" -Name EnableScriptBlockLogging -Value 1 Enable Windows Event Logging: Event ID 4688: Tracks process creation, including command-line arguments. Event ID 4104: Logs PowerShell script block execution. Linux/macOS: Enable shell history logging in .bashrc or .zshrc: export HISTTIMEFORMAT=\"%d/%m/%y %T \", export PROMPT_COMMAND='history -a; history -w' Use audit frameworks (e.g., auditd) to log command executions. Example rule to log all execve syscalls: -a always,exit -F arch=b64 -S execve -k cmd_exec Containers: Use runtime-specific tools like Docker\u2019s --log-driver or Kubernetes Audit Logs to capture exec commands. Integrate with Centralized Logging Collect logs using a SIEM (e.g., Splunk) or cloud-based log aggregation tools like AWS CloudWatch or Azure Monitor. Example Splunk Search for Windows Event 4688:index=windows EventID=4688 CommandLine=* Use Endpoint Detection and Response (EDR) Tools Monitor command executions via EDR solutions Deploy Sysmon for Advanced Logging (Windows) Use Sysmon's Event ID 1 to log process creation with command-line arguments Domain ID Name Detects Enterprise T1548 Abuse Elevation Control Mechanism Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. .001 Setuid and Setgid Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set. .002 Bypass User Account Control Monitor executed commands and arguments that may bypass UAC mechanisms to elevate process privileges on system. .003 Sudo and Sudo Caching Monitor executed commands and arguments that may perform sudo caching and/or use the sudoers file to elevate privileges, such as the sudo command. .006 TCC Manipulation Monitor executed commands and arguments that may abuse or modify TCC mechanisms designed to control access to elevated privileges. macOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. Enterprise T1134 Access Token Manipulation Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.[3] .001 Token Impersonation/Theft Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.[3] .002 Create Process with Token Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.[3] .003 Make and Impersonate Token Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.[3] Enterprise T1087 Account Discovery Monitor logs and other sources of command execution history for actions that could be taken to gather information about accounts, including the use of calls to cloud APIs that perform account discovery. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained. .001 Local Account Monitor for execution of commands and arguments associated with enumeration or information gathering of local accounts and groups such as net user, net account, net localgroup, Get-LocalUser, dscl, and esxcli system accounts list. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained. .002 Domain Account Monitor for execution of commands and arguments associated with enumeration or information gathering of domain accounts and groups, such as net user /domain and net group /domain, dscacheutil -q groupon macOS, and ldapsearch on Linux. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained. .003 Email Account Monitor for execution of commands and arguments associated with enumeration or information gathering of email addresses and accounts such as Get-AddressList, Get-GlobalAddressList, and Get-OfflineAddressBook. .004 Cloud Account Monitor logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained. Enterprise T1098 Account Manipulation Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as the authorized_keys or /etc/ssh/sshd_config). Monitor executed commands and arguments of suspicious commands (such as Add-MailboxPermission) that may be indicative of modifying the permissions of Exchange and other related service settings. .004 SSH Authorized Keys Monitor executed commands and arguments to modify the authorized_keys or /etc/ssh/sshd_config files. Enterprise T1010 Application Window Discovery Monitor executed commands and arguments for actions that could be taken to gather system and network information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. Note: Commands can also be obtained from Payload event field for PowerShell event id 4103. For PowerShell Module logging event id 4103, enable logging for module Microsoft.PowerShell.Management. Analytic 1 - Suspicious Commands sourcetype=\"WinEventLog:Microsoft-Windows-PowerShell/Operational\" EventCode=\"4103\" | where CommandLine LIKE \"%Get-Process%\" AND CommandLine LIKE \"%mainWindowTitle%\" Enterprise T1560 Archive Collected Data Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar. .001 Archive via Utility Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar. Enterprise T1123 Audio Capture Monitor executed commands and arguments for actions that can leverage a computer\u2019s peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information. Enterprise T1119 Automated Collection Monitor executed commands and arguments for actions that could be taken to collect internal data. ICS T0802 Automated Collection Monitor executed commands and arguments for actions that could be taken to collect internal data. Enterprise T1020 Automated Exfiltration Monitor execution of exfiltration-related commands such as scp, rsync, curl, ftp, wget, command-line utilities used to archive and move data (tar, zip, 7z), suspicious execution of scripts performing batch file transfers, or unusual usage of PowerShell, Bash, or Python for bulk file movement. Analytic 1 - Detecting Automated File Exfiltration Commands (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"scp\", \"rsync\", \"curl\", \"ftp\", \"wget\", \"powershell -enc\", \"tar -cf\", \"zip -r\", \"7z a\"))| eval risk_score=case( command IN (\"scp\", \"rsync\", \"curl\"), 9, command IN (\"tar -cf\", \"zip -r\"), 8, command IN (\"powershell -enc\", \"wget\"), 7)| where risk_score >= 8| stats count by _time, host, user, command, risk_score Enterprise T1197 BITS Jobs Monitor executed commands and arguments from the BITSAdmin tool (especially the \u2018Transfer\u2019, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)[4] Admin logs, PowerShell logs, and the Windows Event log for BITS activity.[5] Also consider investigating more detailed information about jobs by parsing the BITS job database.[6] Enterprise T1547 Boot or Logon Autostart Execution Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. .001 Registry Run Keys / Startup Folder Monitor executed commands and arguments that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. .002 Authentication Package Monitor executed commands and arguments that may abuse authentication packages to execute DLLs when the system boots. .003 Time Providers Monitor executed commands and arguments that may abuse time providers to execute DLLs when the system boots. .004 Winlogon Helper DLL Monitor executed commands and arguments that may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. .005 Security Support Provider Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots. .006 Kernel Modules and Extensions Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: modprobe, insmod, lsmod, rmmod, or modinfo [7] Adversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. [8] Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.[9] Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package. On macOS, monitor for execution of kextload commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the kext_policy table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, /var/db/SystemPolicyConfiguration/KextPolicy.[10][11][12] .007 Re-opened Applications Monitor executed commands and arguments that may modify plist files to automatically run an application when a user logs in. .013 XDG Autostart Entries Monitor executed commands and arguments that may modify XDG autostart entries to execute programs or commands during system boot. .014 Active Setup Monitor executed commands and arguments that may achieve persistence by adding a Registry key to the Active Setup of the local machine. Enterprise T1037 Boot or Logon Initialization Scripts Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times. .001 Logon Script (Windows) Monitor executed commands and arguments for logon scripts .002 Login Hook Monitor executed commands with arguments to install or modify login hooks. .003 Network Logon Script Monitor executed commands and arguments for logon scripts .004 RC Scripts Monitor executed commands and arguments resulting from RC scripts for unusual or unknown applications or behavior. .005 Startup Items Monitor executed commands and arguments for logon scripts Enterprise T1217 Browser Information Discovery Monitor executed commands and arguments for actions that could be taken to gather browser information, such as local files and databases (e.g., %APPDATA%/Google/Chrome).[13] Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell. Enterprise T1110 Brute Force Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained. Analytic 1 - Command-line tools used for brute force attacks. (index=security sourcetype=\"Powershell\" EventCode=4104) OR(index=os sourcetype=\"linux_secure\" (cmdline IN (\"hydra\", \"medusa\", \"ncrack\", \"patator\", \"john\", \"hashcat\", \"rcrack\", \"w3af\", \"aircrack-ng\"))) OR (index=os sourcetype=\"macos_secure\" (cmdline IN (\"hydra\", \"medusa\", \"ncrack\", \"patator\", \"john\", \"hashcat\", \"rcrack\", \"w3af\", \"aircrack-ng\"))) | where match(CommandLine, \"(?i)(hydra|medusa|ncrack|patator|john|hashcat|rcrack|w3af|aircrack-ng)\") Enterprise T1115 Clipboard Data Monitor executed commands and arguments to collect data stored in the clipboard from users copying information within or between applications. Enterprise T1651 Cloud Administration Command Monitor for suspicious command executions via cloud management services like AWS System Manager or Azure RunCommand. In Azure, usage of Azure RunCommand can be identified via the Azure Activity Logs, and additional details on the result of executed jobs are available in the C:\\Packages\\Plugins\\Microsoft.CPlat.Core.RunCommandWindows directory on Windows virtual machines.[14] Analytic 1 - Abnormal or unauthorized execution of commands/scripts on VMs index=cloud_logs sourcetype=aws:ssm OR sourcetype=azure:activity| search action IN (\"RunCommand\", \"StartSSMCommand\", \"ExecuteCommand\") Enterprise T1059 Command and Scripting Interpreter Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Analytic 1 - Suspicious script execution (sourcetype=WinEventLog:Security OR OR sourcetype=sysmon OR sourcetype=linux_secure OR sourcetype=linux_audit OR sourcetype=mac_os_log OR sourcetype=azure:audit OR sourcetype=o365:audit)| search Image IN (\"bash\", \"sh\", \"cmd\", \"powershell\", \"python\", \"java\", \"perl\", \"ruby\", \"node\", \"osascript\", \"wmic\")| eval suspicious_cmds=if(like(command_line, \"%Invoke-Obfuscation%\") OR like(command_line, \"%-EncodedCommand%\") OR like(command_line, \"%IEX%\") OR like(command_line, \"%wget%\") OR like(command_line, \"%curl%\"), \"Yes\", \"No\") .001 PowerShell If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity. It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). [15] PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.[16] An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data. PowerShell can be used over WinRM to remotely run commands on a host. When a remote PowerShell session starts, svchost.exe executes wsmprovhost.exe For this to work, certain registry keys must be set, and the WinRM service must be enabled. The PowerShell command Enter-PSSession -ComputerName \\<RemoteHost> creates a remote PowerShell session. Analytic 1 - Look for unusual PowerShell execution. sourcetype=WinEventLog:Microsoft-Windows-PowerShell/Operational| search EventCode=4104| eval suspicious_cmds=if(like(Message, \"%-EncodedCommand%\") OR like(Message, \"%Invoke-Expression%\") OR like(Message, \"%IEX%\") OR like(Message, \"%DownloadFile%\"), \"Yes\", \"No\")| where suspicious_cmds=\"Yes\" .002 AppleScript Monitor executed commands and arguments that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Analytic 1 - Look for unusual execution of AppleScript. sourcetype=macOS:Process| search process_name=\"osascript\"| eval suspicious_cmd=if(like(command_line, \"%-e%\") OR like(command_line, \"%path/to/script%\"), \"Yes\", \"No\")| where suspicious_cmd=\"Yes\" .003 Windows Command Shell Monitor executed commands and arguments that may abuse the Windows command shell for execution. Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Analytic 1 - Look for unusual command shell execution. sourcetype=WinEventLog:Security| search (EventCode=4688 OR EventCode=4689) process_name=\"cmd.exe\"| eval suspicious_cmd=if(like(command_line, \"%/c%\") OR like(command_line, \"%.bat%\") OR like(command_line, \"%.cmd%\"), \"Yes\", \"No\")| where suspicious_cmd=\"Yes\" .004 Unix Shell Monitor executed commands and arguments that may abuse Unix shell commands and scripts for execution. Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled (such as on many ESXi servers), scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Note: this analytic does not include an exhaustive list of potentially suspicious commands that could be executed through a shell interpreter. Instead, it is meant to serve as an example of types of commands that can warrant further investigation. Analytic 1 - Unusual command execution sourcetype=\"linux_logs\" CommandLine=\"sh -c\" AND (CommandLine=\"wget\" OR CommandLine=\"curl\" OR CommandLine=\"nc\" OR CommandLine=\"perl\") .005 Visual Basic Monitor executed commands and arguments that may abuse Visual Basic (VB) for execution. Analytic 1 - Look for unusual VB execution. sourcetype=wineventlog OR sourcetype=linux_secure OR sourcetype=macos_secure| search (command=\"cscript.exe\" OR command=\"wscript.exe\" OR command=\".vbs\" OR command=\".vba\" OR command=\".vbe\")| eval suspicious_cmd=if(like(command_line, \"%.vbs\" OR \"%.vba\" OR \"%.vbe\"), \"Yes\", \"No\")| where suspicious_cmd=\"Yes\" .006 Python Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor executed commands and arguments that may abuse Python commands and scripts for execution. Analytic 1 - Look for unusual Python execution. OR sourcetype=wineventlog:security OR sourcetype=sysmonEventCode=4688 OR EventCode=1 | search (process_name=\"python.exe\" OR process_name=\"python3\" OR process_name=\"python\")| eval suspicious_script=if(match(command_line, \". -c .|.exec.|.import os.|.eval.|.base64.\"), \"True\", \"False\")| where suspicious_script=\"True\"| table _time, user, host, command_line, process_name, parent_process .007 JavaScript Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source. Monitor for execution of JXA through osascript and usage of OSAScript API that may be related to other suspicious behavior occurring on the system. .008 Network Device CLI Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. [17] Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor. .009 Cloud API Consider reviewing command history in either host machines or cloud audit logs to determine if unauthorized or suspicious commands were executed. Cloud API activity logging is typically enabled by default and may be reviewed in sources like the Microsoft Unified Audit Log, AWS CloudTrail, and GCP Admin Activty logs. Review these sources for history of executed API commands. Host logs may also be reviewed to capture CLI commands or PowerShell module usage to invoke Cloud API functions. .010 AutoHotKey & AutoIT Monitor executed commands and arguments for abnormal usage of utilities and command-line arguments that may be used in support of malicious execution. Compare recent invocations of AutoIt3.exe and AutoHotkey.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). .011 Lua Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors such as using os.execute to execute operating system commands. .012 Hypervisor CLI Monitor command-line arguments made using hypervisor CLIs. Actions may be related to network and system information discovery, collection, or other post-compromise behaviors. On ESXi systems, monitor logs such as /var/log/shell.log to track executed commands.[18] Analytic 1 - Logged Shell Commands index=esxi_logs sourcetype=shell_log| rex field=_raw \"(?i)(?(esxcli|vim-cmd)\\s+[\\w-/]+)\"| search command=\"esxcli\" OR command=\"vim-cmd\"| eval suspicious=if(like(command, \"%firewall%\") OR like(command, \"%loghost%\") OR like(command, \"%vmsvc%\"), 1, 0)| stats count by command, user, host, _time, suspicious| where suspicious=1 Mobile T1623 Command and Scripting Interpreter Command-line activities can potentially be detected through Mobile Threat Defense (MTD) integrations with lower-level OS APIs. This could grant the MTD agents access to running processes and their parameters, potentially detecting unwanted or malicious shells. .001 Unix Shell Command-line activities can potentially be detected through Mobile Threat Defense (MTD) integrations with lower-level OS APIs. This could grant the MTD agents access to running processes and their parameters, potentially detecting unwanted or malicious shells. ICS T0807 Command-Line Interface On Windows and Unix systems monitor executed commands and arguments that may use shell commands for execution. Shells may be common on administrator, developer, or power user systems depending on job function. On network device and embedded system CLIs consider reviewing command history if unauthorized or suspicious commands were used to modify device configuration. Enterprise T1609 Container Administration Command Monitor command execution within containers to detect suspicious activity. Commands executed via Docker (docker exec) or Kubernetes (kubectl exec) should be captured along with relevant metadata. Analytic 1 - Unusual command executions in container services sourcetype=docker:daemon OR sourcetype=kubernetes:apiserver| search command IN (\"docker exec\", \"kubectl exec\") Enterprise T1136 Create Account Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd .001 Local Account Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add, useradd, dscl -create, esxcli system account add, and kubectl create serviceaccount. .002 Domain Account Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add /domain. Enterprise T1543 Create or Modify System Process Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. .001 Launch Agent Ensure Launch Agent's ProgramArguments key pointing to executables located in the /tmp or /shared folders are in alignment with enterprise policy. Ensure all Launch Agents with the RunAtLoad key set to true are in alignment with policy. .002 Systemd Service Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: systemctl list-units -\u2013type=service \u2013all. Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as /usr/sbin/service may reveal malicious systemd service execution. .003 Windows Service Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data. Also collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts. .004 Launch Daemon Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the RunAtLoad parameter set to true, ensure the Program parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as Program and ProgramArguments parameters but one must be present. [19] .005 Container Service Monitor for suspicious uses of the docker or podman command, such as attempts to mount the root filesystem of the host. Enterprise T1555 Credentials from Password Stores Monitor executed commands and arguments that may search for common password storage locations to obtain user credentials. Analytic 1 - Commands indicating credential searches. (index=os sourcetype IN (\"Powershell\", \"linux_secure\", \"macos_secure\") CommandLine IN (\"findstr /si password\", \"findstr /si pass\", \"grep -r password\", \"grep -r pass\", \"grep -r secret\", \"security find-generic-password\", \"security find-internet-password\", \"security dump-keychain\", \"gsettings get org.gnome.crypto.cache\", \"cat /etc/shadow\", \"strings /etc/shadow\", \"ls -al ~/.ssh/known_hosts\", \"ssh-add -L\")) .001 Keychain Monitor executed commands with arguments that may be used to collect Keychain data from a system to acquire credentials. Analytic 1 - Commands indicating credential searches in Keychain. index=security sourcetype=\"macos_secure\"(event_type=\"process\" AND (command IN (\"security dump-keychain\", \"security find-generic-password\", \"security find-internet-password\", \"security unlock-keychain\") OR command IN (\"security dump-keychain\", \"security find-generic-password\", \"security find-internet-password\", \"security unlock-keychain\"))) .002 Securityd Memory Monitor executed commands and arguments that may obtain root access (allowing them to read securityd\u2019s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user\u2019s logon keychain. Analytic 1 - Commands indicating attempts to read securityd\u2019s memory. index=security sourcetype IN (\"linux_secure\", \"macos_secure\") event_type=\"process\"(CommandLine IN (\"gcore\", \"dbxutil\", \"vmmap\", \"gdb\", \"lldb\", \"memdump\", \"strings\", \"cat /proc//maps\", \"grep /proc//maps\") OR CommandLine IN (\"security find-generic-password\", \"security find-internet-password\", \"security dump-keychain\")) .003 Credentials from Web Browsers Monitor executed commands and arguments that may acquire credentials from web browsers by reading files specific to the target browser.[20] Analytic 1 - Commands indicating credential searches in web browsers. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") event_type=\"process\"(CommandLine IN (\"sqlite3 logins\", \"CryptUnprotectData\", \"security find-internet-password\", \"sqlcipher logins\", \"strings Login Data\", \"cat Login Data\", \"cat logins.json\", \"sqlite3 signons.sqlite\")) .004 Windows Credential Manager Monitor executed commands and arguments for suspicious activity listing credentials from the Windows Credentials locker (e.g. vaultcmd /listcreds:\"Windows Credentials\").[21] Analytic 1 - Commands indicating credential searches in Windows Credential Manager. index=security sourcetype=\"Powershell\" EventCode=4104(CommandLine IN (\"vaultcmd.exe\", \"rundll32.exe keymgr.dll KRShowKeyMgr\")) .005 Password Managers Monitor executed commands and arguments that may acquire user credentials from third-party password managers. [22] Analytic 1 - Commands indicating credential searches in password managers. index=security sourcetype IN (\"linux_secure\", \"macos_secure\")(CommandLine IN (\"keepass\", \"lastpass\", \"1password\", \"bitwarden\", \"dashlane\", \"passwordsafe\", \"login\", \"vault\")) Enterprise T1485 Data Destruction Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete. Mobile T1662 Data Destruction Command-line activities can potentially be detected through Mobile Threat Defense (MTD) integrations with lower-level OS APIs. This could grant the MTD agents access to running processes and their parameters, potentially detecting file deletion processes. ICS T0809 Data Destruction Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete. Enterprise T1486 Data Encrypted for Impact Monitor executed commands and arguments for actions involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Enterprise T1005 Data from Local System Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. ICS T0893 Data from Local System Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. Enterprise T1039 Data from Network Shared Drive Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell. Enterprise T1025 Data from Removable Media Monitor executed commands and arguments for actions that could be taken to collect files from a system's connected removable media. For example, data may be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. Enterprise T1074 Data Staged Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell. .001 Local Data Staging Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell. .002 Remote Data Staging Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell. Enterprise T1622 Debugger Evasion Monitor executed commands and arguments that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required. Enterprise T1652 Device Driver Discovery Monitor executed commands (lsmod, driverquery, etc.) with arguments highlighting potentially malicious attempts to enumerate device drivers. Enterprise T1006 Direct Volume Access Monitor executed commands and arguments that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through PowerShell, additional logging of PowerShell scripts is recommended. Enterprise T1561 Disk Wipe Monitor for direct access read/write attempts using the \\\\.\\ notation.[23] Monitor for unusual kernel driver installation activity. .001 Disk Content Wipe Monitor executed commands and arguments that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources. .002 Disk Structure Wipe Monitor executed commands and arguments that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. Enterprise T1484 Domain or Tenant Policy Modification Monitor executed commands and arguments for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes Set federation settings on domain and Set domain authentication.[24][25] .001 Group Policy Modification Monitor executed commands and arguments that may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. .002 Trust Modification Monitor executed commands and arguments that updates domain authentication from Managed to Federated via ActionTypes Set federation settings on domain and Set domain authentication.[24] Monitor for PowerShell commands such as: Update-MSOLFederatedDomain \u2013DomainName: \"Federated Domain Name\", or Update-MSOLFederatedDomain \u2013DomainName: \"Federated Domain Name\" \u2013supportmultipledomain.[26] Enterprise T1482 Domain Trust Discovery Monitor executed commands and arguments for actions that could be taken to gather system and network information, such as nltest /domain_trusts. Remote access tools with built-in features may interact directly with the Windows API to gather information. Enterprise T1114 Email Collection Monitor executed processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. On Windows systems, monitor for creation of suspicious inbox rules through the use of the New-InboxRule, Set-InboxRule, New-TransportRule, and Set-TransportRule PowerShell cmdlets.[27][28] .001 Local Email Collection Monitor executed commands and arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. .002 Remote Email Collection Monitor executed commands and arguments for actions that may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. .003 Email Forwarding Rule On Windows systems, monitor for creation of suspicious inbox rules through the use of the New-InboxRule, Set-InboxRule, New-TransportRule, and Set-TransportRule PowerShell cmdlets.[27][28] Enterprise T1546 Event Triggered Execution Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. .001 Change Default File Association Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by a file type association. .002 Screensaver Monitor executed commands and arguments of .scr files. .003 Windows Management Instrumentation Event Subscription Monitor executed commands and arguments that can be used to register WMI persistence, such as the Register-WmiEvent PowerShell cmdlet [29] .004 Unix Shell Configuration Modification Monitor executed commands and arguments that may establish persistence through executing malicious commands triggered by a user\u2019s shell. .005 Trap Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by an interrupt signal. .006 LC_LOAD_DYLIB Addition Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries. .007 Netsh Helper DLL Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by Netsh Helper DLLs. .008 Accessibility Features Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of Accessibility Features. .009 AppCert DLLs Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. .010 AppInit DLLs Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. .011 Application Shimming Monitor executed commands and arguments for sdbinst.exe for potential indications of application shim abuse. .012 Image File Execution Options Injection Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. .013 PowerShell Profile Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules. .014 Emond Monitor executed commands and arguments that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). .015 Component Object Model Hijacking Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on changes to COM registry keys, including HKCU\\Software\\Classes\\CLSID*. .016 Installer Packages Monitor executed commands and arguments that may be related to abuse of installer packages, including malicious commands triggered by application installations. Enterprise T1668 Exclusive Control Monitor executed commands and arguments that may be used to modify the compromised system by, for example, self-patching[30] or disabling vulnerable services[31] in an attempt to limit subsequent exploitation of the system by additional unrelated threat actors. Enterprise T1480 Execution Guardrails Monitor executed commands and arguments that may gather information about the victim's business relationships that can be used during targeting. Detecting the use of guardrails may be difficult depending on the implementation. .001 Environmental Keying Monitor executed commands and arguments that may gather the victim's physical location(s) that can be used during targeting. Detecting the use of environmental keying may be difficult depending on the implementation. Enterprise T1048 Exfiltration Over Alternative Protocol Monitor executed commands and arguments that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. Analytic 1 - Detecting Alternative Protocol Exfiltration via Command Execution (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"scp\", \"ftp\", \"curl -d\", \"wget --post-file\", \"powershell -enc\", \"tar -cf\", \"7z a\"))| eval risk_score=case( command IN (\"scp\", \"rsync\", \"ftp\"), 9, command IN (\"tar -cf\", \"zip -r\"), 8, command IN (\"powershell -enc\", \"wget\"), 7)| where risk_score >= 8| stats count by _time, host, user, command, risk_score .001 Exfiltration Over Symmetric Encrypted Non-C2 Protocol Monitor for execution of encryption-related tools before outbound data transfer, use of symmetric encryption algorithms (AES, RC4, Blowfish) in scripts or binaries, or file encryption activity followed by network communication. Analytic 1 - Detecting Symmetric Encryption Before Exfiltration (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"openssl enc -aes-256-cbc\", \"gpg -c\", \"python -c 'import Crypto.Cipher.AES'\", \"certutil -encode\"))| eval risk_score=case( command IN (\"openssl enc -aes-256-cbc\", \"gpg -c\"), 9, command IN (\"python -c 'import Crypto.Cipher.AES'\", \"certutil -encode\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score .002 Exfiltration Over Asymmetric Encrypted Non-C2 Protocol Monitor for execution of asymmetric encryption tools (e.g., OpenSSL, GPG, SSH key exchange), processes generating RSA/ECC key pairs before outbound network activity, or file encryption activity linked to later network transmissions. Analytic 1 - Detecting Asymmetric Encryption Before Exfiltration (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"openssl rsautl -encrypt\", \"gpg --encrypt\", \"ssh-keygen -t rsa\", \"openssl pkeyutl -encrypt\"))| eval risk_score=case( command IN (\"openssl rsautl -encrypt\", \"gpg --encrypt\"), 9, command IN (\"ssh-keygen -t rsa\", \"openssl pkeyutl -encrypt\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score .003 Exfiltration Over Unencrypted Non-C2 Protocol Monitor for execution of exfiltration-related commands such as ftp, curl, scp, tftp, use of Base64 encoding, gzip, or other obfuscation before transmission, or use of CLI-based copy commands to move files to external destinations. Analytic 1 - Detecting Unencrypted Exfiltration via Command Execution (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"ftp\", \"curl -T\", \"wget --post-file\", \"scp\", \"rsync\", \"tftp\", \"base64\"))| eval risk_score=case( command IN (\"ftp\", \"scp\", \"tftp\"), 9, command IN (\"base64\", \"gzip\", \"tar\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score Enterprise T1041 Exfiltration Over C2 Channel Monitor executed commands and arguments that may steal data by exfiltrating it over an existing command and control channel. Analytic 1 - Detecting C2 Tool Execution Related to Exfiltration (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"powershell -enc\", \"python -c\", \"curl -d\", \"wget --post-file\", \"certutil -encode\", \"base64 -w 0\"))| eval risk_score=case( command IN (\"powershell -enc\", \"certutil -encode\"), 9, command IN (\"python -c\", \"curl -d\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score Enterprise T1011 Exfiltration Over Other Network Medium Monitor commands that enable alternate network interfaces (WiFi, Bluetooth, cellular), execution of utilities such as nmcli, netsh, or iwconfig that modify network settings, or unusual command-line activity related to USB tethering or VPN activation. Analytic 1 - Detecting Alternate Network Activation Commands (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"nmcli radio wifi on\", \"rfkill unblock all\", \"netsh wlan connect\", \"ifconfig wlan0 up\", \"pppd call\"))| eval risk_score=case( command IN (\"nmcli radio wifi on\", \"netsh wlan connect\"), 9, command IN (\"rfkill unblock all\", \"ifconfig wlan0 up\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score .001 Exfiltration Over Bluetooth Monitor commands enabling Bluetooth interfaces (rfkill unblock bluetooth, btmgmt power on), execution of Bluetooth file transfer utilities (bluetoothctl, l2ping, hcitool). Analytic 1 - Detecting Bluetooth Activation Commands (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"rfkill unblock bluetooth\", \"bluetoothctl power on\", \"btmgmt power on\", \"hciconfig hci0 up\"))| eval risk_score=case( command IN (\"rfkill unblock bluetooth\", \"btmgmt power on\"), 9, command IN (\"bluetoothctl power on\", \"hciconfig hci0 up\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score Enterprise T1052 Exfiltration Over Physical Medium Monitor for execution of file transfer commands (robocopy, xcopy, cp, rsync) targeting removable media, use of disk utilities (diskpart, mount, mkfs) to format or prepare devices, or PowerShell or bash scripts automating file transfers to USB devices. Analytic 1 - Detecting File Transfers to Removable Media via Command Execution (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"robocopy\", \"xcopy\", \"cp\", \"rsync\", \"mount\", \"diskutil\"))| eval risk_score=case( command IN (\"robocopy\", \"cp\", \"rsync\"), 9, command IN (\"mount\", \"diskutil\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score .001 Exfiltration over USB Monitor for execution of file transfer commands targeting USB storage (robocopy, xcopy, cp, rsync), use of disk management utilities (diskpart, mount, mkfs, fdisk), or PowerShell or Bash scripts automating USB file transfers. Analytic 1 - Detecting File Transfers to USB via Command Execution (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"robocopy\", \"xcopy\", \"cp\", \"rsync\", \"mount\", \"diskutil\", \"diskpart\"))| eval risk_score=case( command IN (\"robocopy\", \"cp\", \"rsync\"), 9, command IN (\"mount\", \"diskutil\", \"diskpart\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score Enterprise T1567 Exfiltration Over Web Service Monitor for execution of cloud storage CLI tools (e.g., AWS CLI, rclone, gdrive, azcopy, gsutil), scripts automating file transfers to cloud services, or use of PowerShell or Bash to upload files to external web services. Analytic 1 - Detecting Web Service File Upload via CLI Tools (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"rclone copy\", \"aws s3 cp\", \"gsutil cp\", \"azcopy copy\", \"curl -T\", \"wget --post-file\"))| eval risk_score=case( command IN (\"rclone copy\", \"aws s3 cp\"), 9, command IN (\"curl -T\", \"wget --post-file\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score .001 Exfiltration to Code Repository Monitor for execution of commands for repository interaction (git push, curl, gh repo create, git clone), use of API clients (e.g., curl -X POST https://api.github.com/repos/user/repo/contents/), or unusual usage of PowerShell or Bash scripts to automate repository uploads. Analytic 1 - Detecting Repository Uploads via Command Execution (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"git push\", \"gh repo create\", \"curl -X POST\", \"git clone\", \"git add\", \"git commit\"))| eval risk_score=case( command IN (\"git push\", \"gh repo create\"), 9, command IN (\"curl -X POST\", \"git commit\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score .002 Exfiltration to Cloud Storage Monitor for execution of cloud storage CLI tools (rclone, gdrive, aws s3 cp, azcopy, gsutil), use of PowerShell, Bash, or Python scripts to upload files to cloud storage, or attempts to obfuscate file uploads via scripting (e.g., Base64 encoding before upload). Analytic 1 - Detecting File Upload to Cloud Storage via CLI Tools (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"rclone copy\", \"aws s3 cp\", \"gsutil cp\", \"azcopy copy\", \"curl -T\", \"wget --post-file\"))| eval risk_score=case( command IN (\"rclone copy\", \"aws s3 cp\"), 9, command IN (\"curl -T\", \"wget --post-file\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score .004 Exfiltration Over Webhook Monitor executed commands and arguments that may exfiltrate data to a webhook as a malicious command and control channel. Additionally, monitor commands that may create new webhook configurations in SaaS services - for example, gh webhook forward in Github or mgc subscriptions create in Office 365.[32][33] Analytic 1 - Detecting Webhook Data Exfiltration via CLI Tools (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (command IN (\"curl -X POST\", \"Invoke-WebRequest\", \"wget --post-data\", \"python -c 'import requests'\"))| eval risk_score=case( command IN (\"curl -X POST\", \"Invoke-WebRequest\"), 9, command IN (\"wget --post-data\", \"python -c 'import requests'\"), 8)| where risk_score >= 8| stats count by _time, host, user, command, risk_score Enterprise T1083 File and Directory Discovery Monitor executed commands and arguments that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. On ESXi servers, monitor for commands that leverage tools like grep and find to search for files with VM extensions such as vmdk, or in VM-related paths such as /vmfs/*.[34][35][36] Enterprise T1222 File and Directory Permissions Modification Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. .001 Windows File and Directory Permissions Modification Monitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs. .002 Linux and Mac File and Directory Permissions Modification Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include chmod +x, chmod -R 755, and chmod 777.[37] ICS T0823 Graphical User Interface Monitor executed commands and arguments related to services specifically designed to accept remote graphical connections, such as RDP and VNC. Remote Services and Valid Accounts may be used to access a host\u2019s GUI. Enterprise T1615 Group Policy Discovery Monitor for suspicious use of gpresult. Monitor for the use of PowerShell functions such as Get-DomainGPO and Get-DomainGPOLocalGroup and processes spawning with command-line arguments containing GPOLocalGroup. Enterprise T1564 Hide Artifacts Monitor executed commands and arguments that may attempt to hide artifacts associated with their behaviors to evade detection. .001 Hidden Files and Directories Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute. .002 Hidden Users Monitor executed commands and arguments that could be taken to add a new user and subsequently hide it from login screens. .003 Hidden Window Monitor executed commands and arguments that may use hidden windows to conceal malicious activity from the plain sight of users. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. .004 NTFS File Attributes The Streams tool of Sysinternals can be used to uncover files with ADSs. The dir /r command can also be used to display ADSs. [38] Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a -stream parameter to interact with ADSs. [39] [40] .006 Run Virtual Instance Consider monitoring for commands and arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. -silent, -ignore-reboot), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. VBoxManage startvm $VM --type headless).[41] Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. VBoxManage.exe setextradata global GUI/SuppressMessages \"all\"). Monitor for commands which enable hypervisors such as Hyper-V. On ESXi servers, monitor for unsusual use of the /bin/vmx utility. .008 Email Hiding Rules On Windows and Exchange systems, monitor for creation or modification of suspicious inbox rules through the use of the New-InboxRule, Set-InboxRule, New-TransportRule, and Set-TransportRule PowerShell cmdlets.[27][28][42] .009 Resource Forking Monitor executed commands and arguments that are leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections. .011 Ignore Process Interrupts Monitor executed commands and arguments, such as nohup, that may attempt to hide processes from interrupt signals. .013 Bind Mounts Configure auditd rules to monitor use of the /bin/mount command, especially with relation to the /proc directory. Analytic 1 - Use of Mount with bind arguments targeting /proc/ paths index=linux_logs source=\"/var/log/audit/audit.log\"| eval syscall=coalesce(syscall, \"unknown\"), exe=coalesce(exe, \"unknown\")| search syscall=\"mount\" exe=\"/bin/mount\" (msg=\"bind\" OR msg=\"bind,rw\")| rex field=msg \"a0=\\\"(?[^\\\"]+)\\\" a1=\\\"(?[^\\\"]+)\\\"\"| where like(source_path, \"/proc/%\") AND like(target_path, \"/proc/%\")| eval is_suspicious=if(match(target_path, \"/proc/[1-9][0-9]*\") AND NOT cidrmatch(source_path, target_path), 1, 0)| stats count by exe, source_path, target_path, uid, pid, is_suspicious| where is_suspicious=1 .014 Extended Attributes Monitor for execution of xattr or getfattr used to read extended attributes, immediately followed by interpreters or loaders (e.g., bash, python, perl, sh, base64) that appear to consume the output. In some cases, setfattr is used to modify the extended attributes. Enterprise T1574 Hijack Execution Flow Monitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs. .006 Dynamic Linker Hijacking Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS. .011 Services Registry Permissions Weakness Monitor for the execution of commands and arguments that can be used for adversaries to modify services' registry keys and values through applications such as Windows Management Instrumentation and PowerShell. Additional logging may need to be configured to gather the appropriate data. .012 COR_PROFILER Extra scrutiny should be placed on suspicious modification of Registry keys such as COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH by command line tools like wmic.exe, setx.exe, and Reg. Monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. Enterprise T1562 Impair Defenses Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. .001 Disable or Modify Tools Monitor for the execution of commands and arguments associated with disabling or modification of security software processes or services such as Set-MpPreference-DisableScriptScanning 1 in Windows,sudo spctl --master-disable in macOS, and setenforce 0 in Linux. Furthermore, on Windows monitor for the execution of taskkill.exe or Net Stop commands which may deactivate antivirus software and other security systems. .002 Disable Windows Event Logging Monitor executed commands and arguments for commands that can be used to disable logging. For example, Wevtutil, auditpol, sc stop EventLog, reg add, Set- or Stop-Service, Set- or New-ItemProperty, sc config, and offensive tooling (such as Mimikatz and Invoke-Phant0m) may be used to clear logs and/or change the EventLog/audit policy.[43][44][45] .003 Impair Command History Logging Correlating a user session with a distinct lack of new commands in their .bash_history can be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with -HistorySaveStyle SaveNothing command-line arguments and use of the PowerShell commands Set-PSReadlineOption -HistorySaveStyle SaveNothing and Set-PSReadLineOption -HistorySavePath {File Path}. For network devices, monitor for missing or inconsistencies in Network Device CLI logging present in AAA logs as well as in specific RADIUS and TACAS+ logs. .004 Disable or Modify System Firewall Monitor executed commands and arguments associated with disabling or the modification of system firewalls such as netsh advfirewall firewall set rule group=\"file and printer sharing\" new enable=Yes,ufw disable, and ufw logging off. On ESXi hosts, monitor for commands such as esxcli network firewall set \u2013enabled=false or esxcli network firewall ruleset set --ruleset-id=<rulename> --enabled=true.[46] .006 Indicator Blocking Monitor executed commands and arguments that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. Adversaries may attempt to evade system defenses by unloading minifilter drivers used by host-based sensors such as Sysmon through the use of the fltmc command-line utility. Accordingly, this analytic looks for command-line invocations of this utility when used to unload minifilter drivers. .009 Safe Mode Boot Monitor executed commands and arguments associated with making configuration changes to boot settings, such as bcdedit.exe and bootcfg.exe.[47][48][49] .010 Downgrade Attack Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: powershell \u2013v 2). Also monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. .012 Disable or Modify Linux Audit System Command-line invocation of the auditctl utility may be unusual, depending on how systems are typically used in a particular environment. At runtime, look for commands to modify or create rules using the auditctl utility. Enterprise T1070 Indicator Removal Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. .001 Clear Windows Event Logs Monitor executed commands and arguments for actions that would delete Windows event logs (via PowerShell) such as Remove-EventLog -LogName Security. Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on attempts to Clear Windows Event Logs. In particular, Powershell has a built-in Clear-EventLog cmdlet that allows for a specified log to be cleared. .002 Clear Linux or Mac System Logs Monitor executed commands and arguments for actions that could be taken to remove or overwrite system logs. .003 Clear Command History Monitor executed commands and arguments for actions that could be taken to clear command history, such as Clear-History on Windows or clear logging / clear history via a Network Device CLI in AAA logs, or to disable writing command history, such as history -c in bash/zsh . Analytic 1 - Powershell Commands (source=\"WinEventLog:Microsoft-Windows-Powershell/Operational\" EventCode=\"4103\") (CommandLine=\"Clear-History\" OR (CommandLine=\"Remove-Item\" AND CommandLine=\"ConsoleHost_history.text*\")) .004 File Deletion Monitor executed commands and arguments for actions that could be utilized to unlink, rename, or delete files. .005 Network Share Connection Removal Monitor executed commands and arguments of net use commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares. .006 Timestomp Monitor executed commands and arguments for actions that could be taken to alter generated artifacts on a host system (e.g., Timestomp.exe, SetMace.exe, touch -a -m -t, touch -r).[50] .007 Clear Network Connection History and Configurations Monitor executed commands and arguments that may delete or alter malicious network configuration settings as well as generated artifacts on a host system, including logs and files such as Default.rdp or /var/log/. .008 Clear Mailbox Data Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined emails. In Exchange environments, monitor for PowerShell cmdlets that may create or alter transport rules, such as New-TransportRule and Set-TransportRule.[28] .009 Clear Persistence Monitor executed commands and arguments that may delete or alter generated artifacts associated with persistence on a host system. ICS T0872 Indicator Removal on Host Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Enterprise T1202 Indirect Command Execution Monitor executed commands and arguments to bypass security restrictions that limit the use of command-line interpreters. Look for suspicious command-line arguments, such as ssh.exe used with the ProxyCommand or LocalCommand options. Enterprise T1105 Ingress Tool Transfer Monitor executed commands and arguments for suspicious activity associated with downloading external content. Enterprise T1490 Inhibit System Recovery Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit. Enterprise T1056 Input Capture Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS. .002 GUI Input Capture Monitor executed commands and arguments, such as requests for credentials and/or strings related to creating password prompts that may be malicious.[51] .004 Credential API Hooking Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS. Enterprise T1570 Lateral Tool Transfer Monitor executed commands and arguments for actions for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files ICS T0867 Lateral Tool Transfer Monitor executed commands and arguments for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files. Enterprise T1654 Log Enumeration Monitor for the use of commands and arguments of utilities and other tools used to access and export logs. Enterprise T1036 Masquerading Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. [52] Note: For Windows, Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential Masquerading. .003 Rename Legitimate Utilities Monitor executed commands and arguments that may rename legitimate / system utilities to try to evade security mechanisms concerning the usage of those utilities. .004 Masquerade Task or Service Monitor executed commands and arguments that may attempt to manipulate the name of a task or service to make it appear legitimate or benign. .008 Masquerade File Type Monitor for abnormal command execution from otherwise non-executable file types (such as .txt and .jpg). ICS T0849 Masquerading Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.[52] Enterprise T1556 .005 Modify Authentication Process: Reversible Encryption Monitor command-line usage for -AllowReversiblePasswordEncryption $true or other actions that could be related to malicious tampering of user settings (i.e. Group Policy Modification). Analytic 1 - Command-line actions indicating changes to encryption settings. index=security (sourcetype=\"WinEventLog:Security\" OR sourcetype=\"powershell\")(EventCode=4688 OR EventCode=4104) commandline=\"set-aduser\" commandline=\"allowreversiblepasswordencryption\" | table _time, Process_ID, User, CommandLine Enterprise T1112 Modify Registry Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis. ICS T0840 Network Connection Enumeration Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Also monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. Enterprise T1046 Network Service Discovery Monitor executed commands and arguments that may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Enterprise T1135 Network Share Discovery Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Enterprise T1040 Network Sniffing Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network. Analytic 1 - Unexpected command execution of network sniffing tools. index=security (sourcetype=\"Powershell\" EventCode=4104) | eval CommandLine=coalesce(Command_Line, CommandLine)| where ExecutingProcess IN (\"tshark.exe\", \"windump.exe\", \"tcpdump.exe\", \"wprui.exe\", \"*wpr.exe\") ICS T0842 Network Sniffing Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment. Enterprise T1027 Obfuscated Files or Information Monitor executed commands and arguments for indicators of obfuscation and potentially suspicious syntax such as uninterpreted escape characters (e.g., ^). Also monitor command-lines for syntax-specific signs of obfuscation, such as variations of arguments associated with encoding. .004 Compile After Delivery Monitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. .010 Command Obfuscation Monitor executed commands and arguments for indicators of obfuscation and potentially suspicious syntax such as uninterpreted escape characters (e.g., ^). Also monitor command-lines for syntax-specific signs of obfuscation, such as variations of arguments associated with encoding. Enterprise T1137 Office Application Startup Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.[53] SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[54] .001 Office Template Macros Monitor executed commands and arguments that may abuse Microsoft Office templates to obtain persistence on a compromised system. .002 Office Test Monitor executed commands and arguments that may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. .003 Outlook Forms Monitor executed commands and arguments that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.[53] .004 Outlook Home Page Monitor executed commands and arguments that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.[53] .005 Outlook Rules Monitor executed commands and arguments that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.[53] This PowerShell script is ineffective in gathering rules with modified PR_RULE_MSG_NAME and PR_RULE_MSG_PROVIDER properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.[55] .006 Add-ins Monitor executed commands and arguments that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Enterprise T1003 OS Credential Dumping Monitor executed commands and arguments that may attempt to dump credentials using tools like Mimikatz, ProcDump, NTDSUtil, or accessing /proc, /etc/passwd, and /etc/shadow. Analytic 1 - Suspicious command execution involving credential dumping tools.(index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 Image IN (\"mimikatz.exe\", \"procdump.exe\", \"ntdsutil.exe\", \"powershell.exe\") CommandLine IN (\"Invoke-Mimikatz\", \"Invoke-CachedCredentials\", \"Invoke-LSADump\", \"Invoke-SAMDump\"))OR(index=security sourcetype=\"linux_secure\" Command IN (\"cat /etc/passwd\", \"cat /etc/shadow\", \"grep -E '^[0-9a-f-] r' /proc//maps\"))OR(index=security sourcetype=\"macOS:UnifiedLog\" process IN (\"cat\", \"grep\") message IN (\"/etc/passwd\", \"/etc/shadow\", \"/var/db/shadow/hash/*\", \"/private/etc/master.passwd\")) .001 LSASS Memory Monitor executed commands and arguments that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[56] which may require additional logging features to be configured in the operating system to collect necessary information for analysis. Note: Event ID 4104 from the \"Microsoft-Windows-PowerShell/Operational\" log captures Powershell script blocks, whose contents can be further analyzed to determine if they\u2019re performing LSASS dumping. Analytic 1 - Unauthorized command execution of LSASS memory. index=security sourcetype=\"Powershell\" EventCode=4104Image=\"powershell.exe\" CommandLine IN (\"Invoke-Mimikatz\", \"procdump.exe -ma lsass\", \"rundll32.exe comsvcs.dll, MiniDump\", \"taskmgr.exe* /dump\") .002 Security Account Manager Monitor executed commands and arguments that may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. Analytic 1 - Unauthorized attempts to dump SAM database through command execution. index=security sourcetype=\"Powershell\" EventCode=4104 Image=\"powershell.exe\" CommandLine IN (\"Invoke-Mimikatz\", \"Invoke-SAMDump\", \"reg save hklm\\sam\", \"reg.exe save hklm\\sam*\") .003 NTDS Monitor executed commands and arguments that may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. Look for command-lines that invoke attempts to access or copy the NTDS.dit. Note: Events 4688 (Microsoft Windows Security Auditing) and 1 (Microsoft Windows Sysmon) provide context of commands and parameters being executed via creation of a new process. Event 800 (PowerShell) provides context of commands and parameters being executed via PowerShell. This detection is based on known Windows utilities commands and parameters that can be used to copy the ntds.dit file. It is recommended to keep the list of commands and parameters up to date. Analytic 1 - Command line attempt to access or create a copy of ntds.dit file ((sourcetype=\"WinEventLog:Microsoft-Windows-Powershell/Operational\" EventCode=\"800\") AND((CommandLine LIKE \"%ntds%\" AND CommandLine LIKE \"%ntdsutil%\" AND CommandLine LIKE \"%create%\") OR (CommandLine LIKE \"%vssadmin%\" AND CommandLine LIKE \"%create%\" AND CommandLine LIKE \"%shadow%\") OR (CommandLine LIKE \"%copy%\" AND CommandLine LIKE \"%ntds.dit%\"))) .004 LSA Secrets Monitor executed commands and arguments that may access to a host may attempt to access Local Security Authority (LSA) secrets. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[56] which may require additional logging features to be configured in the operating system to collect necessary information for analysis. Analytic 1 - Suspicious access to LSA secrets. index=security (sourcetype=\"Powershell\" EventCode=4104) Image=\"powershell.exe\" CommandLine IN (\"Invoke-Mimikatz\", \"Invoke-LSADump*\") .005 Cached Domain Credentials Monitor executed commands and arguments that may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.[57]. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,[56] which may require additional logging features to be configured in the operating system to collect necessary information for analysis.Detection of compromised Valid Accounts in-use by adversaries may help as well. Analytic 1 - Unusual access to cached domain credentials. (index=security sourcetype=\"Powershell\" EventCode=4104 Image=\"powershell.exe\" CommandLine IN (\"Invoke-Mimikatz\", \"Invoke-CachedCredentials\"))OR(index=security sourcetype=\"linux_secure\" (cmd IN (\"mimikatz\", \"cachedump*\"))) .007 Proc Filesystem Monitor executed commands and arguments that may gather credentials from information stored in the Proc filesystem or /proc. For instance, adversaries may use regex patterns to search for process memory that may be exfiltrated or searched for credentials.[58][59] grep -E \"^[0-9a-f-]* r\" /proc/\"$pid\"/maps | grep -E 'heap|stack' | cut -d' ' -f 1 grep -E \"^[0-9a-f-]* r\" /proc/\"$PID\"/maps | grep heap | cut -d' ' -f 1 Analytic 1 - Unexpected access to /proc filesystem. index=os sourcetype=\"linux_audit\" command IN (\"grep -E '^[0-9a-f-] r' /proc//maps\", \"cat /proc//maps\", \"awk '{print $1}' /proc//maps\") .008 /etc/passwd and /etc/shadow Monitor executed commands and arguments that may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking. Analytic 1 - Unexpected command execution involving /etc/passwd and /etc/shadow. index=os sourcetype=\"linux_audit\" command IN (\"cat /etc/passwd\", \"cat /etc/shadow\", \"grep /etc/passwd\", \"grep /etc/shadow\") | eval Command=command | eval TargetFile=case(match(Command, \".passwd.\"), \"/etc/passwd\", match(Command, \".shadow.\"), \"/etc/shadow\") Enterprise T1201 Password Policy Discovery Monitor executed commands and arguments for actions that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. Enterprise T1120 Peripheral Device Discovery Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system. Enterprise T1069 Permission Groups Discovery Monitor executed commands and arguments acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. .001 Local Groups Monitor for executed commands and arguments that may attempt to find local system groups and permission settings. .002 Domain Groups Monitor for executed commands and arguments that may attempt to find domain-level groups and permission settings. .003 Cloud Groups Monitor for executed commands and arguments that may attempt to find cloud groups and permission settings. Enterprise T1647 Plist File Modification Monitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in \\~/LaunchAgents, \\~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm, and an application's Info.plist. Enterprise T1653 Power Settings Monitor and inspect commands and arguments associated with manipulating the power settings of a system. Enterprise T1542 Pre-OS Boot Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. .005 TFTP Boot Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. Enterprise T1057 Process Discovery Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system. Enterprise T1012 Query Registry Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software. Note: For PowerShell Module logging event id 4103, enable logging for module Microsoft.PowerShell.Management. The New-PSDrive PowerShell cmdlet creates temporary and persistent drives that are mapped to or associated with a location in a data store, such a registry key (PSProvider \"Registry\"). The the Get-ChildItem gets the items in one or more specified locations. By using both, you can enumerate COM objects in one or more specified locations. Analytic 1 - Suspicious Commands (sourcetype=\"WinEventLog:Microsoft-Windows-Powershell/Operational\" EventCode=\"4103\") | WHERE CommandLine LIKE \"%New-PSDrive%\" AND (CommandLine LIKE \"%Registry%\" OR CommandLine LIKE \"%HKEY_CLASSES_ROOT%\" OR CommandLine LIKE \"%HKCR%\") Enterprise T1563 Remote Service Session Hijacking Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment. (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")| search (command_line=\"attach-session\" OR command_line=\"tmux attach\" OR command_line=\"screen -r\" OR command_line=\"rdpwrap\")| stats count by user, host, parent_process_name, process_name, command_line, _time| eval hijacking_attempt=if(count > threshold OR match(command_line, \"attach|hijack|reconnect\"), \"suspicious\", \"normal\")| where hijacking_attempt=\"suspicious\" .001 SSH Hijacking Monitor executed commands and arguments that may hijack a legitimate user's SSH session to move laterally within an environment. sourcetype IN (\"linux_secure\", \"macos_secure\")| search (command_line=\"ssh\" OR command_line=\"ssh-agent\" OR command_line=\"ssh-add\")| stats count by user, host, parent_process_name, process_name, command_line, _time| eval hijacking_attempt=if(match(command_line, \"agent|socket|hijack\"), \"suspicious\", \"normal\")| where hijacking_attempt=\"suspicious\" .002 RDP Hijacking monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to detect RDP session hijacking. Windows PowerShell log Event ID 4104 (PS script execution) can be used to capture PowerShell script block contents which may contain commands used as a precursor to RDP hijacking. For example, the following command in a PowerShell script block may be used to enumerate the systems on a network which have RDP access: Find-DomainLocalGroupMember -GroupName \"Remote Desktop Users\" | select -expand ComputerName. Enterprise T1021 Remote Services Monitor executed commands and arguments that may use Valid Accounts to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user. Analytic 1 - Detect adversary commands executed via remote sessions. index=* (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" OR sourcetype=\"/var/log/auth.log\") AND (EventCode= 1 OR EventCode=sshd)| search parent_process_name=\"sshd\" OR parent_process_name=\"mstsc.exe\" OR parent_process_name=\"rdpclip.exe\"| eval suspicious_command=case( match(command_line, \"net user|powershell|/etc/passwd|nc|curl|socat\"), \"high\", match(command_line, \"whoami|ls|dir|pwd\"), \"low\", true(), \"normal\" )| stats count by host, process_name, command_line, suspicious_command, _time| where count > threshold AND suspicious_command=\"high\"| table _time, host, process_name, command_line, suspicious_command .002 SMB/Windows Admin Shares Monitor executed commands and arguments that connect to remote shares, such as Net, on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.[60] sourcetype=\"WinEventLog:Security\" EventCode=4688| search ParentImage IN (\"cmd.exe\", \"powershell.exe\") CommandLine IN (\"net use\", \"net share\")| stats count by Account_Name, CommandLine, ParentImage, dest, src_ip, _time| eval suspicious_command=if(count > threshold, \"high\", \"normal\")| where suspicious_command=\"high\"| table _time, Account_Name, CommandLine, ParentImage, dest, src_ip, suspicious_command .006 Windows Remote Management Monitor executed commands and arguments that may invoke a WinRM script to correlate it with other related events.[61] sourcetype=\"WinEventLog:Security\" EventCode=4688| search ParentImage=\"winrm\" OR ParentImage=\"powershell\"| stats count by AccountName, NewProcessName, CommandLine, ParentProcessName, _time| where count > 1| eval suspicious=if(match(CommandLine, \"(Invoke-Command|Invoke-Expression|Base64EncodedPayload)\"), \"suspicious\", \"normal\")| where suspicious=\"suspicious\"| table _time, AccountName, NewProcessName, CommandLine, ParentProcessName, suspicious ICS T0886 Remote Services Monitor executed commands and arguments to services specifically designed to accept remote connections, such as RDP, Telnet, SSH, and VNC. The adversary may then perform these actions using Valid Accounts. Enterprise T1018 Remote System Discovery Monitor executed commands and arguments that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. Windows PowerShell log Event ID 4104 (PS script execution) can be used to capture PowerShell script block contents which may contain commands used as a precursor to RDP Hijacking. For example, the following command in a PowerShell script block may be used to enumerate the systems on a network which have RDP access: Find-DomainLocalGroupMember -GroupName \"Remote Desktop Users\" | select -expand ComputerName. Enterprise T1496 Resource Hijacking Monitor executed commands and arguments that may indicate common cryptomining or proxyware functionality. .001 Compute Hijacking Monitor executed commands and arguments that may indicate common cryptomining functionality. .002 Bandwidth Hijacking Monitor executed commands and arguments that may indicate common proxyware functionality. Enterprise T1053 Scheduled Task/Job Monitor executed commands and arguments that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Analytic 1 - Look for task scheduling commands being executed with unusual parameters. index=security (sourcetype=\"WinEventLog:Security\" OR sourcetype=\"linux_secure\" OR sourcetype=\"macos_secure\" OR sourcetype=\"container_logs\")| eval CommandLine = coalesce(CommandLine, process)| where (sourcetype=\"WinEventLog:Security\" AND EventCode IN (4697, 4702, 4698)) OR (sourcetype=\"linux_secure\" AND CommandLine LIKE \"%cron%\" OR CommandLine LIKE \"%at%\") OR (sourcetype=\"macos_secure\" AND CommandLine LIKE \"%launchctl%\" OR CommandLine LIKE \"%cron%\") OR (sourcetype=\"container_logs\" AND (CommandLine LIKE \"%cron%\" OR CommandLine LIKE \"%at%\"))| where (sourcetype=\"WinEventLog:Security\" AND (CommandLine LIKE \"%/create%\" OR CommandLine LIKE \"%/delete%\" OR CommandLine LIKE \"%/change%\")) OR (sourcetype=\"linux_secure\" AND (CommandLine LIKE \"%-f%\" OR CommandLine LIKE \"%-m%\" OR CommandLine LIKE \"%--env%\")) OR (sourcetype=\"macos_secure\" AND (CommandLine LIKE \"%/Library/LaunchDaemons%\" OR CommandLine LIKE \"%/Library/LaunchAgents%\" OR CommandLine LIKE \"%/System/Library/LaunchDaemons%\" OR CommandLine LIKE \"%/System/Library/LaunchAgents%\")) OR (sourcetype=\"container_logs\" AND (CommandLine LIKE \"%-f%\" OR CommandLine LIKE \"%--schedule%\" OR CommandLine LIKE \"%--env%\")) .002 At Monitor executed commands and arguments for actions that could be taken to create/modify tasks. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data. Analytic 1 - Linux Command Execution index=linux_logs sourcetype=syslog \"at\" | rex \"user=(?\\w+)\" Analytic 2 - Windows Command Execution index=windows_logs sourcetype=WinEventLog:System EventCode=4698 TaskName=\"at*\"| where NOT (user=\"SYSTEM\" AND TaskName=\"\\Microsoft\\Windows\\Defrag\\ScheduledDefrag\") .003 Cron Monitor execution of commands related to cron that are out of alignment with known software or administrative tasks. Monitor executed atq command and ensure IP addresses stored in the SSH_CONNECTION and SSH_CLIENT variables, machines that created the jobs, are trusted hosts. All at jobs are stored in /var/spool/cron/atjobs/. Analytic 1 - Suspicious Cron execution index=linux_logs sourcetype=cron_logs | search \"cron\" AND (command=\"crontab -e\" OR command=\"crontab -l\" OR command=\" * * * \" OR command=\"/cron.d/\") .005 Scheduled Task Monitor for commands being executed via schtasks or other utilities related to task scheduling. Analytic 1 - Look for schtasks.exe execution with arguments indicative of task creation/modification. sourcetype=WinEventLog:Powershell (EventCode=4104 OR command=\"schtasks.exe\")| stats count by user host process_name command_line| where Image=\"schtasks.exe\" OR command_line=\"schtasks\" .006 Systemd Timers Monitor executed commands and arguments the 'systemd-run' utility as it may be used to create timers. Analytic 1 - Look for systemd-run execution with arguments indicative of timer creation. sourcetype=linux_logs (command=\"systemctl\" OR command=\"systemd-run\") Enterprise T1113 Screen Capture Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation. ICS T0852 Screen Capture Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation. ICS T0853 Scripting Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Enterprise T1505 Server Software Component Monitor command-line arguments that may involve installing new server software components. .004 IIS Components Monitor execution and command-line arguments of AppCmd.exe, which may be abused to install malicious IIS modules.[62][63][64] .005 Terminal Services DLL Monitor executed commands and arguments for potential adversary actions to modify Registry values (ex: reg.exe) or modify/replace the legitimate termsrv.dll. .006 vSphere Installation Bundles Monitor command-line arguments that may involve installing new VIBs, such as esxcli software vib install. Especially track suspicious installation parameters, such as the --force flag.[65] Analytic 1 - Detect VIB installation sourcetype=\"shell_log\"\"esxcli software vib install\" OR \"acceptance set\"| rex field=_raw \"esxcli software vib install\\s+(?--[^\\s]+)\"| table _time, host, user, flags, _raw| sort by _time desc Enterprise T1489 Service Stop Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users. On ESXi servers, monitor for suspicious commands that terminate VMs, such as esxcli vm process kill, pkill \u20139 vmx-*, or vim-cmd vmsvc/power.off.[36][66][67] ICS T0881 Service Stop Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users. Enterprise T1518 Software Discovery Monitor executed commands and arguments that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. .001 Security Software Discovery Monitor executed commands and arguments that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. Note: For Windows, Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on potential Security Software Discovery. Enterprise T1176 Software Extensions Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration. .001 Browser Extensions Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration. Analytic 1 - Look for command-line activity tied to mobileconfig or extension deployment sourctype=WinEventLog:Sysmon EventCode=1(CommandLine=\"profiles install\" OR CommandLine=\".mobileconfig\" OR CommandLine=\"chrome-extension\")| stats count by CommandLine, Image, ParentImage, User, Computer, _time| sort -_time Enterprise T1649 Steal or Forge Authentication Certificates Monitor for the execution of commands and other utilities abused to forge and/or steal certificates and related private keys.[68] Enterprise T1558 Steal or Forge Kerberos Tickets Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable Pass the Ticket. Enterprise T1553 Subvert Trust Controls Command monitoring may reveal malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files. .001 Gatekeeper Bypass Monitor and investigate attempts to modify extended file attributes with utilities such as xattr. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. .004 Install Root Certificate Monitor for commands, such as security add-trusted-cert (macOS) or certutil -addstore (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. [69] Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl. [69] The Sysinternals Sigcheck utility can also be used (sigcheck[64].exe -tuv) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. [70] .006 Code Signing Policy Modification Monitor for the execution of commands that could modify the code signing policy of a system, such as bcdedit.exe -set TESTSIGNING ON. [71] Enterprise T1218 System Binary Proxy Execution Monitor executed commands and arguments that may forge credential materials that can be used to gain access to web applications or Internet services. .001 Compiled HTML File Monitor executed commands and arguments that may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.[72] .002 Control Panel When executed from the command line or clicked, control.exe will execute the CPL file (ex: control.exe file.cpl) before Rundll32 is used to call the CPL's API functions (ex: rundll32.exe shell32.dll,Control_RunDLL file.cpl). CPL files can be executed directly via the CPL API function with just the latter Rundll32 command, which may bypass detections and/or execution filters for control.exe.[73] .003 CMSTP Monitor executed commands and arguments that may gather information about the victim's hosts that can be used during targeting. Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of CMSTP. .004 InstallUtil Monitor executed commands and arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed. .005 Mshta Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed. .007 Msiexec Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed. .008 Odbcconf Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded. .009 Regsvcs/Regasm Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed. .010 Regsvr32 Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. [74] .011 Rundll32 Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Typical command-line usage of rundll32.exe is \"rundll32.exe DllFile,EntryPoint\" where DllFile is the name of the DLL file being called and EntryPoint the name of the entry point in the DLL file. DLLs stored on SMB shares can similarly be called using the syntax of \"rundll32.exe \\\\DllFile,EntryPoint\" where is the IPv4 address of the host of the SMB share. Rundll32 can also be used to execute arbitrary Javascript using the syntax \"rundll32.exe javascript:<code_block>\"where <code_block> is a string defining the Javascript code to be executed. .012 Verclsid Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed. .013 Mavinject Adversaries may rename abusable binaries to evade detections, but the argument INJECTRUNNING is required for mavinject.exe to perform Dynamic-link Library Injection and may therefore be monitored to alert malicious activity. .014 MMC Monitor executed commands and arguments that may gather information about the victim's DNS that can be used during targeting. .015 Electron Applications Monitor executed commands and arguments that may abuse Electron apps to execute malicious content. For example, analyze commands invoking teams.exe or chrome.exe to execute malicious or abnormal content. ICS T0894 System Binary Proxy Execution Monitor executed commands and associated arguments for application programs which support executing custom code, scripts, commands, or executables. Enterprise T1082 System Information Discovery Monitor executed commands and arguments that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. On ESXi servers, monitor discovery commands in the /var/log/shell.log history file. Enterprise T1614 System Location Discovery Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host. .001 System Language Discovery Monitor executed commands and arguments that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. Enterprise T1016 System Network Configuration Discovery Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. .001 Internet Connection Discovery Monitor executed commands and arguments that may check for Internet connectivity on compromised systems. .002 Wi-Fi Discovery Monitor executed commands and arguments that may collect Wi-Fi information on compromised systems. Enterprise T1049 System Network Connections Discovery Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. Enterprise T1033 System Owner/User Discovery Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, [56] which may require additional logging features to be configured in the operating system to collect necessary information for analysis. Note: Event ID 4104 (from the Microsoft-Windows-Powershell/Operational log) captures Powershell script blocks, which can be analyzed and used to detect on abuse of CMSTP. Enterprise T1216 System Script Proxy Execution Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files. .001 PubPrn Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files. .002 SyncAppvPublishingServer Monitor executed commands and arguments for scripts like Syncappvpublishingserver.vbs that may be used to proxy execution of malicious files. Enterprise T1007 System Service Discovery Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. Enterprise T1569 System Services Monitor command-line invocations for tools capable of creating or modifying system services (e.g., systemctl on Linux, sc.exe on Windows, launchctl on macOS). Analytic 1 - Unusual service modification tools. sourcetype=command_logs| search command IN (\"systemctl\", \"sc\", \"launchctl\") .001 Launchctl Monitor the execution of the launchctl command, focusing on subcommands such as load, unload, and start that may be used by adversaries to load Launch Agents or Launch Daemons. Note: This analytic monitors the execution of the launchctl command and its key subcommands. Exclude known administrative users to minimize false positives. Analytic 1 - Suspicious Launchctl sourcetype=macOS:unified OR sourcetype=osquery OR sourcetype=auditd| search command IN (\"launchctl load\", \"launchctl unload\", \"launchctl start\") .002 Service Execution Monitor executed commands and arguments that may abuse the Windows service control manager to execute malicious commands or payloads. Analytic 1- Commands abusing Windows service control manager. sourcetype=WinEventLog:Security OR sourcetype=Powershell OR sourcetype=Sysmon EventCode IN (1,4688,4104) | search command_line IN (\"sc.exe\", \"net start\", \"net stop\", \"psexec.exe\")| where user!=\"SYSTEM\" // Exclude common system-level activities .003 Systemctl Monitor the execution of the systemctl command, focusing on subcommands such as start and enable, that may be used by adversaries to load system services. Analytic 1 - Suspicious command execution of systemctl sourcetype=auditd OR sourcetype=sysmon_linux(command=\"systemctl\" AND (command=\"start\" OR command=\"enable\"))| stats count by host, user, command, parent_process, _time| where user!=\"root\" AND NOT match(command, \"expected_service\")| sort -_time Enterprise T1529 System Shutdown/Reboot Monitor executed commands and arguments of binaries involved in shutting down or rebooting systems. For network devices, monitor executed commands in AAA logs, especially those run by unexpected or unauthorized users. On ESXi servers, monitor for suspicious commands that terminate VMs, such as esxcli vm process kill, pkill \u20139 vmx-*, or vim-cmd vmsvc/power.off.[36][66][67] Enterprise T1124 System Time Discovery Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system. Enterprise T1127 Trusted Developer Utilities Proxy Execution Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed. .001 MSBuild Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed. .002 ClickOnce When executed from the command line, rundll32 is used to call the ClickOnce API functions (ex: rundll32.exe dfshim.dll,ShOpenVerbApplication file.appref-ms). Enterprise T1552 Unsecured Credentials While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See Valid Accounts for more information. Analytic 1 - Suspicious commands or regular expressions indicating credential search. (index=security sourcetype=\"Powershell\" EventCode=4104) OR(index=os sourcetype=\"linux_secure\" action=\"execve\") OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\") | where match(CommandLine, \"(?i)(password|credential|secret|key|token|login|passwd|passphrase)\") .001 Credentials In Files Monitor executed commands and arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). Analytic 1 - Commands indicating credential searches in files. (index=security sourcetype=\"Powershell\" EventCode=4104 CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=os sourcetype=\"linux_audit\" action=\"execve\" CommandLine=\"password\" OR CommandLine=\"credential\" OR CommandLine=\"passwd\" OR CommandLine=\"secret\") OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\" CommandLine=\"password\" OR CommandLine=\"credential\" OR CommandLine=\"passwd\" OR CommandLine=\"secret\") .002 Credentials in Registry Monitor executed commands and arguments that may search the Registry on compromised systems for insecurely stored credentials. Analytic 1 - Commands indicating credential searches in the registry. (index=security sourcetype=\"powershell\" EventCode=4104 ScriptBlockText=\"reg query /f password /t REG_SZ /s*\") .003 Bash History While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like cat ~/.bash_history. Analytic 1 - Commands accessing .bash_historythrough unexpected means. (index=os sourcetype=\"linux_secure\" action=\"open\" filepath=\"/home//.bash_history\") OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path=\"/Users//.bash_history\") .004 Private Keys Monitor executed commands and arguments that may search for private key certificate files on compromised systems for insecurely stored credentials. Analytic 1 - Commands indicating searches for private keys. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 CommandLine=\"private key\" OR CommandLine=\"certificate\" OR CommandLine IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\")) OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 CommandLine=\"private key\" OR CommandLine=\"certificate\" OR CommandLine IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\")) OR(index=os sourcetype=\"linux_secure\" action=\"execve\" CommandLine=\"private key\" OR CommandLine=\"certificate\" OR CommandLine IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\")) OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\" CommandLine=\"private key\" OR CommandLine=\"certificate\" OR CommandLine IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\")) .006 Group Policy Preferences Monitor executed commands and arguments that may search for SYSVOL data and/or GPP XML files, especially on compromised domain controllers. Analytic 1 - Commands indicating searches for GPP XML files. (index=security sourcetype=\"Powershell\" EventCode=4104 CommandLine=\"dir /s .xml*\") .007 Container API Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs. Analytic 1 - Unexpected API calls or access to Docker logs indicating credential access. index=containers sourcetype IN (\"docker:events\", \"kubernetes:api\", \"kubernetes:container\") | search Command IN (\"docker logs\", \"kubectl get secrets\", \"kubectl describe secret\", \"kubectl exec\", \"curl http[:]//169.254.169[.]254/latest/meta-data/iam/security-credentials/\", \"aws iam list-access-keys\", \"az ad sp list\") Enterprise T1204 User Execution Detect commands triggered by users, especially related to decompression tools (e.g., zip files) that may unpack malicious payloads. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads. Analytic 1 - Command lines showing decompression or decoding actions. sourcetype=WinEventLog:Powershell EventCode=4104| search process_name IN (\"powershell.exe\", \"cmd.exe\", \"zip.exe\", \"winrar.exe\")| stats count by process_name command_line user| where command_line LIKE \"%unzip%\" OR command_line LIKE \"%decode%\" .003 Malicious Image Monitor for suspicious commands related to image or container manipulation, especially commands run from users not typically associated with these tasks. Analytic 1 - Unexpected command execution related to image files. sourcetype=command_execution| search command IN (\"docker pull\", \"docker run\", \"docker exec\", \"kubectl run\", \"gcloud container images list-tags\", \"aws ec2 run-instances\") .004 Malicious Copy and Paste Detect commands triggered by users that may download malicious files. Items typed into the Windows Run dialog are saved for each user in the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU Registry key.[75] ICS T0863 User Execution Monitor for newly executed processes that depend on user interaction, especially for applications that can embed programmatic capabilities (e.g., Microsoft Office products with scripts, installers, zip files). This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information Mitigation in payloads. For added context on adversary procedures and background see User Execution Mitigation and applicable sub-techniques. Enterprise T1125 Video Capture Monitor executed commands and arguments that can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Enterprise T1673 Virtual Machine Discovery Monitor command-line arguments that may involve listing virtual machines. On ESXi hosts, monitor for commands such as esxcli vm process list or vim-cmd vmsvc/getallvms. Analytic 1 - Command Execution (ESXi) index=esxi_logs sourcetype=shell_log(command=\"esxcli vm process list\" OR command=\"vim-cmd vmsvc/getallvms\")| stats count by host, user, command, _time| where user != \"expected_admin_user\" OR like(command, \"%unexpected_path%\")| sort -_time Analytic 1 - Command Execution (Linux/macOS) sourcetype=auditd OR sourcetype=sysmon(process_name IN (\"virsh\", \"VBoxManage\", \"qemu-img\") AND command=\"list\" OR command=\"info\")| stats count by host, user, command, parent_process_name, _time| where user!=\"root\" AND NOT match(command, \"known_admin_script\")| sort -_time Analytic 1 - Command Execution (Windows - Hyper-V or VMWare Workstation) sourcetype=WinEventLog:Sysmon EventCode=1(Image=\"powershell.exe\" OR Image=\"vmrun.exe\" OR Image=\"VBoxManage.exe\") (CommandLine=\"Get-VM\" OR CommandLine=\"list vms*\")| stats count by host, user, Image, CommandLine, ParentImage, _time| where user!=\"expected_admin\" AND NOT match(CommandLine, \"routine_script.ps1\")| sort -_time Enterprise T1497 Virtualization/Sandbox Evasion Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. .001 System Checks Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. .002 User Activity Based Checks Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. .003 Time Based Evasion Monitor executed commands and arguments that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Enterprise T1047 Windows Management Instrumentation Monitor executed commands and arguments for actions that are used to perform remote behavior. Analytic 1 - Look for wmic.exeexecution with arguments indicative of remote process creation. index=windows_logs sourcetype=WinEventLog:Security OR sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational| eval CommandLine=coalesce(CommandLine, ParentCommandLine)| eval ProcessName=lower(ProcessName), CommandLine=lower(CommandLine)| search ProcessName IN (\"wmic.exe\", \"powershell.exe\", \"wbemtool.exe\", \"wmiprvse.exe\", \"wmiadap.exe\", \"scrcons.exe\")| search CommandLine IN (\"process call create\", \"shadowcopy delete\", \"process start\", \"createobject\")| stats count by _time, ComputerName, User, ProcessName, CommandLine, ParentProcessName, ParentCommandLine, dest, src_ip, dest_ip| eval alert_message=\"Suspicious WMI activity detected: \" + ProcessName + \" executed by \" + User + \" on \" + ComputerName + \" with command: \" + CommandLine| where NOT (User=\"SYSTEM\" OR ProcessName=\"wmiprvse.exe\" OR CommandLine=\"wmic shadowcopy delete\" AND src_ip=\"trusted_ip_range\")| table _time, ComputerName, User, ProcessName, CommandLine, ParentProcessName, ParentCommandLine, src_ip, dest_ip, alert_message References Confluence Support. (2021, September 8). How to enable command line audit logging in linux. Retrieved September 23, 2021. Gagliardi, R. (n.d.). Audit in a OS X System. Retrieved September 23, 2021. Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017. Microsoft. (n.d.). Background Intelligent Transfer Service. Retrieved January 12, 2018. French, D., Murphy, B. (2020, March 24). Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1). Retrieved December 21, 2020. Counter Threat Unit Research Team. (2016, June 6). Malware Lingers with BITS. Retrieved January 12, 2018. Henderson, B. (2006, September 24). How To Insert And Remove LKMs. Retrieved November 17, 2024. Chuvakin, A. (2003, February). An Overview of Rootkits. Retrieved September 12, 2024. Remillano, A., Urbanec, J. (2019, September 19). Skidmap Linux Malware Uses Rootkit Capabilities to Hide Cryptocurrency-Mining Payload. Retrieved June 4, 2020. Pikeralpha. (2017, August 29). User Approved Kernel Extension Loading\u2026. Retrieved September 23, 2021. Richard Purves. (2017, November 9). MDM and the Kextpocalypse . Retrieved September 23, 2021. Apple. (2019, May 3). Configuration Profile Reference. Retrieved September 23, 2021. Chrome Enterprise and Education Help. (n.d.). Use Chrome Browser with Roaming User Profiles. Retrieved March 28, 2023. Adrien Bataille, Anders Vejlby, Jared Scott Wilson, and Nader Zaveri. (2021, December 14). Azure Run Command for Dummies. Retrieved March 13, 2023. Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016. Dunwoody, M. (2016, February 11). GREATER VISIBILITY THROUGH POWERSHELL LOGGING. Retrieved February 16, 2016. Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Command History. Retrieved October 21, 2020. Zhongyuan Hau (Aaron), Ren Jie Yow, and Yoav Mazor. (2025, January 21). ESXi Ransomware Attacks: Stealthy Persistence through. Retrieved March 27, 2025. Dennis German. (2020, November 20). launchd Keywords for plists. Retrieved October 7, 2021. Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019. Arntz, P. (2016, March 30). The Windows Vault . Retrieved November 23, 2020. ise. (2019, February 19). Password Managers: Under the Hood of Secrets Management. Retrieved January 22, 2021. Russinovich, M. & Garnier, T. (2017, May 22). Sysmon v6.20. Retrieved December 13, 2017. Microsoft. (2020, December). Azure Sentinel Detections. Retrieved December 30, 2020. Microsoft 365 Defender Team. (2020, December 28). Using Microsoft 365 Defender to protect against Solorigate. Retrieved January 7, 2021. Microsoft. (2020, September 14). Update or repair the settings of a federated domain in Office 365, Azure, or Intune. Retrieved December 30, 2020. Carr, N., Sellmer, S. (2021, June 14). Behind the scenes of business email compromise: Using cross-domain threat data to disrupt a large BEC campaign. Retrieved June 15, 2021. Microsoft. (2023, February 22). Manage mail flow rules in Exchange Online. Retrieved March 13, 2023. Microsoft. (n.d.). Retrieved January 24, 2020. Michael Raggi, Adam Aprahamian, Dan Kelly, Mathew Potaczek, Marcin Siedlarz, Austin Larsen. (2024, March 21). Bringing Access Back \u2014 Initial Access Brokers Exploit F5 BIG-IP (CVE-2023-46747) and ScreenConnect. Retrieved January 31, 2025. Matt Wixey. (2022, August 9). Multiple attackers increase pressure on victims, complicate incident response. Retrieved January 31, 2025. Github. (n.d.). Receiving webhooks with the GitHub CLI. Retrieved August 4, 2023. Microsoft . (n.d.). Create subscription. Retrieved August 4, 2023. Elastic. (n.d.). ESXI Discovery via Grep. Retrieved March 27, 2025. Elastic. (n.d.). ESXI Discovery via Find. Retrieved March 27, 2025. Michael Dawson. (2021, August 30). Hypervisor Jackpotting, Part 2: eCrime Actors Increase Targeting of ESXi Servers with Ransomware. Retrieved March 26, 2025. Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021. Pravs. (2009, May 25). What you need to know about alternate data streams in windows? Is your Data secure? Can you restore that?. Retrieved March 21, 2018. Arntz, P. (2015, July 22). Introduction to Alternate Data Streams. Retrieved March 21, 2018. Marlin, J. (2013, March 24). Alternate Data Streams in NTFS. Retrieved March 21, 2018. Johann Rehberger. (2020, September 23). Beware of the Shadowbunny - Using virtual machines to persist and evade detections. Retrieved September 22, 2021. Pany, D. & Hanley, C. (2023, May 3). Cloudy with a Chance of Bad Logs: Cloud Platform Log Configurations to Consider in Investigations. Retrieved October 16, 2023. Chandel, R. (2021, April 22). Defense Evasion: Windows Event Logging (T1562.002). Retrieved September 14, 2021. svch0st. (2020, September 30). Event Log Tampering Part 1: Disrupting the EventLog Service. Retrieved September 14, 2021. Heiligenstein, L. (n.d.). REP-25: Disable Windows Event Logging. Retrieved April 7, 2022. Pham Duy Phuc, Max Kersten, No\u00ebl Keijzer, and Micha\u00ebl Schrijver. (2024, February 14). RansomHouse am See. Retrieved March 26, 2025. Microsoft. (2021, May 27). bcdedit. Retrieved June 23, 2021. Gerend, J. et al. (2017, October 16). bootcfg. Retrieved August 30, 2021. Sophos. (2019, December 9). Snatch ransomware reboots PCs into Safe Mode to bypass protection. Retrieved June 23, 2021. inversecos. (2022, August 4). Detecting Linux Anti-Forensics: Timestomping. Retrieved March 26, 2025. Johann Rehberger. (2021, April 18). Spoofing credential dialogs on macOS Linux and Windows. Retrieved August 19, 2021. Carr, N.. (2018, October 25). Nick Carr Status Update Masquerading. Retrieved September 12, 2024. Fox, C., Vangel, D. (2018, April 22). Detect and Remediate Outlook Rules and Custom Forms Injections Attacks in Office 365. Retrieved February 4, 2019. SensePost. (2017, September 21). NotRuler - The opposite of Ruler, provides blue teams with the ability to detect Ruler usage against Exchange. Retrieved February 4, 2019. Damian Pfammatter. (2018, September 17). Hidden Inbox Rules in Microsoft Exchange. Retrieved October 12, 2021. PowerSploit. (n.d.). Retrieved December 4, 2014. Microsoft. (2016, August 21). Cached and Stored Credentials Technical Overview. Retrieved February 21, 2020. Atomic Red Team. (2023, November). T1003.007 - OS Credential Dumping: Proc Filesystem. Retrieved March 28, 2024. Gregal, Hunter. (2019, September 17). MimiPenguin 2.0. Retrieved March 28, 2024. French, D. (2018, October 9). Detecting & Removing an Attacker\u2019s WMI Persistence. Retrieved October 11, 2019. French, D. (2018, September 30). Detecting Lateral Movement Using Sysmon and Splunk. Retrieved October 11, 2019. Microsoft. (2007, November 24). IIS Modules Overview. Retrieved June 17, 2021. Falcone, R. (2018, January 25). OilRig uses RGDoor IIS Backdoor on Targets in the Middle East. Retrieved July 6, 2018. Hromcov\u00e1, Z., Cherepanov, A. (2021). Anatomy of Native IIS Malware. Retrieved September 9, 2021. Alexander Marvi, Jeremy Koppen, Tufail Ahmed, and Jonathan Lepore. (2022, September 29). Bad VIB(E)s Part One: Investigating Novel Malware Persistence Within ESXi Hypervisors. Retrieved March 26, 2025. Elastic. (n.d.). Suspicious Termination of ESXI Process. Retrieved March 27, 2025. Cj Arsley Mateo, Darrel Tristan Virtusio, Sarah Pearl Camiling, Andrei Alimboyao, Nathaniel Morales, Jacob Santos, Earl John Bareng. (2024, July 19). Play Ransomware Group\u2019s New Linux Variant Targets ESXi, Shows Ties With Prolific Puma. Retrieved March 26, 2025. Schroeder, W. & Christensen, L. (2021, June 22). Certified Pre-Owned - Abusing Active Directory Certificate Services. Retrieved August 2, 2022. Graeber, M. (2017, December 22). Code Signing Certificate Cloning Attacks and Defenses. Retrieved April 3, 2018. Russinovich, M. et al.. (2017, May 22). Sigcheck. Retrieved April 3, 2018. Microsoft. (2021, February 15). Enable Loading of Test Signed Drivers. Retrieved April 22, 2021. Lambert, J. (2020, December 13). Important steps for customers to protect themselves from recent nation-state cyberattacks. Retrieved December 17, 2020. Merc\u00eas, F. (2014, January 27). CPL Malware - Malicious Control Panel Items. Retrieved January 18, 2018. Nolen, R. et al.. (2016, April 28). Threat Advisory: \u201cSquiblydoo\u201d Continues Trend of Attackers Using Native OS Tools to \u201cLive off the Land\u201d. Retrieved April 9, 2018. Shlomi Boutnaru. (2024, January 1). The Windows Forensics Journey \u2014 Run MRU (Run Dialog Box Most Recently Used). Retrieved April 14, 2025. "
},
{
"id": 1121,
"title": "Firewall, Data Source DS0018",
"path": "/datasources/DS0018/index.html",
"content": " Firewall A network security system, running locally on an endpoint or remotely as a service (ex: cloud environment), that monitors and controls incoming/outgoing network traffic based on predefined rules[1] ID: DS0018 \u24d8 Platforms: ESXi, IaaS, Identity Provider, Linux, Office Suite, SaaS, Windows, macOS \u24d8 Collection Layers: Cloud Control Plane, Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.1 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Firewall: Firewall Disable The deactivation, misconfiguration, or complete stoppage of firewall services, either on a host or in a cloud control plane. Such activity may involve turning off firewalls, modifying rules to disable protection, or deleting firewall-related configurations and activity logs. Examples: Disabling Host-Based Firewalls: Stopping the Windows Defender Firewall service or using iptables -F to flush all rules on a Linux system. Cloud Firewall Modification or Deactivation: Modifying or deleting security group rules in AWS or disabling a network firewall in Azure. Activity Log Deletion: Writing or deleting entries in Azure Firewall Activity Logs to hide unauthorized firewall changes. Temporary Disable for Malicious Operations: Temporarily disabling a firewall to allow malicious files or traffic, then re-enabling it to avoid detection. Using Command-Line Tools to Stop Firewalls: Running commands like Set-NetFirewallProfile -Enabled False on Windows or systemctl stop ufw on Linux. This data component can be collected through the following measures: Cloud Control Plane Azure Activity Logs: Enable logging of administrative actions, such as stopping or modifying Azure Firewall configurations. Use Azure Monitor to track specific firewall-related actions, including disabling or rule deletion. AWS CloudTrail Logs: Monitor RevokeSecurityGroupIngress or RevokeSecurityGroupEgress events to detect rule changes in AWS Security Groups. Google Cloud Platform Logs: Collect logs from the Firewall Rules resource in Google Cloud Operations Suite to detect rule deletions or modifications. Host-Level Firewalls Windows Firewall Event Logs: Enable logging of firewall state changes: Security Event ID 2004: Firewall service stopped. Security Event ID 2005: Firewall service started. Use Sysmon for process creation events tied to firewall commands or scripts (Sysmon Event ID 1). Linux Firewall Logs: Use auditd to track commands like iptables, firewalld, or ufw: auditctl -a always,exit -F arch=b64 -S execve -k firewall_disable macOS Firewall: Monitor changes to the macOS Application Firewall using the log show command. Network-Level Monitoring IDS/IPS Alerts: Deploy IDS/IPS systems to monitor abnormal traffic flows that could indicate firewall disablement. NetFlow Data: Analyze NetFlow or packet capture data for traffic patterns inconsistent with firewall enforcement. SIEM and CSPM Tools SIEM Integration: Use tools like Splunk or QRadar to centralize and analyze firewall disablement events from both hosts and cloud platforms. Cloud Security Posture Management (CSPM): Use CSPM solutions to monitor misconfigurations and track deactivation of critical cloud services like firewalls. Firewall: Firewall Disable The deactivation, misconfiguration, or complete stoppage of firewall services, either on a host or in a cloud control plane. Such activity may involve turning off firewalls, modifying rules to disable protection, or deleting firewall-related configurations and activity logs. Examples: Disabling Host-Based Firewalls: Stopping the Windows Defender Firewall service or using iptables -F to flush all rules on a Linux system. Cloud Firewall Modification or Deactivation: Modifying or deleting security group rules in AWS or disabling a network firewall in Azure. Activity Log Deletion: Writing or deleting entries in Azure Firewall Activity Logs to hide unauthorized firewall changes. Temporary Disable for Malicious Operations: Temporarily disabling a firewall to allow malicious files or traffic, then re-enabling it to avoid detection. Using Command-Line Tools to Stop Firewalls: Running commands like Set-NetFirewallProfile -Enabled False on Windows or systemctl stop ufw on Linux. This data component can be collected through the following measures: Cloud Control Plane Azure Activity Logs: Enable logging of administrative actions, such as stopping or modifying Azure Firewall configurations. Use Azure Monitor to track specific firewall-related actions, including disabling or rule deletion. AWS CloudTrail Logs: Monitor RevokeSecurityGroupIngress or RevokeSecurityGroupEgress events to detect rule changes in AWS Security Groups. Google Cloud Platform Logs: Collect logs from the Firewall Rules resource in Google Cloud Operations Suite to detect rule deletions or modifications. Host-Level Firewalls Windows Firewall Event Logs: Enable logging of firewall state changes: Security Event ID 2004: Firewall service stopped. Security Event ID 2005: Firewall service started. Use Sysmon for process creation events tied to firewall commands or scripts (Sysmon Event ID 1). Linux Firewall Logs: Use auditd to track commands like iptables, firewalld, or ufw: auditctl -a always,exit -F arch=b64 -S execve -k firewall_disable macOS Firewall: Monitor changes to the macOS Application Firewall using the log show command. Network-Level Monitoring IDS/IPS Alerts: Deploy IDS/IPS systems to monitor abnormal traffic flows that could indicate firewall disablement. NetFlow Data: Analyze NetFlow or packet capture data for traffic patterns inconsistent with firewall enforcement. SIEM and CSPM Tools SIEM Integration: Use tools like Splunk or QRadar to centralize and analyze firewall disablement events from both hosts and cloud platforms. Cloud Security Posture Management (CSPM): Use CSPM solutions to monitor misconfigurations and track deactivation of critical cloud services like firewalls. Domain ID Name Detects Enterprise T1562 Impair Defenses Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped). .004 Disable or Modify System Firewall Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped). .007 Disable or Modify Cloud Firewall Monitor for changes in the status of the cloud firewall. Firewall: Firewall Enumeration Querying and extracting a list of available firewalls or their associated configurations and rules. This activity can occur across host systems and cloud control planes, providing insight into the state and configuration of firewalls that protect the environment. Examples: Querying Host-Based Firewalls: Using Windows PowerShell commands like Get-NetFirewallRule or Linux commands such as iptables -L or firewalld --list-all. Cloud Firewall Rule Listing: Running commands like az network firewall list for Azure or aws ec2 describe-security-groups for AWS. Using Management APIs: Leveraging APIs like Google Cloud Firewall's list API method or AWS's DescribeSecurityGroups API.Identifying Misconfigurations: Extracting firewall rules to identify \"allow all\" policies or rules that lack logging. Enumerating with CLI Tools: Using CLI commands like gcloud compute firewall-rules list to extract firewall settings in Google Cloud. This data component can be collected through the following measures: Cloud Control Plane Azure Activity Logs:Collect logs from Azure Firewall to monitor rule listing commands. Enable logging for az network firewall commands. AWS CloudTrail: Monitor calls to DescribeSecurityGroups or DescribeNetworkAcls APIs.Google Cloud Operations Suite: Collect logs for gcloud compute firewall-rules list or API calls to firewalls.list. Host-Based Firewalls Windows Event Logs: Use PowerShell transcription logs to capture commands like Get-NetFirewallRule. Linux Auditd: Track executions of commands like iptables -L or ufw status using auditd: auditctl -a always,exit -F arch=b64 -S execve -k firewall_enum macOS: Monitor logs for firewall-related queries via the Console app or log monitoring tools. SIEM Integration Collect logs from endpoints and cloud platforms to centralize data and detect enumeration activity. Endpoint Detection and Response (EDR) Use EDR tools to track enumeration commands or API calls performed on managed devices. CSPM Tools Deploy Cloud Security Posture Management tools to monitor for unauthorized enumeration of firewall rules or configurations. Firewall: Firewall Enumeration Querying and extracting a list of available firewalls or their associated configurations and rules. This activity can occur across host systems and cloud control planes, providing insight into the state and configuration of firewalls that protect the environment. Examples: Querying Host-Based Firewalls: Using Windows PowerShell commands like Get-NetFirewallRule or Linux commands such as iptables -L or firewalld --list-all. Cloud Firewall Rule Listing: Running commands like az network firewall list for Azure or aws ec2 describe-security-groups for AWS. Using Management APIs: Leveraging APIs like Google Cloud Firewall's list API method or AWS's DescribeSecurityGroups API.Identifying Misconfigurations: Extracting firewall rules to identify \"allow all\" policies or rules that lack logging. Enumerating with CLI Tools: Using CLI commands like gcloud compute firewall-rules list to extract firewall settings in Google Cloud. This data component can be collected through the following measures: Cloud Control Plane Azure Activity Logs:Collect logs from Azure Firewall to monitor rule listing commands. Enable logging for az network firewall commands. AWS CloudTrail: Monitor calls to DescribeSecurityGroups or DescribeNetworkAcls APIs.Google Cloud Operations Suite: Collect logs for gcloud compute firewall-rules list or API calls to firewalls.list. Host-Based Firewalls Windows Event Logs: Use PowerShell transcription logs to capture commands like Get-NetFirewallRule. Linux Auditd: Track executions of commands like iptables -L or ufw status using auditd: auditctl -a always,exit -F arch=b64 -S execve -k firewall_enum macOS: Monitor logs for firewall-related queries via the Console app or log monitoring tools. SIEM Integration Collect logs from endpoints and cloud platforms to centralize data and detect enumeration activity. Endpoint Detection and Response (EDR) Use EDR tools to track enumeration commands or API calls performed on managed devices. CSPM Tools Deploy Cloud Security Posture Management tools to monitor for unauthorized enumeration of firewall rules or configurations. Domain ID Name Detects Enterprise T1518 Software Discovery Monitor for an extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands) .001 Security Software Discovery Monitor for an extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands) Firewall: Firewall Metadata Contextual information about firewalls, including their configurations, policies, status, and other details such as names and associated rules. This metadata provides valuable insights into the operational state and configurations of firewalls, both in cloud control planes and host systems. Examples: Firewall Name and Configuration: The name, type, and purpose of a firewall such as \"Azure Firewall - Production Environment.\" Policy Details: Capturing firewall policy details, such as \"Allow inbound TCP 443 to web servers.\" Firewall Status: Status indicators like \"Active,\" \"Disabled,\" or \"Pending Updates.\" Audit Log Metadata: Log entries showing administrative changes, such as \"Policy modified by admin@domain.com.\" Rules Associated with Firewalls: Rules specifying source/destination IP ranges, protocols, and ports. Tagging Information: Tags like \"Environment: Production\" or \"Owner: NetworkOps.\" This data component can be collected through the following measures: Cloud Control Plane Azure: Use Azure Activity Logs and Network Watcher to collect metadata for Azure Firewall. Example: az network firewall show --name <firewall-name> AWS: Use AWS CloudTrail and describe commands: aws ec2 describe-security-groups Google Cloud: Use gcloud commands to extract metadata: gcloud compute firewall-rules list --format=json Host-Based Firewalls Windows: Use PowerShell to gather metadata: Get-NetFirewallRule -PolicyStore PersistentStore Linux: Query iptables or nftables rulesets: iptables -S macOS: Use pfctl to extract metadata: sudo pfctl -sr SIEM Integration Collect logs from cloud platforms, host systems, and network appliances. API Monitoring Monitor API calls for metadata requests. Example (AWS): Capture DescribeSecurityGroups or DescribeNetworkAcls calls via CloudTrail. Endpoint Detection and Response (EDR) Use EDR solutions to monitor firewall management tools for configuration changes or queries. Firewall: Firewall Metadata Contextual information about firewalls, including their configurations, policies, status, and other details such as names and associated rules. This metadata provides valuable insights into the operational state and configurations of firewalls, both in cloud control planes and host systems. Examples: Firewall Name and Configuration: The name, type, and purpose of a firewall such as \"Azure Firewall - Production Environment.\" Policy Details: Capturing firewall policy details, such as \"Allow inbound TCP 443 to web servers.\" Firewall Status: Status indicators like \"Active,\" \"Disabled,\" or \"Pending Updates.\" Audit Log Metadata: Log entries showing administrative changes, such as \"Policy modified by admin@domain.com.\" Rules Associated with Firewalls: Rules specifying source/destination IP ranges, protocols, and ports. Tagging Information: Tags like \"Environment: Production\" or \"Owner: NetworkOps.\" This data component can be collected through the following measures: Cloud Control Plane Azure: Use Azure Activity Logs and Network Watcher to collect metadata for Azure Firewall. Example: az network firewall show --name <firewall-name> AWS: Use AWS CloudTrail and describe commands: aws ec2 describe-security-groups Google Cloud: Use gcloud commands to extract metadata: gcloud compute firewall-rules list --format=json Host-Based Firewalls Windows: Use PowerShell to gather metadata: Get-NetFirewallRule -PolicyStore PersistentStore Linux: Query iptables or nftables rulesets: iptables -S macOS: Use pfctl to extract metadata: sudo pfctl -sr SIEM Integration Collect logs from cloud platforms, host systems, and network appliances. API Monitoring Monitor API calls for metadata requests. Example (AWS): Capture DescribeSecurityGroups or DescribeNetworkAcls calls via CloudTrail. Endpoint Detection and Response (EDR) Use EDR solutions to monitor firewall management tools for configuration changes or queries. Domain ID Name Detects Enterprise T1518 Software Discovery Monitor for contextual data about a firewall and activity around it such as name, policy, or status .001 Security Software Discovery Monitor for contextual data about a firewall and activity around it such as name, policy, or status Firewall: Firewall Rule Modification The creation, deletion, or alteration of firewall rules to allow or block specific network traffic. Monitoring changes to these rules is critical for detecting misconfigurations, unauthorized access, or malicious attempts to bypass network protections. Examples: Rule Creation: Adding a new rule to allow inbound traffic on port 3389 (RDP). Rule Deletion: Deleting a rule that blocks inbound traffic from untrusted IP ranges. Rule Modification: Changing a rule to allow traffic from \"any\" source IP instead of a specific trusted range. Audit Log Metadata: Logs indicating \"Firewall rule modified by admin@domain.com.\" Platform-Specific Scenarios Azure: Altering rules in an Azure Network Security Group (NSG). AWS: Modifying Security Group rules to allow traffic. Windows: Changes tracked in Security Event Logs (EID 4950 or 4951). This data component can be collected through the following measures: Cloud Control Plane Azure: Collect rule modification logs from Azure Firewall Activity Logs. Example Command: az network firewall policy rule-collection-group rule-collection list --policy-name <policy-name> AWS: Use CloudTrail to track AuthorizeSecurityGroupIngress or RevokeSecurityGroupIngress actions. Example: aws ec2 describe-security-groups Google Cloud: Use gcloud commands to extract firewall rules: gcloud compute firewall-rules list --format=json Host-Based Firewalls Windows: Collect events from the Windows Security Event Log (EID 4950: A rule has been modified). Use PowerShell to track rule changes: Get-NetFirewallRule -PolicyStore PersistentStore Linux: Monitor iptables or nftables rule modifications: iptables -L -v Use auditd for real-time monitoring: auditctl -w /etc/iptables.rules -p wa macOS: Use pfctl to monitor rule changes: sudo pfctl -sr SIEM Integration Collect logs from cloud platforms, host systems, and network appliances for centralized monitoring. API Monitoring Monitor API calls for firewall rule modifications. Firewall: Firewall Rule Modification The creation, deletion, or alteration of firewall rules to allow or block specific network traffic. Monitoring changes to these rules is critical for detecting misconfigurations, unauthorized access, or malicious attempts to bypass network protections. Examples: Rule Creation: Adding a new rule to allow inbound traffic on port 3389 (RDP). Rule Deletion: Deleting a rule that blocks inbound traffic from untrusted IP ranges. Rule Modification: Changing a rule to allow traffic from \"any\" source IP instead of a specific trusted range. Audit Log Metadata: Logs indicating \"Firewall rule modified by admin@domain.com.\" Platform-Specific Scenarios Azure: Altering rules in an Azure Network Security Group (NSG). AWS: Modifying Security Group rules to allow traffic. Windows: Changes tracked in Security Event Logs (EID 4950 or 4951). This data component can be collected through the following measures: Cloud Control Plane Azure: Collect rule modification logs from Azure Firewall Activity Logs. Example Command: az network firewall policy rule-collection-group rule-collection list --policy-name <policy-name> AWS: Use CloudTrail to track AuthorizeSecurityGroupIngress or RevokeSecurityGroupIngress actions. Example: aws ec2 describe-security-groups Google Cloud: Use gcloud commands to extract firewall rules: gcloud compute firewall-rules list --format=json Host-Based Firewalls Windows: Collect events from the Windows Security Event Log (EID 4950: A rule has been modified). Use PowerShell to track rule changes: Get-NetFirewallRule -PolicyStore PersistentStore Linux: Monitor iptables or nftables rule modifications: iptables -L -v Use auditd for real-time monitoring: auditctl -w /etc/iptables.rules -p wa macOS: Use pfctl to monitor rule changes: sudo pfctl -sr SIEM Integration Collect logs from cloud platforms, host systems, and network appliances for centralized monitoring. API Monitoring Monitor API calls for firewall rule modifications. Domain ID Name Detects Enterprise T1562 Impair Defenses Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. .004 Disable or Modify System Firewall Monitor for changes made to firewall rules that might allow remote communication over protocols such as SMD and RDP. Modification of firewall rules might also consider opening local ports and services for different network profiles such as public and domain. .007 Disable or Modify Cloud Firewall Monitor cloud logs for modification or creation of new security groups or firewall rules. For example, in AWS environments, monitor for the AuthorizeSecurityGroupIngress API call in CloudTrail and use AWS Config to monitor changes the configuration of a Virtual Private Cloud (VPC) Security Group.[2] Analytic 1 - Operations performed by unexpected initiators, unusual rule names, frequent modifications index=\"azure_activity_logs\" OperationName=\"Create or Update Security Rule\"| stats count by InitiatorName, Resource| where Resource LIKE \"Microsoft.Network/networkSecurityGroups/securityRules\" AND (Status!=\"Succeeded\" OR InitiatorName!=\"expected_initiator\")| sort by Time Enterprise T1070 Indicator Removal Monitor for changes made to firewall rules, especially unexpected modifications that may potentially be related to allowing and/or cleaning up previous tampering that enabled malicious network traffic. .007 Clear Network Connection History and Configurations Monitor for changes made to firewall rules, especially unexpected modifications that may potentially be related to allowing and/or cleaning up previous tampering that enabled malicious network traffic. Enterprise T1669 Wi-Fi Networks Monitor for changes made to firewall rules for unexpected modifications to allow specific network traffic that may maliciously modify components of a victim environment in order to move laterally. References Amazon. (n.d.). Security groups for your VPC. Retrieved October 13, 2021. Jeff Levine. (2017, January 3). How to Monitor AWS Account Configuration Changes and API Calls to Amazon EC2 Security Groups. Retrieved September 24, 2024. "
},
{
"id": 1122,
"title": "Module, Data Source DS0011",
"path": "/datasources/DS0011/index.html",
"content": " Module Executable files consisting of one or more shared classes and interfaces, such as portable executable (PE) format binaries/dynamic link libraries (DLL), executable and linkable format (ELF) binaries/shared libraries, and Mach-O format binaries/shared libraries[1][2] ID: DS0011 \u24d8 Platforms: Linux, Windows, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Module: Module Load When a process or program dynamically attaches a shared library, module, or plugin into its memory space. This action is typically performed to extend the functionality of an application, access shared system resources, or interact with kernel-mode components. Data Collection Measures: Event Logging (Windows): Sysmon Event ID 7: Logs when a DLL is loaded into a process. Windows Security Event ID 4688: Captures process creation events, often useful for correlating module loads. Windows Defender ATP: Can provide visibility into suspicious module loads. Event Logging (Linux/macOS): AuditD (execve and open syscalls): Captures when shared libraries (.so files) are loaded. Ltrace/Strace: Monitors process behavior, including library calls (dlopen, execve). MacOS Endpoint Security Framework (ESF): Monitors library loads (ES_EVENT_TYPE_NOTIFY_DYLD_INSERT_LIBRARIES). Endpoint Detection & Response (EDR): Provide real-time telemetry on module loads and process injections. Sysinternals Process Monitor (procmon): Captures loaded modules and their execution context. Memory Forensics: Volatility Framework (malfind, ldrmodules): Detects injected DLLs and anomalous module loads. Rekall Framework: Useful for kernel-mode module detection. SIEM and Log Analysis: Centralized log aggregation to correlate suspicious module loads across the environment. Detection rules using correlation searches and behavioral analytics. Module: Module Load When a process or program dynamically attaches a shared library, module, or plugin into its memory space. This action is typically performed to extend the functionality of an application, access shared system resources, or interact with kernel-mode components. Data Collection Measures: Event Logging (Windows): Sysmon Event ID 7: Logs when a DLL is loaded into a process. Windows Security Event ID 4688: Captures process creation events, often useful for correlating module loads. Windows Defender ATP: Can provide visibility into suspicious module loads. Event Logging (Linux/macOS): AuditD (execve and open syscalls): Captures when shared libraries (.so files) are loaded. Ltrace/Strace: Monitors process behavior, including library calls (dlopen, execve). MacOS Endpoint Security Framework (ESF): Monitors library loads (ES_EVENT_TYPE_NOTIFY_DYLD_INSERT_LIBRARIES). Endpoint Detection & Response (EDR): Provide real-time telemetry on module loads and process injections. Sysinternals Process Monitor (procmon): Captures loaded modules and their execution context. Memory Forensics: Volatility Framework (malfind, ldrmodules): Detects injected DLLs and anomalous module loads. Rekall Framework: Useful for kernel-mode module detection. SIEM and Log Analysis: Centralized log aggregation to correlate suspicious module loads across the environment. Detection rules using correlation searches and behavioral analytics. Domain ID Name Detects Enterprise T1547 Boot or Logon Autostart Execution Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. .002 Authentication Package Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe with AuditLevel = 8. [3] [4] .003 Time Providers There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk. [5] .004 Winlogon Helper DLL New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. .005 Security Support Provider Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe with AuditLevel = 8. [3] [4] .008 LSASS Driver Also monitor DLL load operations in lsass.exe. [6] .010 Port Monitors Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious. .012 Print Processors Monitor for abnormal DLLs that are loaded by spoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious. New print processor DLLs are written to the print processor directory. Enterprise T1059 Command and Scripting Interpreter Monitor for events associated with scripting execution, such as the loading of modules associated with scripting languages (ex: JScript.dll or vbscript.dll). Analytic 1 - Look for unusual module loads associated with scripting languages. sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational| search EventCode=7 ImageLoaded IN (\"C:\\Windows\\System32\\JScript.dll\", \"C:\\Windows\\System32\\vbscript.dll\", \"System.Management.Automation.dll\") .001 PowerShell Monitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).[7][8] Analytic 1 - Processes loading PowerShell assemblies sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational| search EventCode=7 ImageLoaded IN (\"C:\\Windows\\System32\\System.Management.Automation.dll\", \"C:\\Windows\\System32\\powershell.exe\") .005 Visual Basic Monitor for the loading of modules associated with VB languages (ex: vbscript.dll). Note: For Windows, Sysmon Event ID 7 (Image loaded) can be used to alert on the loading of DLL modules (e.g., vbscript.dll) associated with Visual Basic into processes. Due to the high frequency of image load operations, Event ID 7 can generate a large volume of events. Therefore, we recommend tuning the Sysmon configuration file to exclude common, benign image loads that may result in false positives. This query focuses on monitoring the loading of specific VB-related modules such as vbe6.dll, vbscript.dll, and vba7.dll, which are commonly associated with VB script execution. Analytic 1 - Look for unusual VB module loads. sourcetype=windows_security OR sourcetype=wineventlog OR sourcetype=linux_secure OR sourcetype=macos_secure| search (module=\"vbe6.dll\" OR module=\"vbscript.dll\" OR module=\"vba7.dll\")| eval suspicious_module=if(like(module, \"vbe6.dll\" OR \"vbscript.dll\" OR \"vba7.dll\"), \"Yes\", \"No\")| where suspicious_module=\"Yes\" .007 JavaScript Monitor for the loading of modules associated with scripting languages (ex: JScript.dll). Enterprise T1546 Event Triggered Execution Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement. .006 LC_LOAD_DYLIB Addition Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. .007 Netsh Helper DLL Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. .009 AppCert DLLs Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Tools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location. [9] [10] .010 AppInit DLLs Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. .011 Application Shimming Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. .015 Component Object Model Hijacking Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed. ICS T0823 Graphical User Interface Monitor DLL file events, specifically creation of these binary files as well as the loading of DLLs into processes associated with remote graphical connections, such as RDP and VNC. Remote Services may be used to access a host\u2019s GUI. Enterprise T1574 Hijack Execution Flow Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. .001 DLL Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process (particularly known malicious ones), or that have the same file name but abnormal paths (e.g., loaded from a user-writable directory rather than a system one). Monitor DLLs loaded from remote locations. .004 Dylib Hijacking Monitor for dynamic libraries being loaded. Run path dependent libraries can include LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB, and LC_RPATH. Other special keywords are recognized by the macOS loader are @rpath, @loader_path, and @executable_path.[11] These loader instructions can be examined for individual binaries or frameworks using the otool -l command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking .005 Executable Installer File Permissions Weakness Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. .006 Dynamic Linker Hijacking Monitor library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates. .012 COR_PROFILER Monitor DLL files that are associated with COR_PROFILER environment variables. .014 AppDomainManager Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of .NET assemblies into processes (which may not always create standard image load events). Look for image loads that are not recognized or not normally loaded into a process.[12][13] Enterprise T1056 Input Capture Monitor library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates. .004 Credential API Hooking Monitor library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates. Enterprise T1559 Inter-Process Communication Monitor for the loading of unusual modules or DLLs into processes. Specifically focus on modules that are not typically loaded or associated with IPC mechanisms. Analytic 1 - Unrecognized DLLs. sourcetype=Sysmon EventCode=7| search module_path != \"/usr/lib/\" OR module_path != \"/windows/system32/\" OR module_path != \"/lib/*\"| stats count by module_path process_name user| where module_path IN (\"suspicious_modules.dll\", \"unknown.so\") .001 Component Object Model Monitor for COM objects loading DLLs and other modules not typically associated with the application.[14] .002 Dynamic Data Exchange Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe). Enterprise T1556 Modify Authentication Process Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Password filters will also show up as an autorun and loaded DLL in lsass.exe.[15] If AD FS is in use, monitor the AD FS server for the creation of DLLs as well as the loading of unrecognized or unsigned DLLs into the Microsoft.IdentityServer.Servicehost application.[16] Analytic 1 - Unauthorized DLL loads in critical systems. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\")(EventCode=7 OR EventCode=10 OR sourcetype=\"linux_secure\" OR sourcetype=\"macos_secure\")| eval ImageLoaded=coalesce(Image, file_path, target_file)| eval Process=coalesce(ProcessGuid, pid, process_id)| eval User=coalesce(User, user, user_name)| eval Platform=case( sourcetype==\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"Windows\", sourcetype==\"linux_secure\", \"Linux\", sourcetype==\"macos_secure\", \"macOS\", true(), \"Unknown\")| search ImageLoaded IN ( \"\\lsass.exe\", \"\\services.exe\", \"\\winlogon.exe\", \"/usr/libexec/\", \"/usr/bin/\", \"/etc/pam.d/\", \"/Library/Preferences/com.apple.loginwindow.plist\")| search ImageLoaded IN (\"\\.dll\", \"/.so\", \"/.dylib\")| eval isSuspicious=if(match(ImageLoaded, \".\\(?!\\\")(lsass|services|winlogon).exe\\.\\.dll$|/usr/libexec/.\\.so$|/usr/bin/.\\.so$|/etc/pam.d/.\\.so$|/Library/Preferences/com.apple.loginwindow.plist.\\.dylib$\"), \"Yes\", \"No\")| where isSuspicious=\"Yes\"| bin _time span=1m| stats count by _time, User, ImageLoaded, Process, Platform, host| where count > 1| table _time, User, ImageLoaded, Process, Platform, host, count| sort -count </code .002 Password Filter DLL Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Password filters will also show up as an autorun and loaded DLL in lsass.exe.[15] Analytic 1 - Unauthorized DLL loads in critical systems. index=windows_logs sourcetype=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\"| search EventCode=7 [search index=windows_logs EventCode=4688 (ProcessName=\"lsass.exe\" OR ProcessName=\"winlogon.exe\") | fields ProcessID]| eval dll_path=coalesce(ImageLoaded, Image)| search dll_path=\"\\System32\\\" OR dll_path=\"\\SysWOW64\\\"| rex field=dll_path \".*\\(?[^\\]+.dll)$\" .007 Hybrid Identity Monitor the hybrid identity solution in use for the loading of unauthorized DLLs. For example, monitor all PTA agent servers for the creation of DLLs as well as the loading of DLLs into the AzureADConnectAuthenticationAgentService process.[17] If AD FS is in use, monitor the AD FS server for the creation of DLLs as well as the loading of unrecognized or unsigned DLLs into the Microsoft.IdentityServer.Servicehost application.[16] Enterprise T1106 Native API Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Utilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity. Analytic 1 - Look for unusual or abnormal DLL loads, processes loading DLLs not typically associated with them sourcetype=Sysmon EventCode=7| stats count by module_name process_name user| where module_name IN (\"ntdll.dll\", \"kernel32.dll\", \"advapi32.dll\", \"user32.dll\", \"gdi32.dll\") Enterprise T1027 Obfuscated Files or Information Monitoring module loads, especially those not explicitly included in import tables, may highlight obfuscated code functionality. Dynamic malware analysis may also expose signs of code obfuscation.[18] .007 Dynamic API Resolution Monitoring module loads, especially those not explicitly included in import tables, may highlight obfuscated API function calls. Dynamic malware analysis may also expose signs of function obfuscation, such as memory reads that correspond to addresses of API function code within modules.[18] Enterprise T1137 Office Application Startup Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. .002 Office Test Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. Enterprise T1055 Process Injection Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. .001 Dynamic-link Library Injection Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. Sysmon Event ID 7 (Image loaded) can be used to monitor the loading of DLLs into processes. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign processes and module loads to help reduce the number of events that are produced. .014 VDSO Hijacking Monitor library load events, especially unusual creation of these binary files followed by loading into processes. Look for libraries that are not recognized or not normally loaded into a process. Enterprise T1620 Reflective Code Loading Monitor for artifacts of abnormal process execution. For example, a common signature related to reflective code loading on Windows is mechanisms related to the .NET Common Language Runtime (CLR) -- such as mscor.dll, mscoree.dll, and clr.dll -- loading into abnormal processes (such as notepad.exe) Enterprise T1021 Remote Services Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes, that may use Valid Accounts to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user. Note: On Windows, Sysmon Event ID 7 (Image loaded) can be used to monitor the loading of DLLs into processes, including those designed to accept remote connections. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign processes and module to help reduce the number of events that are produced. .003 Distributed Component Object Model Monitor for COM objects loading DLLs and other modules not typically associated with the application.[19] Note: Sysmon Event ID 7 (Image loaded) can be used to monitor for suspicious DLLs loaded by the DCOM Server Process Launcher which runs inside of svchost.exe. This is a particularly noisy event and can generate a large volume of data, so we recommend baselining and filtering out any known benign svchost.exe module loads that occur as part of its typical operation. sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=7| search ImageLoaded=\"\\.dll\" ParentImage=\"dcomlaunch.exe\"| stats count by ImageLoaded, ParentImage, User, Computer, _time| eval suspicious_load=if(count > threshold, \"suspicious\", \"normal\")| where suspicious_load=\"suspicious\"| table _time, ImageLoaded, ParentImage, User, Computer, suspicious_load ICS T0886 Remote Services Monitor DLL file events, specifically creation of these files as well as the loading of DLLs into processes specifically designed to accept remote connections, such as RDP, Telnet, SSH, and VNC. ICS T0853 Scripting Monitor for events associated with scripting execution, such as the loading of modules associated with scripting languages (e.g., JScript.dll, vbscript.dll). Enterprise T1505 .005 Server Software Component: Terminal Services DLL Monitor module loads by the Terminal Services process (ex: svchost.exe -k termsvcs) for unexpected DLLs (the default is %SystemRoot%\\System32\\termsrv.dll, though an adversary could also use Match Legitimate Resource Name or Location to potentially conceal a malicious payload). Enterprise T1129 Shared Modules Monitor shared module loading, focusing on .dll, .so, and .dylib files, and look for suspicious paths or abnormal module loads that deviate from system norms. Limiting module loads to trusted directories, such as %SystemRoot% and %ProgramFiles% on Windows, may protect against module loads from unsafe paths. Enterprise T1553 Subvert Trust Controls Enable CryptoAPI v2 (CAPI) event logging [20] to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). [21] .003 SIP and Trust Provider Hijacking Enable CryptoAPI v2 (CAPI) event logging [20] to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). [21] Enterprise T1218 System Binary Proxy Execution Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. .002 Control Panel Monitor for DLL/PE file events, such as the Control_RunDLL and ControlRunDLLAsUser API functions in shell32.dll. .007 Msiexec Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. .008 Odbcconf Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. .010 Regsvr32 Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. Note: This looks for unsigned images that may be loaded by regsvr32, while attempting to eliminate false positives stemming from Windows/Program Files binaries. Analytic 5 - Loading Unsigned Images (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"7\") (Image=\"C:\\Windows\\System32\\regsvr32.exe\" OR Image=\"C:\\Windows\\SysWOW64\\regsvr32.exe\") Signed=false ImageLoaded!=\"C:\\Program Files\" ImageLoaded!=\"C:\\Windows\\\"|stats values(ComputerName) as \"Computer Name\" count(ImageLoaded) as ImageLoadedCount by ImageLoaded .011 Rundll32 Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls. Static Portable Executable (PE) analysis tools can be used to examine and dump the exports of a particular DLL. Enterprise T1127 Trusted Developer Utilities Proxy Execution Monitor trusted developer utility activity with unsigned module loads. .002 ClickOnce Monitor dfsvc.exe child process activity with unsigned module loads, as well as activity associated with dfshim.dll. Compare with baseline of ClickOne activity to whitelist applications with valid business use-cases.[22] Enterprise T1220 XSL Script Processing Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. References Microsoft. (2018, December 5). LoadLibraryA function (libloaderapi.h). Retrieved September 28, 2021. Microsoft. (n.d.). Module Class. Retrieved September 28, 2021. Graeber, M. (2014, October). Analysis of Malicious Security Support Provider DLLs. Retrieved March 1, 2017. Microsoft. (2013, July 31). Configuring Additional LSA Protection. Retrieved June 24, 2015. Lundgren, S. (2017, October 28). w32time. Retrieved March 26, 2018. Microsoft. (n.d.). Dynamic-Link Library Security. Retrieved November 27, 2017. Warner, J.. (2015, January 6). Inexorable PowerShell \u2013 A Red Teamer\u2019s Tale of Overcoming Simple AppLocker Policies. Retrieved December 8, 2018. Christensen, L.. (2015, December 28). The Evolution of Offensive PowerShell Invocation. Retrieved December 8, 2018. Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016. Microsoft. (2007, October 24). Windows Sysinternals - AppCertDlls. Retrieved November 17, 2024. Apple Inc.. (2012, July 7). Run-Path Dependent Libraries. Retrieved March 31, 2021. Administrator. (2020, May 26). APPDOMAINMANAGER INJECTION AND DETECTION. Retrieved March 28, 2024. Spagnola, N. (2023, May 5). AppDomain Manager Injection: New Techniques For Red Teams. Retrieved March 29, 2024. Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017. Bialek, J. (2013, September 15). Intercepting Password Changes With Function Hooking. Retrieved November 21, 2017. Microsoft Threat Intelligence Center, Microsoft Detection and Response Team, Microsoft 365 Defender Research Team . (2022, August 24). MagicWeb: NOBELIUM\u2019s post-compromise trick to authenticate as anyone. Retrieved September 28, 2022. Mike Burns. (2020, September 30). Detecting Microsoft 365 and Azure Active Directory Backdoors. Retrieved September 28, 2022. Choi, S. (2015, August 6). Obfuscated API Functions in Modern Packers. Retrieved August 22, 2022. Nelson, M. (2017, November 16). Lateral Movement using Outlook's CreateObject Method and DotNetToJScript. Retrieved November 21, 2017. Entrust Datacard. (2017, August 16). How do I enable CAPI 2.0 logging in Windows Vista, Windows 7 and Windows 2008 Server?. Retrieved January 31, 2018. Graeber, M. (2017, September). Subverting Trust in Windows. Retrieved January 31, 2018. Nick Powers. (2023, June 7). Less SmartScreen More Caffeine: (Ab)Using ClickOnce for Trusted Code Execution. Retrieved September 9, 2024. "
},
{
"id": 1123,
"title": "User Interface, Data Source DS0042",
"path": "/datasources/DS0042/index.html",
"content": " User Interface Visual activity on the device that could alert the user to potentially malicious behavior. ID: DS0042 \u24d8 Platforms: Android, iOS \u24d8 Collection Layer: Device Version: 1.0 Created: 13 March 2023 Last Modified: 16 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) User Interface: Permissions Request System prompts triggered when an application requests new or additional permissions User Interface: Permissions Request System prompts triggered when an application requests new or additional permissions Domain ID Name Detects Mobile T1626 Abuse Elevation Control Mechanism When an application requests administrator permission, the user is presented with a popup and the option to grant or deny the request. .001 Device Administrator Permissions The user is prompted for approval when an application requests device administrator permissions. Mobile T1638 Adversary-in-the-Middle On both Android and iOS, the user must grant consent to an application to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is active. The user can see registered VPN services in the device settings. Mobile T1662 Data Destruction The user is prompted for approval when an application requests device administrator permissions. Mobile T1420 File and Directory Discovery On Android, the user is presented with a permissions popup when an application requests access to external device storage. Mobile T1663 Remote Access Software Remote access software typically requires many privileged permissions, such as accessibility services or device administrator. Mobile T1670 Virtualization Solution The user can view a list of device administrators and applications that have registered Accessibility services in device settings. Applications that register an Accessibility service or request device administrator permissions should be scrutinized further for malicious behavior. User Interface: System Notifications Notifications generated by the OS User Interface: System Notifications Notifications generated by the OS Domain ID Name Detects Mobile T1616 Call Control The user can review available call logs for irregularities, such as missing or unrecognized calls. Mobile T1627 .001 Execution Guardrails: Geofencing On Android 10 and later, the system shows a notification to the user when an app has been accessing device location in the background. Mobile T1541 Foreground Persistence The user can see persistent notifications in their notification drawer and can subsequently uninstall applications that do not belong. Mobile T1430 .001 Location Tracking: Remote Device Management Services Google sends a notification to the device when Android Device Manager is used to locate it. Additionally, Google provides the ability for users to view their general account activity and alerts users when their credentials have been used on a new device. Apple iCloud also provides notifications to users of account activity such as when credentials have been used. Mobile T1655 Masquerading Unexpected behavior from an application could be an indicator of masquerading. .001 Match Legitimate Name or Location Unexpected behavior from an application could be an indicator of masquerading. Mobile T1464 Network Denial of Service Mobile T1644 Out of Band Data If the user sees a notification with text they do not recognize, they should review their list of installed applications. Mobile T1451 SIM Card Swap The OS may show a notification to the user that the SIM card has been transferred to another device. Mobile T1635 Steal Application Access Token On Android, users may be presented with a popup to select the appropriate application to open a URI in. If the user sees an application they do not recognize, they can remove it. .001 URI Hijacking On Android, users may be presented with a popup to select the appropriate application to open the URI in. If the user sees an application they do not recognize, they can remove it. User Interface: System Settings Settings visible to the user on the device User Interface: System Settings Settings visible to the user on the device Domain ID Name Detects Mobile T1626 .001 Abuse Elevation Control Mechanism: Device Administrator Permissions The user can see which applications are registered as device administrators in the device settings. Mobile T1517 Access Notifications The user can also inspect and modify the list of applications that have notification access through the device settings (e.g. Apps & notification -> Special app access -> Notification access). Mobile T1429 Audio Capture In iOS 14 and up, an orange dot (or orange square if the Differentiate Without Color setting is enabled) appears in the status bar when the microphone is being used by an application. However, there have been demonstrations indicating it may still be possible to access the microphone in the background without triggering this visual indicator by abusing features that natively access the microphone or camera but do not trigger the visual indicators.[1] In Android 12 and up, a green dot appears in the status bar when the microphone is being used by an application.[2] Mobile T1616 Call Control The user can view their default phone app in device settings. Mobile T1662 Data Destruction The user may view applications with administrator access through the device settings and may also notice if user data is inexplicably missing. Mobile T1642 Endpoint Denial of Service On Android, the user can review which applications have Device Administrator access in the device settings and revoke permission where appropriate. Mobile T1627 Execution Guardrails The user can review which applications have location and sensitive phone information permissions in the operating system\u2019s settings menu. .001 Geofencing The user can review which applications have location permissions in the operating system\u2019s settings menu. Mobile T1643 Generate Traffic from Victim On Android, the user can review which applications can use premium SMS features in the \"Special access\" page within application settings. Mobile T1628 Hide Artifacts The user can examine the list of all installed applications in the device settings. .001 Suppress Application Icon The user can examine the list of all installed applications, including those with a suppressed icon, in the device settings. If the user is redirected to the device settings when tapping an application\u2019s icon, they should inspect the application to ensure it is genuine. Mobile T1629 .001 Impair Defenses: Prevent Application Removal The user can view a list of device administrators and applications that have registered accessibility services in device settings. The user can typically visually see when an action happens that they did not initiate and can subsequently review installed applications for any out of place or unknown ones. Applications that register an accessibility service or request device administrator permissions should be scrutinized further for malicious behavior. .002 Impair Defenses: Device Lockout The user can view a list of device administrators in device settings and revoke permission where appropriate. Applications that request device administrator permissions should be scrutinized further for malicious behavior. .003 Impair Defenses: Disable or Modify Tools The user can view a list of active device administrators in the device settings. Mobile T1630 Indicator Removal on Host The user can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing. The user can see a list of applications that can use accessibility services in the device settings. .001 Uninstall Malicious Application The user can see a list of applications that can use accessibility services in the device settings. .002 File Deletion The user can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing. Mobile T1417 Input Capture The user can view and manage installed third-party keyboards. .001 Keylogging On Android, the user can view and manage which applications have third-party keyboard access through the device settings in System -> Languages & input -> Virtual keyboard. On iOS, the user can view and manage which applications have third-party keyboard access through the device settings in General -> Keyboard. .002 GUI Input Capture An Android user can view and manage which applications hold the SYSTEM_ALERT_WINDOW permission through the device settings in Apps & notifications -> Special app access -> Display over other apps (the exact menu location may vary between Android versions). Mobile T1516 Input Injection The user can view applications that have registered accessibility services in the accessibility menu within the device settings. Mobile T1430 Location Tracking In both Android (6.0 and up) and iOS, the user can view which applications have the permission to access the device location through the device settings screen and revoke permissions as necessary. Mobile T1636 Protected User Data The user can view permissions granted to an application in device settings. .001 Calendar Entries On both Android and iOS, the user can manage which applications have permission to access calendar information through the device settings screen, revoke the permission if necessary. .002 Call Log On Android, the user can manage which applications have permission to access the call log through the device settings screen, revoking the permission if necessary. .003 Contact List On both Android and iOS, the user can manage which applications have permission to access the contact list through the device settings screen, revoking the permission if necessary. .004 SMS Messages On Android, the user can manage which applications have permission to access SMS messages through the device settings screen, revoking the permission if necessary. Mobile T1513 Screen Capture The user can view a list of apps with accessibility service privileges in the device settings. Mobile T1582 SMS Control The user can view the default SMS handler in system settings. Mobile T1632 Subvert Trust Controls On Android, the user can use the device settings menu to view trusted CA certificates and look for unexpected or unknown certificates. A mobile security product could similarly examine the trusted CA certificate store for anomalies. Users can use the device settings menu to view which applications on the device are allowed to install unknown applications. On iOS, the user can use the device settings menu to view installed Configuration Profiles and look for unexpected or unknown profiles. A Mobile Device Management (MDM) system could use the iOS MDM APIs to examine the list of installed Configuration Profiles for anomalies. .001 Code Signing Policy Modification On Android, the user can use the device settings menu to view trusted CA certificates and look for unexpected or unknown certificates. A mobile security product could similarly examine the trusted CA certificate store for anomalies. Users can use the device settings menu to view which applications on the device are allowed to install unknown applications. On iOS, the user can use the device settings menu to view installed Configuration Profiles and look for unexpected or unknown profiles. A Mobile Device Management (MDM) system could use the iOS MDM APIs to examine the list of installed Configuration Profiles for anomalies. Mobile T1512 Video Capture The user can view which applications have permission to use the camera through the device settings screen, where the user can then choose to revoke the permissions. References ZecOps Research Team. (2021, November 4). How iOS Malware Can Spy on Users Silently. Retrieved April 1, 2022. Google. (n.d.). Privacy Indicators. Retrieved April 20, 2022. "
},
{
"id": 1124,
"title": "Snapshot, Data Source DS0020",
"path": "/datasources/DS0020/index.html",
"content": " Snapshot A point-in-time copy of cloud volumes (files, settings, etc.) that can be created and/or deployed in cloud environments[1][2] ID: DS0020 \u24d8 Platform: IaaS \u24d8 Collection Layer: Cloud Control Plane Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Snapshot: Snapshot Creation The process of taking a point-in-time copy of a cloud storage volume (files, settings, configurations, etc.), virtual machine (VM), or database that can be created and deployed in cloud environments. Data Collection Measures: Cloud Platform Logs (IaaS) AWS CloudTrail Logs: Monitor API calls related to snapshot creation (CreateSnapshot). Azure Monitor Logs: Track snapshot creation (Microsoft.Compute/snapshots/write). Google Cloud Logging: Detect compute.disks.createSnapshot. Snapshot: Snapshot Creation The process of taking a point-in-time copy of a cloud storage volume (files, settings, configurations, etc.), virtual machine (VM), or database that can be created and deployed in cloud environments. Data Collection Measures: Cloud Platform Logs (IaaS) AWS CloudTrail Logs: Monitor API calls related to snapshot creation (CreateSnapshot). Azure Monitor Logs: Track snapshot creation (Microsoft.Compute/snapshots/write). Google Cloud Logging: Detect compute.disks.createSnapshot. Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. .001 Create Snapshot The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.In AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.[3]In Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.[4]Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the gcloud compute instances create command to create a new VM disk from a snapshot.[5] It is also possible to detect the usage of the GCP API with the sourceSnapshot parameter pointed to global/snapshots/[BOOT_SNAPSHOT_NAME].[6] Enterprise T1537 Transfer Data to Cloud Account Monitor account activity for attempts to create and share data, such as snapshots or backups, with untrusted or unusual accounts. Analytic 1 - Detecting Suspicious Snapshot Exfiltration (EventCode=\"CreateSnapshot\" OR EventCode=\"ModifySnapshotAttribute\" OR source=\"Google_Admin_Logs\")| where (action IN (\"create_snapshot\", \"modify_snapshot_acl\", \"backup_created\"))| stats count by _time, host, user, action, snapshot_name| where count >= 3| eval risk_score=case( snapshot_name LIKE \"%backup%\" OR snapshot_name LIKE \"%export%\", 9, snapshot_name LIKE \"%snapshot%\", 8)| where risk_score >= 8| table _time, host, user, action, snapshot_name, risk_score Snapshot: Snapshot Deletion The removal of a point-in-time backup of a cloud storage volume, virtual machine (VM), or database. Data Collection Measures: AWS CloudTrail Logs DeleteSnapshot API calls in EC2, RDS, and EBS services. Azure Monitor Logs Tracks snapshot deletions via Microsoft.Compute/snapshots/delete API calls. Google Cloud Logging Detects snapshot removal through compute.disks.deleteSnapshot events. Snapshot: Snapshot Deletion The removal of a point-in-time backup of a cloud storage volume, virtual machine (VM), or database. Data Collection Measures: AWS CloudTrail Logs DeleteSnapshot API calls in EC2, RDS, and EBS services. Azure Monitor Logs Tracks snapshot deletions via Microsoft.Compute/snapshots/delete API calls. Google Cloud Logging Detects snapshot removal through compute.disks.deleteSnapshot events. Domain ID Name Detects Enterprise T1485 Data Destruction Monitor for unexpected deletion of a snapshot (ex: AWS DeleteSnapshot, DeleteDBSnapshot) Enterprise T1490 Inhibit System Recovery Monitor for unexpected deletion of snapshots (ex: AWS DeleteSnapshot, DeleteDBSnapshot), especially those associated with cloud backups. Enterprise T1578 Modify Cloud Compute Infrastructure Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the deletion of multiple snapshots within a short period of time. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. Snapshot: Snapshot Enumeration The process of listing or retrieving metadata about existing snapshots in a cloud environment. Data Collection Measures: AWS CloudTrail Logs API calls such as DescribeSnapshots, ListSnapshots, and GetSnapshotAttributes. Azure Monitor Logs Tracks snapshot enumeration via Microsoft.Compute/snapshots/read. Google Cloud Logging Detects snapshot listing through compute.disks.listSnapshots. Snapshot: Snapshot Enumeration The process of listing or retrieving metadata about existing snapshots in a cloud environment. Data Collection Measures: AWS CloudTrail Logs API calls such as DescribeSnapshots, ListSnapshots, and GetSnapshotAttributes. Azure Monitor Logs Tracks snapshot enumeration via Microsoft.Compute/snapshots/read. Google Cloud Logging Detects snapshot listing through compute.disks.listSnapshots. Domain ID Name Detects Enterprise T1580 Cloud Infrastructure Discovery Monitor cloud logs for API calls and other potentially unusual activity related to snapshot enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. Snapshot: Snapshot Metadata Contextual data about a snapshot, which may include information such as ID, type, and status Snapshot: Snapshot Metadata Contextual data about a snapshot, which may include information such as ID, type, and status Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure Periodically baseline snapshots to identify malicious modifications or additions. .001 Create Snapshot Periodically baseline snapshots to identify malicious modifications or additions. Enterprise T1537 Transfer Data to Cloud Account Periodically baseline snapshots to identify malicious modifications or additions. Snapshot: Snapshot Modification Changes made to a cloud snapshot's metadata, attributes, or control settings. These modifications may involve adjusting access permissions, changing retention policies, or altering encryption settings. Data Collection Measures: AWS CloudTrail Tracks API calls such as ModifySnapshotAttribute, ResetSnapshotAttribute, and ModifySnapshotTier. Azure Monitor Logs Logs changes via Microsoft.Compute/snapshots/write. Google Cloud Logging Captures modifications through compute.snapshots.setIamPolicy and compute.snapshots.patch. Snapshot: Snapshot Modification Changes made to a cloud snapshot's metadata, attributes, or control settings. These modifications may involve adjusting access permissions, changing retention policies, or altering encryption settings. Data Collection Measures: AWS CloudTrail Tracks API calls such as ModifySnapshotAttribute, ResetSnapshotAttribute, and ModifySnapshotTier. Azure Monitor Logs Logs changes via Microsoft.Compute/snapshots/write. Google Cloud Logging Captures modifications through compute.snapshots.setIamPolicy and compute.snapshots.patch. Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the mounting of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. Enterprise T1537 Transfer Data to Cloud Account Monitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs. References Microsoft. (2021, September 16). Create a snapshot of a virtual hard disk. Retrieved October 13, 2021. Amazon. (n.d.). Amazon EBS snapshots. Retrieved October 13, 2021. Amazon. (2020). Logging AWS Backup API Calls with AWS CloudTrail. Retrieved April 27, 2020. Microsoft. (2019, June 4). Monitor at scale by using Azure Monitor. Retrieved May 1, 2020. Google. (n.d.). Audit Logs. Retrieved June 1, 2020. Google. (2020, April 23). Creating and Starting a VM instance. Retrieved May 1, 2020. "
},
{
"id": 1125,
"title": "Process, Data Source DS0009",
"path": "/datasources/DS0009/index.html",
"content": " Process Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures[1] ID: DS0009 \u24d8 Platforms: Android, ESXi, Linux, Windows, iOS, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.2 Created: 20 October 2021 Last Modified: 18 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Process: OS API Execution Calls made by a process to operating system-provided Application Programming Interfaces (APIs). These calls are essential for interacting with system resources such as memory, files, and hardware, or for performing system-level tasks. Monitoring these calls can provide insight into a process's intent, especially if the process is malicious. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: Leverage tools to monitor API execution behaviors at the process level. Example: Sysmon Event ID 10 captures API call traces for process access and memory allocation. Process Monitor (ProcMon): Use ProcMon to collect detailed logs of process and API activity. ProcMon can provide granular details on API usage and identify malicious behavior during analysis. Windows Event Logs: Use Event IDs from Windows logs for specific API-related activities: Event ID 4688: A new process has been created (can indirectly infer API use). Event ID 4657: A registry value has been modified (to monitor registry-altering APIs). Dynamic Analysis Tools: Tools like Cuckoo Sandbox, Flare VM, or Hybrid Analysis monitor API execution during malware detonation. Host-Based Logs: On Linux/macOS systems, leverage audit frameworks (e.g., auditd, strace) to capture and analyze system call usage that APIs map to. Runtime Monitors: Runtime security tools like Falco can monitor system-level calls for API execution. Debugging and Tracing: Use debugging tools like gdb (Linux) or WinDbg (Windows) for deep tracing of API executions in real time. Process: OS API Execution Calls made by a process to operating system-provided Application Programming Interfaces (APIs). These calls are essential for interacting with system resources such as memory, files, and hardware, or for performing system-level tasks. Monitoring these calls can provide insight into a process's intent, especially if the process is malicious. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: Leverage tools to monitor API execution behaviors at the process level. Example: Sysmon Event ID 10 captures API call traces for process access and memory allocation. Process Monitor (ProcMon): Use ProcMon to collect detailed logs of process and API activity. ProcMon can provide granular details on API usage and identify malicious behavior during analysis. Windows Event Logs: Use Event IDs from Windows logs for specific API-related activities: Event ID 4688: A new process has been created (can indirectly infer API use). Event ID 4657: A registry value has been modified (to monitor registry-altering APIs). Dynamic Analysis Tools: Tools like Cuckoo Sandbox, Flare VM, or Hybrid Analysis monitor API execution during malware detonation. Host-Based Logs: On Linux/macOS systems, leverage audit frameworks (e.g., auditd, strace) to capture and analyze system call usage that APIs map to. Runtime Monitors: Runtime security tools like Falco can monitor system-level calls for API execution. Debugging and Tracing: Use debugging tools like gdb (Linux) or WinDbg (Windows) for deep tracing of API executions in real time. Domain ID Name Detects Enterprise T1548 Abuse Elevation Control Mechanism Also look for any process API calls for behavior that may be indicative of Process Injection. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling. .004 Elevated Execution with Prompt Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling. Enterprise T1134 Access Token Manipulation Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., LogonUser [2], DuplicateTokenEx[3], and ImpersonateLoggedOnUser[4]). Please see the referenced Windows API pages for more information. .001 Token Impersonation/Theft Monitor for API calls associated with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators, such as DuplicateToken(Ex), ImpersonateLoggedOnUser , and SetThreadToken. .002 Create Process with Token Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such as CreateProcessWithTokenW and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators. .003 Make and Impersonate Token Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior, such as LogonUser and SetThreadToken. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators .004 Parent PID Spoofing Monitor for API calls to CreateProcess/CreateProcessA, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information[5]). Malicious use of CreateProcess/CreateProcessA may also be proceeded by a call to UpdateProcThreadAttribute, which may be necessary to update process creation attributes.[6]This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible. .005 SID-History Injection Monitor for API calls, such as PowerShell's Get-ADUser cmdlet or Windows API DsAddSidHistory function, to examine data in user\u2019s SID-History attributes, especially users who have SID-History values from the same domain. Enterprise T1087 .001 Account Discovery: Local Account Monitor for API calls (such as NetUserEnum()) that may attempt to gather local accounts information such as type of user, privileges and groups. .002 Account Discovery: Domain Account Monitor for API calls that may attempt to gather information about domain accounts such as type of user, privileges and groups. Enterprise T1010 Application Window Discovery Monitor for API calls (such as GetForegroundWindow()) that may attempt to get a listing of open application windows. GetForegroundWindow api returns a handle to the foreground window (the window with which the user is currently working). Other API calls relevant to Local Group discovery include GetProcesses and GetForegroundWindow. GetProcesses api returns an array of type Process that represents all the process resources running on the local computer. Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary. Enterprise T1123 Audio Capture Monitor for API calls associated with leveraging a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information. Enterprise T1547 Boot or Logon Autostart Execution Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. .010 Port Monitors Monitor process API calls to AddMonitor.[7] .012 Print Processors Monitor process API calls to AddPrintProcessor and GetPrintProcessorDirectory. Enterprise T1115 Clipboard Data Monitor API calls that could collect data stored in the clipboard from users copying information within or between applications. Enterprise T1059 .002 Command and Scripting Interpreter: AppleScript Monitor for execution of AppleScript through osascript and usage of the NSAppleScript and OSAScript APIs that may be related to other suspicious behavior occurring on the system. Analytic 1 - Look for unusual OS API execution related to AppleScript. sourcetype=macOS:Syslog OR sourcetype=macOS:Process| search (process_name=\"NSAppleScript\" OR process_name=\"OSAScript\") Enterprise T1543 Create or Modify System Process Monitor for API calls that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. .003 Windows Service Monitor for API calls that may create or modify Windows services (ex: CreateServiceW()) to repeatedly execute malicious payloads as part of persistence. Enterprise T1555 Credentials from Password Stores Monitor for API calls that may search for common password storage locations to obtain user credentials. .001 Keychain Monitor for Keychain Services API calls, specifically legacy extensions such as SecKeychainFindInternetPassword, that may collect Keychain data from a system to acquire credentials.[8] Analytic 1 - Suspicious Keychain API calls. index=security sourcetype=\"macos_secure\"(event_type=\"api_call\" AND api IN (\"SecKeychainCopySearchList\", \"SecKeychainFindGenericPassword\", \"SecKeychainFindInternetPassword\", \"SecKeychainOpen\", \"SecKeychainCopyDefault\", \"SecItemCopyMatching\")) .003 Credentials from Web Browsers Monitor for API calls that may acquire credentials from web browsers by reading files specific to the target browser.[9] Analytic 1 - Suspicious API calls related to web browser credential access. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") event_type=\"api_call\"(api IN (\"CryptUnprotectData\", \"NSS_Init\", \"PK11SDR_Decrypt\", \"SecItemCopyMatching\", \"SecItemAdd\", \"SecItemUpdate\", \"SecItemDelete\")) .004 Windows Credential Manager Consider monitoring API calls such as CredEnumerateA that may list credentials from the Windows Credential Manager.[10][11] Analytic 1 - Suspicious API calls related to Windows Credential Manager access. index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" event_type=\"api_call\"(api IN (\"CredEnumerateA\", \"CredEnumerateW\", \"CredReadA\", \"CredReadW\", \"CryptUnprotectData\")) .005 Password Managers Monitor for API calls that may search for common password storage locations to obtain user credentials. Analytic 1 - Suspicious API calls related to password manager access. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") EventCode IN (1, 11, 4688)(api IN (\"CryptUnprotectData\", \"OpenProcess\", \"ReadProcessMemory\", \"EnumProcesses\", \"EnumProcessModules\") OR CommandLine IN (\"keepass\", \"lastpass\", \"1password\", \"bitwarden\", \"dashlane\", \"passwordsafe\")) Enterprise T1005 Data from Local System Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. ICS T0893 Data from Local System Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data. Enterprise T1565 Data Manipulation Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information. .002 Transmitted Data Manipulation Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information. .003 Runtime Data Manipulation Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information. Enterprise T1622 Debugger Evasion Monitor for API calls (such as IsDebuggerPresent()) that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required. Enterprise T1652 Device Driver Discovery Monitor for API calls (such as EnumDeviceDrivers()) that may attempt to gather information about local device drivers. Enterprise T1482 Domain Trust Discovery Monitor for API calls associated with gathering information on domain trust relationships that may be used to identify lateral movement like DSEnumerateDomainTrusts() Win32 API call to spot activity associated with Domain Trust Discovery.[12] Information may also be acquired through Windows system management tools such as PowerShell. The .NET method GetAllTrustRelationships() can be an indicator of Domain Trust Discovery.[13] Enterprise T1611 Escape to Host Monitor for unexpected usage of syscalls such as mount that may indicate an attempt to escape from a privileged container to host. Enterprise T1546 .009 Event Triggered Execution: AppCert DLLs Monitor and analyze application programming interface (API) calls that are indicative of Registry edits, such as RegCreateKeyEx and RegSetValueEx. [14] .010 Event Triggered Execution: AppInit DLLs Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx. [14] Enterprise T1480 .002 Execution Guardrails: Mutual Exclusion Monitor for suspicious API calls associated with system mutex creation, such as CreateMutex/CreateMutexA on Windows systems.[15] For example, it is rare for legitimate programs to create random mutex names.[16] Additionally, monitor for suspicious syscalls associated with lock files, such as flock on Linux. ICS T0871 Execution through API Devices that provide user access to the underlying operating system may allow the installation of custom software to monitor OS API execution. Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Enterprise T1083 File and Directory Discovery Monitor for API calls that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Enterprise T1564 Hide Artifacts Monitor for API calls that may attempt to hide artifacts associated with their behaviors to evade detection. .004 NTFS File Attributes Monitor calls to the ZwSetEaFile and ZwQueryEaFile Windows API functions as well as binaries used to interact with EA, [17] [18] and consider regularly scanning for the presence of modified information. [19] .013 Bind Mounts Configure auditd rules to monitor use of the mount system call, especially with respect to the /proc directory. Bind mount activity invokes mount() with the MS_BIND flag. Analytic 1 - Using eBPF or sys call logging index=syscalls source=\"/var/log/audit/audit.log\"| search syscall=\"mount\"| regex args=\".bind.\"| eval suspicious=if(like(args, \"%/proc/%\") AND like(args, \"%bind%\"), 1, 0)| stats count by pid, exe, args, uid, suspicious| where suspicious=1 Enterprise T1574 .013 Hijack Execution Flow: KernelCallbackTable Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as WriteProcessMemory() and NtQueryInformationProcess() with the parameter set to ProcessBasicInformation may be used for this technique.[20] ICS T0874 Hooking Monitor for API calls that can be used to install a hook procedure, such as the SetWindowsHookEx and SetWinEventHook functions.[21][22] Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools[22][23][24] or by programmatically examining internal kernel structures.[25][26] Enterprise T1562 Impair Defenses Monitor for the abnormal execution of API functions associated with system logging. For example, Bitlocker can be disabled by calling DisableKeyProtectors with DisableCount to 0 for protected drives.[27] .012 Disable or Modify Linux Audit System Monitor for abnormal execution of syslog and other functions associated with system logging. Enterprise T1070 Indicator Removal Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. .001 Clear Windows Event Logs Monitor for Windows API calls that may clear Windows Event Logs to hide the activity of an intrusion. .006 Timestomp Monitor for API calls that may delete or alter generated artifacts on a host system. APIs (e.g., SetFileTime, NtSetInformationFile, NtQueryInformationFile) can be utilized to manipulate timestamps.[28][29] ICS T0872 Indicator Removal on Host Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Enterprise T1056 Input Capture Monitor for API calls to SetWindowsHook, GetKeyState, and GetAsyncKeyState.[30] .001 Keylogging Monitor for API calls to the SetWindowsHook, GetKeyState, and GetAsyncKeyState.[30] and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes. .004 Credential API Hooking Monitor for API calls to the SetWindowsHookEx and SetWinEventHook functions, which install a hook procedure.[21][22] Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools[22][23][24] or by programmatically examining internal kernel structures.[25][26] Enterprise T1036 Masquerading Monitor for API calls such as fork() which can be abused to masquerade or manipulate process metadata. .009 Break Process Trees Monitor for API calls such as fork() which can be abused to masquerade or manipulate process metadata. Enterprise T1556 Modify Authentication Process Monitor for calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).[31] Monitor for abnormal API calls to NPLogonNotify() that may highlight malicious network provider DLLs.[32] Analytic 1 - Unauthorized API calls to manipulate lsass.exe or abnormal API calls index=security sourcetype IN (\"Sysmon\", \"WinEventLog:Security\", \"Powershell\", \"linux_audit\", \"macos_secure\")(EventCode=4688 OR EventCode=10 OR EventID=4104)| eval CommandLine=coalesce(CommandLine, process_command_line, message)| eval User=coalesce(User, user, user_name)| eval Platform=case( sourcetype==\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"Windows\", sourcetype==\"linux_audit\", \"Linux\", sourcetype==\"macos_secure\", \"macOS\", true(), \"Unknown\")| search CommandLine IN (\"SetWindowsHookEx\", \"LogonUser\", \"AuthenticateUser\", \"pam_unix\", \"pam_exec\", \"osascript\", \"launchctl\")| eval isSuspicious=if( (Platform=\"Windows\" AND (match(CommandLine, \".SetWindowsHookEx.|.LogonUser.|.CredWrite.\"))), (Platform=\"Linux\" AND (match(CommandLine, \".pam_unix.|.pam_exec.\"))), (Platform=\"macOS\" AND (match(CommandLine, \".osascript.|.launchctl.\"))), \"Yes\", \"No\")| where isSuspicious=\"Yes\"| stats count by _time, User, CommandLine, Platform, host| where count > 1| table _time, User, CommandLine, Platform, host, count| sort -count Analytic 2 - Unauthorized API calls to manipulate lsass.exe or abnormal API calls to NPLogonNotify(). index=security_logs source=\"WinEventLog:Security\" | eval suspicious_processes=if((process_name=\"lsass.exe\" AND action=\"OpenProcess\") OR (dll_name IN (\"cryptdll.dll\", \"samsrv.dll\") AND (action=\"modify\" OR action=\"load\")) OR (api_call=\"NPLogonNotify\" AND dll_name=\"unknown\")), \"true\", \"false\")| search suspicious_processes=\"true\"| stats count by host, process_name, dll_name, api_call, user, action| where count > 1 .001 Domain Controller Authentication Monitor for API calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller .008 Network Provider DLL Monitor for abnormal API calls to NPLogonNotify().[32] Enterprise T1112 Modify Registry Monitor for API calls associated with concealing Registry keys, such as Reghide.[33] Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns[34] and RegDelNull[35]. Other API calls relevant to Registry Modification include RegOpenKeyExA, RegCreateKeyExA,RegDeleteKeyExA, RegDeleteValueExA, RegEnumKeyExA, RegEnumValueExA, among others. Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary. Enterprise T1111 Multi-Factor Authentication Interception Monitor for API calls associated with polling to intercept keystrokes. Enterprise T1106 Native API Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. ICS T0834 Native API Devices that provide user access to the underlying operating system may allow the installation of custom software to monitor OS API execution. Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. ICS T0840 Network Connection Enumeration Monitor for API calls (such as GetAdaptersInfo() and GetIpNetTable()) that may gather details about the network configuration and settings, such as IP and/or MAC addresses. Also monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. For added context on adversary procedures and background see System Network Configuration Discovery Mitigation and System Network Connections Discovery Mitigation. Enterprise T1135 Network Share Discovery Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Enterprise T1027 Obfuscated Files or Information Monitor and analyze calls to functions such as GetProcAddress() that are associated with malicious code obfuscation.[36] .007 Dynamic API Resolution Monitor and analyze calls to functions such as GetProcAddress() and LoadLibrary() that are associated with dynamically loading API functions.[36] Enterprise T1003 OS Credential Dumping Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. .001 LSASS Memory Monitor for API calls that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). OS API calls associated with LSASS process dumping include OpenProcess and MiniDumpWriteDump. Execution of these functions might trigger security log ids such as 4663 (Microsoft Security Auditing) and 10 (Microsoft Sysmon) Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary. Enterprise T1120 Peripheral Device Discovery Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system. Enterprise T1069 .001 Permission Groups Discovery: Local Groups Monitor for API calls associated with finding local system groups and permission settings, such as NetLocalGroupEnum. Other API calls relevant to Local Group discovery include NetQueryDisplayInformation and NetGetDisplayInformationIndex. Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary. .002 Permission Groups Discovery: Domain Groups Monitor for API calls associated with finding domain-level groups and permission settings, such as NetGroupEnum. Other API calls relevant to Domain Group discovery include NetQueryDisplayInformation and NetGetDisplayInformationIndex. Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary. Enterprise T1542 Pre-OS Boot Monitor for API calls that may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. Disk check, forensic utilities, and data from device drivers (i.e. API calls) may reveal anomalies that warrant deeper investigation. [37] .002 Component Firmware Monitor for API calls associated with the use of device drivers and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) [38] [39] disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms. Enterprise T1057 Process Discovery Monitor for API calls may attempt to get information about running processes on a system. Enterprise T1055 Process Injection Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread, SuspendThread/SetThreadContext/ResumeThread, QueueUserAPC/NtQueueApcThread, and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[14] Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.[40] [41] [42] [43] .001 Dynamic-link Library Injection Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[14] Search for remote thread creations that start at LoadLibraryA or LoadLibraryW. Depending on the tool, it may provide additional information about the DLL string that is an argument to the function. If there is any security software that legitimately injects DLLs, it must be carefully whitelisted. Microsoft Windows allows for processes to remotely create threads within other processes of the same privilege level. This functionality is provided via the Windows API CreateRemoteThread. Both Windows and third-party software use this ability for legitimate purposes. For example, the Windows process csrss.exe creates threads in programs to send signals to registered callback routines. Both adversaries and host-based security software use this functionality to inject DLLs, but for very different purposes. An adversary is likely to inject into a program to evade defenses or bypass User Account Control, but a security program might do this to gain increased monitoring of API calls. One of the most common methods of DLL Injection is through the Windows API LoadLibrary. Allocate memory in the target program with VirtualAllocEx Write the name of the DLL to inject into this program with WriteProcessMemory Create a new thread and set its entry point to LoadLibrary using the API CreateRemoteThread. This behavior can be detected by looking for thread creations across processes, and resolving the entry point to determine the function name. If the function is LoadLibraryA or LoadLibraryW, then the intent of the remote thread is clearly to inject a DLL. When this is the case, the source process must be examined so that it can be ignored when it is both expected and a trusted process. .002 Portable Executable Injection Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[14] .003 Thread Execution Hijacking Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread, SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[14] .004 Asynchronous Procedure Call Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as SuspendThread/SetThreadContext/ResumeThread, QueueUserAPC/NtQueueApcThread, and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[14] .005 Thread Local Storage Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread, SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[14] .008 Ptrace System Calls Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.[40] [41] [42] [43] .011 Extra Window Memory Injection Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong [44] and SetWindowLong [45]. Malware associated with this technique have also used SendNotifyMessage [46] to trigger the associated window procedure and eventual malicious injection. [14] .012 Process Hollowing Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as CreateRemoteThread, SuspendThread/SetThreadContext/ResumeThread, and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be used for this technique.[14] .013 Process Doppelg\u00e4nging Monitor and analyze calls to CreateTransaction, CreateFileTransacted, RollbackTransaction, and other rarely used functions indicative of TxF activity. Process Doppelg\u00e4nging also invokes an outdated and undocumented implementation of the Windows process loader via calls to NtCreateProcessEx and NtCreateThreadEx as well as API calls used to modify memory within another process, such as WriteProcessMemory. [47] [48] .014 VDSO Hijacking Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.[40][41][42][43] .015 ListPlanting Consider monitoring for excessive use of SendMessage and/or PostMessage API functions with LVM_SETITEMPOSITION and/or LVM_GETITEMPOSITION arguments. Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as FindWindow, FindWindowEx, EnumWindows, EnumChildWindows, and those that can be used to modify memory within another process, such as VirtualAllocEx/WriteProcessMemory, may be abused for this technique. Enterprise T1012 Query Registry Monitor for API calls (such as RegOpenKeyExA) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. OS API calls associated with querying the Windows Registry are RegOpenKeyEx , RegOpenUserClassesRoot, RegQueryValueExA, and RegQueryValueExW. Execution of these functions might trigger security log ids such as 4663 (Microsoft Security Auditing). Also monitor for RegOpenUserClassesRoot api to retrieve a handle to the HKEY_CLASSES_ROOT key for a specified user. The returned key has a view of the registry that merges the contents of the HKEY_LOCAL_MACHINE\\Software\\Classes key with the contents of the Software\\Classes keys in the user's registry hive. Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Enterprise T1620 Reflective Code Loading Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as Assembly.Load() and Native API functions such as CreateThread(), memfd_create(), execve(), and/or execveat().[49][50] Enterprise T1113 Screen Capture Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such as CopyFromScreen, xwd, or screencapture.[51][52]. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment. ICS T0852 Screen Capture Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such as CopyFromScreen, xwd, or screencapture.[51][52] The data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment. Enterprise T1489 Service Stop Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, ChangeServiceConfigW may be used by an adversary to prevent services from starting.[9] ICS T0881 Service Stop Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, ChangeServiceConfigW may be used by an adversary to prevent services from starting. For added context on adversary procedures and background see Service Stop Mitigation. Enterprise T1129 Shared Modules Monitor API calls such as LoadLibrary (Windows) or dlopen (Linux/macOS) that load shared modules. Enterprise T1518 Software Discovery Monitor for API calls that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. .001 Security Software Discovery Monitor for API calls that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. OS API calls associated with LSASS process dumping include EnumProcesses, which can be used to enumerate the set of processes running on a host and filtered to look for security-specific processes. Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary. Enterprise T1218 System Binary Proxy Execution Monitor for API calls that bypass process and/or signature based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. .002 Control Panel Monitor for API calls that may forge web cookies that can be used to gain access to web applications or Internet services. Enterprise T1082 System Information Discovery Monitor for API calls that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations. Enterprise T1614 System Location Discovery Remote access tools with built-in features may interact directly with the Windows API, such as calling GetLocaleInfoW to gather information.[53] .001 System Language Discovery Monitor for API calls that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. Enterprise T1016 System Network Configuration Discovery Monitor for API calls (such as GetAdaptersInfo() and GetIpNetTable()) that may gather details about the network configuration and settings, such as IP and/or MAC addresses. .002 Wi-Fi Discovery Monitor for API calls (such as those from wlanAPI.dll) that may gather details about locally reachable Wi-Fi networks. Enterprise T1049 System Network Connections Discovery Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Enterprise T1033 System Owner/User Discovery Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Enterprise T1007 System Service Discovery Monitor for API calls associated with gathering information about registered local system services, such as QueryServiceStatusEx. Other Windows API calls worth monitoring include EnumServicesStatusExA, which can be used to enumerate services in the service control manager database. Note: Most EDR tools do not support direct monitoring of API calls due to the sheer volume of calls produced by an endpoint but may have alerts or events that are based on abstractions of OS API calls. Dynamic malware analysis tools (i.e., sandboxes) can be used to trace the execution, including OS API calls, for a single PE binary. Enterprise T1124 System Time Discovery Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information. Enterprise T1125 Video Capture Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system. Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data. Mobile T1670 Virtualization Solution Monitor for API calls that are related to GooglePlayServices. Enterprise T1497 Virtualization/Sandbox Evasion Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. .001 System Checks Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. .002 User Activity Based Checks Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. .003 Time Based Evasion Monitor for API calls that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Process: Process Access Refers to an event where one process attempts to open another process, typically to inspect or manipulate its memory, access handles, or modify execution flow. Monitoring these access attempts can provide valuable insight into both benign and malicious behaviors, such as debugging, inter-process communication (IPC), or process injection. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: EDR solutions that provide telemetry on inter-process access and memory manipulation. Sysmon (Windows): Event ID 10: Captures process access attempts, including: Source process (initiator) Target process (victim) Access rights requested Process ID correlation Windows Event Logs: Event ID 4656 (Audit Handle to an Object): Logs access attempts to system objects. Event ID 4690 (Attempted Process Modification): Can help identify unauthorized process changes. Linux/macOS Monitoring: AuditD: Monitors process access through syscall tracing (e.g., ptrace, open, read, write). eBPF/XDP: Used for low-level monitoring of kernel process access. OSQuery: Query process access behavior via structured SQL-like logging. Procmon (Process Monitor) and Debugging Tools: Windows Procmon: Captures real-time process interactions. Linux strace / ptrace: Useful for tracking process behavior at the system call level. Process: Process Access Refers to an event where one process attempts to open another process, typically to inspect or manipulate its memory, access handles, or modify execution flow. Monitoring these access attempts can provide valuable insight into both benign and malicious behaviors, such as debugging, inter-process communication (IPC), or process injection. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: EDR solutions that provide telemetry on inter-process access and memory manipulation. Sysmon (Windows): Event ID 10: Captures process access attempts, including: Source process (initiator) Target process (victim) Access rights requested Process ID correlation Windows Event Logs: Event ID 4656 (Audit Handle to an Object): Logs access attempts to system objects. Event ID 4690 (Attempted Process Modification): Can help identify unauthorized process changes. Linux/macOS Monitoring: AuditD: Monitors process access through syscall tracing (e.g., ptrace, open, read, write). eBPF/XDP: Used for low-level monitoring of kernel process access. OSQuery: Query process access behavior via structured SQL-like logging. Procmon (Process Monitor) and Debugging Tools: Windows Procmon: Captures real-time process interactions. Linux strace / ptrace: Useful for tracking process behavior at the system call level. Domain ID Name Detects Enterprise T1185 Browser Session Hijacking This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor for Process Injection against browser applications. Enterprise T1555 Credentials from Password Stores Monitor for processes being accessed that may search for common password storage locations to obtain user credentials. Analytic 1 - Unauthorized process access indicating credential searches. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\")(EventCode=10 TargetImage IN (\"lsass.exe\", \"securityd\", \"ssh-agent\", \"gpg-agent\") OR EventCode=11 TargetObject IN (\"password\", \"creds\", \"credentials\", \"secrets\", \"keychain\", \".kdbx\", \".pfx\", \".pem\", \".p12\", \".key\") OR EventCode=1 CommandLine IN (\"mimikatz\", \"procdump\", \"gcore\", \"dbxutil\", \"security find-generic-password\", \"security find-internet-password\", \"security dump-keychain\", \"gsettings get org.gnome.crypto.cache\")) .002 Securityd Memory Monitor for processes being accessed that may obtain root access (allowing them to read securityd\u2019s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user\u2019s logon keychain. Analytic 1 - Unauthorized process access indicating attempts to read securityd\u2019s memory. index=security sourcetype IN (\"linux_secure\", \"macos_secure\") event_type=\"process\"(CommandLine IN (\"gcore\", \"dbxutil\", \"vmmap\", \"gdb\", \"lldb\", \"memdump\", \"strings\", \"cat /proc//maps\", \"grep /proc//maps\") OR (CommandLine IN (\"securityd\" AND CommandLine IN (\"ps\", \"lsof\", \"pmap\"))) .003 Credentials from Web Browsers Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.). Analytic 1 - Unauthorized process access indicating credential searches in web browsers. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") event_type=\"process\"(CommandLine IN (\"sqlite3 logins\", \"sqlcipher logins\", \"db-browser Login Data\", \"db-browser logins.json\", \"CryptUnprotectData\", \"security find-internet-password\", \"security dump-keychain\", \"strings Login Data\", \"cat Login Data\", \"cat logins.json\", \"sqlite3 signons.sqlite\")) .005 Password Managers Monitor process being accessed that may acquire user credentials from third-party password managers.[54] Analytic 1 - Unauthorized process access indicating credential searches in password managers. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") EventCode IN (1, 10, 11)(Image IN (\"keepass\", \"lastpass\", \"1password\", \"bitwarden\", \"dashlane\", \"passwordsafe\") OR TargetImage IN (\"keepass\", \"lastpass\", \"1password\", \"bitwarden\", \"dashlane\", \"passwordsafe\")) Enterprise T1559 Inter-Process Communication Monitor processes that attempt to access other processes, especially if the access is unusual (such as low-privileged processes interacting with high-privileged processes like a VPN service).[55] Analytic 1 - Abnormal process access. sourcetype=Sysmon EventCode=10| search access_type=\"IPC\" AND process_privilege!=\"high\"| stats count by process_name target_process_name user| where target_process_name IN (\"VPNService\", \"Systemd\", \"svchost.exe\") .003 XPC Services Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.[55] Enterprise T1556 Modify Authentication Process Monitor for unexpected processes interacting with authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. Analytic 1 - Unauthorized process interactions with authentication mechanisms. ( index=your_index source=\"WinEventLog:Security\" EventCode=4688 | where (New_Process_Name IN (\"C:\\Windows\\System32\\lsass.exe\", \"C:\\Windows\\System32\\winlogon.exe\"))AND (Parent_Process_Name != \"C:\\Windows\\System32\\services.exe\")| stats count by New_Process_Name, Parent_Process_Name, Account_Name, ComputerName) OR (index=your_index sourcetype=linux_auditd| where file IN (\"/etc/pam.d/\", \"/etc/passwd\", \"/etc/shadow\")| stats count by file, user, host ) .001 Domain Controller Authentication Monitor for unexpected processes interacting with the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts. Analytic 1 - Unauthorized process interactions with domain controller authentication processes. index=windows_logs (sourcetype=\"WinEventLog:Security\" OR sourcetype=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\")| search (EventCode=4688 AND New_Process_Name=\"\\lsass.exe\") OR (EventCode=10 AND TargetImage=\"\\lsass.exe\")| eval suspicious_process=case( match(New_Process_Name, \"regex_for_unusual_process_paths\"), \"High\", match(New_Process_Name, \".\\system32\\.\"), \"Medium\", true(), \"Low\" )| stats count by Host, User, New_Process_Name, CommandLine, suspicious_process| where suspicious_process=\"High\"| lookup domain_admins user as User OUTPUT admin_status| where isnotnull(admin_status)| join type=left Host [ search index=windows_logs sourcetype=\"WinEventLog:Security\" EventCode=4624 | eval login_time=strftime(_time, \"%Y-%m-%d %H:%M:%S\") | fields Host, login_time, Logon_Type, User ]| eval login_behavior=if(Logon_Type=\"10\" AND admin_status=\"true\", \"External_Admin_Login\", \"Normal_Login\")| table _time, Host, User, New_Process_Name, CommandLine, suspicious_process, login_behavior, login_time| sort - _time Enterprise T1003 OS Credential Dumping Monitor for unexpected processes interacting with lsass.exe.[56] Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity. Linux To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path /proc/<pid>/maps, where the <pid> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs. Analytic 1 - Unauthorized access to credential managers. (index=security sourcetype=\"WinEventLog:Security\" EventCode=10 TargetImage=\"lsass.exe\" SourceImage IN (\"mimikatz.exe\", \"procdump.exe\"))OR (index=security sourcetype=\"linux_secure\" (key=\"path\" value IN (\"/etc/passwd\", \"/etc/shadow\")) (key=\"cmdline\" value IN (\"mimikatz\", \"procdump\")))OR(index=security sourcetype=\"macOS:UnifiedLog\" message IN (\"/var/db/shadow/hash/\", \"/private/etc/master.passwd\") process IN (\"mimikatz\", \"procdump\")) .001 LSASS Memory Monitor for unexpected processes interacting with LSASS.exe.[56] Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity. Usage of Procdump and Windows Task Manager for LSASS dumping can also be detected via process creation events, since they both have a predictable set of command-line arguments (i.e., for specifying the process to be dumped). Note: Sysmon process access events (Event ID 10) can be extremely noisy, which necessitates tweaking the Sysmon configuration file. We recommend taking an approach analogous to that of the Sysmon Modular Configuration project (https://github.com/olafhartong/sysmon-modular) and filtering out any benign processes in your environment that produce large volumes of process access events. The GrantedAccess value in the below analytic for Mimikatz is meant to be used solely as an illustrative example of detecting Mimikatz LSASS access. However, actual GrantedAccess values change over time with different versions of Mimikatz and therefore detection engineers need to verify the accuracy of any GrantedAccess values that their analytics are using. Analytic 1 - Mimikatz (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"10\" AND TargetImage= \"lsass.exe\" AND (GrantedAccess=0x1410 OR GrantedAccess=0x1010 OR GrantedAccess=0x1438 OR GrantedAccess=0x143a OR GrantedAccess=0x1418)CallTrace=\"C:\\windows\\SYSTEM32\\ntdll.dll+|C:\\windows\\System32\\KERNELBASE.dll+20edd|UNKNOWN(*)\") Analytic 2 - Suspicious process access to LSASS memory. ((sourceType=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"10\") AND TargetImage= \"*lsass.exe\" AND SourceImage IN (\"*mimikatz.exe\", \"*procdump.exe\", \"*rundll32.exe\", \"*taskmgr.exe\", \"*powershell.exe\") Enterprise T1055 Process Injection Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. .001 Dynamic-link Library Injection Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. .002 Portable Executable Injection Monitor for processes being viewed that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. .003 Thread Execution Hijacking Monitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. .004 Asynchronous Procedure Call Monitor for processes being viewed that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. .005 Thread Local Storage Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. .008 Ptrace System Calls Monitor for processes being viewed that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. .012 Process Hollowing Monitor for processes being viewed that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Enterprise T1539 Steal Web Session Cookie Monitor for attempts by programs to inject into or dump browser process memory. Analytic 1 - Unauthorized access or injection into browser processes. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 OR EventCode=4663) OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 OR EventCode=10) OR(index=os sourcetype=\"linux_secure\" action=\"execve\" OR action=\"ptrace\") OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\" OR event_type=\"ptrace\") OR(index=gsuite sourcetype=\"gsuite:admin\" event_name=\"LOGIN\" event_type=\"cookie_auth\") OR(index=o365 sourcetype=\"o365:management:activity\" Operation=\"UserLoginViaCookie\") Enterprise T1033 System Owner/User Discovery Monitor for unexpected processes interacting with lsass.exe.[56] Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective Process Injection to reduce potential indicators of malicious activity. Linux To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path /proc/<pid>/maps, where the <pid> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs. Process: Process Creation Refers to the event in which a new process (executable) is initialized by an operating system. This can involve parent-child process relationships, process arguments, and environmental variables. Monitoring process creation is crucial for detecting malicious behaviors, such as execution of unauthorized binaries, scripting abuse, or privilege escalation attempts. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: EDRs provide process telemetry, tracking execution flows and arguments. Windows Event Logs: Event ID 4688 (Audit Process Creation): Captures process creation with associated parent process. Sysmon (Windows): Event ID 1 (Process Creation): Provides detailed logging Linux/macOS Monitoring: AuditD (execve syscall): Logs process creation. eBPF/XDP: Used for low-level monitoring of system calls related to process execution. OSQuery: Allows SQL-like queries to track process events (process_events table). Apple Endpoint Security Framework (ESF): Monitors process creation on macOS. Network-Based Monitoring: Zeek (Bro) Logs: Captures network-based process execution related to remote shells. Syslog/OSSEC: Tracks execution of processes on distributed systems. Behavioral SIEM Rules: Monitor process creation for uncommon binaries in user directories. Detect processes with suspicious command-line arguments. Process: Process Creation Refers to the event in which a new process (executable) is initialized by an operating system. This can involve parent-child process relationships, process arguments, and environmental variables. Monitoring process creation is crucial for detecting malicious behaviors, such as execution of unauthorized binaries, scripting abuse, or privilege escalation attempts. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: EDRs provide process telemetry, tracking execution flows and arguments. Windows Event Logs: Event ID 4688 (Audit Process Creation): Captures process creation with associated parent process. Sysmon (Windows): Event ID 1 (Process Creation): Provides detailed logging Linux/macOS Monitoring: AuditD (execve syscall): Logs process creation. eBPF/XDP: Used for low-level monitoring of system calls related to process execution. OSQuery: Allows SQL-like queries to track process events (process_events table). Apple Endpoint Security Framework (ESF): Monitors process creation on macOS. Network-Based Monitoring: Zeek (Bro) Logs: Captures network-based process execution related to remote shells. Syslog/OSSEC: Tracks execution of processes on distributed systems. Behavioral SIEM Rules: Monitor process creation for uncommon binaries in user directories. Detect processes with suspicious command-line arguments. Domain ID Name Detects Enterprise T1548 Abuse Elevation Control Mechanism Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Cyber actors frequently escalate to the SYSTEM account after gaining entry to a Windows host, to enable them to carry out various attacks more effectively. Tools such as Meterpreter, Cobalt Strike, and Empire carry out automated steps to \"Get System\", which is the same as switching over to the System user account. Most of these tools utilize multiple techniques to try and attain SYSTEM: in the first technique, they create a named pipe and connects an instance of cmd.exe to it, which allows them to impersonate the security context of cmd.exe, which is SYSTEM. In the second technique, a malicious DLL is injected into a process that is running as SYSTEM; the injected DLL steals the SYSTEM token and applies it where necessary to escalate privileges. This analytic looks for both of these techniques. Analytic 1 - Get System Elevation (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")(ParentImage=\"C:\\Windows\\System32\\services.exe\" Image=\"C:\\Windows\\System32\\cmd.exe\" CommandLine=\"echo\" CommandLine=\"\\pipe*\") OR (Image=\"C:\\Windows\\System32\\rundll32.exe\" CommandLine=\",a /p:*\") .002 Bypass User Account Control Monitor newly executed processes, such as eventvwr.exe and sdclt.exe, that may bypass UAC mechanisms to elevate process privileges on system. Threat actors often, after compromising a machine, try to disable User Access Control (UAC) to escalate privileges. This is often done by changing the registry key for system policies using \"reg.exe\", a legitimate tool provided by Microsoft for modifying the registry via command prompt or scripts. This action interferes with UAC and may enable a threat actor to escalate privileges on the compromised system, thereby allowing further exploitation of the system. Analytic 1 - UAC Bypass (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") IntegrityLevel=High|search (ParentCommandLine=\"\\\"c:\\windows\\system32\\dism.exe\\\"\"\".xml\" AND Image!=\"c:\\users\\\\appdata\\local\\temp\\\\dismhost.exe\") OR ParentImage=c:\\windows\\system32\\fodhelper.exe OR (CommandLine=\"\\\"c:\\windows\\system32\\wusa.exe\\\"/quiet\" AND User!=NOT_TRANSLATED AND CurrentDirectory=c:\\windows\\system32\\ AND ParentImage!=c:\\windows\\explorer.exe) OR CommandLine=\".exe\\\"cleanmgr.exe /autoclean\" OR (ParentImage=\"c:\\windows\\dccw.exe\" AND Image!=\"c:\\windows\\system32\\cttune.exe\") OR Image=\"c:\\program files\\windows media player\\osk.exe\" OR ParentImage=\"c:\\windows\\system32\\slui.exe\"|eval PossibleTechniques=case(like(lower(ParentCommandLine),\"%c:\\windows\\system32\\dism.exe%\"), \"UACME #23\", like(lower(Image),\"c:\\program files\\windows media player\\osk.exe\"), \"UACME #32\", like(lower(ParentImage),\"c:\\windows\\system32\\fodhelper.exe\"), \"UACME #33\", like(lower(CommandLine),\"%.exe\\\"%cleanmgr.exe /autoclean%\"), \"UACME #34\", like(lower(Image),\"c:\\windows\\system32\\wusa.exe\"), \"UACME #36\", like(lower(ParentImage),\"c:\\windows\\%dccw.exe\"), \"UACME #37\", like(lower(ParentImage),\"c:\\windows\\system32\\slui.exe\"), \"UACME #45\") Analytic 2 - Disable UAC (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") ParentImage=\"C:\\Windows\\System32\\cmd.exe\" CommandLine=\"reg.exeHKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\SystemREG_DWORD /d 0*\"\" .003 Sudo and Sudo Caching Monitor newly executed processes that may perform sudo caching and/or use the sudoers file to elevate privileges. .004 Elevated Execution with Prompt Consider monitoring for /usr/libexec/security_authtrampoline executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. .006 TCC Manipulation Monitor for abnormal processes executing under applications with elevated access. Enterprise T1134 Access Token Manipulation Monitor for executed processes that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. .004 Parent PID Spoofing Monitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe Enterprise T1087 Account Discovery Monitor for processes that can be used to enumerate user accounts and groups such as net.exe and net1.exe, especially when executed in quick succession.[57] Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. .001 Local Account Monitor for processes that can be used to enumerate user accounts and groups such as net.exe and net1.exe, especially when executed in quick succession.[57] Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. Note: Event IDs are for Sysmon (Event ID 1 - process creation) and Windows Security Log (Event ID 4688 - a new process has been created). - For Linux, auditing frameworks such as the Linux Auditing System (auditd) can be used to alert on the enumeration/reading of files that store local users, including /etc/passwd. - For MacOS, utilities that work in concert with Apple\u2019s Endpoint Security Framework such as Process Monitor can be used to track usage of commands such as id and groups. Analytic 1 - Net Discovery Commands (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"net.exe\" OR Image=\"net1.exe\" .002 Domain Account Monitor for processes that can be used to enumerate domain accounts and groups, such as net.exe and net1.exe, especially when executed in quick succession.[57] Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell. .003 Email Account Monitor for newly executed processes, such as Windows Management Instrumentation and PowerShell , with arguments that can be used to enumerate email addresses and accounts. Enterprise T1098 Account Manipulation Monitor for newly constructed processes indicative of modifying account settings, such as those that modify authorized_keys or /etc/ssh/sshd_config files. .004 SSH Authorized Keys Monitor for suspicious processes modifying the authorized_keys or /etc/ssh/sshd_config files. ICS T0830 Adversary-in-the-Middle Host-based implementations of this technique may utilize networking-based system calls or network utility commands (e.g., iptables) to locally intercept traffic. Monitor for relevant process creation events. Enterprise T1010 Application Window Discovery Monitor for newly executed processes that may attempt to get a listing of open application windows. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained. Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). Analytic 1 - Suspicious Processes (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") | where CommandLine LIKE \"%Get-Process%\" AND CommandLine LIKE \"%mainWindowTitle%\" Enterprise T1560 Archive Collected Data Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip. .001 Archive via Utility Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip. Before Exfiltration that an adversary has Collection, it is very likely that a Archive Collected Data will be created, so that transfer times are minimized and fewer files are transmitted. There is variety between the tools used to compress data, but the command line usage and context of archiving tools, such as ZIP, RAR, and 7ZIP, should be monitored.In addition to looking for RAR or 7z program names, command line usage of 7Zip or RAR can be detected with the flag usage of \"* a *\". This is helpful, as adversaries may change program names. Note: This analytic looks for the command line argument a, which is used by RAR. However, there may be other programs that have this as a legitimate argument and may need to be filtered out. Analytic 1 - Command Line Usage of Archiving Software (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") CommandLine=\" a \" ICS T0895 Autorun Image Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. Enterprise T1197 BITS Jobs Monitor for newly constructed BITS tasks to enumerate using the BITSAdmin tool (bitsadmin /list /allusers /verbose). Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). Analytic 1 is oriented around looking for the creation of Microsoft Background Intelligent Transfer Service utility (bitsadmin.exe) processes that schedule a BITS job to persist on an endpoint. The analytic identifies the command-line parameters used to create, resume or add a file to a BITS job; these are typically seen combined in a single command-line or executed in sequence. Analytic 2 identifies Microsoft Background Intelligent Transfer Service utility bitsadmin.exe using the transfer parameter to download a remote object. In addition, look for download or upload on the command-line, the switches are not required to perform a transfer. Capture any files downloaded. Review the reputation of the IP or domain used. Typically once executed, a follow on command will be used to execute the dropped file. Network connection or file modification events related will not spawn or create from bitsadmin.exe , but the artifacts will appear in a parallel process of svchost.exe with a command-line similar to svchost.exe -k netsvcs -s BITS . It\u2019s important to review all parallel and child processes to capture any behaviors and artifacts. In some suspicious and malicious instances, BITS jobs will be created. You can use bitsadmin /list /verbose to list out the jobs during investigation. Analytic 1 - BITS Job Persistence (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\System32\\bitsadmin.exe\" AND (CommandLine= \"create\" OR CommandLine= \"addfile\" OR CommandLine= \"setnotifyflags\" OR CommandLine= \"setnotifycmdline\" OR CommandLine= \"setminretrydelay\" OR CommandLine= \"setcustomheaders\" OR CommandLine= \"resume\") Analytic 2 - BITSAdmin Download File (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\System32\\bitsadmin.exe\" AND CommandLine= transfer Enterprise T1547 Boot or Logon Autostart Execution Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data to increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. .001 Registry Run Keys / Startup Folder Monitor for newly executed processes executed from the Run/RunOnce registry keys through Windows EID 9707 or \"Software\\Microsoft\\Windows\\CurrentVersion\\Run\" and \"Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\" registry keys with the full command line. Registry modifications are often essential in establishing persistence via known Windows mechanisms. Many legitimate modifications are done graphically via regedit.exe or by using the corresponding channels, or even calling the Registry APIs directly. The built-in utility reg.exe provides a command-line interface to the registry, so that queries and modifications can be performed from a shell, such as cmd.exe. When a user is responsible for these actions, the parent of cmd.exe will likely be explorer.exe. Occasionally, power users and administrators write scripts that do this behavior as well, but likely from a different process tree. These background scripts must be learned so they can be tuned out accordingly. Output DescriptionThe sequence of processes that resulted in reg.exe being started from a shell. That is, a hierarchy that looks like\u2022 great-grand_parent.exe\u2022 grand_parent.exe\u2022 parent.exe\u2022 reg.exe Analytic 1 - Reg.exe called from Command Shell (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"reg.exe\" AND ParentImage=\"cmd.exe\"| join left=L right=R where L.ParentProcessGuid = R.ProcessGuid [search EventCode IN (1, 4688) Image=\"cmd.exe\" ParentImage!=\"explorer.exe\"] .003 Time Providers Monitor newly executed processes, such as the W32tm.exe utility. [58] The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers. [59] .004 Winlogon Helper DLL Monitor for the execution of processes that may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Analytic 1 - Modification of the Winlogon Registry Key (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") | where (CommandLine LIKE \"%Microsoft\\Windows NT\\CurrentVersion\\Winlogon%\" AND (CommandLine LIKE \"%Userinit%\" OR CommandLine LIKE \"%Shell%\" OR CommandLine LIKE \"%Notify%\")) AND (CommandLine LIKE \"%reg%\" OR CommandLine LIKE \"%add%\" OR CommandLine LIKE \"%/d%\" OR CommandLine LIKE \"%Set-ItemProperty%\" OR CommandLine LIKE \"%New-ItemProperty%\" CommandLine LIKE \"%-value%\") .006 Kernel Modules and Extensions Monitor for newly created processes that may modify the kernel to automatically execute programs on system boot. .009 Shortcut Modification Monitor for newly executed processes that may create or edit shortcuts to run a program during system boot or user login. .013 XDG Autostart Entries Monitor newly executed processes that may modify XDG autostart entries to execute programs or commands during system boot. .014 Active Setup Monitor newly executed processes that may achieve persistence by adding a Registry key to the Active Setup of the local machine. .015 Login Items Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior, such as establishing network connections. Enterprise T1037 Boot or Logon Initialization Scripts Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence. Adversaries may schedule software to run whenever a user logs into the system; this is done to establish persistence and sometimes for lateral movement. This trigger is established through the registry key HKEY_CURRENT_USER\\EnvironmentUserInitMprLogonScript. This signature looks edits to existing keys or creation of new keys in that path. Users purposefully adding benign scripts to this path will result in false positives; that case is rare, however. There are other ways of running a script at startup or login that are not covered in this signature. Note that this signature overlaps with the Windows Sysinternals Autoruns tool, which would also show changes to this registry path. Analytic 1 - Boot or Logon Initialization Scripts (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND CommandLine=\"regadd\\EnvironmentUserInitMprLogonScript\" .001 Logon Script (Windows) Monitor for newly constructed processes and/or command-lines that execute logon scripts Analytic 1 - Boot or Logon Initialization Scripts (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND CommandLine=\"regadd\\EnvironmentUserInitMprLogonScript\" .002 Login Hook Monitor for processes and/or command-lines to install or modify login hooks, as well as processes spawned at user login by these hooks. .003 Network Logon Script Monitor for newly constructed processes and/or command-lines that execute logon scripts .004 RC Scripts Monitor for newly constructed processes and/or command-lines that execute /etc/rc.local if present. .005 Startup Items Monitor for newly constructed processes and/or command-lines that execute during the boot up process to check for unusual or unknown applications and behavior Enterprise T1217 Browser Information Discovery Monitor for processes with arguments that may be associated with gathering browser information, such as local files and databases (e.g., %APPDATA%/Google/Chrome).[60] Enterprise T1651 Cloud Administration Command Monitor for process creation events in virtual machines that are associated with cloud VM agents, such as the WindowsAzureGuestAgent.exe process on Azure virtual machines. [61] Analytic 1 - Unexpected process creation sourcetype=process_creation| search process_name IN (\"WindowsAzureGuestAgent.exe\", \"ssm-agent.exe\")| where process_name IN (\"WindowsAzureGuestAgent.exe\", \"ssm-agent.exe\") AND process_path != \"/usr/local/bin/\" Enterprise T1059 Command and Scripting Interpreter Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages. Analytic 1 - Look for unusual command and scripting process creation. (sourcetype=WinEventLog:Security OR sourcetype=sysmon OR sourcetype=linux_secure OR sourcetype=linux_audit OR sourcetype=mac_os_log OR sourcetype=azure:audit OR sourcetype=o365:audit)(EventCode=4688 OR EventID=1 OR _raw=sh OR _raw=python OR _raw=powershell OR _raw=cmd OR _raw=script OR _raw=wscript OR _raw=bash) .001 PowerShell Monitor for newly executed processes that may abuse PowerShell commands and scripts for execution. PowerShell is a scripting environment included with Windows that is used by both attackers and administrators. Execution of PowerShell scripts in most Windows versions is opaque and not typically secured by antivirus which makes using PowerShell an easy way to circumvent security measures. This analytic detects execution of PowerShell scripts. Powershell can be used to hide monitored command line execution such as: net usesc start Note: - The logic for Analytic 1 is based around detecting on non-interactive Powershell sessions (i.e., those not launched by a user through explorer.exe). This may lead to false positives when used in a production environment, so we recommend tuning any such analytics by including additional logic (e.g., looking for suspicious parent processes) that helps filter such events.- The logic for Analytic 2 is based around detecting on remote Powershell sessions. PowerShell can be used over WinRM to remotely run commands on a host. When a remote PowerShell session starts, svchost.exe executes wsmprovhost.exe. Analytic 1 - Non-interactive Powershell Sessions (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"powershell.exe\" AND ParentImage!=\"explorer.exe\" Analytic 2 - Remote Powershell Sessions (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"wsmprovhost.exe\" AND ParentImage=\"svchost.exe\" Analytic 3 - Powershell Execution (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") Image=\"C:\\Windows\\\\powershell.exe\" ParentImage!=\"C:\\Windows\\explorer.exe\"|stats values(CommandLine) as \"Command Lines\" values(ParentImage) as \"Parent Images\" by ComputerName .002 AppleScript Monitor for newly executed processes that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Analytic 1 - Look for unusual AppleScript process creation. sourcetype=macOS:Process| search (parent_process_name=\"osascript\" OR parent_process_name=\"NSAppleScript\" OR parent_process_name=\"OSAScript\") Analytic 2 - Untrusted Locations source=\"Osquery:\" EventCode=\"process_added\" AND Path LIKE \"/Users//Downloads/\" OR Path LIKE \"/tmp/*\" Analytic 3 - Parent/Child Process Relationship source=\"Osquery:\" EventCode=\"process_added\" AND ParentImage= \"/System/Library/CoreServices/Finder.app/Contents/MacOS/Finder\" AND Image LIKE \"osascript\" .003 Windows Command Shell Monitor for newly executed processes that may abuse the Windows command shell for execution. Note: Try an Analytic by creating a baseline of parent processes of cmd seen over the last 30 days and a list of parent processes of cmd seen today. Parent processes in the baseline are removed from the set of parent processes seen today, leaving a list of new parent processes. This analytic attempts to identify suspicious programs spawning cmd by looking for programs that do not normally create cmd. It is very common for some programs to spawn cmd as a subprocess, for example to run batch files or Windows commands. However, many processes don\u2019t routinely launch a command prompt - e.g., Microsoft Outlook. A command prompt being launched from a process that normally doesn\u2019t launch command prompts could be the result of malicious code being injected into that process, or of an attacker replacing a legitimate program with a malicious one. Analytic 1 - Unusual Command Execution (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND CommandLine=\"cmd.exe\" AND (CommandLine REGEXP \"./c.\" OR CommandLine REGEXP \".._ \\/k.*\") .004 Unix Shell Monitor for newly executed processes that may abuse Unix shell commands and scripts for execution. Analytic 1 - Look for unusual Unix shell process creation. sourcetype=linux_secure OR sourcetype=macos_secure| search (command=\"sh\" OR command=\"bash\" OR command=\"zsh\")| eval suspicious_process=if(like(command_line, \"%.sh\" OR \"%.bash\" OR \"%.zsh\"), \"Yes\", \"No\")| where suspicious_process=\"Yes\" .005 Visual Basic Monitor for the creation of processes related to VBScript and VBA execution. Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Note: This query monitors for the creation of processes like cscript.exe, wscript.exe, excel.exe, and winword.exe, which are commonly used to execute VB scripts. It highlights instances where these processes are initiated, providing insight into potential VB script execution. Analytic 1 - Look for unusual VB process creation. sourcetype=windows_security OR sourcetype=wineventlog OR sourcetype=linux_secure OR sourcetype=macos_secure| search (process=\"cscript.exe\" OR process=\"wscript.exe\" OR process=\"excel.exe\" OR process=\"winword.exe\")| eval suspicious_process=if(like(process, \"cscript.exe\" OR \"wscript.exe\" OR \"excel.exe\" OR \"winword.exe\"), \"Yes\", \"No\")| where suspicious_process=\"Yes\" .006 Python Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor newly executed processes that may abuse Python commands and scripts for execution. .007 JavaScript Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts .010 AutoHotKey & AutoIT Monitor and analyze the execution and arguments of the AutoIt3.exe and AutoHotkey.exe interpreters. Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if AutoHotkey.exe is the parent process for additional suspicious processes and activity. Mobile T1623 Command and Scripting Interpreter Mobile Threat Defense (MTD) with lower-level OS APIs integrations may have access to newly created processes and their parameters, potentially detecting unwanted or malicious shells. .001 Unix Shell Mobile Threat Defense (MTD) with lower-level OS APIs integrations may have access to newly created processes and their parameters, potentially detecting unwanted or malicious shells. ICS T0807 Command-Line Interface Monitor for processes spawning from known command shell applications (e.g., PowerShell, Bash). Benign activity will need to be allow-listed. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Enterprise T1609 Container Administration Command Track the creation of new processes within a container environment, which could indicate suspicious activity initiated via the Docker daemon or Kubernetes API server. Analytic 1 - Unusual process creation within containers sourcetype=docker:daemon OR sourcetype=kubernetes:container| search action=\"start\" OR action=\"exec\" Enterprise T1659 Content Injection Look for behaviors on the endpoint system that might indicate successful compromise, such as abnormal behaviors of browser processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, or evidence of Discovery. Analytic 1 - Detecting Malicious Process Execution from Injected Content (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (parent_process IN (\"chrome.exe\", \"firefox.exe\", \"edge.exe\", \"safari.exe\", \"iexplore.exe\"))| where (process_name IN (\"powershell.exe\", \"cmd.exe\", \"wget\", \"curl\", \"bash\", \"python\"))| eval risk_score=case( process_name IN (\"powershell.exe\", \"cmd.exe\"), 9, process_name IN (\"wget\", \"curl\"), 8, parent_process IN (\"chrome.exe\", \"firefox.exe\"), 7)| where risk_score >= 7| stats count by _time, host, user, process_name, parent_process, risk_score Enterprise T1136 Create Account Monitor newly executed processes associated with account creation, such as net.exe .001 Local Account Monitor newly executed processes associated with account creation, such as net.exe Analytic 1 - Create local admin accounts using net.exe (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image= C:\\Windows\\System32\\net.exe OR Image= C:\\Windows\\System32\\net1.exe ) AND CommandLine = * -exportPFX * ) .002 Domain Account Monitor newly executed processes associated with account creation, such as net.exe Enterprise T1543 Create or Modify System Process New, benign system processes may be created during installation of new software. .002 Systemd Service Suspicious processes or scripts spawned in this manner will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the \u2018root\u2019 user. .003 Windows Service Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. Windows runs the Service Control Manager (SCM) within the process services.exe. Windows launches services as independent processes or DLL loads within a svchost.exe group. To be a legitimate service, a process (or DLL) must have the appropriate service entry point SvcMain. If an application does not have the entry point, then it will timeout (default is 30 seconds) and the process will be killed. To survive the timeout, adversaries and red teams can create services that direct to cmd.exe with the flag /c, followed by the desired command. The /c flag causes the command shell to run a command and immediately exit. As a result, the desired program will remain running and it will report an error starting the service. This analytic will catch that command prompt instance that is used to launch the actual malicious executable. Additionally, the children and descendants of services.exe will run as a SYSTEM user by default. Note: Create a baseline of services seen over the last 30 days and a list of services seen today. Remove services in the baseline from services seen today, leaving a list of new services. Returns all processes named cmd.exe that have services.exe as a parent process. Because this should never happen, the /c flag is redundant in the search. Analytic 2 - Services launching CMD (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"1\") OR (sourcetype=WinEventLog:Security EventCode=\"4688\") Image=\"cmd.exe\" and ParentImage=\"services.exe\" .004 Launch Daemon Monitor for newly executed processes that may create or modify Launch Daemons to execute malicious payloads as part of persistence. Enterprise T1555 Credentials from Password Stores Monitor newly executed processes that may search for common password storage locations to obtain user credentials. Analytic 1 - New processes with parameters indicating credential searches. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\")(EventCode=1 CommandLine IN (\"mimikatz\", \"procdump\", \"gcore\", \"dbxutil\", \"security find-generic-password\", \"security find-internet-password\", \"security dump-keychain\", \"gsettings get org.gnome.crypto.cache\", \"cat /etc/shadow\", \"strings /etc/shadow\", \"ls -al ~/.ssh/known_hosts\", \"ssh-add -L\")) .001 Keychain Monitor processes spawned by command line utilities to manipulate keychains directly, such as security, combined with arguments to collect passwords, such as dump-keychain -d. Analytic 1 - New processes with parameters indicating attempts to manipulate keychains. index=security sourcetype=\"macos_secure\" event_type=\"process\"(CommandLine IN (\"security dump-keychain\", \"security find-generic-password\", \"security find-internet-password\", \"security unlock-keychain\", \"security delete-keychain\", \"security set-keychain-settings\", \"security add-internet-password\", \"security add-generic-password\", \"security import\", \"security export\")) .004 Windows Credential Manager Monitor newly executed processes for suspicious activity listing credentials from the Windows Credentials locker (e.g. vaultcmd /listcreds:\"Windows Credentials\").[62] Analytic 1 - New processes with parameters indicating credential searches in Windows Credential Manager. index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1(CommandLine IN (\"vaultcmd.exe\", \"rundll32.exe keymgr.dll KRShowKeyMgr\")) Enterprise T1485 Data Destruction Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete. ICS T0809 Data Destruction Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete. Enterprise T1486 Data Encrypted for Impact Monitor for newly constructed processes and/or command-lines involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Enterprise T1005 Data from Local System Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. ICS T0893 Data from Local System Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data. Enterprise T1622 Debugger Evasion Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Enterprise T1140 Deobfuscate/Decode Files or Information Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. CertUtil.exe may be used to encode and decode a file, including PE and script code. Encoding will convert a file to base64 with -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- tags. Malicious usage will include decoding an encoded file that was downloaded. Once decoded, it will be loaded by a parallel process. Note that there are two additional command switches that may be used - encodehex and decodehex. Similarly, the file will be encoded in HEX and later decoded for further execution. During triage, identify the source of the file being decoded. Review its contents or execution behavior for further analysis. Analytic Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The analytic is oriented around the creation of CertUtil.exe processes, which may be used to encode and decode files, including PE and script code. Malicious usage will include decoding a encoded file that was downloaded. Once decoded, it will be loaded by a parallel process. Analytic 1 - CertUtil with Decode Argument (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\System32\\certutil.exe\" AND CommandLine= decode ) Enterprise T1652 Device Driver Discovery Monitor processes (lsmod, driverquery.exe, etc.) for events that may highlight potentially malicious attempts to enumerate device drivers. Enterprise T1561 Disk Wipe Monitor newly executed processes that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. .001 Disk Content Wipe Monitor newly executed processes that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources. .002 Disk Structure Wipe Monitor newly executed processes that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. Enterprise T1482 Domain Trust Discovery Monitor for newly executed processes that may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Enterprise T1189 Drive-by Compromise Look for behaviors on the endpoint system that might indicate successful compromise, such as abnormal behaviors of browser processes. This could include suspicious files written to disk, evidence of Process Injection for attempts to hide execution, or evidence of Discovery. ICS T0817 Drive-by Compromise Monitor for behaviors on the endpoint system that might indicate successful compromise, such as abnormal behaviors of browser processes. This could include suspicious files written to disk. Enterprise T1611 Escape to Host Monitor for process activity (such as unexpected processes spawning outside a container and/or on a host) that might indicate an attempt to escape from a privileged container to host. Enterprise T1546 Event Triggered Execution Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques. .001 Change Default File Association Monitor for newly executed processes that may establish persistence by executing malicious content triggered by a file type association. .002 Screensaver Monitor newly executed processes that may establish persistence by executing malicious content triggered by user inactivity. Analytic 1 - HKCU\\Control Panel\\Desktop registry key (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") | where CommandLine LIKE \"%reg%\" AND CommandLine LIKE \"%add%\" AND CommandLine LIKE \"%HKCU\\Control Panel\\Desktop\\%\" .003 Windows Management Instrumentation Event Subscription Monitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process). Note: Windows Event ID 4688 (A new process has been created) and Sysmon Event ID 1 (Process creation) can be used to alert on processes created by WMI event subscription triggers by filtering on events with a parent process name of WmiPrvSe.exe. Monitor for execution of mofcomp.exe as a child of a suspicious shell or script running utility \u2013 \\powershell.exe or \\cmd.exe \u2013 or by having a suspicious path in the command line, such as %temp%.[63][64] Adversaries may compile modified MOF files using mofcomp.exe to create malicious WMI event subscriptions. .004 Unix Shell Configuration Modification Monitor newly executed processes that may establish persistence through executing malicious commands triggered by a user\u2019s shell. .005 Trap Monitor newly executed processes that may establish persistence by executing malicious content triggered by an interrupt signal. .006 LC_LOAD_DYLIB Addition Monitor processes for those that may be used to modify binary headers. .007 Netsh Helper DLL It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. .008 Accessibility Features Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. An adversary can use accessibility features (Ease of Access), such as StickyKeys or Utilman, to launch a command shell from the logon screen and gain SYSTEM access. Since an adversary does not have physical access to the machine, this technique must be run within Remote Desktop. To prevent an adversary from getting to the login screen without first authenticating, Network-Level Authentication (NLA) must be enabled. If a debugger is set up for one of the accessibility features, then it will intercept the process launch of the feature and instead execute a new command line. This analytic looks for instances of cmd.exe or powershell.exe launched directly from the logon process, winlogon.exe. Several accessibility programs can be run using the Ease of Access center sethc.exe handles StickyKeys utilman.exe is the Ease of Access menu osk.exe runs the On-Screen Keyboard narrator.exe reads screen text over audio magnify.exe magnifies the view of the screen near the cursor One simple way to implement this technique is to note that in a default Windows configuration there are no spaces in the path to the system32 folder. If the accessibility programs are ever run with a Debugger set, then Windows will launch the Debugger process and append the command line to the accessibility program. As a result, a space is inserted in the command line before the path. Looking for any instances of a space in the command line before the name of an accessibility program will help identify when Debuggers are set. The Windows Registry location HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options allows for parameters to be set for applications during execution. One feature used by malicious actors is the \"Debugger\" option. When a key has this value enabled, a Debugging command line can be specified. Windows will launch the Debugging command line, and pass the original command line in as an argument. Adversaries can set a Debugger for Accessibility Applications. The analytic looks for the original command line as an argument to the Debugger. When the strings \"sethc.exe\", \"utilman.exe\", \"osk.exe\", \"narrator.exe\", and \"Magnify.exe\" are detected in the arguments, but not as the main executable, it is very likely that a Debugger is set. Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic example looks for any creation of common accessibility processes such as sethc.exe but does no other filtering, which may result in false positives. Therefore, we recommend tuning any such analytics by including additional logic (e.g., testing the name of the parent process) that helps reduce false positives. Analytic 2 could depend on the possibility of the known strings used as arguments for other applications used in the day-to-day environment. Although the chance of the string \"sethc.exe\" being used as an argument for another application is unlikely, it still is a possibility. Analytic 1 - Command Launched from Winlogon (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND ParentImage=\"winlogon.exe\" AND Image=\"cmd.exe\"AND (CommandLine=\"sethc.exe\"OR CommandLine=\"utilman.exe\"OR CommandLine=\"osk.exe\" OR CommandLine=\"narrator.exe\" OR CommandLine=\"*magnify.exe\" Analytic 2 - Debuggers for Accessibility Applications (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") | where CommandLine match \"$. .(sethcutilmanosknarratormagnify).exe\" .009 AppCert DLLs Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. .010 AppInit DLLs Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Note: Sysmon Event ID 1 (process create) and Windows Security Log Event ID 4688 (a new process has been created) can be used to detect new reg.exe processes that modify the AppInit DLL registry keys since the registry keys are specified as a command-line parameter. .011 Application Shimming Monitor newly executed processs for sdbinst.exe for potential indications of application shim abuse. There are several public tools available that will detect shims that are currently available [65]:* Shim-Process-Scanner - checks memory of every running process for any shim flags* Shim-Detector-Lite - detects installation of custom shim databases* Shim-Guard - monitors registry for any shim installations* ShimScanner - forensic tool to find active shims in memory* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot) .012 Image File Execution Options Injection Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as DEBUG_PROCESS and DEBUG_ONLY_THIS_PROCESS. [66] .013 PowerShell Profile Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. .014 Emond Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). .015 Component Object Model Hijacking Monitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. .016 Installer Packages Monitor processes with arguments that may be related to abuse of installer packages, including malicious, likely elevated processes triggered by application installations. .017 Udev Rules Monitor the creation of new processes that are children of systemd-udevd.service at the process tree level.[67] Enterprise T1480 Execution Guardrails Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Detecting the use of guardrails may be difficult depending on the implementation. .001 Environmental Keying Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Detecting the use of environmental keying may be difficult depending on the implementation. Enterprise T1052 Exfiltration Over Physical Medium Monitor for processes triggered when external storage is connected, autorun scripts executed from USB drives, or file explorer or PowerShell processes interacting with external storage. Analytic 1 - Detecting Processes Executed from USB Devices (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (process_name IN (\"explorer.exe\", \"powershell.exe\", \"cmd.exe\", \"bash\", \"sh\") AND process_path LIKE \"/media/usb/%\")| eval risk_score=case( process_path LIKE \"/media/usb/%\", 9, process_path LIKE \"D:\\USB\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, process_name, process_path, risk_score .001 Exfiltration over USB Monitor for newly executed processes when removable media is mounted Analytic 1 - Detecting Processes Executed from USB Devices (EventCode=1 OR source=\"/var/log/audit/audit.log\" type=\"execve\")| where (process_name IN (\"explorer.exe\", \"powershell.exe\", \"cmd.exe\", \"bash\", \"sh\") AND process_path LIKE \"/media/usb/%\")| eval risk_score=case( process_path LIKE \"/media/usb/%\", 9, process_path LIKE \"D:\\USB\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, process_name, process_path, risk_score Enterprise T1203 Exploitation for Client Execution Identify abnormal child processes spawned by applications commonly targeted by exploits, such as browsers or Office programs, particularly those launched with suspicious arguments or into unknown directories. Example, it is not expected behavior for print spool service to be executing discovery type processes. However, this is one example and could be any number of native or third party processes that are executing either unusual or unknown (potentially adversary brought) processes. Note:- Analytic 1, look for instances where Office Applications (e.g., Word, Excel, PowerPoint) are launched with suspicious parameters or from unusual locations- Analytic 2, look for abnormal child process creation by Office Applications especially when accompanied by suspicious command-line parameters Analytic 1 - Office Application Process Execution (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND (Image= \"\\winword.exe\" OR Image= \"\\excel.exe\" OR Image= \"\\powerpnt.exe\") AND (CommandLine= \"macro\" OR CommandLine= \"automation\" OR CommandLine= \"shellcode\") AND ParentCommandLine= \"open*\" Analytic 2 - Unusual Child Process Creation (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND (ParentImage= \"\\winword.exe\" OR ParentImage= \"\\excel.exe\" OR ParentImage= \"\\powerpnt.exe\") AND (Image != \"\\system32\\\" OR Image != \"*\\program files\") Enterprise T1212 Exploitation for Credential Access Monitor for newly executed processes that may indicate attempts to exploit vulnerabilities for credential access. Analytic 1 - Unexpected process creation related to exploitation tools or techniques. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4688) OR (index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1) OR (index=os sourcetype=\"linux_secure\" action=\"execve\") OR (index=os sourcetype=\"macos_secure\" event_type=\"execve\") | where match(Image, \"(?i)(msfconsole|metasploit|mimikatz|powersploit|empire|cobaltstrike|responder|kerberoast|john|hashcat|rcrack|hydra|medusa|ncrack|patator)\") Enterprise T1211 Exploitation for Defense Evasion Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. Enterprise T1068 Exploitation for Privilege Escalation Monitor for newly executed processes that may exploit software vulnerabilities in an attempt to elevate privileges. After gaining initial access to a system, threat actors attempt to escalate privileges as they may be operating within a lower privileged process which does not allow them to access protected information or carry out tasks which require higher permissions. A common way of escalating privileges in a system is by externally invoking and exploiting spoolsv or connhost executables, both of which are legitimate Windows applications. This query searches for an invocation of either of these executables by a user, thus alerting us of any potentially malicious activity. Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic is oriented around looking for an invocation of either spoolsv.exe or conhost.exe by a user, thus alerting us of any potentially malicious activity. A common way of escalating privileges in a system is by externally invoking and exploiting these executables, both of which are legitimate Windows applications. Analytic 1 - Unusual Child Process for spoolsv.exe or connhost.exe (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image=\"C:\\Windows\\System32\\spoolsv.exe\" OR Image=\"C:\\Windows\\System32\\conhost.exe\") AND ParentImage= \"C:\\Windows\\System32\\cmd.exe\") Enterprise T1083 File and Directory Discovery Monitor newly executed processes that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Enterprise T1222 File and Directory Permissions Modification Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[68][69] .001 Windows File and Directory Permissions Modification Monitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders. .002 Linux and Mac File and Directory Permissions Modification Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.[68][69] Enterprise T1606 .002 Forge Web Credentials: SAML Tokens This search looks for arguments to certutil.exe indicating the manipulation or extraction of Certificate. This certificate can then be used to sign new authentication tokens specially inside Federated environments such as Windows ADFS. Analytic 1 - Certutil.exe Certificate Extraction (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND Image= \"C:\\Windows\\System32\\certutil.exe\" AND CommandLine= \" -exportPFX \") ICS T0823 Graphical User Interface Monitor for newly executed processes related to services specifically designed to accept remote graphical connections, such as RDP and VNC. Remote Services and Valid Accounts may be used to access a host\u2019s GUI. Enterprise T1615 Group Policy Discovery Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Enterprise T1564 Hide Artifacts Monitor newly executed processes that may attempt to hide artifacts associated with their behaviors to evade detection. .001 Hidden Files and Directories Monitor newly executed processes that may set files and directories to be hidden to evade detection mechanisms. .002 Hidden Users Monitor newly executed processes for actions that could be taken to add a new user and subsequently hide it from login screens. .003 Hidden Window Monitor newly executed processes that may use hidden windows to conceal malicious activity from the plain sight of users. For example, monitor suspicious windows explorer execution \u2013 such as an additional explorer.exe holding a handle to an unknown desktop \u2013 that may be used for hidden malicious activity via hVNC.[70] .004 NTFS File Attributes Monitor for process execution that may use NTFS file attributes to hide their malicious data in order to evade detection. Analytic 1 - NTFS Alternate Data Stream Execution : System Utilities (Powershell) (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\\\powershell.exe\" | regex CommandLine= \"Invoke-CimMethod\\s+-ClassName\\s+Win32_Process\\s+-MethodName\\s+Create.\\b(\\w+(.\\w+)?):(\\w+(.\\w+)?)|-ep bypass\\s+-\\s+<.\\b(\\w+(.\\w+)?):(\\w+(.\\w+)?)|-command.Get-Content.-Stream.Set-Content.start-process .(\\w+(.\\w+)?)\" Analytic 2 - NTFS Alternate Data Stream Execution : System Utilities (WMIC) (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\\\wmic.exe\" | regex CommandLine= \"process call create.\\\"(\\w+(.\\w+)?):(\\w+(.\\w+)?)\" Analytic 3 - NTFS Alternate Data Stream Execution : System Utilities (rundll32) (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\\\rundll32.exe\" | regex CommandLine= \"\\\"?(\\w+(.\\w+)?):(\\w+(.\\w+)?)?\\\"?,\\w+\\|(advpack.dll\\|ieadvpack.dll),RegisterOCX\\s+(\\w+.\\w+):(\\w+(.\\w+)?)\\|(shdocvw.dll\\|ieframe.dll),OpenURL.(\\w+.\\w+):(\\w+(.\\w+)?)\" Analytic 4 - NTFS Alternate Data Stream Execution : System Utilities (wscript/cscript) (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\\\wscript.exe\" OR Image= \"C:\\Windows\\\\cscript.exe)\" | regex CommandLine= \"(?<!\\/)\\b\\w+(.\\w+)?:\\w+(.\\w+)?$\" .006 Run Virtual Instance Monitor newly executed processes associated with running a virtual instance, such as those launched from binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). .009 Resource Forking Monitor newly executed processes that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. .010 Process Argument Spoofing Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments. Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for Process Hollowing, which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.[71][72] .011 Ignore Process Interrupts Monitor newly created processes for artifacts, such as nohup or PowerShell -ErrorAction SilentlyContinue, that may attempt to hide processes from interrupt signals. .014 Extended Attributes Detect execution of interpreters or loaders such as bash, sh, osascript, or python that are spawned shortly after a process reading extended attributes (e.g., xattr, getfattr) within the same parent process or session. Enterprise T1574 Hijack Execution Flow Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates. .001 DLL Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. .005 Executable Installer File Permissions Weakness Monitor for newly constructed processes to match an existing service executables. .006 Dynamic Linker Hijacking Monitor for newly executed processes for unusual activity (e.g., a process that does not use the network begins to do so). .007 Path Interception by PATH Environment Variable Monitor for newly executed processes for process executable paths that are named for partial directories. .008 Path Interception by Search Order Hijacking Monitor for newly executed processes for process executable paths that are named for partial directories. .009 Path Interception by Unquoted Path Monitor for newly executed processes that may execute their own malicious payloads by hijacking vulnerable file path references. .010 Services File Permissions Weakness Monitor for newly executed processes that may execute their own malicious payloads by hijacking the binaries used by services. .011 Services Registry Permissions Weakness Monitor suspicious programs execution through services. These processes may show up as outlier processes that have not been seen before when compared against historical data. .012 COR_PROFILER Monitor for newly executed processes, such as setx.exe, that may abuse of the COR_PROFILER variable, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.[73] .014 AppDomainManager Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the loading of unexpected .NET resources. Enterprise T1562 Impair Defenses Monitor newly executed processes that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. .001 Disable or Modify Tools In an attempt to avoid detection after compromising a machine, threat actors often try to disable Windows Defender. This is often done using \"sc\" [service control], a legitimate tool provided by Microsoft for managing services. This action interferes with event detection and may lead to a security event going undetected, thereby potentially leading to further compromise of the network. Note: Though this analytic is utilizing Event ID 1 for process creation, the arguments are specifically looking for the use of service control for querying or trying to stop Windows Defender. Analytic 1 - Detecting Tampering of Windows Defender Command Prompt (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\System32\\sc.exe\" (CommandLine=\"sc config\" OR CommandLine=\"sc stop\" OR CommandLine=\"sc query\" ) .002 Disable Windows Event Logging Monitor newly executed processes that may disable Windows event logging to limit data that can be leveraged for detections and audits. Analytic 1 - Disable Windows Event Logging (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") ((CommandLine=\"New-Item\" OR CommandLine=\"reg add\") CommandLine=\"MiniNt\") OR (CommandLine=\"Stop-Service\" CommandLine=\"EventLog\") OR (CommandLine=\"EventLog\" (CommandLine=\"Set-Service\" OR CommandLine=\"reg add\" OR CommandLine=\"Set-ItemProperty\" OR CommandLine=\"New-ItemProperty\" OR CommandLine=\"sc config\")) OR (CommandLine=\"auditpol\" (CommandLine=\"/set\" OR CommandLine=\"/clear\" OR CommandLine=\"/revove\")) OR (CommandLine=\"wevtutil\" (CommandLine=\"sl\" OR CommandLine=\"set-log\")) .006 Indicator Blocking Monitor for executed processes that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. Analytic 1 - Indicator Blocking - Driver Unloaded (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"fltmc.exe\" AND CommandLine= \"unload\" .009 Safe Mode Boot Monitor newly executed processes that may abuse Windows safe mode to disable endpoint defenses. .010 Downgrade Attack Monitor newly executed processes that may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. .011 Spoof Security Alerting Consider monitoring for suspicious processes that may be spoofing security tools and monitoring messages. Enterprise T1070 Indicator Removal Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. .001 Clear Windows Event Logs Monitor for newly executed processes that may clear Windows Event Logs to hide the activity of an intrusion. In an attempt to clear traces after compromising a machine, threat actors often try to clear Windows Event logs. This is often done using \"wevtutil\", a legitimate tool provided by Microsoft. This action interferes with event collection and notification, and may lead to a security event going undetected, thereby potentially leading to further compromise of the network. Note: This search query looks for wevtutil, Clear-EventLog, Limit-EventLog, Remove-Item or Remove-EventLog inside a command that may cause the system to remove Windows Event logs. Analytic 1 - Clearing Windows Logs with Wevtutil (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image=wevtutil CommandLine=cl (CommandLine=System OR CommandLine=Security OR CommandLine=Setup OR CommandLine=Application) OR Clear-EventLog OR Limit-EventLog OR (Remove-Item AND .evtx) OR Remove-EventLog) .003 Clear Command History Monitor for the suspicious execution of processes that may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Analytic 1 - Clear Powershell Console Command History (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND (CommandLine=\"rm (Get-PSReadlineOption).HistorySavePath\" OR CommandLine=\"del (Get-PSReadlineOption).HistorySavePath\" OR CommandLine=\"Set-PSReadlineOption \u2013HistorySaveStyle SaveNothing\" OR CommandLine=\"Remove-Item (Get-PSReadlineOption).HistorySavePath\" OR (CommandLine=\"del\" AND CommandLine=\"Microsoft\\Windows\\Powershell\\PSReadline\\ConsoleHost_history.txt\")) .005 Network Share Connection Removal Monitor for newly constructed processes and/or command line execution that can be used to remove network share connections via the net.exe process. Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic is oriented around looking for various methods of removing network shares via the command line, which is otherwise a rare event. Analytic 1- Network Share Connection Removal (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image= \"C:\\Windows\\System32\\net.exe\" AND CommandLine= \"delete\") OR CommandLine=\"Remove-SmbShare\" OR CommandLine=\"Remove-FileShare\" ) .007 Clear Network Connection History and Configurations Monitor created processes with arguments that may delete or alter malicious network configuration settings as well as generated artifacts that highlight network connection history on a host system -- which may include logs, files, or Registry values. .008 Clear Mailbox Data Monitor for newly executed processes with arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined emails. .009 Clear Persistence Monitor for newly executed processes that may delete or alter generated artifacts associated with persistence on a host system. ICS T0872 Indicator Removal on Host Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Enterprise T1202 Indirect Command Execution Monitor for newly constructed processes and/or command-lines that can be used instead of invoking cmd (i.e. pcalua.exe, winrs.exe, cscript/wscript.exe, hh.exe, ssh.exe, or bash.exe). Compare recent invocations of utilities with prior history of known good arguments to determine anomalous and potentially adversarial activity. Enterprise T1490 Inhibit System Recovery Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit. After compromising a network of systems, threat actors often try to delete/resize Shadow Copy in an attempt to prevent administrators from restoring the systems to versions present before the attack. This is often done via vssadmin, a legitimate Windows tool to interact with shadow copies. This action is often employed by ransomware, may lead to a failure in recovering systems after an attack. The pseudo code detection focus on Windows Security and Sysmon process creation (4688 and 1). The use of wmic to delete shadow copy generates WMI-Activity Operationnal 5857 event and could generate 5858 (if the operation fails). These 2 EventIDs could be interesting when attackers use wmic without process creation and/or for forensics. Analytic 1 - Detecting Shadow Copy Deletion or Resize (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")(CommandLine=\"vssadmin delete shadows\" OR CommandLine=\"wmic shadowcopy delete\" OR CommandLine=\"vssadmin resize shadowstorage\")) OR (EventCode=\"5857\" ProviderName=\"MSVSS__PROVIDER\") OR (EventCode=\"5858\" Operation=\"Win32_ShadowCopy\") Analytic 2 - BCDEdit Failure Recovery Modification (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"C:\\Windows\\System32\\bcdedit.exe\" AND CommandLine=\"recoveryenabled\" Enterprise T1056 Input Capture Monitor for newly executed processes conducting malicious activity .002 GUI Input Capture Monitor for newly executed processes Enterprise T1674 Input Injection Monitor log files for process execution through command-line and scripting activities. Additionally monitor for various tools launching keystrokes such as PowerShell, AutoHotkey, xdotool, AppleScript, or WScript. Analytic 1 - Unusual Input Simulators index=main sourcetype=\"WinEventLog:Security\" OR sourcetype=sysmon(NewProcessName=\"powershell.exe\" OR NewProcessName=\"cmd.exe\" OR NewProcessName=\"bash\" OR NewProcessName=\"osascript\")| stats earliest(_time) as start_time, latest(_time) as end_time, values(ParentProcessName) as parent, values(CommandLine) as cmd by NewProcessName, user| where parent=\"explorer.exe\" OR parent=\"winlogon.exe\" OR parent=\"unknown\"| eval duration = end_time - start_time| where duration < 10| table start_time, NewProcessName, cmd, parent, user Enterprise T1559 Inter-Process Communication Monitor the creation of processes that are related to the abuse of IPC mechanisms, particularly those that communicate with higher-privileged services or perform suspicious operations. Analytic 1 - Processes using IPC mechanisms. (( sourcetype=WinEventLog:Security EventCode=4688) OR (sourcetype=Sysmon EventCode=1))| search parent_process IN (\"XPCService\", \"com.apple.securityd\") OR process_name IN (\"cmd.exe\", \"bash\", \"osascript\") .001 Component Object Model Monitor for newly executed processes that are associated with COM objects, especially those invoked by a user different than the one currently logged on. .002 Dynamic Data Exchange Monitor for newly executed processes that may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution. Analytic 1 - Unusual Child Process spawned using DDE exploit (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\".exe\" (ParentImage=\"excel.exe\" OR ParentImage=\"word.exe\" OR ParentImage=\"outlook.exe\") Enterprise T1570 Lateral Tool Transfer Monitor newly constructed processes that assist in lateral tool transfers. ICS T0867 Lateral Tool Transfer Monitor newly constructed processes that assist in lateral tool transfers, such as file transfer programs. Enterprise T1654 Log Enumeration Monitor for unexpected process activity associated with utilities that can access and export logs, such as wevutil.exe on Windows and CollectGuestLogs.exe on Azure hosted VMs. Enterprise T1036 Masquerading Monitor for newly executed processes that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. The RECYCLER and SystemVolumeInformation directories will be present on every drive. Replace %systemroot% and %windir% with the actual paths as configured by the endpoints. Analytic 1 - Suspicious Run Locations (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND ( Image=\":\\RECYCLER*\" OR Image=\":\\SystemVolumeInformation*\" OR Image=\"%windir%\\Tasks*\" OR Image=\"%systemroot%\\debug*\") .005 Match Legitimate Resource Name or Location Monitor for newly executed processes that may match or approximate the name or location of legitimate files or resources when naming/placing them. Looks for mismatches between process names and their image paths.Malware authors often use this technique to hide malicious executables behind legitimate Windows executable names (e.g. lsass.exe, svchost.exe, etc).There are several sub-techniques, but this analytic focuses on Match Legitimate Resource Name or Location only. Note: With process monitoring, hunt for processes matching these criteria: process name is svchost.exe, smss.exe, wininit.exe, taskhost.exe, etc. process path is not C:\\Windows\\System32\\ or C:\\Windows\\SysWow64\\ Examples (true positive): C:\\Users\\administrator\\svchost.exe To make sure the rule doesn\u2019t miss cases where the executable would be started from a sub-folder of these locations, the entire path is checked for the process path. The below example should be considered as suspicious: C:\\Windows\\System32\\srv\\svchost.exe Analytic 1 - Common Windows Process Masquerading (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")AND ( (Image=svchost.exe AND (image_path!=\"C:\\Windows\\System32\\svchost.exe\" OR process_path!=\"C:\\Windows\\SysWow64\\svchost.exe\")) OR (Image=\"*smss.exe\" AND image_path!=\"C:\\Windows\\System32\\smss.exe\") OR (Image=\"wininit.exe\" AND image_path!=\"C:\\Windows\\System32\\wininit.exe\") OR (Image=\"taskhost.exe\" AND image_path!=\"C:\\Windows\\System32\\taskhost.exe\") OR (Image=\"lasass.exe\" AND image_path!=\"C:\\Windows\\System32\\lsass.exe\") OR (Image=\"winlogon.exe\" AND image_path!=\"C:\\Windows\\System32\\winlogon.exe\") OR (Image=\"csrss.exe\" AND image_path!=\"C:\\Windows\\System32\\csrss.exe\") OR (Image=\"services.exe\" AND image_path!=\"C:\\Windows\\System32\\services.exe\") OR (Image=\"lsm.exe\" AND image_path!=\"C:\\Windows\\System32\\lsm.exe\") OR (Image=\"explorer.exe\" AND image_path!=\"C:\\Windows\\explorer.exe\") .009 Break Process Trees Monitor for the abnormal creation of background processes as well as processes executing from abnormal locations, such as /dev/shm. Enterprise T1112 Modify Registry Monitor processes and command-line arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. (i.e. reg.exe, regedit.exe). The analytic is oriented around detecting invocations of Reg where the parent executable is an instance of cmd.exe that wasn\u2019t spawned by explorer.exe. The built-in utility reg.exe provides a command-line interface to the registry, so that queries and modifications can be performed from a shell, such as cmd.exe. When a user is responsible for these actions, the parent of cmd.exe will typically be explorer.exe. Occasionally, power users and administrators write scripts that do this behavior as well, but likely from a different process tree. These background scripts must be baselined so they can be tuned out accordingly. Analytic Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). Analytic 1 - Registry Edit with Modification of Userinit, Shell or Notify (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") ((CommandLine=\"reg\" CommandLine=\"add\" CommandLine=\"/d\") OR ((CommandLine=\"Set-ItemProperty\" OR CommandLine=\"New-ItemProperty\") AND CommandLine=\"-value\")) CommandLine=\"\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\" (CommandLine=\"Userinit\" OR CommandLine=\"Shell\" OR CommandLine=\"Notify\") Analytic 2 - Modification of Default Startup Folder in the Registry Key 'Common Startup' (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (CommandLine=\"reg\" AND CommandLine=\"add\" AND CommandLine=\"/d\") OR (CommandLine=\"Set-ItemProperty\" AND CommandLine=\"-value\") CommandLine=\"Common Startup\" Analytic 3 - Registry Edit with Creation of SafeDllSearchMode Key Set to 0 (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")((CommandLine=\"reg\" CommandLine=\"add\" CommandLine=\"/d\") OR (CommandLine=\"Set-ItemProperty\" CommandLine=\"-value\")) (CommandLine=\"00000000\" OR CommandLine=\"0\") CommandLine=\"SafeDllSearchMode\") ICS T0840 Network Connection Enumeration Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses. Also monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Enterprise T1135 Network Share Discovery Monitor for newly executed processes that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Enterprise T1040 Network Sniffing Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network Note: The Analytic is for Windows systems and looks for new processes that have the names of the most common network sniffing tools. While this may be noisy on networks where sysadmins are using any of these tools on a regular basis, in most networks their use is noteworthy. Analytic 1 - Unexpected execution of network sniffing tools. index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 OR index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 Image IN (\"tshark.exe\", \"windump.exe\", \"*tcpdump.exe\", \"wprui.exe\", \"wpr.exe\") AND ParentImage!=\"C:\\Program Files\\Windows Event Reporting\\Core\\EventReporting.AgentService.exe\" ICS T0842 Network Sniffing Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment. Enterprise T1027 Obfuscated Files or Information Monitor for newly executed processes that may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. .004 Compile After Delivery Monitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development. .011 Fileless Storage In Linux systems, monitor for newly executed processes from shared memory directories such as /dev/shm, /run/shm, /var/run, and /var/lock.[74] Enterprise T1137 Office Application Startup Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously. .001 Office Template Macros Monitor newly executed processes that may abuse Microsoft Office templates to obtain persistence on a compromised system. .002 Office Test Monitor newly executed processes that may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. .003 Outlook Forms Monitor newly executed processes that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. .004 Outlook Home Page Monitor newly executed processes that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. .005 Outlook Rules Monitor newly executed processes that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. .006 Add-ins Monitor newly executed processes that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Enterprise T1003 OS Credential Dumping Monitor for newly executed processes that may be indicative of credential dumping. Analytic 1 - Unexpected process creation related to credential dumping. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 Image=\"procdump.exe\" CommandLine IN (\" -ma lsass\"))OR (index=security sourcetype=\"linux_secure\" (key=\"cmdline\" value IN (\"procdump -ma /proc/$(pgrep lsass)\")) (key=\"exe\" value=\"procdump\"))OR(index=security sourcetype=\"macOS:UnifiedLog\" process=\"procdump\" command=\" -ma /proc/$(pgrep lsass)\") .001 LSASS Memory Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process. Try monitoring for Sysmon Event ID 1 and/or Windows Security Event ID 4688 for process activity. Note: - Rundll32/MiniDump has a different command-line syntax than that of Procdump, in that the process being dumped is specified via process ID instead of name (as with Procdump). Therefore, because the LSASS process ID is non-deterministic, the MiniDump detection isn\u2019t specific to LSASS dumping and may need to be tuned to help reduce false positives.- When monitoring for .dll functions on the command-line be sure to also check for the ordinal associated with the function. Analytic 1 - Unexpected process creation related to LSASS memory dumping. index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 Image IN (\"procdump.exe\", \"rundll32.exe\", \"taskmgr.exe\", \"powershell.exe\") CommandLine IN (\" -ma lsass\", \"rundll32.exe comsvcs.dll, MiniDump\", \"taskmgr.exe /dump\", \"powershell.exe -Command Get-Process lsass | Out-MemoryDump\") Enterprise T1201 Password Policy Discovery Monitor for newly executed processes that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Enterprise T1120 Peripheral Device Discovery Monitor for newly executed processes that may attempt to gather information about attached peripheral devices and components connected to a computer system. Enterprise T1069 Permission Groups Discovery Monitor for newly constructed processes and/or command-lines for actions that could be taken to gather system and network information. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained. .001 Local Groups Monitor newly executed processes that may attempt to find local system groups and permission settings. Note: Event IDs are for Sysmon (Event ID 1 - process creation) and Windows Security Log (Event ID 4688 - a new process has been created). The logic in the Analytic looks for any instances of net.exe used for local user/group discovery; although this utility is not normally used for benign purposes, such usage by system administrator actions may trigger false positives. Analytic 1 - Local Permission Group Discovery (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"net.exe\" AND ( CommandLine=\"net user\" OR CommandLine=\"net group\" OR CommandLine=\"net localgroup\" OR CommandLine=\"get-localgroup\" OR CommandLine=\"get-ADPrincipalGroupMembership*\" ) .002 Domain Groups Monitor newly executed processes that may attempt to find domain-level groups and permission settings. For Linux, auditing frameworks that support alerting on process creation, including the audit daemon (auditd), can be used to alert on invocations of commands such as ldapsearch. For MacOS, utilities that work in concert with Apple\u2019s Endpoint Security Framework such as Process Monitor can be used to track usage of commands such as dscacheutil -q group. Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created). Analytic 1 - Local Permission Group Discovery - Net (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image= \"net.exe\" OR Image= \"net1.exe\") AND CommandLine=\"group/domain*\") .003 Cloud Groups Monitor newly executed processes that may attempt to find cloud groups and permission settings. Enterprise T1647 Plist File Modification Monitor for newly executed processes with arguments that can modify property list (plist) files. Enterprise T1057 Process Discovery Monitor for newly executed processes that may attempt to get information about running processes on a system. To be effective in deciphering malicious and benign activity, the full command line is essential. Similarly, having information about the parent process can help with making decisions and tuning to an environment. Because these commands are built in, they may be run frequently by power users or even by normal users. Thus, an analytic looking at this information should have well-defined white- or blacklists, and should consider looking at an anomaly detection approach, so that this information can be learned dynamically.Within the built-in Windows Commands: hostname ipconfig net quser qwinsta sc with flags query, queryex, qc systeminfo tasklist dsquery whoamiNote: To be effective in deciphering malicious and benign activity, the full command line is essential. Similarly, having information about the parent process can help with making decisions and tuning to an environment. Analytic 1 - Host Discovery Commands (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (Image=\"C:\\Windows\\\\hostname.exe\" OR Image=\"C:\\Windows\\\\ipconfig.exe\" OR Image=\"C:\\Windows\\\\net.exe\" OR Image=\"C:\\Windows\\\\quser.exe\" OR Image=\"C:\\Windows\\\\qwinsta.exe\" OR (Image=\"C:\\Windows\\\\sc.exe\" AND (CommandLine=\" query \" OR CommandLine=\" qc \")) OR Image=\"C:\\Windows\\\\systeminfo.exe\" OR Image=\"C:\\Windows\\\\tasklist.exe\" OR Image=\"C:\\Windows\\*\\whoami.exe\")|stats values(Image) as \"Images\" values(CommandLine) as \"Command Lines\" by ComputerName Enterprise T1055 .012 Process Injection: Process Hollowing Monitor for newly executed processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Adversaries may start legitimate processes and then use their memory space to run malicious code. This analytic looks for common Windows processes that have been abused this way in the past; when the processes are started for this purpose they may not have the standard parent that we would expect. This list is not exhaustive, and it is possible for cyber actors to avoid this discepency. These signatures only work if Sysmon reports the parent process, which may not always be the case if the parent dies before sysmon processes the event. Analytic 1 - Processes Started From Irregular Parents (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND ParentImage!=\"?\" AND ParentImage!=\"C:\\Program Files\\SplunkUniversalForwarder\\bin\\splunk-regmon.exe\" AND ParentImage!=\"C:\\Program Files\\SplunkUniversalForwarder\\bin\\splunk-powershell.exe\" AND((Image=\"C:\\Windows\\System32\\smss.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\smss.exe\" AND ParentImage!=\"System\")) OR(Image=\"C:\\Windows\\System32\\csrss.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\smss.exe\" AND ParentImage!=\"C:\\Windows\\System32\\svchost.exe\")) OR(Image=\"C:\\Windows\\System32\\wininit.exe\" AND ParentImage!=\"C:\\Windows\\System32\\smss.exe\") OR(Image=\"C:\\Windows\\System32\\winlogon.exe\" AND ParentImage!=\"C:\\Windows\\System32\\smss.exe\") OR(Image=\"C:\\Windows\\System32\\lsass.exe\" and ParentImage!=\"C:\\Windows\\System32\\wininit.exe\") OR(Image=\"C:\\Windows\\System32\\LogonUI.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\winlogon.exe\" AND ParentImage!=\"C:\\Windows\\System32\\wininit.exe\")) OR(Image=\"C:\\Windows\\System32\\services.exe\" AND ParentImage!=\"C:\\Windows\\System32\\wininit.exe\") OR(Image=\"C:\\Windows\\System32\\spoolsv.exe\" AND ParentImage!=\"C:\\Windows\\System32\\services.exe\") OR(Image=\"C:\\Windows\\System32\\taskhost.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\services.exe\" AND ParentImage!=\"C:\\Windows\\System32\\svchost.exe\")) OR(Image=\"C:\\Windows\\System32\\taskhostw.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\services.exe\" AND ParentImage!=\"C:\\Windows\\System32\\svchost.exe\")) OR(Image=\"C:\\Windows\\System32\\userinit.exe\" AND (ParentImage!=\"C:\\Windows\\System32\\dwm.exe\" AND ParentImage!=\"C:\\Windows\\System32\\winlogon.exe\"))) Enterprise T1012 Query Registry Monitor for newly executed processes that may interact with the Windows Registry to gather information about the system, configuration, and installed software. Note: The New-PSDrive PowerShell cmdlet creates temporary and persistent drives that are mapped to or associated with a location in a data store, such a registry key (PSProvider \"Registry\"). The Get-ChildItem gets the items in one or more specified locations. By using both, you can enumerate COM objects in one or more specified locations. Note for Analytic 3: Replace FilePathToLolbasProcessXX.exe with lolBAS process names that are used by your organization. The number_standard_deviations parameter should be tuned accordingly. Identifying outliers by comparing distance from a data point to the average value against a certain number of standard deviations is recommended for data values that are symmetrical distributed. If your data is not distributed, try a different algorithm such as the Interquartile Range (IQR). Analytic 1 - Suspicious Processes with Registry keys (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") | search (CommandLine LIKE \"%reg%\" AND CommandLine LIKE \"%query%\") OR (CommandLine LIKE \"%Registry%\" AND (CommandLine LIKE \"%HKEY_CLASSES_ROOT%\" OR CommandLine \"%HKCR%\")) Analytic 2 - reg.exe spawned from suspicious cmd.exe ((sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") | WHERE (Image LIKE \"%reg.exe%\" AND ParentImage LIKE \"%cmd.exe%\")| rename ProcessParentGuid as guid| join type=inner guid[ | search ((source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND (Image LIKE \"%cmd.exe%\" AND ParentImage NOT LIKE \"%explorer.exe%\")| rename ProcessGuid as guid ] Analytic 3 - Rare LolBAS command lines ((sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND Image IN ('FilePathToLolbasProcess01.exe','FilePathToLolbasProcess02.exe') AND number_standard_deviations = 1.5| select Image, ProcessCount, AVG(ProcessCount) Over() - STDEV(ProcessCount) Over() * number_standard_deviations AS LowerBound | WHERE ProcessCount < LowerBound Enterprise T1219 Remote Access Tools Monitor for applications and processes related to remote admin software. Correlate activity with other suspicious behavior that may reduce false positives if this type of software is used by legitimate users and administrators. Domain Fronting may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote software to compromised systems. It may be possible to detect or prevent the installation of this type of software with host-based solutions. .001 IDE Tunneling On Windows, monitor for executions of code.exe with arguments such as tunnel, --remote, or --host. On macOS, monitor processes like code or jetbrains-gateway launched with similar remote access flags. On Linux, track the execution of code, jetbrains-gateway, or ssh with tunneling options like -R, -L, or -D. These process-creation events can indicate attempts to establish remote tunnels through IDEs. Analytic 1 - Detect interactive remote access session initiated by IDE sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1(Image=\"\\code.exe\" OR Image=\"/code\" OR Image=\"/jetbrains-gateway\" OR Image=\"/ssh\")(CommandLine=\"tunnel\" OR CommandLine=\"--remote\" OR CommandLine=\"-R\" OR CommandLine=\"-L\" OR CommandLine=\"-D*\")| table _time, host, user, Image, CommandLine, ParentImage| sort _time desc .002 Remote Desktop Software Monitor for applications and processes related to remote desktop software. Correlate activity with other suspicious behavior that may reduce false positives if this type of software is used by legitimate users and administrators. Domain Fronting may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote software to compromised systems. It may be possible to detect or prevent the installation of this type of software with host-based solutions. Analytic 1 - Detect Remote Desktop Execution sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational(Image=\"\\TeamViewer.exe\" OR Image=\"\\AnyDesk.exe\" OR Image=\"\\Ammyy_Admin.exe\" OR Image=\"\\connectwisecontrol.client.exe\")| stats count by Image, ParentImage, CommandLine, user, host, _time| sort -_time Enterprise T1563 Remote Service Session Hijacking Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment. .001 SSH Hijacking Monitor newly executed processes that may hijack a legitimate user's SSH session to move laterally within an environment. .002 RDP Hijacking Consider monitoring processes for tscon.exe usage. Using tscon.exe to hijack an RDP session requires SYSTEM level permissions. Therefore, we recommend also looking for Privilege Escalation techniques that may be used for this purpose in conjunction with RDP Session Hijacking. In addition to tscon.exe, mstsc.exe can similarly be used to hijack existing RDP sessions. In this case, we recommend looking for the command-line parameters of /noconsentPrompt and /shadow:, which allow for stealthy hijacking of an RDP session with no prompt and without kicking off the existing session. Enterprise T1021 Remote Services Monitor for newly executed processes that may use Valid Accounts to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. The adversary may then perform actions that spawn additional processes as the logged-on user. Malicious actors may rename built-in commands or external tools, such as those provided by SysInternals, to better blend in with the environment. In those cases, the file path name is arbitrary and may blend in well with the background. If the arguments are closely inspected, it may be possible to infer what tools are running and understand what an adversary is doing. When any legitimate software shares the same command lines, it must be whitelisted according to the expected parameters. Any tool of interest with commonly known command line usage can be detecting by command line analysis. Known substrings of command lines include PuTTY port forwarding -R * -pw secure copy (scp) -pw * * @ mimikatz sekurlsa:: RAR -hp Archive* a * Additionally, it may be useful to find IP addresses in the command line \\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3} Analytic 1 - Suspicious Arguments (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND CommandLine=\"-R . -pw\" OR CommandLine=\"-pw . . .@.\" OR CommandLine=\"sekurlsa\" OR CommandLine=\" -hp \" OR CommandLine=\". a .*\" .001 Remote Desktop Protocol Monitor for newly executed processes (such as mstsc.exe) that may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions that spawn additional processes as the logged-on user. Analytic 1 - Unusual processes associated with RDP sessions sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=1 | search (parent_process=\"mstsc.exe\" OR parent_process=\"rdpclip.exe\")| table _time, host, user, process_name, parent_process, command_line| where process_name!=\"expected_processes\" .002 SMB/Windows Admin Shares Monitor for the creation of WMI Win32_Process class and method Create to interact with a remote network share using Server Message Block (SMB). Relevant indicators detected by Bro/Zeek is IWbemServices::ExecMethod or IWbemServices::ExecMethodAsync. One thing to notice is that when the Create method is used on a remote system, the method is run under a host process named \"Wmiprvse.exe\". The process WmiprvSE.exe is what spawns the process defined in the CommandLine parameter of the Create method. Therefore, the new process created remotely will have Wmiprvse.exe as a parent. WmiprvSE.exe is a DCOM server and it is spawned underneath the DCOM service host svchost.exe with the following parameters C:\\WINDOWS\\system32\\svchost.exe -k DcomLaunch -p. From a logon session perspective, on the target, WmiprvSE.exe is spawned in a different logon session by the DCOM service host. However, whatever is executed by WmiprvSE.exe occurs on the new network type (3) logon session created by the user that authenticated from the network. Analytic 1 - Basic (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND ParentImage=\"*wmiprvse.exe\" AND TargetLogonID=\"0x3e7\" .003 Distributed Component Object Model Monitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, via Query Registry or PowerShell, may also precede malicious use.[75][76] The Microsoft Management Console (mmc.exe) can be by used by threat actors used to spawn arbitrary processes through DCOM. The typical process tree for this method looks like: svchost.exe \u2014> mmc.exe \u2014> .exe. Accordingly, look for process creation events of mmc.exe in conjunction with the -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc. Similar to the Microsoft Management Console, Excel can also be used to execute processes through DCOM. In this case, the typical process tree looks like: svchost.exe \u2014> excel.exe \u2014> .exe. Look for process creation events of excel.exe in conjunction with the /automation -Embedding command-line argument, along with suspicious child processes that can be used for malicious purposes, such as cmd.exe, reg.exe, etc. sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1| search ParentImage=\"dcomlaunch.exe\" OR CommandLine=\"dcom\"| stats count by ParentImage, CommandLine, User, Computer, _time| eval suspicious_process=if(count > threshold, \"suspicious\", \"normal\")| where suspicious_process=\"suspicious\"| table _time, ParentImage, CommandLine, User, Computer, suspicious_process .004 SSH Monitor for newly executed processes that may use Valid Accounts to log into remote machines using Secure Shell (SSH). For example, on macOS systems log show --predicate 'process = \"sshd\"' can be used to review incoming SSH connection attempts for suspicious activity. The command log show --info --predicate 'process = \"ssh\" or eventMessage contains \"ssh\"' can be used to review outgoing SSH connection activity.[77] For Linux systems, the Audit framework (auditd) can be used to monitor for the creation of SSH related processes such as ssh. For macOS systems (10.12+), the above command can be used to look through the Unified Logs for SSH connection activity, though we also recommend including the \"\u2014debug\" parameter to ensure that all relevant data is returned: log show --info --debug --predicate 'process = \"ssh\" or eventMessage contains \"ssh\"' sourcetype=\"/var/log/audit/audit.log\" OR sourcetype=\"/var/log/auth.log\"| search parent_process=\"sshd\" AND (process=\"sudo\" OR process=\"sensitive_command\")| stats count by user, process, parent_process, _time| eval process_anomaly=if(count > threshold, \"suspicious\", \"normal\")| where process_anomaly=\"suspicious\"| table _time, user, process, parent_process, process_anomaly .005 VNC Monitor for newly executed processes that may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems the screensharingd process may be related to VNC connection activity.[77] source=\"/var/log/audit/audit.log\" OR source=\"/var/log/vncserver.log\"| search parent_process=\"vncserver\" OR parent_process=\"screensharingd\"| stats count by user, process, parent_process, _time| eval process_anomaly=if(count > threshold, \"suspicious\", \"normal\")| where process_anomaly=\"suspicious\"| table _time, user, process, parent_process, process_anomaly .006 Windows Remote Management Monitor for newly executed processes that may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM), as well as service processes such as wmiprvse.exe on destination hosts. sourcetype=\"WinEventLog:Security\" EventCode=4688| search ParentImage=\"winrm\" OR ParentImage=\"powershell\"| stats count by AccountName, NewProcessName, CommandLine, ParentProcessName, _time| where match(CommandLine, \"(Invoke-Command|net user|reg add|reg delete)\")| table _time, AccountName, NewProcessName, CommandLine, ParentProcessName ICS T0886 Remote Services Monitor for newly executed processes related to services specifically designed to accept remote connections, such as RDP, Telnet, SSH, and VNC. The adversary may use Valid Accounts to login and may perform follow-on actions that spawn additional processes as the user. Enterprise T1018 Remote System Discovery Monitor for newly executed processes that can be used to discover remote systems, such as ping.exe and tracert.exe, especially when executed in quick succession.[57] ICS T0846 Remote System Discovery Monitor for newly executed processes that can be used to discover remote systems, such as ping.exe and tracert.exe , especially when executed in quick succession.[57] Consider monitoring for new processes engaging in scanning activity or connecting to multiple systems by correlating process creation network data. ICS T0888 Remote System Information Discovery Monitor for newly executed processes that can be used to discover remote systems, such as ping.exe and tracert.exe, especially when executed in quick succession.[57] Consider monitoring for new processes engaging in scanning activity or connecting to multiple systems by correlating process creation network data. Enterprise T1091 Replication Through Removable Media Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery. Analytic 1 - Processes Executing from Removable Media index=windows sourcetype=\"WinEventLog:Security\" EventID=4688| stats count by New_Process_Name, Creator_Process_Name, Account_Name, ComputerName, _time| where match(New_Process_Name, \".:\\\\RemovableMedia\\\\.\") OR match(New_Process_Name, \".:\\\\USB.\")| table _time, New_Process_Name, Creator_Process_Name, Account_Name, ComputerName ICS T0847 Replication Through Removable Media Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery. Enterprise T1496 Resource Hijacking Monitor for common cryptomining or proxyware software process names that may indicate compromise and resource usage. .001 Compute Hijacking Monitor for common cryptomining software process names that may indicate compromise and resource usage. .002 Bandwidth Hijacking Monitor for common proxyware software process names that may indicate compromise and resource usage. Enterprise T1053 Scheduled Task/Job Monitor for newly executed processes that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Note: Below is the relevant Events and SourcesWindows: Sysmon Event ID 1: Process creation, particularly for schtasks.exe, at.exe, Taskeng.exe, crontab, etc. Windows Event Log EventCode 4688: Process creation that might involve task scheduling. Windows Task Scheduler Logs: Task creation, modification, or deletion. Linux/macOS: Auditd logs: Monitoring for cron job creation or modifications. Syslog: Logs related to cron jobs or scheduled tasks. File integrity monitoring (FIM): For changes to /etc/cron, /var/spool/cron/, or user-specific cron jobs. Containers:- Container logs: Detection of scheduled tasks or cron jobs within container environments. Analytic 1 - Look for task execution with unusual parameters. (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" OR sourcetype=\"WinEventLog:Security\" OR sourcetype=\"linux_auditd\" OR sourcetype=\"syslog\") | where Image IN (\"schtasks.exe\", \"at.exe\", \"Taskeng.exe\", \"cron\", \"crontab\", \"systemd-timers\") .002 At Monitor for newly constructed processes with command-lines that create/modify or are executed from tasks. For example, on Windows tasks may spawn from svchost.exe or the Windows Task Scheduler taskeng.exe for older OS versions. [78] Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Instances of the process at.exe running imply the querying or creation of tasks. Although the command_line is not essential for the analytic to run, it is critical when identifying the command that was scheduled. Analytic 1 - Scheduled Task (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"*at.exe\" .003 Cron Create a baseline of cron jobs and the processes that they spawn in your environment. Monitor for newly spawned outlier processes that are executed through cron jobs that have not been seen before when compared against the baseline data. Analytic 1 - Unusual Cron Job Creation index=os_logs sourcetype=process_creation (process_name=\"cron\" OR process_name=\"/usr/sbin/cron\") .005 Scheduled Task Monitor for newly constructed processes and/or command-lines that execute from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. [78] If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Look for instances of schtasks.exe running as processes. The command_line field is necessary to disambiguate between types of schtasks commands. These include the flags /create , /run, /query, /delete, /change, and /end. Detection of the creation or modification of Scheduled Tasks with a suspicious script, extension or user writable path. Attackers may create or modify Scheduled Tasks for the persistent execution of malicious code. This detection focuses at the same time on EventIDs 4688 and 1 with process creation (SCHTASKS) and EventID 4698, 4702 for Scheduled Task creation/modification event log. Analytic 1 - New processes whose parent processes are svchost.exe or taskeng.exe (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND (ParentImage=\"svchost.exe\" OR ParentImage=\"taskeng.exe\") Analytic 2 - Scheduled Task Creation or Modification Containing Suspicious Scripts, Extensions or User Writable Paths ( (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") CommandLine=\"SCHTASKS\" (CommandLine=\"/CREATE\" OR CommandLine=\"/CHANGE\") ) ( ( CommandLine=\".cmd\" OR CommandLine=\".ps1\" OR CommandLine=\".vbs\" OR CommandLine=\".py\" OR CommandLine=\".js\" OR CommandLine=\".exe\" OR CommandLine=\".bat\" ) OR ( CommandLine=\"javascript\" OR CommandLine=\"powershell\" OR CommandLine=\"wmic\" OR CommandLine=\"rundll32\" OR CommandLine=\"cmd\" OR CommandLine=\"cscript\" OR CommandLine=\"wscript\" OR CommandLine=\"regsvr32\" OR CommandLine=\"mshta\" OR CommandLine=\"bitsadmin\" OR CommandLine=\"certutil\" OR CommandLine=\"msiexec\" OR CommandLine=\"javaw\" ) OR ( CommandLine=\"%APPDATA%\" OR CommandLine=\"\\AppData\\Roaming\" OR CommandLine=\"%PUBLIC%\" OR CommandLine=\"C:\\Users\\Public\" OR CommandLine=\"%ProgramData%\" OR CommandLine=\"C:\\ProgramData\" OR CommandLine=\"%TEMP%\" OR CommandLine=\"\\AppData\\Local\\Temp\" OR CommandLine=\"\\Windows\\PLA\\System\" OR CommandLine=\"\\tasks\" OR CommandLine=\"\\Registration\\CRMLog\" OR CommandLine=\"\\FxsTmp\" OR CommandLine=\"\\spool\\drivers\\color\" OR CommandLine=\"\\tracing\" ) ) .006 Systemd Timers Monitor for newly constructed processes and/or command-lines that will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the \u2018root\u2019 user. Note: This query looks for processes spawned by systemd (parent process systemd, with a PID of 1). These processes should be examined for anomalous behavior, particularly when running as the root user. Analytic 1 - Look for processes with parent process systemdand unusual parameters. sourcetype=linux_process_creation parent_process_name=\"systemd\" ICS T0853 Scripting Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages. Enterprise T1505 Server Software Component Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files. .003 Web Shell Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is very similar to the following short payload: [79] <?php @evaI($_P0ST['password']);> Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.[80] A web shell is a web script placed on an openly accessible web server to allow an adversary to use the server as a gatway in a network. As the shell operates, commands will be issued from within the web application into the broader server operating system. This analytic looks for host enumeration executables initiated by any web service that would not normally be executed within that environment. Analytic 1 - Webshell-Indicative Process Tree (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") (ParentImage=\"C:\\Windows\\System32\\w3wp.exe\" OR ParentImage=\"httpd.exe\" OR ParentImage=\"tomcat.exe\" OR ParentImage=\"nginx.exe\")(Image=\"C:\\Windows\\System32\\cmd.exe OR Image=\"C:\\Windows\\SysWOW64\\cmd.exe\" OR Image=\"C:\\Windows\\System32\\\\powershell.exe OR Image=\"C:\\Windows\\SysWOW64\\\\powershell.exe OR Image=\"C:\\Windows\\System32\\net.exe\" OR Image=\"C:\\Windows\\System32\\hostname.exe\" OR Image=\"C:\\Windows\\System32\\whoami.exe\" OR Image=\"systeminfo.exe OR Image=\"C:\\Windows\\System32\\ipconfig.exe\") .005 Terminal Services DLL Monitor processes with arguments that may potentially highlight adversary actions to modify Registry values (ex: reg.exe) or modify/replace the legitimate termsrv.dll. Enterprise T1489 Service Stop Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users. ICS T0881 Service Stop Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users. Enterprise T1072 Software Deployment Tools Monitor for newly executed processes that does not correlate to known good software. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. Note: This query detects the creation of suspicious processes initiated by system or administrative accounts (such as SYSTEM, Admin, or SCCM) that are not typical for those users, and filters the process creation based on unusual patterns. Processes like cmd.exe, powershell.exe, or python executed in this context without an expected parent process or correlation to authorized events should be flagged for investigation. Analytic 1 - Look for unusual software deployment processes, unexpected binaries or scripts, non-standard execution trees sourcetype=WinEventLog:Security OR sourcetype=linux_audit | search (process_name IN (\"cmd.exe\", \"powershell.exe\", \"sh\", \"bash\", \"python\", \"wscript\", \"msiexec.exe\", \"installer\") AND user IN (\"SYSTEM\", \"Admin\", \"SCCM\")) Enterprise T1518 Software Discovery Monitor newly executed processes that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. .001 Security Software Discovery Monitor newly executed processes that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. Enterprise T1176 Software Extensions Monitor for processes associated with extension-capable software on servers where they should not be running. .001 Browser Extensions Monitor for execution of chrome.exe, firefox.exe, or edge.exe with arguments like --load-extension, --pack-extension, or --disable-extensions-file-access-check.Monitor unexpected command-line installs or dev mode extensions Analytic 1 - browser execution sourcetype=WinEventLog:Sysmon EventCode=1(CommandLine=\"--load-extension\" OR CommandLine=\"--pack-extension\")| stats count by Image, CommandLine, User, host, _time| sort -_time .002 IDE Extensions Monitor for Unexpected launches of IDEs (code.exe, idea64.exe, eclipse, jetbrains-gateway) especially on servers or non-dev endpoints.Execution of these binaries with suspicious flags (--install-extension, --force, --disable-extensions).Parent processes not commonly associated with developer workflows (e.g., cmd.exe, powershell.exe, or unknown binaries). Analytic 1 - suspicious process executions sourcetype=WinEventLog:Sysmon EventCode=1(Image=\"\\code.exe\" OR Image=\"\\idea64.exe\" OR Image=\"\\eclipse.exe\" OR Image=\"\\jetbrains-gateway.exe\")| eval is_unexpected_host=if(like(Computer, \"%server%\") OR like(Computer, \"%prod%\"), \"yes\", \"no\")| stats count by Image, CommandLine, ParentImage, User, Computer, is_unexpected_host, _time| where is_unexpected_host=\"yes\"| sort -_time ICS T0865 Spearphishing Attachment Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.[57] For added context on adversary procedures and background see Spearphishing Attachment. Enterprise T1553 Subvert Trust Controls Monitor processes and arguments for malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files. .001 Gatekeeper Bypass Monitor and investigate attempts to modify extended file attributes with utilities such as xattr. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. .004 Install Root Certificate Monitor for processes, such as certmgr.exe (macOS) or certutil.exe (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. [81] Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl. [81] The Sysinternals Sigcheck utility can also be used (sigcheck[64].exe -tuv) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. [82] Analytic 1 - Attempt to Add Certificate to Untrusted Store (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") AND Image=\"C:\\Windows\\System32\\certutil.exe\" CommandLine=\"-addstore\" .006 Code Signing Policy Modification Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as bcdedit.exe -set TESTSIGNING ON. [83] Enterprise T1218 System Binary Proxy Execution Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators. .001 Compiled HTML File Monitor and analyze the execution and arguments of hh.exe. [84] Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques. Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for the creation of any HTML Help Executable ( hh.exe ) processes. Adversaries may hide malicious code in .chm compiled help files; whenever a user tries to open one of these files, Windows executes the HTML Help Executable. Therefore, if there are legitimate uses of compiled help files in your environment, this analytic may lead to false positives and will require additional tuning. Analytic 1 - Compiled HTML Access (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\syswow64\\hh.exe\" OR Image=\"C:\\Windows\\system32\\hh.exe\" .002 Control Panel Monitor and analyze activity related to items associated with CPL files, such as the control.exe. Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.[85] .003 CMSTP Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: [86]* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe* Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F). .004 InstallUtil Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity .005 Mshta Use process monitoring to monitor the execution and arguments of mshta.exe. .007 Msiexec Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files. .008 Odbcconf Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. .009 Regsvcs/Regasm Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. .010 Regsvr32 Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). - Analytic 1 is a more generic analytic that looks for suspicious usage of regsvr32.exe, specifically for cases where regsvr32.exe creates child processes that aren\u2019t itself. It\u2019s not likely that this will result in millions of hits, but it does occur during benign activity so some form of baselining would be necessary for this to be useful as an alerting analytic.- Analytic 2 is around \"Squiblydoo\", which is a specific usage of regsvr32.exe to load a COM scriptlet directly from the internet and execute it in a way that bypasses application whitelisting. It looks for regsvr32.exe process creation events that load scrobj.dll via the command-line (which executes the COM scriptlet).- Analytic 3 This uses the same logic as above, but adds lightweight baselining by ignoring all results that also showed up in the previous 30 days (it runs over 1 day).- Analytic 4 This looks for child processes that may be spawend by regsvr32, while attempting to eliminate some of the common false positives such as werfault (Windows Error Reporting). Analytic 1 - Generic Regsvr32 (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") regsvr32.exe | search ParentImage=\"regsvr32.exe\" AND Image!=\"regsvr32.exe*\" Analytic 2 - Squiblydoo (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") regsvr32.exe scrobj.dll | search Image=\"*regsvr32.exe\" Analyt 3 - New Items since last month (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") earliest=-d@d latest=now() regsvr32.exe | search ParentImage=\"regsvr32.exe\" AND Image!=\"regsvr32.exe\" | search NOT [search (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") earliest=-60d@d latest=-30d@d regsvr32.exe | search ParentImage=\"regsvr32.exe\" AND Image!=\"regsvr32.exe\" | dedup CommandLine | fields CommandLine ] Analytic 4 - Spawning Child Processes (source=\"*WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") (ParentImage=\"C:\\Windows\\System32\\regsvr32.exe\" OR ParentImage=\"C:\\Windows\\SysWOW64\\regsvr32.exe\") AND Image!=\"C:\\Windows\\System32\\regsvr32.exe\" AND Image!=\"C:\\Windows\\SysWOW64\\regsvr32.exe\" AND Image!=\"C:\\WINDOWS\\System32\\regsvr32.exe\" AND Image!=\"C:\\WINDOWS\\SysWOW64\\regsvr32.exe\" AND Image!=\"C:\\Windows\\SysWOW64\\WerFault.exe\" AND Image!=\"C:\\Windows\\System32\\wevtutil.exe\" AND Image!=\"C:\\Windows\\System32\\WerFault.exe\"|stats values(ComputerName) as \"Computer Name\" values(ParentCommandLine) as \"Parent Command Line\" count(Image) as ImageCount by Image .011 Rundll32 Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. When monitoring for all instances of Rundll32 execution, as defined by the logic in the Detection Pseudocode, it is imperative to also investigate the full set of command-line parameters used. These parameters contain key information about the DLL payload, including the name, entry point, and optional arguments. Note: Event IDs are for Sysmon (Event ID 10 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for any instances of rundll32.exe but does no other filtering, which may result in false positives. Therefore, we recommend tuning any such analytics by including additional logic (e.g., testing the name of the user that created the process) that helps reduce false positives. Analytic 1 - RunDLL32.exe Monitoring (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image= \"rundll32.exe\" .012 Verclsid Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications. .013 Mavinject Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity. .014 MMC Monitor processes for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious. .015 Electron Applications Monitor processes and command-line parameters for binaries associated with Electron apps that may be used to proxy execution of malicious content. Compare recent invocations of these binaries with prior history of known good arguments to determine anomalous and potentially adversarial activity. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators. ICS T0894 System Binary Proxy Execution Monitor for unusual processes execution, especially for processes that allow the proxy execution of malicious files. Enterprise T1082 System Information Discovery Monitor newly executed processes that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Enterprise T1614 System Location Discovery Monitor newly executed processes that may gather information in an attempt to calculate the geographical location of a victim host. .001 System Language Discovery Monitor for newly executed processes that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. Enterprise T1016 System Network Configuration Discovery Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses. Note: The Analytic looks for the creation of ipconfig, route, and nbtstat processes, all of which are system administration utilities that can be used for the purpose of system network configuration discovery. If these tools are commonly used in your environment (e.g., by system administrators) this may lead to false positives and this analytic will therefore require tuning. Analytic 1 - Suspicious Process (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND (Image=\"C:\\Windows\\System32\\ipconfig.exe\" OR Image=\"C:\\Windows\\System32\\route.exe\" OR Image=\"C:\\Windows\\System32\\nbtstat.exe\") .001 Internet Connection Discovery Monitor for executed processes (such as tracert or ping) that may check for Internet connectivity on compromised systems. Enterprise T1049 System Network Connections Discovery Monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Enterprise T1033 System Owner/User Discovery Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process. Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for any instances of at being created, therefore implying the querying or creation of tasks. If this tools is commonly used in your environment (e.g., by system administrators) this may lead to false positives and this analytic will therefore require tuning. Analytic 1 - Suspicious Process Execution (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") AND Image=\"*at.exe\" Enterprise T1216 System Script Proxy Execution Monitor script processes, such as `cscript that may be used to proxy execution of malicious files. .001 PubPrn Monitor script processes, such as `cscript that may be used to proxy execution of malicious files. .002 SyncAppvPublishingServer Monitor script processes, such as wscript.exe, that may be used to proxy execution of malicious files. Enterprise T1007 System Service Discovery Monitor for newly executed processes with arguments that may try to get information about registered services. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained. Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). For event id 4688, depending on Windows version, you might need to enable Administrative Templates\\System\\Audit Process Creation\\Include command line in process creation events group policy to include command line in process creation events. Analytic 1 - Suspicious Processes ((sourcetype=\"WinEventLog:Security\" EventCode=\"4688\") OR (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") | WHERE ((CommandLine LIKE \"%sc%\" AND CommandLine LIKE \"%query%\") OR (CommandLine LIKE \"%tasklist%\" AND CommandLine LIKE \"%/svc%\") OR (CommandLine LIKE \"%systemctl%\" AND CommandLine LIKE \"%--type=service%\") OR (CommandLine LIKE \"%net%\" AND CommandLine LIKE \"%start%\")) Enterprise T1569 System Services Monitor newly executed processes that may abuse system services or daemons to execute commands or programs. Analytic 1 - New processes abusing system services. sourcetype=process_logs| search process IN (\"services.exe\", \"systemd\", \"launchd\") .001 Launchctl Monitor for newly executed daemons that may abuse launchctl to execute commands or programs. Analytic 1 - Executable path is in unusual directories sourcetype=osquery OR sourcetype=auditd| search parent_process=\"launchctl\" AND process_path IN (\"/tmp/\", \"/Shared/\") .002 Service Execution Monitor for newly executed processes that may abuse the Windows service control manager to execute malicious commands or payloads. Events 4688 (Microsoft Windows Security Auditing) and 1 (Microsoft Windows Sysmon) provide context of Windows processes creation that can be used to implement this detection. This detection is based on uncommon process and parent process relationships. Service Control Manager spawning command shell is a good starting point. Add more suspicious relationships based on the reality of your network environment. In order to reduce false positives, you can also filter the CommandLine event field using parameters such as /c which carries out the command specified by the parent process. Analytic 1 - Service Execution (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") | WHERE Image LIKE \"services.exe\" AND Image LIKE \"cmd.exe\" .003 Systemctl Monitor for newly executed daemons that may abuse systemctl to execute commands or programs. Analytic 1 - suspicious process execution of systemctl sourcetype=sysmon_linux OR sourcetype=auditd(parent_process=\"systemd\" OR process_name=\"daemon\")| stats count by process_name, parent_process, user, cmdline, _time| where user!=\"root\" AND NOT match(cmdline, \"known_daemon_pattern\")| sort -_time Enterprise T1529 System Shutdown/Reboot Monitor for newly executed processes of binaries involved in shutting down or rebooting systems. Enterprise T1124 System Time Discovery Monitor for newly executed processes that may gather the system time and/or time zone from a local or remote system. Enterprise T1080 Taint Shared Content Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques. sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventID=1 OR sourcetype=\"linux:audit\" syscall=\"execve\"| search ParentImage IN (\"\\network_share\\.exe\", \"\\network_share\\.bat\")| stats count by Image, ParentImage, AccountName, CommandLine, _time| eval exec_suspicious=if(match(ParentImage, \"\\network_share\\\") AND AccountName!=\"known_service_account\", \"suspicious\", \"normal\")| where exec_suspicious=\"suspicious\" Enterprise T1221 Template Injection Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: PowerShell), or other suspicious actions that could relate to post-compromise behavior. Enterprise T1205 Traffic Signaling Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.[87] .002 Socket Filters Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.[87] Enterprise T1127 Trusted Developer Utilities Proxy Execution Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. .001 MSBuild Monitor for newly executed processes of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Trusted developer utilities such as MSBuild may be leveraged to run malicious code with elevated privileges. This analytic looks for any instances of msbuild.exe, which will execute any C# code placed within a given XML document; and msxsl.exe, which processes xsl transformation specifications for XML files and will execute a variaty of scripting languages contained within the XSL file. Both of these executables are rarely used outside of Visual Studio. Analytic 1 - MSBuild and msxsl (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")(Image=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\\\bin\\MSBuild.exe\" OR Image=\"C:\\Windows\\Microsoft.NET\\Framework\\msbuild.exe\" OR Image=\"C:\\users\\\\appdata\\roaming\\microsoft\\msxsl.exe\") ParentImage!=\"\\Microsoft Visual Studio*\") .002 ClickOnce Monitor for newly executed child processes of dfsvc.exe that may be indicative of malicious ClickOnce applications. .003 JamPlus Monitor for abnormal use of JamPlus, including the JamPlus Builder, that may be indicative of malicious use. Enterprise T1552 Unsecured Credentials Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials. Analytic 1 - New processes with parameters indicating credential searches. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=os sourcetype=\"linux_audit\" action=\"execve\" CommandLine=\"password\" OR CommandLine=\"credential\") OR(index=os sourcetype=\"macos_secure\" event_type=\"execve\" CommandLine=\"password\" OR CommandLine=\"credential\") .001 Credentials In Files Monitor newly executed processes for local file systems and remote file shares for files containing insecurely stored credentials. Note: Pseudocode Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for command-line instances of searching the Windows Registry for insecurely stored credentials. This can be accomplished using the query functionality of the Reg system utility, by looking for keys and values that contain strings such as \"password\". In addition, adversaries may use toolkits such as PowerSploit in order to dump credentials from various applications such as IIS. Accordingly, this analytic looks for invocations of reg.exe in this capacity as well as that of several PowerSploit modules with similar functionality. Analytic 1 - Credentials in Files & Registry (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")CommandLine=\"reg query HKLM /f password /t REG_SZ /s\" ORCommandLine=\"reg query HKCU /f password /t REG_SZ /s\" ORCommandLine=\"Get-UnattendedInstallFile\" ORCommandLine=\"Get-Webconfig\" ORCommandLine=\"Get-ApplicationHost\" ORCommandLine=\"Get-SiteListPassword\" ORCommandLine=\"Get-CachedGPPPassword\" ORCommandLine=\"Get-RegistryAutoLogon*\" .002 Credentials in Registry Monitor newly executed processes for applications that can be used to query the Registry, such as Reg, and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives. Note: Pseudocode Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for command-line instances of searching the Windows Registry for insecurely stored credentials. This can be accomplished using the query functionality of the Reg system utility, by looking for keys and values that contain strings such as \"password\". In addition, adversaries may use toolkits such as PowerSploit in order to dump credentials from various applications such as IIS. Accordingly, this analytic looks for invocations of reg.exe in this capacity as well as that of several PowerSploit modules with similar functionality. Analytic 1 - Credentials in Files & Registry (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\")CommandLine=\"reg query HKLM /f password /t REG_SZ /s\" ORCommandLine=\"reg query HKCU /f password /t REG_SZ /s\" ORCommandLine=\"Get-UnattendedInstallFile\" ORCommandLine=\"Get-Webconfig\" ORCommandLine=\"Get-ApplicationHost\" ORCommandLine=\"Get-SiteListPassword\" ORCommandLine=\"Get-CachedGPPPassword\" ORCommandLine=\"Get-RegistryAutoLogon*\" Analytic 2 - New processes with parameters indicating credential searches. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4688 CommandLine=\"reg query /f password /t REG_SZ /s\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1 CommandLine=\"reg query /f password /t REG_SZ /s\") Enterprise T1204 User Execution Identify processes spawned by user actions, especially from Office documents, PDFs, or web browsers that could lead to malicious execution. Analytic 1 - Processes created from user interaction with files. ((sourcetype=WinEventLog:Security EventCode=4688) OR (sourcetype=Sysmon EventCode=1))| search parent_process IN (\"winword.exe\", \"excel.exe\", \"chrome.exe\", \"firefox.exe\")| stats count by parent_process process_name command_line user| where process_name NOT IN (\"chrome.exe\", \"firefox.exe\", \"winword.exe\", \"excel.exe\") .002 Malicious File Monitor for processes spawned after opening a suspicious file. Common applications that might be exploited are Microsoft Word, PDF readers, or compression utilities. Analytic 1 - Processes created from malicious files. (sourcetype=WinEventLog:Security EventCode=4688) OR (sourcetype=Sysmon EventCode=1)| search process_name IN (\"WINWORD.EXE\", \"EXCEL.EXE\", \"PDFReader.exe\", \"7z.exe\", \"powershell.exe\", \"cmd.exe\")| stats count by process_name parent_process_name command_line user| where parent_process_name IN (\"explorer.exe\", \"outlook.exe\", \"thunderbird.exe\") .004 Malicious Copy and Paste Identify processes spawned by user actions that could lead to malicious execution. ICS T0863 User Execution Monitor for newly executed processes that depend on user interaction, especially for applications that can embed programmatic capabilities (e.g., Microsoft Office products with scripts, installers, zip files). This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information Mitigation in payloads. Enterprise T1497 Virtualization/Sandbox Evasion Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. .001 System Checks Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. .002 User Activity Based Checks User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. .003 Time Based Evasion Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Enterprise T1047 Windows Management Instrumentation Monitor for newly constructed processes and/or command-lines of \"wmic\". If the command line utility wmic.exe is used on the source host, then it can additionally be detected on an analytic. The command line on the source host is constructed into something like wmic.exe /node:\"\\<hostname>\" process call create \"\\<command line>\". It is possible to also connect via IP address, in which case the string \"\\<hostname>\" would instead look like IP Address. Processes can be created remotely via WMI in a few other ways, such as more direct API access or the built-in utility PowerShell. Note: Event IDs are for Sysmon (Event ID 10 - process access) and Windows Security Log (Event ID 4688 - a new process has been created). Besides executing arbitrary processes, wmic.exe can also be used to executed data stored in NTFS alternate data streams NTFS File Attributes.Looks for instances of wmic.exe as well as the substrings in the command line:- process call create- /node: Analytic 1 - Detect wmic.exeprocess creation with command lines containing process call create or /node:. index=security sourcetype=\"WinEventLog:Security\" (EventCode=4688 OR EventCode=4656 OR EventCode=4103 OR EventCode=800) | eval command_line = coalesce(CommandLine, ParentCommandLine) | where (ProcessName=\"wmic.exe\" AND (command_line LIKE \"%/node:%\" OR command_line LIKE \"%process call create%\"))OR (command_line LIKE \"Invoke-WmiMethod\" OR command_line LIKE \"Get-WmiObject\" OR command_line LIKE \"gwmi\" OR command_line LIKE \"win32_process\") Enterprise T1220 XSL Script Processing Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. [88] [89] Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Process: Process Metadata Contextual data about a running process, which may include information such as environment variables, image name, user/owner, etc. Process: Process Metadata Contextual data about a running process, which may include information such as environment variables, image name, user/owner, etc. Domain ID Name Detects Enterprise T1548 Abuse Elevation Control Mechanism Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. .002 Bypass User Account Control Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may bypass UAC mechanisms to elevate process privileges on system. .003 Sudo and Sudo Caching Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may perform sudo caching and/or use the sudoers file to elevate privileges. Enterprise T1134 Access Token Manipulation Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.[90] Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process. .004 Parent PID Spoofing Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.[91] Enterprise T1059 Command and Scripting Interpreter Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. For example, consider monitoring for Windows Event ID (EID) 400, which shows the version of PowerShell executing in the EngineVersion field (which may also be relevant to detecting a potential Downgrade Attack) as well as if PowerShell is running locally or remotely in the HostName field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.[92] .001 PowerShell Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the EngineVersion field (which may also be relevant to detecting a potential Downgrade Attack) as well as if PowerShell is running locally or remotely in the HostName field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.[92] Mobile T1623 Command and Scripting Interpreter Mobile Threat Defense (MTD) with lower-level OS APIs integrations may have access to running processes and their parameters, potentially detecting unwanted or malicious shells. .001 Unix Shell Mobile Threat Defense (MTD) with lower-level OS APIs integrations may have access to running processes and their parameters, potentially detecting unwanted or malicious shells. ICS T0874 Hooking Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Enterprise T1562 Impair Defenses Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information. .010 Downgrade Attack Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal use of a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, monitoring for Windows event ID (EID) 400, specifically the EngineVersion field which shows the version of PowerShell running, may highlight a malicious downgrade attack.[92] Enterprise T1056 Input Capture Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. .004 Credential API Hooking Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Enterprise T1036 Masquerading Monitor for file names that are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. .003 Rename Legitimate Utilities Monitor for file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled. .005 Match Legitimate Resource Name or Location Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. .011 Overwrite Process Arguments Compare /proc/<PID>/comm (which reflects the process name), cmdline (which reflects argv[0]), and the actual binary (/proc/<PID>/exe) to detect inconsistencies. Combine with the activity of clearing argv[1..n] early in execution. ICS T0849 Masquerading Monitor for file names that are mismatched between the file name on disk and that of the binary's metadata. This is a likely indicator that a binary was renamed after it was compiled. For added context on adversary procedures and background see Masquerading Mitigation and applicable sub-techniques. Enterprise T1055 Process Injection Monitor for process memory inconsistencies, such as checking memory ranges against a known copy of the legitimate module.[93] .001 Dynamic-link Library Injection Monitor for process memory inconsistencies compared to DLL files on disk by checking memory ranges against a known copy of the legitimate module.[93] ICS T0853 Scripting Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. Enterprise T1127 Trusted Developer Utilities Proxy Execution Evaluate Event Tracing for Windows (ETW) telemetry associated with the execution of developer utilities. .002 ClickOnce Evaluate Event Tracing for Windows (ETW) telemetry associated with ClickOnce deployment execution. Process: Process Modification Changes made to a running process, such as writing data into memory, modifying execution behavior, or injecting code into an existing process. Adversaries frequently modify processes to execute malicious payloads, evade detection, or gain escalated privileges. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: EDRs can monitor memory modifications and API-level calls. Sysmon (Windows): Event ID 8 (CreateRemoteThread) \u2013 Detects cross-process thread injection, commonly used in process hollowing. Event ID 10 (Process Access) \u2013 Detects access attempts to another process, often preceding injection attempts. Linux/macOS Monitoring: AuditD (ptrace, mmap, mprotect syscalls): Detects memory modifications and debugging attempts. eBPF/XDP: Monitors low-level system calls related to process modifications. OSQuery: The processes table can be queried for unusual modifications. Network-Based Monitoring: Zeek (Bro) Logs: Captures lateral movement attempts where adversaries remotely modify a process. Syslog/OSSEC: Monitors logs for suspicious modifications. Process: Process Modification Changes made to a running process, such as writing data into memory, modifying execution behavior, or injecting code into an existing process. Adversaries frequently modify processes to execute malicious payloads, evade detection, or gain escalated privileges. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: EDRs can monitor memory modifications and API-level calls. Sysmon (Windows): Event ID 8 (CreateRemoteThread) \u2013 Detects cross-process thread injection, commonly used in process hollowing. Event ID 10 (Process Access) \u2013 Detects access attempts to another process, often preceding injection attempts. Linux/macOS Monitoring: AuditD (ptrace, mmap, mprotect syscalls): Detects memory modifications and debugging attempts. eBPF/XDP: Monitors low-level system calls related to process modifications. OSQuery: The processes table can be queried for unusual modifications. Network-Based Monitoring: Zeek (Bro) Logs: Captures lateral movement attempts where adversaries remotely modify a process. Syslog/OSSEC: Monitors logs for suspicious modifications. Domain ID Name Detects Enterprise T1185 Browser Session Hijacking This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor for Process Injection against browser applications. Enterprise T1562 Impair Defenses Using another process or third-party tools, monitor for modifications or access to system processes associated with logging. .012 Disable or Modify Linux Audit System Using another process or third-party tools, monitor for potentially malicious modifications or access to the auditd system process. Enterprise T1055 Process Injection Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. .001 Dynamic-link Library Injection Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. Injecting a malicious DLL into a process is a common adversary TTP. Although the ways of doing this are numerous, mavinject.exe is a commonly used tool for doing so because it roles up many of the necessary steps into one, and is available within Windows. Attackers may rename the executable, so we also use the common argument \"INJECTRUNNING\" as a related signature here. Whitelisting certain applications may be necessary to reduce noise for this analytic. Analytic 1 - DLL Injection with Mavinject (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"1\") OR (source=\"WinEventLog:Security\" EventCode=\"4688\") Image=\"C:\\Windows\\SysWOW64\\mavinject.exe\" OR Image=\"C:\\Windows\\System32\\mavinject.exe\" OR CommandLine=\"/INJECTRUNNING\"\" .002 Portable Executable Injection Monitor for changes made to processes that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. .003 Thread Execution Hijacking Monitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. .004 Asynchronous Procedure Call Monitor for changes made to processes that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. .005 Thread Local Storage Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. .008 Ptrace System Calls Monitor for changes made to processes that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. .012 Process Hollowing Monitor for changes made to processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. .015 ListPlanting Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. Process: Process Termination The exit or termination of a running process on a system. This can occur due to normal operations, user-initiated commands, or malicious actions such as process termination by malware to disable security controls. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: Monitor process termination events. Windows Event Logs: Event ID 4689 (Process Termination) \u2013 Captures when a process exits, including process ID and parent process. Event ID 7036 (Service Control Manager) \u2013 Monitors system service stops. Sysmon (Windows): Event ID 5 (Process Termination) \u2013 Detects when a process exits, including parent-child relationships. Linux/macOS Monitoring: AuditD (execve, exit_group, kill syscalls) \u2013 Captures process termination via command-line interactions. eBPF/XDP: Monitors low-level system calls related to process termination. OSQuery: The processes table can be queried for abnormal exits. Process: Process Termination The exit or termination of a running process on a system. This can occur due to normal operations, user-initiated commands, or malicious actions such as process termination by malware to disable security controls. Data Collection Measures: Endpoint Detection and Response (EDR) Tools: Monitor process termination events. Windows Event Logs: Event ID 4689 (Process Termination) \u2013 Captures when a process exits, including process ID and parent process. Event ID 7036 (Service Control Manager) \u2013 Monitors system service stops. Sysmon (Windows): Event ID 5 (Process Termination) \u2013 Detects when a process exits, including parent-child relationships. Linux/macOS Monitoring: AuditD (execve, exit_group, kill syscalls) \u2013 Captures process termination via command-line interactions. eBPF/XDP: Monitors low-level system calls related to process termination. OSQuery: The processes table can be queried for abnormal exits. Domain ID Name Detects ICS T0803 Block Command Message Monitor for the termination of processes or services associated with ICS automation protocols and application software which could help detect blocked communications. ICS T0804 Block Reporting Message Monitor for the termination of processes or services associated with ICS automation protocols and application software which could help detect blocked communications. ICS T0805 Block Serial COM Monitor for the termination of processes or services associated with ICS automation protocols and application software which could help detect blocked communications. Enterprise T1668 Exclusive Control Monitor for the termination of processes or disabling of vulnerable services[94] that may be an attempt to limit subsequent exploitation of the system by additional unrelated threat actors. Enterprise T1562 Impair Defenses Monitor for unexpected deletions of a running process (ex: Sysmon EID 5 or Windows EID 4689) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. .001 Disable or Modify Tools Monitor processes for unexpected termination related to security tools/services. Specifically, before execution of ransomware, monitor for rootkit tools, such as GMER, PowerTool or TDSSKiller, that may detect and terminate hidden processes and the host antivirus software. Mobile T1629 Impair Defenses Mobile security products integrated with Samsung Knox for Mobile Threat Defense can monitor processes to see if security tools are killed or stop running. Enterprise T1489 Service Stop Monitor processes and command-line arguments to see if critical processes are terminated or stop running. On ESXi servers, monitor for suspicious termination of VM processes, such as many VMs shutting down at once.[95] ICS T0881 Service Stop Monitor processes and command-line arguments to see if critical processes are terminated or stop running. For added context on adversary procedures and background see Service Stop Mitigation. References Microsoft. (2018, May 31). Processes and Threads. Retrieved September 28, 2021. Microsoft TechNet. (n.d.). Retrieved April 25, 2017. Microsoft TechNet. (n.d.). Retrieved April 25, 2017. Microsoft TechNet. (n.d.). Retrieved April 25, 2017. Schofield, M. & Satran, M. (2018, May 30). Process Creation Flags. Retrieved June 4, 2019. Secuirtyinbits . (2019, May 14). Parent PID Spoofing (Stage 2) Ataware Ransomware Part 3. Retrieved June 6, 2019. Microsoft. (n.d.). AddMonitor function. Retrieved September 12, 2024. Apple. (n.d.). Keychain Items. Retrieved April 12, 2022. Mercer, W. and Rascagneres, P. (2018, February 12). Olympic Destroyer Takes Aim At Winter Olympics. Retrieved March 14, 2019. Microsoft. (2018, December 5). CredEnumarateA function (wincred.h). Retrieved November 24, 2020. Delpy, B. (2017, December 12). howto ~ credential manager saved credentials. Retrieved November 23, 2020. Schroeder, W. (2017, October 30). A Guide to Attacking Domain Trusts. Retrieved February 14, 2019. Microsoft. (n.d.). Domain.GetAllTrustRelationships Method. Retrieved February 14, 2019. Hosseini, A. (2017, July 18). Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques. Retrieved December 7, 2017. Microsoft. (2023, February 8). CreateMutexA function (synchapi.h). Retrieved September 19, 2024. Lenny Zeltser. (2012, July 24). Looking at Mutex Objects for Malware Discovery & Indicators of Compromise. Retrieved September 19, 2024. Moe, O. (2018, January 14). Putting Data in Alternate Data Streams and How to Execute It. Retrieved June 30, 2018. Moe, O. (2018, April 11). Putting Data in Alternate Data Streams and How to Execute It - Part 2. Retrieved June 30, 2018. Atkinson, J. (2017, July 18). Host-based Threat Modeling & Indicator Design. Retrieved March 21, 2018. Saini, A. and Hossein, J. (2022, January 27). North Korea\u2019s Lazarus APT leverages Windows Update client, GitHub in latest campaign. Retrieved January 27, 2022. Microsoft. (n.d.). Hooks Overview. Retrieved December 12, 2017. Volatility Labs. (2012, September 24). MoVP 3.1 Detecting Malware Hooks in the Windows GUI Subsystem. Retrieved December 12, 2017. Prekas, G. (2011, July 11). Winhook. Retrieved December 12, 2017. Satiro, J. (2011, September 14). GetHooks. Retrieved December 12, 2017. Felici, M. (2006, December 6). Any application-defined hook procedure on my machine?. Retrieved December 12, 2017. Eye of Ra. (2017, June 27). Windows Keylogger Part 2: Defense against user-land. Retrieved December 12, 2017. Martin Smol\u00e1r. (2023, March 1). BlackLotus UEFI bootkit: Myth confirmed. Retrieved February 11, 2025. Vishavjit Singh. (2023, June 22). TIMESTOMPING EXPLAINED ON API LEVEL. Retrieved June 20, 2024. Lina Lau. (2022, April 28). Defence Evasion Technique: Timestomping Detection \u2013 NTFS Forensics. Retrieved September 30, 2024. Tinaztepe, E. (n.d.). The Adventures of a Keystroke: An in-depth look into keyloggers on Windows. Retrieved April 27, 2016. Dell SecureWorks. (2015, January 12). Skeleton Key Malware Analysis. Retrieved April 8, 2019. Microsoft. (2021, October 21). NPLogonNotify function (npapi.h). Retrieved March 30, 2023. Russinovich, M. & Sharkey, K. (2006, January 10). Reghide. Retrieved August 9, 2018. Reitz, B. (2017, July 14). Hiding Registry keys with PSReflect. Retrieved August 9, 2018. Russinovich, M. & Sharkey, K. (2016, July 4). RegDelNull v1.11. Retrieved August 10, 2018. Brennan, M. (2022, February 16). Hackers No Hashing: Randomizing API Hashes to Evade Cobalt Strike Shellcode Detection. Retrieved August 22, 2022. Pinola, M. (2014, December 14). 3 tools to check your hard drive's health and make sure it's not already dying on you. Retrieved November 17, 2024. SanDisk. (n.d.). Self-Monitoring, Analysis and Reporting Technology (S.M.A.R.T.). Retrieved October 2, 2018. smartmontools. (n.d.). smartmontools. Retrieved October 2, 2018. Ligh, M.H. et al.. (2014, July). The Art of Memory Forensics: Detecting Malware and Threats in Windows, Linux, and Mac Memory. Retrieved December 20, 2017. GNU. (2010, February 5). The GNU Accounting Utilities. Retrieved December 20, 2017. Jahoda, M. et al.. (2017, March 14). redhat Security Guide - Chapter 7 - System Auditing. Retrieved December 20, 2017. stderr. (2014, February 14). Detecting Userland Preload Rootkits. Retrieved December 20, 2017. Microsoft. (n.d.). GetWindowLong function. Retrieved December 16, 2017. Microsoft. (n.d.). SetWindowLong function. Retrieved December 16, 2017. Microsoft. (n.d.). SendNotifyMessage function. Retrieved December 16, 2017. Liberman, T. & Kogan, E. (2017, December 7). Lost in Transaction: Process Doppelg\u00e4nging. Retrieved December 20, 2017. hasherezade. (2017, December 18). Process Doppelg\u00e4nging \u2013 a new way to impersonate a process. Retrieved December 20, 2017. 0x00pico. (2017, September 25). Super-Stealthy Droppers. Retrieved October 4, 2021. Landry, J. (2016, April 21). Teaching an old RAT new tricks. Retrieved October 4, 2021. Microsoft. (n.d.). Graphics.CopyFromScreen Method. Retrieved March 24, 2020. Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017. FBI. (2020, November 19). Indicators of Compromise Associated with Ragnar Locker Ransomware. Retrieved September 12, 2024. ise. (2019, February 19). Password Managers: Under the Hood of Secrets Management. Retrieved January 22, 2021. VerSprite. (2018, January 24). Exploiting VyprVPN for MacOS. Retrieved April 20, 2022. French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019. Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 17, 2024. Mathers, B. (2017, May 31). Windows Time Service Tools and Settings. Retrieved March 26, 2018. Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016. Chrome Enterprise and Education Help. (n.d.). Use Chrome Browser with Roaming User Profiles. Retrieved March 28, 2023. Adrien Bataille, Anders Vejlby, Jared Scott Wilson, and Nader Zaveri. (2021, December 14). Azure Run Command for Dummies. Retrieved March 13, 2023. Arntz, P. (2016, March 30). The Windows Vault . Retrieved November 23, 2020. detection.fyi. (2023, October 28). Potential Suspicious Mofcomp Execution. Retrieved February 9, 2024. The DFIR Report. (2023, January 8). proc_creation_win_mofcomp_execution.yml. Retrieved February 9, 2024. Pierce, Sean. (2015, November). Defending Against Malicious Application Compatibility Shims. Retrieved June 22, 2017. Shanbhag, M. (2010, March 24). Image File Execution Options (IFEO). Retrieved December 18, 2017. Eder P. Ignacio. (2024, February 21). Leveraging Linux udev for persistence. Retrieved September 26, 2024. Hybrid Analysis. (2018, June 12). c9b65b764985dfd7a11d3faf599c56b8.exe. Retrieved August 19, 2018. Hybrid Analysis. (2018, May 30). 2a8efbfadd798f6111340f7c1c956bee.dll. Retrieved August 19, 2018. Safran, Or. Asinovsky, Pavel. (2017, November). Who Hid My Desktop: Deep Dive Into HVNC. Retrieved November 28, 2023. Daman, R. (2020, February 4). The return of the spoof part 2: Command line spoofing. Retrieved November 19, 2021. Pena, E., Erikson, C. (2019, October 10). Staying Hidden on the Endpoint: Evading Detection with Shellcode. Retrieved November 29, 2021. Brown, J. (2020, May 7). Detecting COR_PROFILER manipulation for persistence. Retrieved June 24, 2020. Elastic. (n.d.). Binary Executed from Shared Memory Directory. Retrieved September 24, 2024. Hamilton, C. (2019, June 4). Hunting COM Objects. Retrieved June 10, 2019. Nelson, M. (2017, January 5). Lateral Movement using the MMC20 Application COM Object. Retrieved November 21, 2017. Sarah Edwards. (2020, April 30). Analysis of Apple Unified Logs: Quarantine Edition [Entry 6] \u2013 Working From Home? Remote Logins. Retrieved August 19, 2021. Loobeek, L. (2017, December 8). leoloobeek Status. Retrieved September 12, 2024. Lee, T., Hanzlik, D., Ahl, I. (2013, August 7). Breaking Down the China Chopper Web Shell - Part I. Retrieved March 27, 2015. NSA Cybersecurity Directorate. (n.d.). Mitigating Web Shells. Retrieved July 22, 2021. Graeber, M. (2017, December 22). Code Signing Certificate Cloning Attacks and Defenses. Retrieved April 3, 2018. Russinovich, M. et al.. (2017, May 22). Sigcheck. Retrieved April 3, 2018. Microsoft. (2021, February 15). Enable Loading of Test Signed Drivers. Retrieved April 22, 2021. Moe, O. (2017, August 13). Bypassing Device guard UMCI using CHM \u2013 CVE-2017-8625. Retrieved October 3, 2018. Merc\u00eas, F. (2014, January 27). CPL Malware - Malicious Control Panel Items. Retrieved January 18, 2018. Seetharaman, N. (2018, July 7). Detecting CMSTP-Enabled Code Execution and UAC Bypass With Sysmon.. Retrieved November 17, 2024. Jamie Harries. (2022, May 25). Hunting a Global Telecommunications Threat: DecisiveArchitect and Its Custom Implant JustForFun. Retrieved October 18, 2022. LOLBAS. (n.d.). Wmic.exe. Retrieved July 31, 2019. Desimone, J. (2018, April 18). Status Update. Retrieved September 12, 2024. Atkinson, J., Winchester, R. (2017, December 7). A Process is No One: Hunting for Token Manipulation. Retrieved December 21, 2017. Loh, I. (2018, December 21). Detecting Parent PID Spoofing. Retrieved June 3, 2019. Hastings, M. (2014, July 16). Investigating PowerShell Attacks. Retrieved December 1, 2021. Aliz Hammond. (2019, August 15). Hiding Malicious Code with \"Module Stomping\": Part 1. Retrieved July 14, 2022. Matt Wixey. (2022, August 9). Multiple attackers increase pressure on victims, complicate incident response. Retrieved January 31, 2025. Elastic. (n.d.). Suspicious Termination of ESXI Process. Retrieved March 27, 2025. "
},
{
"id": 1126,
"title": "Image, Data Source DS0007",
"path": "/datasources/DS0007/index.html",
"content": " Image A single file used to deploy a virtual machine/bootable disk into an on-premise or third-party cloud environment[1][2] ID: DS0007 \u24d8 Platform: IaaS \u24d8 Collection Layer: Cloud Control Plane Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Image: Image Creation Initial construction of a virtual machine image within a cloud environment. Virtual machine images are templates containing an operating system and installed applications, which can be deployed to create new virtual machines. Monitoring the creation of these images is important because adversaries may create custom images to include malicious software or misconfigurations for later exploitation. Examples: Azure Compute Service Image Creation Example: Creating a virtual machine image in Azure using Azure CLI: az image create --resource-group MyResourceGroup --name MyImage --source MyVM AWS EC2 AMI (Amazon Machine Image) Creation Example: Creating an AMI from an EC2 instance: aws ec2 create-image --instance-id i-1234567890abcdef0 --name \"MyAMI\" --description \"An AMI for my app\" Google Cloud Compute Engine Image Creation Example: Creating a custom image using gcloud: gcloud compute images create my-custom-image --source-disk my-disk --source-disk-zone us-central1-a VMware vSphere Example: Exporting a VM to create an OVF (Open Virtualization Format) template: This could later be imported into other environments with potential tampering. This data component can be collected through the following measures: Enable Cloud Platform Logging Azure: Enable \"Activity Logs\" to capture image-related events such as PUT requests to Microsoft.Compute/images. AWS: Use AWS CloudTrail to monitor CreateImage API calls. Google Cloud: Enable \"Cloud Audit Logs\" to track custom image creation events under compute.googleapis.com/images. API Monitoring Monitor API activity to track the creation of new images using: AWS SDK/CLI CreateImage. Azure REST API for image creation. Google Cloud Compute Engine APIs. Cloud SIEM Integration Ingest cloud platform logs into a centralized SIEM for real-time monitoring and alerting. Image: Image Creation Initial construction of a virtual machine image within a cloud environment. Virtual machine images are templates containing an operating system and installed applications, which can be deployed to create new virtual machines. Monitoring the creation of these images is important because adversaries may create custom images to include malicious software or misconfigurations for later exploitation. Examples: Azure Compute Service Image Creation Example: Creating a virtual machine image in Azure using Azure CLI: az image create --resource-group MyResourceGroup --name MyImage --source MyVM AWS EC2 AMI (Amazon Machine Image) Creation Example: Creating an AMI from an EC2 instance: aws ec2 create-image --instance-id i-1234567890abcdef0 --name \"MyAMI\" --description \"An AMI for my app\" Google Cloud Compute Engine Image Creation Example: Creating a custom image using gcloud: gcloud compute images create my-custom-image --source-disk my-disk --source-disk-zone us-central1-a VMware vSphere Example: Exporting a VM to create an OVF (Open Virtualization Format) template: This could later be imported into other environments with potential tampering. This data component can be collected through the following measures: Enable Cloud Platform Logging Azure: Enable \"Activity Logs\" to capture image-related events such as PUT requests to Microsoft.Compute/images. AWS: Use AWS CloudTrail to monitor CreateImage API calls. Google Cloud: Enable \"Cloud Audit Logs\" to track custom image creation events under compute.googleapis.com/images. API Monitoring Monitor API activity to track the creation of new images using: AWS SDK/CLI CreateImage. Azure REST API for image creation. Google Cloud Compute Engine APIs. Cloud SIEM Integration Ingest cloud platform logs into a centralized SIEM for real-time monitoring and alerting. Domain ID Name Detects Enterprise T1612 Build Image on Host Monitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment. Enterprise T1525 Implant Internal Image Monitor interactions with images and containers by users to identify ones that are added anomalously. Enterprise T1204 User Execution Monitor for newly constructed image that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. .003 Malicious Image Monitor the local image registry to make sure malicious images are not added. Image: Image Deletion Removal of a virtual machine image in a cloud infrastructure (ex: Azure Compute Service Images DELETE) Examples: Azure Compute Service Image Deletion Example: Deleting a virtual machine image using Azure CLI: az image delete --name MyImage --resource-group MyResourceGroup AWS EC2 AMI (Amazon Machine Image) Deletion Example: Deregistering an AMI in AWS: aws ec2 deregister-image --image-id ami-1234567890abcdef0 Google Cloud Compute Engine Image Deletion Example: Deleting a custom image in Google Cloud: gcloud compute images delete my-custom-image VMware vSphere Example: Deleting a VM image/template from a vSphere environment: This data component can be collected through the following measures: Enable Cloud Platform Logging Azure: Enable \"Activity Logs\" to capture DELETE requests to Microsoft.Compute/images. AWS: Use AWS CloudTrail to monitor DeregisterImage or DeleteSnapshot API calls. Google Cloud: Enable \"Cloud Audit Logs\" to track image deletion events under compute.googleapis.com/images. API Monitoring Monitor API activity to track the deletion of images using: AWS SDK/CLI DeregisterImage or DeleteSnapshot. Azure REST API DELETE operations for images. Google Cloud Compute Engine APIs for image deletion. Cloud SIEM Integration Ingest logs into a centralized SIEM platform for monitoring and alerting: Event Correlation Correlate image deletion events with unusual account activity or concurrent unauthorized operations. Image: Image Deletion Removal of a virtual machine image in a cloud infrastructure (ex: Azure Compute Service Images DELETE) Examples: Azure Compute Service Image Deletion Example: Deleting a virtual machine image using Azure CLI: az image delete --name MyImage --resource-group MyResourceGroup AWS EC2 AMI (Amazon Machine Image) Deletion Example: Deregistering an AMI in AWS: aws ec2 deregister-image --image-id ami-1234567890abcdef0 Google Cloud Compute Engine Image Deletion Example: Deleting a custom image in Google Cloud: gcloud compute images delete my-custom-image VMware vSphere Example: Deleting a VM image/template from a vSphere environment: This data component can be collected through the following measures: Enable Cloud Platform Logging Azure: Enable \"Activity Logs\" to capture DELETE requests to Microsoft.Compute/images. AWS: Use AWS CloudTrail to monitor DeregisterImage or DeleteSnapshot API calls. Google Cloud: Enable \"Cloud Audit Logs\" to track image deletion events under compute.googleapis.com/images. API Monitoring Monitor API activity to track the deletion of images using: AWS SDK/CLI DeregisterImage or DeleteSnapshot. Azure REST API DELETE operations for images. Google Cloud Compute Engine APIs for image deletion. Cloud SIEM Integration Ingest logs into a centralized SIEM platform for monitoring and alerting: Event Correlation Correlate image deletion events with unusual account activity or concurrent unauthorized operations. Domain ID Name Detects Enterprise T1485 Data Destruction Monitor for unexpected deletion of a virtual machine image (ex: Azure Compute Service Images DELETE) Image: Image Metadata contextual information associated with a virtual machine image, such as its name, resource group, status (active or inactive), type (custom or prebuilt), size, creation date, and permissions. This metadata is critical for understanding the state and configuration of virtual machine images in cloud environments. Examples: Azure Compute Service Image Metadata Example: Name: MyCustomImage Resource Group: MyResourceGroup State: Available Type: Managed Image AWS EC2 AMI Metadata Example: Image ID: ami-1234567890abcdef0 Name: ProdImage State: Available Platform: Windows Google Cloud Compute Engine Image Metadata Example: Image Name: webserver-image Project: my-project-id Family: webserver Source Disk: my-disk-id VMware vSphere Template Metadata Example: Name: LinuxTemplate Disk Size: 40GB Network Adapter: VM Network This data component can be collected through the following measures: Cloud Platform-Specific Tools Azure: Use Azure CLI to query metadata: az image show --name MyCustomImage --resource-group MyResourceGroup AWS: Use AWS CLI to describe AMI metadata: aws ec2 describe-images --image-ids ami-1234567890abcdef0 Google Cloud: Use Google Cloud SDK to retrieve image metadata: gcloud compute images describe webserver-image APIs Azure: GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName} AWS: DescribeImages API. Google Cloud: GET https://compute.googleapis.com/compute/v1/projects/{project}/global/images/{image}. Cloud Management Portals View metadata directly from the cloud provider's management console or dashboard. SIEM Integration Aggregate metadata into SIEM platforms for centralized monitoring: Image: Image Metadata contextual information associated with a virtual machine image, such as its name, resource group, status (active or inactive), type (custom or prebuilt), size, creation date, and permissions. This metadata is critical for understanding the state and configuration of virtual machine images in cloud environments. Examples: Azure Compute Service Image Metadata Example: Name: MyCustomImage Resource Group: MyResourceGroup State: Available Type: Managed Image AWS EC2 AMI Metadata Example: Image ID: ami-1234567890abcdef0 Name: ProdImage State: Available Platform: Windows Google Cloud Compute Engine Image Metadata Example: Image Name: webserver-image Project: my-project-id Family: webserver Source Disk: my-disk-id VMware vSphere Template Metadata Example: Name: LinuxTemplate Disk Size: 40GB Network Adapter: VM Network This data component can be collected through the following measures: Cloud Platform-Specific Tools Azure: Use Azure CLI to query metadata: az image show --name MyCustomImage --resource-group MyResourceGroup AWS: Use AWS CLI to describe AMI metadata: aws ec2 describe-images --image-ids ami-1234567890abcdef0 Google Cloud: Use Google Cloud SDK to retrieve image metadata: gcloud compute images describe webserver-image APIs Azure: GET /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName} AWS: DescribeImages API. Google Cloud: GET https://compute.googleapis.com/compute/v1/projects/{project}/global/images/{image}. Cloud Management Portals View metadata directly from the cloud provider's management console or dashboard. SIEM Integration Aggregate metadata into SIEM platforms for centralized monitoring: Domain ID Name Detects Enterprise T1564 .006 Hide Artifacts: Run Virtual Instance Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines.[3] Network adapter information may also be helpful in detecting the use of virtual instances. Enterprise T1525 Implant Internal Image Periodically baseline virtual machine images to identify malicious modifications or additions. Enterprise T1036 Masquerading Collecting disk and resource filenames for binaries, comparing that the InternalName, OriginalFilename, and/or ProductName match what is expected, could provide useful leads but may not always be indicative of malicious activity. [4] .005 Match Legitimate Resource Name or Location In containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.[5] Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users. Image: Image Modification Changes made to a virtual machine image, including setting and/or control data (ex: Azure Compute Service Images PATCH) Image: Image Modification Changes made to a virtual machine image, including setting and/or control data (ex: Azure Compute Service Images PATCH) Domain ID Name Detects Enterprise T1525 Implant Internal Image Monitor interactions with images and containers by users to identify ones that are modified anomalously.In containerized environments, changes may be detectable by monitoring the Docker daemon logs or setting up and monitoring Kubernetes audit logs depending on registry configuration. References Microsoft. (2021, August 23). Create a managed image of a generalized VM in Azure. Retrieved October 13, 2021. Amazon. (n.d.). Amazon Machine Images (AMI). Retrieved October 13, 2021. Johann Rehberger. (2020, September 23). Beware of the Shadowbunny - Using virtual machines to persist and evade detections. Retrieved September 22, 2021. Ewing, P. (2016, October 31). How to Hunt: The Masquerade Ball. Retrieved October 31, 2016. Docker. (n.d.). Docker Images. Retrieved April 6, 2021. "
},
{
"id": 1127,
"title": "Domain Name, Data Source DS0038",
"path": "/datasources/DS0038/index.html",
"content": " Domain Name Information obtained (commonly through registration or activity logs) regarding one or more IP addresses registered with human readable names (ex: mitre.org) ID: DS0038 \u24d8 Platform: PRE \u24d8 Collection Layer: OSINT Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Domain Name: Active DNS \"Domain Name: Active DNS\" data component captures queried DNS registry data that highlights current domain-to-IP address resolutions. This data includes both direct queries to DNS servers and records that provide mappings between domain names and associated IP addresses. It serves as a critical resource for tracking active infrastructure and understanding the network footprint of an organization or adversary. Examples: DNS Query Example: nslookup example.com, dig example.com A PTR Record Example: dig -x 192.168.1.1 Tracking Malicious Domains: DNS logs reveal repeated queries to suspicious domains like malicious-site.com. The IPs resolved by these domains may be indicators of compromise (IOCs). DNS Record Types A/AAAA Record: Maps domain names to IP addresses (IPv4/IPv6). CNAME Record: Canonical name records, often used for redirects. MX Record: Mail exchange records, used to route emails. TXT Record: Can include security information like SPF or DKIM policies. SOA Record: Start of authority record for domain management. NS Record: Lists authoritative name servers for the domain. This data component can be collected through the following measures: System Utilities: Use built-in tools like nslookup, dig, or host on Linux, macOS, and Windows to perform active DNS queries. DNS Logging Windows DNS Server: Enable DNS Analytical Logging to capture DNS queries and responses. Bind DNS: Enable query logging in the named.conf file. Cloud Provider DNS Logging AWS Route 53: Enable query logging through CloudWatch or S3: Google Cloud DNS: Enable logging for Cloud DNS queries through Google Cloud Logging. Network Traffic Monitoring: Use tools like Wireshark or Zeek to analyze DNS queries within network traffic. Security Information and Event Management (SIEM) Integration: Aggregate DNS logs in a SIEM like Splunk to create alerts and monitor patterns. Public OSINT Tools: Use OSINT platforms like VirusTotal, or PassiveTotal to collect information on domains and their associated IP addresses. Domain Name: Active DNS \"Domain Name: Active DNS\" data component captures queried DNS registry data that highlights current domain-to-IP address resolutions. This data includes both direct queries to DNS servers and records that provide mappings between domain names and associated IP addresses. It serves as a critical resource for tracking active infrastructure and understanding the network footprint of an organization or adversary. Examples: DNS Query Example: nslookup example.com, dig example.com A PTR Record Example: dig -x 192.168.1.1 Tracking Malicious Domains: DNS logs reveal repeated queries to suspicious domains like malicious-site.com. The IPs resolved by these domains may be indicators of compromise (IOCs). DNS Record Types A/AAAA Record: Maps domain names to IP addresses (IPv4/IPv6). CNAME Record: Canonical name records, often used for redirects. MX Record: Mail exchange records, used to route emails. TXT Record: Can include security information like SPF or DKIM policies. SOA Record: Start of authority record for domain management. NS Record: Lists authoritative name servers for the domain. This data component can be collected through the following measures: System Utilities: Use built-in tools like nslookup, dig, or host on Linux, macOS, and Windows to perform active DNS queries. DNS Logging Windows DNS Server: Enable DNS Analytical Logging to capture DNS queries and responses. Bind DNS: Enable query logging in the named.conf file. Cloud Provider DNS Logging AWS Route 53: Enable query logging through CloudWatch or S3: Google Cloud DNS: Enable logging for Cloud DNS queries through Google Cloud Logging. Network Traffic Monitoring: Use tools like Wireshark or Zeek to analyze DNS queries within network traffic. Security Information and Event Management (SIEM) Integration: Aggregate DNS logs in a SIEM like Splunk to create alerts and monitor patterns. Public OSINT Tools: Use OSINT platforms like VirusTotal, or PassiveTotal to collect information on domains and their associated IP addresses. Domain ID Name Detects Enterprise T1583 Acquire Infrastructure Monitor for queried domain name system (DNS) registry data that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .001 Domains Monitor queried domain name system (DNS) registry data for purchased domains that can be used during targeting. Reputation/category-based detection may be difficult until the categorization is updated. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control. Enterprise T1584 Compromise Infrastructure Monitor for queried domain name system (DNS) registry data that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .001 Domains Monitor for queried domain name system (DNS) registry data that may hijack domains and/or subdomains that can be used during targeting. In some cases, abnormal subdomain IP addresses (such as those originating in a different country from the root domain) may indicate a malicious subdomain.[1] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .002 DNS Server Monitor for queried domain name system (DNS) registry data that may compromise third-party DNS servers that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. Domain Name: Domain Registration \"Domain Name: Domain Registration\" data component captures information about the assignment, ownership, and metadata of domain names. This information is often sourced from registries like WHOIS and includes details such as registrant names, contact information, registration dates, expiration dates, and registrar details. This data is invaluable for tracking domain ownership, detecting malicious domain registrations, and identifying trends in adversary behavior. Examples: Registrant Information: WHOIS lookup of example.com Registration and Expiration Dates: A domain registered a week before being used in phishing attacks. Domain Status: Status codes like clientTransferProhibited or serverHold indicate domain restrictions or potential hijacking activity. Name Server Information: Name servers point to a public DNS provider often associated with malicious campaigns. Privacy Protection: A domain uses WHOIS privacy protection to hide registrant details. This data component can be collected through the following measures: WHOIS Services: Use tools or services to perform WHOIS lookups: WHOIS APIs: Automate domain registration lookups with APIs: Registrar Platforms: Directly query domain registrars (e.g., GoDaddy, Namecheap) for detailed registration data. Threat Intelligence Platforms: Integrate domain registration data from services like Recorded Future, RiskIQ, or PassiveTotal for enriched analysis. Domain Name: Domain Registration \"Domain Name: Domain Registration\" data component captures information about the assignment, ownership, and metadata of domain names. This information is often sourced from registries like WHOIS and includes details such as registrant names, contact information, registration dates, expiration dates, and registrar details. This data is invaluable for tracking domain ownership, detecting malicious domain registrations, and identifying trends in adversary behavior. Examples: Registrant Information: WHOIS lookup of example.com Registration and Expiration Dates: A domain registered a week before being used in phishing attacks. Domain Status: Status codes like clientTransferProhibited or serverHold indicate domain restrictions or potential hijacking activity. Name Server Information: Name servers point to a public DNS provider often associated with malicious campaigns. Privacy Protection: A domain uses WHOIS privacy protection to hide registrant details. This data component can be collected through the following measures: WHOIS Services: Use tools or services to perform WHOIS lookups: WHOIS APIs: Automate domain registration lookups with APIs: Registrar Platforms: Directly query domain registrars (e.g., GoDaddy, Namecheap) for detailed registration data. Threat Intelligence Platforms: Integrate domain registration data from services like Recorded Future, RiskIQ, or PassiveTotal for enriched analysis. Domain ID Name Detects Enterprise T1583 Acquire Infrastructure Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .001 Domains Domain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.[2] Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control. Enterprise T1584 Compromise Infrastructure Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet. .001 Domains Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet. Enterprise T1665 Hide Infrastructure Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information, and in monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Domain Name: Passive DNS \"Domain Name: Passive DNS\" captures logged historical and real-time domain name system (DNS) data. This includes records of domain-to-IP address resolutions over time, enabling analysts to track the evolution of domain infrastructure, uncover historical patterns of use, and detect malicious activities tied to domains and their associated IP addresses. Examples: Historical Resolutions Shared IP Usage Temporal Patterns Malicious Domain Clustering Historical Lookback This data component can be collected through the following measures: Passive DNS Platforms: Use platforms that specialize in passive DNS collection and analysis: Tools: Farsight DNSDB, RiskIQ PassiveTotal, PassiveDNS. Threat Intelligence Feeds: Integrate passive DNS data from commercial or open-source threat intelligence providers. Custom DNS Collectors: Deploy custom tools to capture DNS traffic at the network level for analysis. Cloud DNS Services: Leverage cloud DNS services (e.g., AWS Route 53, Azure DNS) that maintain DNS query logs. Domain Name: Passive DNS \"Domain Name: Passive DNS\" captures logged historical and real-time domain name system (DNS) data. This includes records of domain-to-IP address resolutions over time, enabling analysts to track the evolution of domain infrastructure, uncover historical patterns of use, and detect malicious activities tied to domains and their associated IP addresses. Examples: Historical Resolutions Shared IP Usage Temporal Patterns Malicious Domain Clustering Historical Lookback This data component can be collected through the following measures: Passive DNS Platforms: Use platforms that specialize in passive DNS collection and analysis: Tools: Farsight DNSDB, RiskIQ PassiveTotal, PassiveDNS. Threat Intelligence Feeds: Integrate passive DNS data from commercial or open-source threat intelligence providers. Custom DNS Collectors: Deploy custom tools to capture DNS traffic at the network level for analysis. Cloud DNS Services: Leverage cloud DNS services (e.g., AWS Route 53, Azure DNS) that maintain DNS query logs. Domain ID Name Detects Enterprise T1583 Acquire Infrastructure Monitor for logged domain name system (DNS) data that may buy, lease, or rent infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .001 Domains Monitor logged domain name system (DNS) data for purchased domains that can be used during targeting. Reputation/category-based detection may be difficult until the categorization is updated. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control. Enterprise T1584 Compromise Infrastructure Monitor for logged domain name system (DNS) data that may compromise third-party infrastructure that can be used during targeting. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .001 Domains Monitor for logged domain name system (DNS) registry data that may hijack domains and/or subdomains that can be used during targeting. In some cases, abnormal subdomain IP addresses (such as those originating in a different country from the root domain) may indicate a malicious subdomain.[1] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. .002 DNS Server Monitor for logged domain name system (DNS) registry data that may compromise third-party DNS servers that can be used during targeting. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control. References Janos Szurdi, Rebekah Houser and Daiping Liu. (2022, September 21). Domain Shadowing: A Stealthy Use of DNS Compromise for Cybercrime. Retrieved March 7, 2023. ThreatConnect. (2020, December 15). Infrastructure Research and Hunting: Boiling the Domain Ocean. Retrieved October 12, 2021. "
},
{
"id": 1128,
"title": "Pod, Data Source DS0014",
"path": "/datasources/DS0014/index.html",
"content": " Pod A single unit of shared resources within a cluster, comprised of one or more containers[1][2] ID: DS0014 \u24d8 Platform: Containers \u24d8 Collection Layer: Container Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Pod: Pod Creation The initial deployment or instantiation of a new pod in a containerized environment. This includes creating a pod manually, through orchestration tools (Kubernetes), or via Infrastructure-as-Code (IaC) configurations. A Pod is the smallest deployable unit in Kubernetes, typically containing one or more containers. Creation methods include:- Direct pod deployment (kubectl run, kubectl apply)- Automated deployment via CI/CD pipelines (e.g., ArgoCD, Jenkins, GitOps)- Infrastructure-as-Code (IaC) templates (e.g., Terraform, Helm Charts)- API-based deployments via Kubernetes control plane (create_pod API calls)- Pods can be ephemeral (short-lived) or persistent (part of a StatefulSet or Deployment). Data Collection Measures: Kubernetes Audit Logs Captures all API requests, including pod create events. Kube-api server Logs Monitors API calls related to pod deployments and modifications. Related Events: PodSandboxChanged, SyncLoop, Created pod Container Runtime Logs Logs from CRI-O, containerd, or Docker capture pod creation events. Related Events: container start, container create Cloud Provider Logs GKE, EKS, AKS logs provide insights into Kubernetes API interactions. SIEM & Log Aggregation Integrates Kubernetes logs into SIEM solutions. EDR/XDR Solutions Monitors container-based activity for anomalous pod creations. Pod: Pod Creation The initial deployment or instantiation of a new pod in a containerized environment. This includes creating a pod manually, through orchestration tools (Kubernetes), or via Infrastructure-as-Code (IaC) configurations. A Pod is the smallest deployable unit in Kubernetes, typically containing one or more containers. Creation methods include:- Direct pod deployment (kubectl run, kubectl apply)- Automated deployment via CI/CD pipelines (e.g., ArgoCD, Jenkins, GitOps)- Infrastructure-as-Code (IaC) templates (e.g., Terraform, Helm Charts)- API-based deployments via Kubernetes control plane (create_pod API calls)- Pods can be ephemeral (short-lived) or persistent (part of a StatefulSet or Deployment). Data Collection Measures: Kubernetes Audit Logs Captures all API requests, including pod create events. Kube-api server Logs Monitors API calls related to pod deployments and modifications. Related Events: PodSandboxChanged, SyncLoop, Created pod Container Runtime Logs Logs from CRI-O, containerd, or Docker capture pod creation events. Related Events: container start, container create Cloud Provider Logs GKE, EKS, AKS logs provide insights into Kubernetes API interactions. SIEM & Log Aggregation Integrates Kubernetes logs into SIEM solutions. EDR/XDR Solutions Monitors container-based activity for anomalous pod creations. Domain ID Name Detects Enterprise T1610 Deploy Container Monitor for newly constructed pods that may deploy a container into an environment to facilitate execution or evade defenses. Pod: Pod Enumeration Extracting a list of running or existing pods within a containerized cluster environment. Pods are the smallest deployable units in a Kubernetes cluster and typically represent an application or workload. Enumeration of pods provides insight into the structure and state of applications running in the cluster, such as the names of pods, their namespaces, and their associated metadata. Data Collection Measures: Kubernetes API Server Audit Logs: Enable Audit Logging in Kubernetes to capture API requests, such as GET /api/v1/pods. Container Runtime Logs: Collect runtime-level logs from tools like CRI-O, containerd, or Docker, which might show relevant API calls for pod enumeration. EDR and SIEM: Endpoint Detection and Response (EDR) tools, if configured with cluster-level visibility, can monitor user commands like kubectl get pods. SIEM platforms (e.g., Splunk) can ingest Kubernetes API logs to detect enumeration patterns. Host-Based Monitoring: Monitor processes and commands executed on nodes where kubectl is installed using tools like auditd, Sysmon for Linux, or kernel modules. Pod: Pod Enumeration Extracting a list of running or existing pods within a containerized cluster environment. Pods are the smallest deployable units in a Kubernetes cluster and typically represent an application or workload. Enumeration of pods provides insight into the structure and state of applications running in the cluster, such as the names of pods, their namespaces, and their associated metadata. Data Collection Measures: Kubernetes API Server Audit Logs: Enable Audit Logging in Kubernetes to capture API requests, such as GET /api/v1/pods. Container Runtime Logs: Collect runtime-level logs from tools like CRI-O, containerd, or Docker, which might show relevant API calls for pod enumeration. EDR and SIEM: Endpoint Detection and Response (EDR) tools, if configured with cluster-level visibility, can monitor user commands like kubectl get pods. SIEM platforms (e.g., Splunk) can ingest Kubernetes API logs to detect enumeration patterns. Host-Based Monitoring: Monitor processes and commands executed on nodes where kubectl is installed using tools like auditd, Sysmon for Linux, or kernel modules. Domain ID Name Detects Enterprise T1613 Container and Resource Discovery Monitor logs for actions that could be taken to gather information about pods, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications. Pod: Pod Modification Changes made to a pod\u2019s configuration or control data within a containerized cluster. This can include updating settings such as resource limits, environment variables, annotations, labels, or even the containers running within the pod. Pod modifications are often executed using commands like kubectl set, kubectl patch, or kubectl edit. Data Collection Measures: Kubernetes API Server Audit Logs: Capture all API calls related to pod modification, such as PATCH, PUT, or UPDATE methods on v1/pods. Runtime Security Tools: Tools like Falco, Sysdig, and Kube-bench can monitor pod modifications at runtime and alert on policy violations. Container Orchestration Logs: Monitor events logged by Kubernetes itself (e.g., kubectl logs -n kube-system kube-controller-manager). SIEM and EDR Solutions: Use SIEM platforms (e.g., Splunk) to aggregate API server logs and detect patterns of unauthorized or suspicious pod modifications. Endpoint Detection and Response (EDR) tools configured with container visibility can monitor commands like kubectl set or kubectl patch. Host-Based Monitoring: Collect and analyze logs for processes executing kubectl commands or interacting with Kubernetes configuration files (e.g., .kube/config). Pod: Pod Modification Changes made to a pod\u2019s configuration or control data within a containerized cluster. This can include updating settings such as resource limits, environment variables, annotations, labels, or even the containers running within the pod. Pod modifications are often executed using commands like kubectl set, kubectl patch, or kubectl edit. Data Collection Measures: Kubernetes API Server Audit Logs: Capture all API calls related to pod modification, such as PATCH, PUT, or UPDATE methods on v1/pods. Runtime Security Tools: Tools like Falco, Sysdig, and Kube-bench can monitor pod modifications at runtime and alert on policy violations. Container Orchestration Logs: Monitor events logged by Kubernetes itself (e.g., kubectl logs -n kube-system kube-controller-manager). SIEM and EDR Solutions: Use SIEM platforms (e.g., Splunk) to aggregate API server logs and detect patterns of unauthorized or suspicious pod modifications. Endpoint Detection and Response (EDR) tools configured with container visibility can monitor commands like kubectl set or kubectl patch. Host-Based Monitoring: Collect and analyze logs for processes executing kubectl commands or interacting with Kubernetes configuration files (e.g., .kube/config). Domain ID Name Detects Enterprise T1610 Deploy Container Monitor for changes made to pods for unexpected modifications to settings and/or control data that may deploy a container into an environment to facilitate execution or evade defenses. References kubernetes. (n.d.). kubectl. Retrieved October 13, 2021. kubenetes. (n.d.). Pod v1 core. Retrieved October 13, 2021. "
},
{
"id": 1129,
"title": "Volume, Data Source DS0034",
"path": "/datasources/DS0034/index.html",
"content": " Volume Block object storage hosted on-premise or by third-party providers, typically made available to resources as virtualized hard drives[1][2][3] ID: DS0034 \u24d8 Platforms: IaaS, Linux, Windows, macOS \u24d8 Collection Layers: Cloud Control Plane, Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 17 November 2024 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Volume: Volume Creation The initial provisioning of block storage volumes in cloud or on-prem environments, typically used for data storage, backup, or workload scaling. Data Collection Measures: Cloud-Based Logging & Monitoring AWS CloudTrail CreateVolume \u2013 Logs the creation of new Amazon Elastic Block Store (EBS) volumes. RunInstances \u2013 Can be correlated to detect automatic volume provisioning. Azure Monitor & Log Analytics Microsoft.Compute/disks/write \u2013 Captures creation of new managed/unmanaged disks. Microsoft.Storage/storageAccounts/write \u2013 Detects creation of new Azure Blob Storage volumes. Google Cloud Logging (GCP) compute.disks.insert \u2013 Tracks new persistent disk creation. compute.instances.attachDisk \u2013 Logs attachment of a volume to a running VM. OpenStack Logs volume.create \u2013 Captures new storage volume provisioning. cinder.volume.create \u2013 Logs OpenStack Cinder block storage creation. Host-Based & SIEM Detection Linux/macOS System Logs /var/log/syslog & /var/log/messages \u2013 Detects new mount points or attached storage. dmesg | grep \"new disk\" \u2013 Identifies kernel messages for volume attachment. AuditD: Tracks mkfs (filesystem creation) for new volume provisioning. Windows Event Logs Event ID 1006 (Storage Management Events) \u2013 Captures disk volume creation. Event ID 5145 (Object Access: File Share) \u2013 Detects access to newly created storage shares. Volume: Volume Creation The initial provisioning of block storage volumes in cloud or on-prem environments, typically used for data storage, backup, or workload scaling. Data Collection Measures: Cloud-Based Logging & Monitoring AWS CloudTrail CreateVolume \u2013 Logs the creation of new Amazon Elastic Block Store (EBS) volumes. RunInstances \u2013 Can be correlated to detect automatic volume provisioning. Azure Monitor & Log Analytics Microsoft.Compute/disks/write \u2013 Captures creation of new managed/unmanaged disks. Microsoft.Storage/storageAccounts/write \u2013 Detects creation of new Azure Blob Storage volumes. Google Cloud Logging (GCP) compute.disks.insert \u2013 Tracks new persistent disk creation. compute.instances.attachDisk \u2013 Logs attachment of a volume to a running VM. OpenStack Logs volume.create \u2013 Captures new storage volume provisioning. cinder.volume.create \u2013 Logs OpenStack Cinder block storage creation. Host-Based & SIEM Detection Linux/macOS System Logs /var/log/syslog & /var/log/messages \u2013 Detects new mount points or attached storage. dmesg | grep \"new disk\" \u2013 Identifies kernel messages for volume attachment. AuditD: Tracks mkfs (filesystem creation) for new volume provisioning. Windows Event Logs Event ID 1006 (Storage Management Events) \u2013 Captures disk volume creation. Event ID 5145 (Object Access: File Share) \u2013 Detects access to newly created storage shares. Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure Monitor for the unexpected creation or presence of cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. Volume: Volume Deletion The removal of a cloud-based or on-premise block storage volume. This action permanently deletes the allocated storage and may result in data loss if not backed up. Data Collection Measures: Cloud Logging & APIs AWS CloudTrail Logs eventName: DeleteVolume (tracks volume deletions) Azure Monitor Logs operationName: Microsoft.Compute/disks/delete status: Success | Failure (flag unauthorized delete attempts) Google Cloud Audit Logs protoPayload.methodName: \"v1.compute.disks.delete\" authenticationInfo.principalEmail (identifies the user deleting the volume) System & Host-Based Logging Linux & macOS Logs: /var/log/syslog or /var/log/messages for volume detach/deletion actions Windows Event Logs: Event ID 98 (Storage Class Memory) Event ID 225 (Volume Removal Detected) Event ID 12 (Disk Removal Notification) Volume: Volume Deletion The removal of a cloud-based or on-premise block storage volume. This action permanently deletes the allocated storage and may result in data loss if not backed up. Data Collection Measures: Cloud Logging & APIs AWS CloudTrail Logs eventName: DeleteVolume (tracks volume deletions) Azure Monitor Logs operationName: Microsoft.Compute/disks/delete status: Success | Failure (flag unauthorized delete attempts) Google Cloud Audit Logs protoPayload.methodName: \"v1.compute.disks.delete\" authenticationInfo.principalEmail (identifies the user deleting the volume) System & Host-Based Logging Linux & macOS Logs: /var/log/syslog or /var/log/messages for volume detach/deletion actions Windows Event Logs: Event ID 98 (Storage Class Memory) Event ID 225 (Volume Removal Detected) Event ID 12 (Disk Removal Notification) Domain ID Name Detects Enterprise T1485 Data Destruction Monitor for unexpected deletion of a cloud volume (ex: AWS DeleteVolume) Enterprise T1578 Modify Cloud Compute Infrastructure Monitor for the unexpected deletion or absence of cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. Volume: Volume Enumeration An extracted list of available volumes within a cloud environment (ex: AWS describe-volumes) Volume: Volume Enumeration An extracted list of available volumes within a cloud environment (ex: AWS describe-volumes) Domain ID Name Detects Enterprise T1580 Cloud Infrastructure Discovery Monitor cloud logs for API calls and other potentially unusual activity related to block object storage enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. Volume: Volume Metadata Contextual data about a cloud volume and activity around it, such as id, type, state, and size Volume: Volume Metadata Contextual data about a cloud volume and activity around it, such as id, type, state, and size Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure Periodically baseline cloud block storage volumes to identify malicious modifications or additions. Volume: Volume Modification Changes made to a cloud volume, including its settings and control data (ex: AWS modify-volume) Volume: Volume Modification Changes made to a cloud volume, including its settings and control data (ex: AWS modify-volume) Domain ID Name Detects Enterprise T1611 Escape to Host Monitor cluster-level (Kubernetes) data and events associated with changing containers' volume configurations. Enterprise T1578 Modify Cloud Compute Infrastructure Monitor for the unexpected changes to cloud block storage volumes . To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. References Amazon. (n.d.). Amazon S3. Retrieved October 13, 2021. Microsoft. (n.d.). Azure Blob Storage. Retrieved November 17, 2024. Google. (n.d.). Cloud Storage. Retrieved October 13, 2021. "
},
{
"id": 1130,
"title": "Network Share, Data Source DS0033",
"path": "/datasources/DS0033/index.html",
"content": " Network Share A storage resource (typically a folder or drive) made available from one host to others using network protocols, such as Server Message Block (SMB) or Network File System (NFS)[1] ID: DS0033 \u24d8 Platforms: Linux, Windows, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Network Share: Network Share Access Opening a network share, which makes the contents available to the requestor (ex: Windows EID 5140 or 5145) Data Collection Measures: Windows: Event ID 5140 \u2013 Network Share Object Access Logs every access attempt to a network share. Event ID 5145 \u2013 Detailed Network Share Object Access Captures granular access control information, including the requesting user, source IP, and access permissions. Sysmon Event ID 3 \u2013 Network Connection Initiated Helps track SMB connections to suspicious or unauthorized network shares. Enable Audit Policy for Network Share Access: auditpol /set /subcategory:\"File Share\" /success:enable /failure:enable Enable PowerShell Logging to Detect Unauthorized SMB Access: Set-ExecutionPolicy RemoteSigned Restrict Network Share Access with Group Policy (GPO): Computer Configuration \u2192 Windows Settings \u2192 Security Settings \u2192 Local Policies \u2192 User Rights Assignment Set \"Access this computer from the network\" to restrict unauthorized accounts. Linux/macOS: AuditD (open, read, write, connect syscalls) Detects access to NFS, CIFS, and SMB network shares. Lsof (lsof | grep nfs or lsof | grep smb) Identifies active network share connections. Mount (mount | grep nfs or mount | grep cifs) Lists currently mounted network shares. Enable AuditD for SMB/NFS Access: auditctl -a always,exit -F arch=b64 -S open -F path=/mnt/share -k network_share_access Monitor Active Network Shares Using Netstat: netstat -an | grep :445 Endpoint Detection & Response (EDR): Detects abnormal network share access behavior, such as unusual account usage, large file transfers, or encrypted file activity. Network Share: Network Share Access Opening a network share, which makes the contents available to the requestor (ex: Windows EID 5140 or 5145) Data Collection Measures: Windows: Event ID 5140 \u2013 Network Share Object Access Logs every access attempt to a network share. Event ID 5145 \u2013 Detailed Network Share Object Access Captures granular access control information, including the requesting user, source IP, and access permissions. Sysmon Event ID 3 \u2013 Network Connection Initiated Helps track SMB connections to suspicious or unauthorized network shares. Enable Audit Policy for Network Share Access: auditpol /set /subcategory:\"File Share\" /success:enable /failure:enable Enable PowerShell Logging to Detect Unauthorized SMB Access: Set-ExecutionPolicy RemoteSigned Restrict Network Share Access with Group Policy (GPO): Computer Configuration \u2192 Windows Settings \u2192 Security Settings \u2192 Local Policies \u2192 User Rights Assignment Set \"Access this computer from the network\" to restrict unauthorized accounts. Linux/macOS: AuditD (open, read, write, connect syscalls) Detects access to NFS, CIFS, and SMB network shares. Lsof (lsof | grep nfs or lsof | grep smb) Identifies active network share connections. Mount (mount | grep nfs or mount | grep cifs) Lists currently mounted network shares. Enable AuditD for SMB/NFS Access: auditctl -a always,exit -F arch=b64 -S open -F path=/mnt/share -k network_share_access Monitor Active Network Shares Using Netstat: netstat -an | grep :445 Endpoint Detection & Response (EDR): Detects abnormal network share access behavior, such as unusual account usage, large file transfers, or encrypted file activity. Domain ID Name Detects Enterprise T1486 Data Encrypted for Impact Monitor for unexpected network shares being accessed on target systems or on large numbers of systems. ICS T0811 Data from Information Repositories In the case of detecting collection from shared network drives monitor for unexpected and abnormal accesses to network shares. Enterprise T1039 Data from Network Shared Drive Monitor for unexpected and abnormal accesses to network shares. Enterprise T1570 Lateral Tool Transfer Monitor for unexpected network share access, such as files transferred between shares within a network using protocols such as SMB. ICS T0867 Lateral Tool Transfer Monitor for unexpected network share access, such as files transferred between shares within a network using protocols such as Server Message Block (SMB). Enterprise T1021 Remote Services Monitor interactions with network shares, such as reads or file transfers, using remote services such as Server Message Block (SMB). .002 SMB/Windows Admin Shares Monitor interactions with network shares, such as reads or file transfers, using Server Message Block (SMB). sourcetype=\"WinEventLog:Security\" EventCode=5140| stats count by ShareName, Account_Name, dest, src_ip, _time| eval anomaly=if(ShareName IN (\"C$\", \"ADMIN$\", \"IPC$\") AND count > threshold, \"potential_abuse\", \"normal\")| where anomaly=\"potential_abuse\"| table _time, ShareName, Account_Name, dest, src_ip, anomaly ICS T0886 Remote Services Monitor interactions with network shares, such as reads or file transfers, using remote services such as Server Message Block (SMB). For added context on adversary procedures and background see Remote Services and applicable sub-techniques. Enterprise T1080 Taint Shared Content Monitor for unexpected and abnormal accesses to network shares, especially those also associated with file activity. Monitor access to shared network directories to detect unauthorized or suspicious access, especially from unfamiliar accounts or at unusual times.Identify potential attempts to access hidden files or unusual file types within the directory. sourcetype=\"WinEventLog:Security\" EventCode=5145| search ObjectType=\"File\"| stats count by ShareName, AccountName, AccessMask, SourceIPAddress, _time| eval access_suspicious=if(match(ShareName, \"\\hidden_directory\\\") AND AccessMask=\"0x2\", \"suspicious\", \"normal\")| where access_suspicious=\"suspicious\"| table _time, ShareName, AccountName, AccessMask, SourceIPAddress, access_suspicious References Microsoft. (2018, July 9). Network File System overview. Retrieved September 28, 2021. "
},
{
"id": 1131,
"title": "Application Vetting, Data Source DS0041",
"path": "/datasources/DS0041/index.html",
"content": " Application Vetting Application vetting report generated by an external cloud service. ID: DS0041 \u24d8 Platforms: Android, iOS \u24d8 Collection Layer: Report Version: 1.0 Created: 13 March 2023 Last Modified: 16 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Application Vetting: API Calls API calls utilized by an application that could indicate malicious activity Application Vetting: API Calls API calls utilized by an application that could indicate malicious activity Domain ID Name Detects Mobile T1661 Application Versioning Application vetting services may look for indications that the application\u2019s update includes malicious code at runtime. Mobile T1414 Clipboard Data Application vetting services could detect usage of standard clipboard APIs. Mobile T1623 Command and Scripting Interpreter Application vetting services could detect the invocations of methods that could be used to execute shell commands.[1] .001 Unix Shell Application vetting services could detect the invocations of methods that could be used to execute shell commands.[1] Mobile T1645 Compromise Client Software Binary Application vetting services could detect applications trying to modify files in protected parts of the operating system. Mobile T1634 Credentials from Password Store Application vetting services may be able to detect known privilege escalation exploits contained within applications, as well as searching application packages for strings that correlate to known password store locations. .001 Keychain Application vetting services may be able to detect known privilege escalation exploits contained within applications, as well as searching application packages for strings that correlate to known password store locations. Mobile T1662 Data Destruction Application vetting services may detect API calls for deleting files. Mobile T1471 Data Encrypted for Impact Application vetting services may be able to detect if an application attempts to encrypt files, although this may be benign behavior. Mobile T1641 Data Manipulation Application vetting services could look for use of standard APIs (e.g. the clipboard API) that could indicate data manipulation is occurring. .001 Transmitted Data Manipulation Applications could be vetted for their use of the clipboard manager APIs with extra scrutiny given to application that make use of them. Mobile T1407 Download New Code at Runtime Application vetting services could look for indications that the application downloads and executes new code at runtime (e.g., on Android, use of DexClassLoader, System.load, or the WebView JavaScriptInterface capability; on iOS, use of JSPatch or similar capabilities). Mobile T1627 Execution Guardrails Application vetting services can detect unnecessary and potentially abused API calls. .001 Geofencing Application vetting services can detect unnecessary and potentially abused API calls. Mobile T1404 Exploitation for Privilege Escalation Application vetting services could potentially determine if an application contains code designed to exploit vulnerabilities. Mobile T1541 Foreground Persistence Applications could be vetted for their use of the startForeground() API, and could be further scrutinized if usage is found. Mobile T1628 Hide Artifacts Application vetting services could potentially detect the usage of APIs intended for artifact hiding. .001 Suppress Application Icon Application vetting services could potentially detect the usage of APIs intended for suppressing the application\u2019s icon. Mobile T1629 Impair Defenses Application vetting can detect many techniques associated with impairing device defenses.[1] .001 Prevent Application Removal Application vetting services may detect API calls to performGlobalAction(int). Mobile T1630 .001 Indicator Removal on Host: Uninstall Malicious Application Application vetting services could look for use of the accessibility service or features that typically require root access. Mobile T1655 Masquerading Application vetting services may potentially determine if an application contains suspicious code and/or metadata. .001 Match Legitimate Name or Location Application vetting services may potentially determine if an application contains suspicious code and/or metadata. Mobile T1406 Obfuscated Files or Information Dynamic analysis, when used in application vetting, may in some cases be able to identify malicious code in obfuscated or encrypted form by detecting the code at execution time (after it is deobfuscated or decrypted). Some application vetting techniques apply reputation analysis of the application developer and can alert to potentially suspicious applications without actual examination of application code. .002 Software Packing Application vetting services could look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because as legitimate software may use packing techniques to reduce binary size or to protect proprietary code. Mobile T1424 Process Discovery Mobile security products can typically detect rooted devices, which is an indication that Process Discovery is possible. Application vetting could potentially detect when applications attempt to abuse root access or root the system itself. Further, application vetting services could look for attempted usage of legacy process discovery mechanisms, such as the usage of ps or inspection of the /proc directory. Mobile T1631 Process Injection Application vetting services could look for misuse of dynamic libraries. .001 Ptrace System Calls Application vetting services could look for misuse of dynamic libraries. Mobile T1513 Screen Capture Application vetting services can look for the use of the Android MediaProjectionManager class, applying extra scrutiny to applications that use the class. Mobile T1418 Software Discovery Application vetting services could look for the Android permission android.permission.QUERY_ALL_PACKAGES, and apply extra scrutiny to applications that request it. On iOS, application vetting services could look for usage of the private API LSApplicationWorkspace and apply extra scrutiny to applications that employ it. .001 Security Software Discovery Application vetting services could look for the Android permission android.permission.QUERY_ALL_PACKAGES, and apply extra scrutiny to applications that request it. On iOS, application vetting services could look for usage of the private API LSApplicationWorkspace and apply extra scrutiny to applications that employ it. Mobile T1635 Steal Application Access Token When vetting applications for potential security weaknesses, the vetting process could look for insecure use of Intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or utilizing the App Links feature). For mobile applications using OAuth, encourage use of best practice.[2][3] .001 URI Hijacking When vetting applications for potential security weaknesses, the vetting process could look for insecure use of Intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or utilizing the App Links feature). For mobile applications using OAuth, encourage use of best practice. [2][3] Mobile T1409 Stored Application Data Application vetting services could detect when applications store data insecurely, for example, in unprotected external storage. Mobile T1474 Supply Chain Compromise Usage of insecure or malicious third-party libraries could be detected by application vetting services. Malicious software development tools could be detected by enterprises that deploy endpoint protection software on computers that are used to develop mobile apps. Application vetting could detect the usage of insecure or malicious third-party libraries. .001 Compromise Software Dependencies and Development Tools Usage of insecure or malicious third-party libraries could be detected by application vetting services. Malicious software development tools could be detected by enterprises that deploy endpoint protection software on computers that are used to develop mobile apps. Application vetting could detect the usage of insecure or malicious third-party libraries. .003 Compromise Software Supply Chain Application vetting services can detect malicious code in applications. Mobile T1633 Virtualization/Sandbox Evasion Application vetting services could look for applications attempting to get android.os.SystemProperties or getprop with the runtime exec() commands. This could indicate some level of sandbox evasion, as Google recommends against using system properties within applications. .001 System Checks Application vetting services could look for applications attempting to get android.os.SystemProperties or getprop with the runtime exec() commands. This could indicate some level of sandbox evasion, as Google recommends against using system properties within applications. Application Vetting: Application Assets Additional assets included with an application Application Vetting: Application Assets Additional assets included with an application Domain ID Name Mobile T1521 .003 Encrypted Channel: SSL Pinning Application Vetting: Network Communication Network requests made by an application or domains contacted Application Vetting: Network Communication Network requests made by an application or domains contacted Domain ID Name Detects Mobile T1661 Application Versioning Application vetting services may be able to list domains and/or IP addresses that applications communicate with. Mobile T1407 Download New Code at Runtime Application vetting services may be able to list domains and/or IP addresses that applications communicate with. Mobile T1637 Dynamic Resolution Monitor for pseudo-randomly generated domain names based on frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.[4] Additionally, check if the suspicious domain has been recently registered, if it has been rarely visited, or if the domain had a spike in activity after being dormant.[5] Content delivery network (CDN) domains may trigger these detections due to the format of their domain names. .001 Domain Generation Algorithms Monitor for pseudo-randomly generated domain names based on frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.[4] Additionally, check if the suspicious domain has been recently registered, if it has been rarely visited, or if the domain had a spike in activity after being dormant.[5] Content delivery network (CDN) domains may trigger these detections due to the format of their domain names. Mobile T1658 Exploitation for Client Execution Network traffic analysis may reveal processes communicating with malicious domains. Mobile T1428 Exploitation of Remote Services Application vetting may be able to identify applications that perform Discovery or utilize existing connectivity to remotely access hosts within an internal enterprise network. Mobile T1544 Ingress Tool Transfer Application vetting services could look for connections to unknown domains or IP addresses. Mobile T1509 Non-Standard Port Application vetting reports may show network communications performed by the application, including hosts, ports, protocols, and URLs. Further detection would most likely be at the enterprise level, through packet and/or netflow inspection. Mobile T1481 Web Service Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application. .001 Dead Drop Resolver Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application. .002 Bidirectional Communication Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application. .003 One-Way Communication Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application. Application Vetting: Permissions Requests Permissions declared in an application's manifest or property list file Application Vetting: Permissions Requests Permissions declared in an application's manifest or property list file Domain ID Name Detects Mobile T1626 Abuse Elevation Control Mechanism Application vetting services can detect when an application requests administrator permission. .001 Device Administrator Permissions Application vetting services can check for the string BIND_DEVICE_ADMIN in the application\u2019s manifest. This indicates it can prompt the user for device administrator permissions. Mobile T1517 Access Notifications Application vetting services can look for applications requesting the BIND_NOTIFICATION_LISTENER_SERVICE permission in a service declaration. Mobile T1640 Account Access Removal Application vetting services could closely scrutinize applications that request Device Administrator permissions. Mobile T1661 Application Versioning Application vetting services may detect when an application requests permissions after an application update. Mobile T1429 Audio Capture Android applications using the RECORD_AUDIO permission and iOS applications using RequestRecordPermission should be carefully reviewed and monitored. If the CAPTURE_AUDIO_OUTPUT permission is found in a third-party Android application, the application should be heavily scrutinized. In both Android (6.0 and up) and iOS, the user can review which applications have the permission to access the microphone through the device settings screen and revoke permissions as necessary. Mobile T1662 Data Destruction Mobile security products can detect which applications can request device administrator permissions. Application vetting services could be extra scrutinous of applications that request device administrator permissions. Mobile T1642 Endpoint Denial of Service Application vetting services can detect and closely scrutinize applications that utilize Device Administrator access. Mobile T1624 Event Triggered Execution Application vetting services can detect which broadcast intents an application registers for and which permissions it requests. .001 Broadcast Receivers Application vetting services can detect which broadcast intents an application registers for and which permissions it requests. Mobile T1627 Execution Guardrails Application vetting services can detect unnecessary and potentially abused permissions. .001 Geofencing Application vetting services can detect unnecessary and potentially abused location permissions. Mobile T1643 Generate Traffic from Victim Application vetting services can detect when applications request the SEND_SMS permission, which should be infrequently used. Mobile T1630 Indicator Removal on Host Mobile security products can detect which applications can request device administrator permissions. Application vetting services could look for use of APIs that could indicate the application is trying to hide activity. .002 File Deletion Mobile security products can detect which applications can request device administrator permissions. Application vetting services could be extra scrutinous of applications that request device administrator permissions. Mobile T1544 Ingress Tool Transfer Application vetting services may indicate precisely what content was requested during application execution. Mobile T1417 Input Capture Application vetting services can look for applications requesting the permissions granting access to accessibility services or application overlay. .001 Keylogging Application vetting services can look for applications requesting the android.permission.BIND_ACCESSIBILITY_SERVICE permission in a service declaration. On Android, the user can view and manage which applications can use accessibility services through the device settings in Accessibility. The exact device settings menu locations may vary between operating system versions. .002 GUI Input Capture Application vetting services can look for applications requesting the android.permission.SYSTEM_ALERT_WINDOW permission in the list of permissions in the app manifest. Mobile T1430 Location Tracking Android applications requesting the ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION, or ACCESS_BACKGROUND_LOCATION permissions and iOS applications including the NSLocationWhenInUseUsageDescription, NSLocationAlwaysAndWhenInUseUsageDescription, and/or NSLocationAlwaysUsageDescription keys in their Info.plist file could be scrutinized during the application vetting process. Mobile T1636 Protected User Data Application vetting services typically flag permissions requested by an application, which can be reviewed by an administrator. Certain dangerous permissions, such as RECEIVE_SMS, could receive additional scrutiny. .001 Calendar Entries Application vetting services could look for android.permission.READ_CALENDAR or android.permission.WRITE_CALENDAR in an Android application\u2019s manifest, or NSCalendarsUsageDescription in an iOS application\u2019s Info.plist file. Most applications do not need calendar access, so extra scrutiny could be applied to those that request it. .002 Call Log Application vetting services could look for android.permission.READ_CALL_LOG in an Android application\u2019s manifest. Most applications do not need call log access, so extra scrutiny could be applied to those that request it. .003 Contact List Application vetting services could look for android.permission.READ_CONTACTS in an Android application\u2019s manifest, or NSContactsUsageDescription in an iOS application\u2019s Info.plist file. Most applications do not need contact list access, so extra scrutiny could be applied to those that request it. .004 SMS Messages Application vetting services could look for android.permission.READ_SMS in an Android application\u2019s manifest. Most applications do not need access to SMS messages, so extra scrutiny could be applied to those that request it. Mobile T1422 System Network Configuration Discovery Application vetting services could look for usage of the READ_PRIVILEGED_PHONE_STATE Android permission. This could indicate that non-system apps are attempting to access information that they do not have access to. .001 Internet Connection Discovery Application vetting services could look for usage of the READ_PRIVILEGED_PHONE_STATE Android permission. This could indicate that non-system apps are attempting to access information that they do not have access to. .002 Wi-Fi Discovery Application vetting services could look for usage of the READ_PRIVILEGED_PHONE_STATE Android permission. This could indicate that non-system apps are attempting to access information that they do not have access to. Mobile T1512 Video Capture During the vetting process, applications using the Android permission android.permission.CAMERA, or the iOS NSCameraUsageDescription plist entry could be given closer scrutiny. Mobile T1670 Virtualization Solution Application vetting services can look for applications that request permissions to Accessibility services or application overlay. Application Vetting: Protected Configuration Device configuration options that are not typically utilized by benign applications Application Vetting: Protected Configuration Device configuration options that are not typically utilized by benign applications Domain ID Name Detects Mobile T1638 Adversary-in-the-Middle Application vetting services should look for applications that request VPN access. These applications should be heavily scrutinized since VPN functionality is not very common. References Samsung Knox Partner Program. (n.d.). Knox for Mobile Threat Defense. Retrieved March 30, 2022. W. Denniss and J. Bradley. (2017, October). IETF RFC 8252: OAuth 2.0 for Native Apps. Retrieved November 30, 2018. Android. (n.d.). Handling App Links. Retrieved December 21, 2016. Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019. Chen, Z. et al. (2021, December 29). Strategically Aged Domain Detection: Capture APT Attacks With DNS Traffic Trends. Retrieved July 31, 2023. "
},
{
"id": 1132,
"title": "Certificate, Data Source DS0037",
"path": "/datasources/DS0037/index.html",
"content": " Certificate A digital document, which highlights information such as the owner's identity, used to instill trust in public keys used while encrypting network communications ID: DS0037 \u24d8 Platform: PRE \u24d8 Collection Layer: OSINT Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Certificate: Certificate Registration Certificate Registration refers to the collection and analysis of information about digital certificates, including current, revoked, and expired certificates. Sources such as Certificate Transparency logs and other public resources provide visibility into certificates issued for specific domains or organizations. Monitoring certificate registrations can help identify potential misuse, such as unauthorized certificates or signs of adversary reconnaissance. Examples: Certificate Transparency Logs: These logs record the issuance of SSL/TLS certificates by trusted Certificate Authorities (CAs). Revoked Certificates: Information about certificates that have been invalidated before their expiration date. Expired Certificates: Reports of expired certificates for a domain, which may indicate lax security practices or opportunities for adversaries to exploit expired credentials. Domain Monitoring for Certificates: Maps SSL/TLS certificates to domains and subdomains, helping to identify any rogue certificates. Public Certificate Directories: Services providing APIs to query issued certificates for analysis. This data component can be collected through the following measures: Use Certificate Transparency Monitors Tools like crt.sh, CertStream, or APIs provided by certificate authorities (CAs) allow you to monitor issued certificates in real-time. Example: Use CertStream to stream certificate issuance logs and filter for domains of interest. Analyze Certificate Revocation Sources Monitor CRLs or query OCSP responders to detect revoked certificates. Configure tools like OpenSSL or browsers to validate certificate revocation status automatically. Leverage Public Scanning Tools Use tools such as SSL Labs, Censys, or Shodan to scan for certificate details related to your domain or network. Automate Certificate Monitoring Set up automated scripts or services to parse Certificate Transparency logs for anomalies. Example: Automate searches on crt.sh to identify certificates issued for typo-squatted domains. Integrate with Threat Intelligence Enrich certificate data with threat intelligence feeds to detect connections to known adversary-controlled infrastructure. Tools like VirusTotal can identify malicious certificates based on associated indicators. Certificate: Certificate Registration Certificate Registration refers to the collection and analysis of information about digital certificates, including current, revoked, and expired certificates. Sources such as Certificate Transparency logs and other public resources provide visibility into certificates issued for specific domains or organizations. Monitoring certificate registrations can help identify potential misuse, such as unauthorized certificates or signs of adversary reconnaissance. Examples: Certificate Transparency Logs: These logs record the issuance of SSL/TLS certificates by trusted Certificate Authorities (CAs). Revoked Certificates: Information about certificates that have been invalidated before their expiration date. Expired Certificates: Reports of expired certificates for a domain, which may indicate lax security practices or opportunities for adversaries to exploit expired credentials. Domain Monitoring for Certificates: Maps SSL/TLS certificates to domains and subdomains, helping to identify any rogue certificates. Public Certificate Directories: Services providing APIs to query issued certificates for analysis. This data component can be collected through the following measures: Use Certificate Transparency Monitors Tools like crt.sh, CertStream, or APIs provided by certificate authorities (CAs) allow you to monitor issued certificates in real-time. Example: Use CertStream to stream certificate issuance logs and filter for domains of interest. Analyze Certificate Revocation Sources Monitor CRLs or query OCSP responders to detect revoked certificates. Configure tools like OpenSSL or browsers to validate certificate revocation status automatically. Leverage Public Scanning Tools Use tools such as SSL Labs, Censys, or Shodan to scan for certificate details related to your domain or network. Automate Certificate Monitoring Set up automated scripts or services to parse Certificate Transparency logs for anomalies. Example: Automate searches on crt.sh to identify certificates issued for typo-squatted domains. Integrate with Threat Intelligence Enrich certificate data with threat intelligence feeds to detect connections to known adversary-controlled infrastructure. Tools like VirusTotal can identify malicious certificates based on associated indicators. Domain ID Name Detects Enterprise T1588 Obtain Capabilities Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.[1] Some server-side components of adversary tools may have default values set for SSL/TLS certificates.[2] Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control. .004 Digital Certificates Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.[1] Some server-side components of adversary tools may have default values set for SSL/TLS certificates.[2] References Kovar, R. (2017, December 11). Tall Tales of Hunting with TLS/SSL Certificates. Retrieved October 16, 2020. Insikt Group. (2019, June 18). A Multi-Method Approach to Identifying Rogue Cobalt Strike Servers. Retrieved September 16, 2024. "
},
{
"id": 1133,
"title": "Scheduled Job, Data Source DS0003",
"path": "/datasources/DS0003/index.html",
"content": " Scheduled Job Automated tasks that can be executed at a specific time or on a recurring schedule running in the background (ex: Cron daemon, task scheduler, BITS)[1] ID: DS0003 \u24d8 Platforms: Containers, ESXi, Linux, Windows, macOS \u24d8 Collection Layers: Container, Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.1 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Scheduled Job: Scheduled Job Creation The establishment of a task or job that will execute at a predefined time or based on specific triggers. *Data Collection Measures: * Windows Event Logs: Event ID 4698 (Scheduled Task Created) \u2013 Detects the creation of new scheduled tasks. Event ID 4702 (Scheduled Task Updated) \u2013 Identifies modifications to existing scheduled jobs. Event ID 106 (TaskScheduler Operational Log) \u2013 Provides details about scheduled task execution. Sysmon (Windows): Event ID 1 (Process Creation) \u2013 Detects the execution of suspicious tasks started by schtasks.exe, at.exe, or taskeng.exe. Linux/macOS Monitoring: AuditD: Monitor modifications to /etc/cron*, /var/spool/cron/, and crontab files. Syslog: Capture cron job execution logs from /var/log/cron. OSQuery: Query the crontab and launchd tables for scheduled job configurations. Endpoint Detection and Response (EDR) Tools: Track scheduled task creation and modification events. SIEM & XDR Detection Rules: Monitor for scheduled jobs created by unusual users. Detect tasks executing scripts from non-standard directories. Scheduled Job: Scheduled Job Creation The establishment of a task or job that will execute at a predefined time or based on specific triggers. *Data Collection Measures: * Windows Event Logs: Event ID 4698 (Scheduled Task Created) \u2013 Detects the creation of new scheduled tasks. Event ID 4702 (Scheduled Task Updated) \u2013 Identifies modifications to existing scheduled jobs. Event ID 106 (TaskScheduler Operational Log) \u2013 Provides details about scheduled task execution. Sysmon (Windows): Event ID 1 (Process Creation) \u2013 Detects the execution of suspicious tasks started by schtasks.exe, at.exe, or taskeng.exe. Linux/macOS Monitoring: AuditD: Monitor modifications to /etc/cron*, /var/spool/cron/, and crontab files. Syslog: Capture cron job execution logs from /var/log/cron. OSQuery: Query the crontab and launchd tables for scheduled job configurations. Endpoint Detection and Response (EDR) Tools: Track scheduled task creation and modification events. SIEM & XDR Detection Rules: Monitor for scheduled jobs created by unusual users. Detect tasks executing scripts from non-standard directories. Domain ID Name Detects ICS T0849 Masquerading Monitor for newly constructed scheduled jobs that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Enterprise T1053 Scheduled Task/Job Monitor newly constructed scheduled jobs that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. On Windows systems, security event ID 4698 (A scheduled task was created) provides information on newly created scheduled tasks. It includes the TaskContent field, which contains an XML blob that captures key information on the scheduled task including the command to be executed. Analytic 1 - Scheduled Task Execution source=\"*WinEventLog:Security\" EventCode=\"4698\" | where NOT (TaskName IN (\"\\Microsoft\\Windows\\UpdateOrchestrator\\Reboot\", \"\\Microsoft\\Windows\\Defrag\\ScheduledDefrag\"))| search TaskContent=\"powershell.exe\" OR TaskContent=\"cmd.exe\" .002 At Monitor for newly constructed scheduled jobs. If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. On Windows, enable the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service where several events will then be logged on scheduled task activity, including:[2] Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered Event ID 4698 on Windows 10, Server 2016 - Scheduled task created Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. [3] .003 Cron Monitor for newly constructed scheduled jobs. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. Analytic 1 - Look for new cron job creation events with unusual parameters. index=os_logs sourcetype=syslog (command=\"crontab -e\" OR command=\"crontab -l\")| stats count by user host| where user != \"root\" OR count > 1 .005 Scheduled Task Monitor for newly constructed scheduled jobs by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. [2] Several events will then be logged on scheduled task activity, including Event ID 106 on Windows 7 and Server 2008 R2 for scheduled task registration. For Windows 10 and Server 2016, the relevant events are also logged in the Windows Security event channel after enabling the auditing of other object access events. These include: Event ID 4698: A scheduled task was created. Event ID 4699: A scheduled task was deleted. Event ID 4700: A scheduled task was enabled. Event ID 4701: A scheduled task was disabled. Event ID 4702: A scheduled task was updated. Note: Detection of the creation or modification of Scheduled Tasks with a suspicious script, extension or user writable path. Attackers may create or modify Scheduled Tasks for the persistent execution of malicious code. This detection focuses at the same time on EventIDs 4688 and 1 with process creation (SCHTASKS) and EventID 4698, 4702 for Scheduled Task creation/modification event log. Analytic 1 - New schedule tasks whose content includes suspicious scripts, extensions or user writable path (source=\"*WinEventLog:Security\" EventCode IN (4698, 4702, 4699, 4700, 4701)) | where(JobContent LIKE '%.cmd%' OR JobContent LIKE '%.ps1%' OR JobContent LIKE '%.vbs%' OR JobContent LIKE '%.py%' OR JobContent LIKE '%.js%' OR JobContent LIKE '%.exe%' OR JobContent LIKE '%.bat%' OR JobContent LIKE '%javascript%' OR JobContent LIKE '%powershell%' OR JobContent LIKE '%wmic%' OR JobContent LIKE '%rundll32%' OR JobContent LIKE '%cmd%' OR JobContent LIKE '%cscript%' OR JobContent LIKE '%wscript%' OR JobContent LIKE '%regsvr32%' OR JobContent LIKE '%mshta%' OR JobContent LIKE '%bitsadmin%' OR JobContent LIKE '%certutil%' OR JobContent LIKE '%msiexec%' OR JobContent LIKE '%javaw%' OR JobContent LIKE '%[%]APPDATA[%]%' OR JobContent LIKE '%\\AppData\\Roaming%' OR JobContent LIKE '%[%]PUBLIC[%]%' OR JobContent LIKE '%C:\\Users\\Public%' OR JobContent LIKE '%[%]ProgramData[%]%' OR JobContent LIKE '%C:\\ProgramData%' OR JobContent LIKE '%[%]TEMP[%]%' OR JobContent LIKE '%\\AppData\\Local\\Temp%' OR JobContent LIKE '%\\Windows\\PLA\\System%' OR JobContent LIKE '%\\tasks%' OR JobContent LIKE '%\\Registration\\CRMLog%' OR JobContent LIKE '%\\FxsTmp%' OR JobContent LIKE '%\\spool\\drivers\\color%' OR JobContent LIKE '%\\tracing%') .006 Systemd Timers Suspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: systemctl list-timers \u2013all. Analyze the contents of corresponding .service files present on the file system and ensure that they refer to legitimate, expected executables. Analytic 1 - Look for systemd timer creation events with unusual parameters. sourcetype=linux_logs (command=\"systemctl start .timer\" OR command=\"systemctl enable .timer\" OR command=\"systemctl daemon-reload\") .007 Container Orchestration Job Monitor for Kubernetes CronJob or Job creation using Kubernetes API or CLI commands. Note: This query tracks job creation using kubectl commands or Kubernetes API calls to create or apply CronJobs. It filters out legitimate job creation based on a baseline and identifies unusual CronJob creation or usage. Analytic 1 - Look for new container job creation events with unusual parameters. sourcetype=kubernetes:job_creation (command=\"kubectl create cronjob\" OR command=\"kubectl apply -f .yaml\" OR api_call=\"BatchV1.CronJob.create\") Note: This query monitors Kubernetes events for job creation, start, and completion. These events are useful for tracking the actual execution of scheduled tasks in the cluster.Analytic 2 - Monitoring Kubernetes Events for Job Execution sourcetype=kubernetes:event type=\"Normal\" (reason=\"SuccessfulCreate\" OR reason=\"Started\" OR reason=\"Completed\") Scheduled Job: Scheduled Job Metadata Contextual data about a scheduled job, which may include information such as name, timing, command(s), etc. Scheduled Job: Scheduled Job Metadata Contextual data about a scheduled job, which may include information such as name, timing, command(s), etc. Domain ID Name Detects Enterprise T1036 Masquerading Monitor for contextual data about a scheduled job, which may include information such as name, timing, command(s), etc. On Windows, Event ID 4698 (Security Log - A scheduled task was created) can be used to alert on the creation of scheduled tasks and provides metadata including the task name and task content (as XML). On Linux, auditing frameworks such as the Linux Auditing System (auditd) can be used to alert on invocations of cron, and provides the metadata included when executing the command. .004 Masquerade Task or Service Monitor for contextual data about a scheduled job, which may include information such as name, timing, command(s), etc. Scheduled Job: Scheduled Job Modification Changes made to an existing scheduled job, including modifications to its execution parameters, command payload, or execution timing. Scheduled Job: Scheduled Job Modification Changes made to an existing scheduled job, including modifications to its execution parameters, command payload, or execution timing. Domain ID Name Detects Enterprise T1070 Indicator Removal Monitor for changes made to scheduled jobs that may attempt to remove artifacts on a host system. .009 Clear Persistence Monitor for changes made to scheduled jobs that may attempt to remove artifacts on a host system. Enterprise T1036 Masquerading Monitor for changes made to scheduled jobs that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. .004 Masquerade Task or Service Monitor for changes made to scheduled jobs for unexpected modifications to execution launch ICS T0849 Masquerading Monitor for changes made to scheduled jobs that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. References Microsoft. (2018, May 31). Tasks. Retrieved September 28, 2021. Satyajit321. (2015, November 3). Scheduled Tasks History Retention settings. Retrieved December 12, 2017. Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016. "
},
{
"id": 1134,
"title": "Group, Data Source DS0036",
"path": "/datasources/DS0036/index.html",
"content": " Group A collection of multiple user accounts that share the same access rights to the computer and/or network resources and have common security rights[1] ID: DS0036 \u24d8 Platforms: IaaS, Identity Provider, Office Suite, SaaS, Windows \u24d8 Collection Layers: Cloud Control Plane, Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Group: Group Enumeration Extracting group lists from identity systems identifies permissions, roles, or configurations. Adversaries may exploit high-privilege groups or misconfigurations. Examples: AWS CLI: aws iam list-groups PowerShell: Get-ADGroup -Filter * (Saas) Google Workspace: Admin SDK Directory API Azure: Get-AzureADGroup Microsoft 365: Graph API GET https://graph.microsoft.com/v1.0/groups Data Collection Measures: Cloud Logging: Enable AWS CloudTrail, Azure Activity Logs, and Google Workspace Admin Logs for group-related actions. Directory Monitoring: Track logs like AD Event ID 4662 (object operations). API Monitoring: Log API activity like AWS IAM queries. SaaS Monitoring: Use platform logs (e.g., Office 365 Unified Audit Logs). SIEM Integration: Centralize group query tracking. Group: Group Enumeration Extracting group lists from identity systems identifies permissions, roles, or configurations. Adversaries may exploit high-privilege groups or misconfigurations. Examples: AWS CLI: aws iam list-groups PowerShell: Get-ADGroup -Filter * (Saas) Google Workspace: Admin SDK Directory API Azure: Get-AzureADGroup Microsoft 365: Graph API GET https://graph.microsoft.com/v1.0/groups Data Collection Measures: Cloud Logging: Enable AWS CloudTrail, Azure Activity Logs, and Google Workspace Admin Logs for group-related actions. Directory Monitoring: Track logs like AD Event ID 4662 (object operations). API Monitoring: Log API activity like AWS IAM queries. SaaS Monitoring: Use platform logs (e.g., Office 365 Unified Audit Logs). SIEM Integration: Centralize group query tracking. Domain ID Name Detects Enterprise T1087 .001 Account Discovery: Local Account Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799. .002 Account Discovery: Domain Account Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799. Enterprise T1069 Permission Groups Discovery Monitor for an extracted list of ACLs of available groups and/or their associated settings. .001 Local Groups Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799. .002 Domain Groups Monitor for logging that may suggest a list of available groups and/or their associated settings has been extracted, ex. Windows EID 4798 and 4799. .003 Cloud Groups Monitor for an extracted list of available groups and/or their associated setting Group: Group Metadata Group metadata includes attributes like name, permissions, purpose, and associated user accounts or roles, which adversaries may exploit for privilege escalation. Examples: Active Directory: Get-ADGroup -Identity \"Domain Admins\" -Properties Members, Description Azure AD: Get-AzureADGroup -ObjectId <GroupId> Google Workspace: GET https://admin.googleapis.com/admin/directory/v1/groups/<groupKey> AWS IAM: aws iam list-group-policies --group-name <group_name> Office 365: GET https://graph.microsoft.com/v1.0/groups/<id> Data Collection Measures: Cloud Logging: AWS CloudTrail for IAM group-related activities. Azure AD Sign-In/Audit logs for metadata changes. Google Admin Activity logs for API calls. Directory Logging: Log metadata access (e.g., Windows Event ID 4662). API Monitoring: Log API calls to modify group metadata (e.g., Microsoft Graph API). SIEM Integration: Centralize group metadata logs for analysis. Group: Group Metadata Group metadata includes attributes like name, permissions, purpose, and associated user accounts or roles, which adversaries may exploit for privilege escalation. Examples: Active Directory: Get-ADGroup -Identity \"Domain Admins\" -Properties Members, Description Azure AD: Get-AzureADGroup -ObjectId <GroupId> Google Workspace: GET https://admin.googleapis.com/admin/directory/v1/groups/<groupKey> AWS IAM: aws iam list-group-policies --group-name <group_name> Office 365: GET https://graph.microsoft.com/v1.0/groups/<id> Data Collection Measures: Cloud Logging: AWS CloudTrail for IAM group-related activities. Azure AD Sign-In/Audit logs for metadata changes. Google Admin Activity logs for API calls. Directory Logging: Log metadata access (e.g., Windows Event ID 4662). API Monitoring: Log API calls to modify group metadata (e.g., Microsoft Graph API). SIEM Integration: Centralize group metadata logs for analysis. Domain ID Name Detects Enterprise T1069 Permission Groups Discovery Monitor for contextual data about a group which describes group and activity around it. .003 Cloud Groups Contextual data about a group which describes group and activity around it that may attempt to find cloud groups and permission settings. Group: Group Modification Changes made to a group, such as membership, name, or permissions (ex: Windows EID 4728 or 4732, AWS IAM UpdateGroup). Examples: Active Directory: Event ID 4728: Member added to a global group. Event ID 4732: Member added to a local group. Azure AD: Set-AzureADGroup -ObjectId <GroupId> -DisplayName \"New Name\" AWS IAM: aws iam update-group --group-name <GroupName> --new-path \"/admin/\" Google Workspace: Modify permissions via Admin SDK API: PATCH https://admin.googleapis.com/admin/directory/v1/groups/<groupKey> Office 365: Modify groups via Graph API: PATCH https://graph.microsoft.com/v1.0/groups/<groupId> Data Collection Measures: Directory Logging: Windows: Log EIDs 4728 (add), 4729 (remove). Azure AD: Enable \"Audit logs.\" Google Workspace: Enable Admin Activity logs. Office 365: Use Unified Audit Logs. Cloud Monitoring: AWS: Log UpdateGroup, AttachGroupPolicy, RemoveUserFromGroup. Azure: Track modifications via Audit logs. API Monitoring: Log Google Admin SDK and Microsoft Graph API calls. SIEM Integration: Centralize and monitor group modification logs. Group: Group Modification Changes made to a group, such as membership, name, or permissions (ex: Windows EID 4728 or 4732, AWS IAM UpdateGroup). Examples: Active Directory: Event ID 4728: Member added to a global group. Event ID 4732: Member added to a local group. Azure AD: Set-AzureADGroup -ObjectId <GroupId> -DisplayName \"New Name\" AWS IAM: aws iam update-group --group-name <GroupName> --new-path \"/admin/\" Google Workspace: Modify permissions via Admin SDK API: PATCH https://admin.googleapis.com/admin/directory/v1/groups/<groupKey> Office 365: Modify groups via Graph API: PATCH https://graph.microsoft.com/v1.0/groups/<groupId> Data Collection Measures: Directory Logging: Windows: Log EIDs 4728 (add), 4729 (remove). Azure AD: Enable \"Audit logs.\" Google Workspace: Enable Admin Activity logs. Office 365: Use Unified Audit Logs. Cloud Monitoring: AWS: Log UpdateGroup, AttachGroupPolicy, RemoveUserFromGroup. Azure: Track modifications via Audit logs. API Monitoring: Log Google Admin SDK and Microsoft Graph API calls. SIEM Integration: Centralize and monitor group modification logs. Domain ID Name Detects Enterprise T1098 Account Manipulation Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. .002 Additional Email Delegate Permissions Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions (including memberships in privileged groups) being granted to compromised accounts. References Amazon. (n.d.). IAM user groups. Retrieved October 13, 2021. "
},
{
"id": 1135,
"title": "Asset, Data Source DS0039",
"path": "/datasources/DS0039/index.html",
"content": " Asset Data sources with information about the set of devices found within the network, along with their current software and configurations ID: DS0039 \u24d8 Collection Layer: Host Version: 1.0 Created: 11 May 2022 Last Modified: 16 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Asset: Asset Inventory This includes sources of current and expected devices on the network, including the manufacturer, model, and necessary identifiers (e.g., IP and hardware addresses) Asset: Asset Inventory This includes sources of current and expected devices on the network, including the manufacturer, model, and necessary identifiers (e.g., IP and hardware addresses) Domain ID Name Detects ICS T0838 Modify Alarm Settings Consult asset management systems to understand expected alarm settings. ICS T0836 Modify Parameter Monitor asset management systems for device configuration changes which can be used to understand expected parameter settings. ICS T0843 Program Download Consult asset management systems to understand expected program versions. ICS T0848 Rogue Master Consult asset management systems which may help with the detection of computer systems or network devices that should not exist on a network. Asset: Software This includes sources of current and expected software or application programs deployed to a device, along with information on the version and patch level for vendor products, full source code for any application programs, and unique identifiers (e.g., hashes, signatures). Asset: Software This includes sources of current and expected software or application programs deployed to a device, along with information on the version and patch level for vendor products, full source code for any application programs, and unique identifiers (e.g., hashes, signatures). Domain ID Name Detects ICS T0877 I/O Image Collecting information from the I/O image requires analyzing the application program running on the PLC for specific data block reads. Detecting this requires obtaining and analyzing a PLC\u2019s application program, either directly from the device or from asset management platforms. ICS T0835 Manipulate I/O Image A manipulated I/O image requires analyzing the application program running on the PLC for specific data block writes. Detecting this requires obtaining and analyzing a PLC\u2019s application program, either directly from the device or from asset management platforms. ICS T0821 Modify Controller Tasking Engineering and asset management software will often maintain a copy of the expected program loaded on a controller and may also record any changes made to controller programs and tasks. Data from these platforms can be used to identify modified controller tasking. ICS T0889 Modify Program Engineering and asset management software will often maintain a copy of the expected program loaded on a controller and may also record any changes made to controller programs. Data from these platforms can be used to identify modified controller programs. "
},
{
"id": 1136,
"title": "Network Traffic, Data Source DS0029",
"path": "/datasources/DS0029/index.html",
"content": " Network Traffic Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP) ID: DS0029 \u24d8 Platforms: Android, ESXi, IaaS, Linux, Windows, iOS, macOS \u24d8 Collection Layers: Cloud Control Plane, Host, Network Contributors: Center for Threat-Informed Defense (CTID); ExtraHop Version: 1.2 Created: 20 October 2021 Last Modified: 18 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Network Traffic: Network Connection Creation The initial establishment of a network session, where a system or process initiates a connection to a local or remote endpoint. This typically involves capturing socket information (source/destination IP, ports, protocol) and tracking session metadata. Monitoring these events helps detect lateral movement, exfiltration, and command-and-control (C2) activities. Data Collection Measures: Windows: Event ID 5156 \u2013 Filtering Platform Connection - Logs network connections permitted by Windows Filtering Platform (WFP). Sysmon Event ID 3 \u2013 Network Connection Initiated - Captures process, source/destination IP, ports, and parent process. Linux/macOS: Netfilter (iptables), nftables logs - Tracks incoming and outgoing network connections. AuditD (connect syscall) - Logs TCP, UDP, and ICMP connections. Zeek (conn.log) - Captures protocol, duration, and bytes transferred. Cloud & Network Infrastructure: AWS VPC Flow Logs / Azure NSG Flow Logs - Logs IP traffic at the network level in cloud environments. Zeek (conn.log) or Suricata (network events) - Captures packet metadata for detection and correlation. Endpoint Detection & Response (EDR): Detect anomalous network activity such as new C2 connections or data exfiltration attempts. Network Traffic: Network Connection Creation The initial establishment of a network session, where a system or process initiates a connection to a local or remote endpoint. This typically involves capturing socket information (source/destination IP, ports, protocol) and tracking session metadata. Monitoring these events helps detect lateral movement, exfiltration, and command-and-control (C2) activities. Data Collection Measures: Windows: Event ID 5156 \u2013 Filtering Platform Connection - Logs network connections permitted by Windows Filtering Platform (WFP). Sysmon Event ID 3 \u2013 Network Connection Initiated - Captures process, source/destination IP, ports, and parent process. Linux/macOS: Netfilter (iptables), nftables logs - Tracks incoming and outgoing network connections. AuditD (connect syscall) - Logs TCP, UDP, and ICMP connections. Zeek (conn.log) - Captures protocol, duration, and bytes transferred. Cloud & Network Infrastructure: AWS VPC Flow Logs / Azure NSG Flow Logs - Logs IP traffic at the network level in cloud environments. Zeek (conn.log) or Suricata (network events) - Captures packet metadata for detection and correlation. Endpoint Detection & Response (EDR): Detect anomalous network activity such as new C2 connections or data exfiltration attempts. Domain ID Name Detects Mobile T1638 Adversary-in-the-Middle Mobile security products can potentially detect rogue Wi-Fi access points if the adversary is attempting to decrypt traffic using an untrusted SSL certificate. Enterprise T1020 Automated Exfiltration Monitor for newly constructed network connections associated with processes performing collection activity, especially those involving abnormal/untrusted hosts. Analytic 1 - Detecting Automated Exfiltration via Network (EventCode=3)OR (source=\"zeek_conn.log\" dest_port IN (21, 22, 443, 53) AND bytes_out > 5000000)OR (source=\"firewall_logs\" bytes_out > 10000000)| eval risk_score=case( bytes_out > 10000000, 9, bytes_out > 5000000, 8)| where risk_score >= 8| stats count by _time, host, user, dest_ip, dest_port, bytes_out, risk_score .001 Traffic Duplication Monitor for creation of unauthorized traffic mirroring sessions, unexpected outbound network connections from routers or cloud instances, configuration changes in network devices related to traffic forwarding or unusual new network flows, particularly on ports associated with traffic analysis tools. Analytic 1 - Detecting Unauthorized Traffic Mirroring Sessions (EventCode=\"CreateTrafficMirrorSession\" OR EventCode=\"VirtualNetworkTapCreated\" OR source=\"firewall_logs\" message=\"Mirror Port Config Change\")| eval risk_score=case( EventCode=\"CreateTrafficMirrorSession\", 9, EventCode=\"VirtualNetworkTapCreated\", 8, EventCode=\"ModifyTrafficMirrorSession\", 7)| where risk_score >= 7| stats count by _time, host, user, EventCode, risk_score Enterprise T1197 BITS Jobs Monitor for newly constructed network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account). Enterprise T1612 Build Image on Host Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code. Enterprise T1602 Data from Configuration Repository Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content) .001 SNMP (MIB Dump) Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows(e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s)) .002 Network Device Configuration Dump Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content) Enterprise T1039 Data from Network Shared Drive Monitor for newly constructed network connections that may search network shares on computers they have compromised to find files of interest. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols such as SMB that revolve around network shares. Enterprise T1030 Data Transfer Size Limits Monitor for processes that initiate persistent outbound connections with steady data transfer, multiple small-sized data transfers within a short timeframe to external destinations, network connections originating from unexpected processes or unauthorized ports, or repeated use of the same destination for outbound traffic across multiple sessions. Analytic 1 - Detecting Repeated Small-Size Data Transfers (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (bytes_out > 100 AND bytes_out < 50000) // Detects small packet sizes| bucket span=5m _time| stats count by _time, host, process, dest_ip, bytes_out| where count > 10 // Ensures frequent occurrence| stats count by host, dest_ip, count, earliest(_time), latest(_time)| where count >= 10| eval risk_score=case( count >= 20, 9, count >= 10, 8)| where risk_score >= 8| table host, dest_ip, count, earliest, latest, risk_score Enterprise T1189 Drive-by Compromise Monitor for newly constructed network connections to untrusted hosts that are used to send or receive data. Identify browser processes initiating connections to known malicious domains.Detect browser requests to suspicious IPs or domains classified under newly registered domains.Look for anomalous DNS queries and HTTP request patterns. (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=3 process=\"chrome.exe\" OR process=\"firefox.exe\")OR (source=\"cloud_dns_logs\" category=\"newly_registered_domain\")OR (source=\"/var/log/zeek/conn.log\" dest_ip IN (malicious_ip_list))| stats count by src_ip, dest_ip, domain, process| where count > 5 ICS T0817 Drive-by Compromise Monitor for newly constructed network connections to untrusted hosts that are used to send or receive data. Enterprise T1568 Dynamic Resolution Monitor for newly constructed network connections that are sent or received by untrusted hosts. .001 Fast Flux DNS Monitor for newly constructed network connections that may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. Enterprise T1114 Email Collection Monitor for newly constructed network connections that are sent or received by untrusted hosts. .002 Remote Email Collection Monitor for newly constructed network connections that are sent or received by untrusted hosts. Enterprise T1048 Exfiltration Over Alternative Protocol Monitor for outbound connections using non-standard ports for FTP, SMTP, or SMB, new processes generating large amounts of outbound traffic, or traffic flows that do not align with normal business usage patterns. Analytic 1 - Detecting Exfiltration Over Alternative Protocols (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_port IN (21, 25, 53, 139, 445, 587, 465, 990))| bucket span=1h _time| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip, dest_port| where count >= 5 AND total_bytes > 10000000| eval risk_score=case( total_bytes > 50000000, 9, total_bytes > 10000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, dest_port, risk_score .001 Exfiltration Over Symmetric Encrypted Non-C2 Protocol Monitor for outbound network connections using traditionally non-encrypted protocols, connections where data sent is significantly larger than data received, traffic spikes over uncommon ports (e.g., FTP, SMB, SMTP, ICMP), or traffic patterns indicative of encrypted payload transmission. Analytic 1 - Detecting Symmetric Encrypted Exfiltration via Alternative Protocols (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_port IN (21, 25, 53, 139, 445, 587, 990) AND bytes_out > 10000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip, dest_port| where count >= 3 AND total_bytes > 50000000| eval risk_score=case( total_bytes > 100000000, 9, total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, dest_port, risk_score .002 Exfiltration Over Asymmetric Encrypted Non-C2 Protocol Monitor for outbound network connections using TLS-based encryption over non-standard ports, processes initiating large encrypted data transfers that typically do not communicate, or encrypted traffic with long-duration sessions indicative of large data exfiltration. Analytic 1 - Detecting Exfiltration Over Asymmetric Encrypted Channels (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_port IN (22, 443, 465, 993, 995) AND bytes_out > 10000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip, dest_port| where count >= 3 AND total_bytes > 50000000| eval risk_score=case( total_bytes > 100000000, 9, total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, dest_port, risk_score .003 Exfiltration Over Unencrypted Non-C2 Protocol Monitor for unencrypted outbound network connections involving file transfer protocols, processes sending significantly more data than they receive, or outbound data transfers occurring at unusual times. Analytic 1 - Detecting Exfiltration Over Unencrypted Alternative Protocols (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_port IN (21, 53, 69, 139, 445, 8080) AND bytes_out > 10000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip, dest_port| where count >= 3 AND total_bytes > 50000000| eval risk_score=case( total_bytes > 100000000, 9, total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, dest_port, risk_score Enterprise T1041 Exfiltration Over C2 Channel Monitor for newly constructed network connections that are sent or received by untrusted hosts. Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation. Analytic 1 - Detecting Outbound Network Connections for C2 Exfiltration (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (bytes_out > 1000000 AND bytes_out > bytes_in * 5) // High outbound traffic| bucket span=1h _time| stats count by _time, host, process, dest_ip, bytes_out| where count > 5| stats count by host, dest_ip, count, earliest(_time), latest(_time)| where count >= 5| eval risk_score=case( count >= 10, 9, count >= 5, 8)| where risk_score >= 8| table host, dest_ip, count, earliest, latest, risk_score Enterprise T1011 Exfiltration Over Other Network Medium Monitor for newly constructed network connections that may attempt to exfiltrate data over a different network medium than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation. The below analytic is using an event ID from OSQuery. Analytic 1 - Detecting Exfiltration via Alternate Network Connections (EventCode=3 OR EventCode=10400)OR (source=\"zeek_conn.log\" interface IN (\"wlan0\", \"ppp0\", \"bt0\", \"usb0\"))| eval risk_score=case( interface IN (\"wlan0\", \"usb0\"), 9, interface IN (\"ppp0\", \"bt0\"), 8)| where risk_score >= 8| stats count by _time, host, user, interface, dest_ip, risk_score .001 Exfiltration Over Bluetooth Monitor for unusual Bluetooth device pairings, inbound or outbound Bluetooth connections from unexpected processes, or unexpected activation of Bluetooth Personal Area Network (PAN) services. Analytic 1 - Detecting Unauthorized Bluetooth Network Connections (EventCode=3 OR EventCode=10400)OR (source=\"zeek_conn.log\" interface IN (\"bt0\"))| eval risk_score=case( interface IN (\"bt0\"), 9, process_name IN (\"bluetoothctl\", \"bttransfer\"), 8)| where risk_score >= 8| stats count by _time, host, user, interface, dest_device, risk_score Enterprise T1567 Exfiltration Over Web Service Monitor for newly constructed network connections to web and cloud services associated with abnormal or non-browser processes. Analytic 1 - Detecting Large Data Transfers to Web Services (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_ip IN (known_cloud_services) AND bytes_out > 5000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip| where total_bytes > 50000000| eval risk_score=case( total_bytes > 100000000, 9, total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, risk_score .002 Exfiltration to Cloud Storage Monitor for unusual outbound connections to cloud storage domains, processes sending significantly more data than they receive, or high-bandwidth file transfers to cloud services. Analytic 1 - Detecting Large Data Transfers to Cloud Storage (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_ip IN (known_cloud_services) AND bytes_out > 5000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip| where total_bytes > 50000000| eval risk_score=case( total_bytes > 100000000, 9, total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, risk_score Enterprise T1133 External Remote Services Monitor for newly constructed network connections that may use Valid Accounts to access and/or persist within a network using External Remote Services. Use of External Remote Services may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using External Remote Services. Analytic 1 - Connections to common remote service ports index=network sourcetype=\"network_traffic\"| stats count by src_ip, dest_ip, dest_port, protocol| where dest_port=22 OR dest_port=3389 OR dest_port=8443| table _time, src_ip, dest_ip, dest_port, protocol Enterprise T1008 Fallback Channels Monitor for newly constructed network connections that may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds. Processes utilizing the network that do not normally have network communication or have never been seen before may be suspicious. Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on TCP network connection creation. The below analytic is using an event ID from OSQuery. Enterprise T1105 Ingress Tool Transfer Monitor for newly constructed network connections that are sent or received by untrusted hosts or creating files on-system may be suspicious. Abnormal use of utilities such as FTP may also be suspicious. Enterprise T1104 Multi-Stage Channels Monitor for newly constructed network connections that are sent or received by untrusted hosts. Enterprise T1542 Pre-OS Boot Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor. .005 TFTP Boot Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. [1] [2] The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor. Enterprise T1572 Protocol Tunneling Monitor for newly constructed network connections that are sent or received by untrusted hosts. Enterprise T1090 Proxy Monitor for newly constructed network connections that are sent or received by untrusted hosts. .001 Internal Proxy Monitor for newly constructed network connections that are sent or received by untrusted hosts. .002 External Proxy Monitor for newly constructed network connections that are sent or received by untrusted hosts. .003 Multi-hop Proxy Monitor for newly constructed network connections that are sent or received by untrusted hosts. Enterprise T1219 Remote Access Tools Monitor for newly constructed network connections that are sent or received by untrusted hosts. .001 IDE Tunneling Network traffic directed to *.tunnels.api.visualstudio.com or *.devtunnels.ms indicate that a system is attempting to initiate or maintain a Visual Studio Code remote tunnel.[3] Analytic 1 - Detect active IDE tunnel to VSCode or JetBrains cloud relay sourcetype=\"stream:http\" OR sourcetype=\"stream:tcp\"(dest_domain=\".tunnels.api.visualstudio.com\" OR dest_domain=\".devtunnels.ms\")| stats count by _time, src_ip, dest_ip, dest_domain, uri_path| sort _time desc .002 Remote Desktop Software Monitor for Outbound connections to known RMM service endpoints (e.g., .teamviewer.com, .anydesk.com)New connections from internal systems to unexpected IPs on:TCP 5938 (TeamViewer)TCP 7070\u20137071 (AnyDesk)TCP 5650 (Ammyy Admin)TCP/UDP 443, 80, or randomized ports Analytic 1 - Detect network traffic for Remote Desktop software sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=3(DestinationHostname IN (\".teamviewer.com\", \".anydesk.com\", \".logmein.com\", \".screenconnect.com\"))OR (DestinationPort IN (5938, 7070, 7071, 443) AND Image=\"*\")| stats count by Image, DestinationIp, DestinationPort, CommandLine, host, _time| sort -_time Enterprise T1021 Remote Services Monitor for newly constructed network connections that may use Valid Accounts to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. Monitor network connections involving common remote management protocols, such as ports tcp:3283 and tcp:5900, as well as ports tcp: 3389 and tcp:22 for remote login. index=\"network_logs\" sourcetype=\"network_connection\"| search protocol IN (\"tcp/22\", \"tcp/3389\", \"tcp/5900\")| stats count by src_ip, dest_ip, dest_port, _time| eval suspicious_connection=if(src_ip NOT IN (\"trusted_sources\") AND count > threshold, \"high\", \"normal\")| where suspicious_connection=\"high\"| table _time, src_ip, dest_ip, dest_port, suspicious_connection .001 Remote Desktop Protocol Monitor for newly constructed network connections (typically over port 3389) that may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Analytic 1 - Abnormal RDP Network Connections sourcetype=zeek | search dest_port=3389 // Default RDP port| stats count by src_ip, dest_ip, dest_port| where src_ip!=\"trusted_ips\" AND dest_ip!=\"internal_servers\" .002 SMB/Windows Admin Shares Monitor for newly constructed network connections (typically over ports 139 or 445), especially those that are sent or received by abnormal or untrusted hosts. Correlate these network connections with remote login events and associated SMB-related activity such as file transfers and remote process execution. Note: Event ID is for Zeek but can also be implemented in other Network Analysis Frameworks by parsing & decoding captured SMB2 network traffic. Preference would be to detect smb2_write_response event (instead of smb2_write_request), because it would confirm the file was actually written to the remote destination. Unfortunately, Bro/Zeek does not have an event for that SMB message-type yet. From a network traffic capture standpoint, it\u2019s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints. Analytic 1 and 2 are very similar, with the key difference being that Implementation 2 is intended to capture multiple attempts at lateral movement originating from the same host within a short time period (5 minutes). smb2_write_request, smb1_write_andx_response is indication of an SMB file write to a Windows Admin File Share: ADMIN$ or C$ smb2_tree_connect_request, smb1_tree_connect_andx_request is observed originating from the same host, regardless of write-attempts and regardless of whether or not any connection is successful \u2014just connection attempts\u2014 within a specified period of time (REPEATS 5 TIMES WITHIN 5 MINUTES FROM SAME src_ip). From a network traffic capture standpoint, it\u2019s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints.The Service Control Manager (SCM) can be used to copy a file to the ADMIN$ share and execute it as a service. This can be detected by looking for incoming RPC network connections to the Service Control Manager, followed by services.exe spawning a child process. Analytic 1 - Basic sourcetype=\"Zeek:SMB_Files\" EventCode IN (\"smb2_write_request\", \"smb1_write_andx_response\", \"smb2_tree_connect_request\", \"smb1_tree_connect_andx_request\") AND (Path=\"ADMIN$\" OR Path=\"C$\") Analytic 2 - Port 445 Monitoring sourcetype=\"network_connection\"| search dest_port=445| stats count by src_ip, dest_ip, dest_port, _time| eval smb_activity=if(count > threshold AND src_ip NOT IN (\"trusted_sources\"), \"suspicious\", \"normal\")| where smb_activity=\"suspicious\"| table _time, src_ip, dest_ip, dest_port, smb_activity .003 Distributed Component Object Model Monitor for newly constructed network connections that may use Valid Accounts to interact with remote machines using Distributed Component Object Model (DCOM). Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135). Remote Procedure Call (RPC) traffic, especially over port 135, used for DCOM communication. Look for patterns indicating high volumes of RPC calls or connections between systems. Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows. Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152. sourcetype=\"seek\"| search dest_port=135 protocol=\"DCE/RPC\"| stats count by src_ip, dest_ip, dest_port, _time| eval rpc_activity=if(count > threshold AND src_ip NOT IN (\"trusted_ips\"), \"suspicious\", \"normal\")| where rpc_activity=\"suspicious\"| table _time, src_ip, dest_ip, dest_port, rpc_activity .004 SSH Monitor for newly constructed network connections (typically port 22) that may use Valid Accounts to log into remote machines using Secure Shell (SSH). Use of SSH may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Network Analysis Frameworks such as Zeek can be used to capture, decode, and alert on network traffic. Accordingly, they can be used to look for the creation of SSH network connections. sourcetype=\"zeek\" dest_port=22 protocol=\"tcp\"| stats count by src_ip, dest_ip, dest_port, _time| eval ssh_connection_anomaly=if(count > threshold OR src_ip IN (\"untrusted_ips\"), \"suspicious\", \"normal\")| where ssh_connection_anomaly=\"suspicious\"| table _time, src_ip, dest_ip, ssh_connection_anomaly .005 VNC Monitor for newly constructed network connections that may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC). Use of VNC may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC. sourcetype=\"network_traffic\" dest_port=5900 protocol=\"tcp\"| stats count by src_ip, dest_ip, dest_port, _time| eval vnc_connection_anomaly=if(count > threshold OR src_ip IN (\"untrusted_ips\"), \"suspicious\", \"normal\")| where vnc_connection_anomaly=\"suspicious\"| table _time, src_ip, dest_ip, vnc_connection_anomaly .006 Windows Remote Management Monitor for newly constructed network connections using Windows Remote Management (WinRM), such as remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS). sourcetype=network dest_port IN (5985, 5986) protocol=\"tcp\"| stats count by src_ip, dest_ip, dest_port, _time| eval network_anomaly=if(count > threshold OR src_ip IN (\"untrusted_ips\"), \"suspicious\", \"normal\")| where network_anomaly=\"suspicious\"| table _time, src_ip, dest_ip, dest_port, network_anomaly ICS T0886 Remote Services Monitor for newly constructed network connections into a service specifically designed to accept remote connections, such as RDP, Telnet, SSH, and VNC. Monitor network connections involving common remote management protocols, such as ports tcp:3283 and tcp:5900, as well as ports tcp:3389 and tcp:22 for remote logins. The adversary may use Valid Accounts to enable remote logins. Enterprise T1018 Remote System Discovery Monitor for newly constructed network connections associated with pings/scans that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Enterprise T1496 Resource Hijacking Monitor for newly constructed network connections that are sent or received by untrusted hosts, look for connections to/from strange ports, as well as reputation of IPs and URLs related cryptocurrency hosts. .001 Compute Hijacking Monitor for newly constructed network connections that are sent or received by untrusted hosts. Look for connections to/from strange ports, as well as reputation of IPs and URLs related to cryptocurrency hosts. In AWS environments, configure GuardDuty to alert when EC2 instances query IP addresses associated with known cryptocurrency activity.[4] .002 Bandwidth Hijacking Monitor for newly constructed network connections that are sent or received by untrusted hosts. Look for connections to/from strange ports. Enterprise T1029 Scheduled Transfer Monitor for repeated outbound connections to the same destination at scheduled intervals, connections from processes that typically do not initiate network communications, transfers using non-standard ports or unexpected encryption methods. Analytic 1 - Detecting Recurring Network Connections for Exfiltration (EventCode=3)OR (source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_ip IN (suspicious_ip_list) OR bytes_out > 5000000)| bucket span=1h _time| stats count by _time, host, process, dest_ip, bytes_out| where count > 3| stats count by host, dest_ip, count, earliest(_time), latest(_time)| where count >= 3| eval risk_score=case( count >= 5, 9, count = 3 OR 4, 7)| where risk_score >= 7| table host, dest_ip, count, earliest, latest, risk_score Enterprise T1176 Software Extensions Monitor for newly constructed network connections that are sent or received by untrusted hosts. .001 Browser Extensions Monitor for newly constructed network connections that are sent or received by untrusted hosts. Enterprise T1218 System Binary Proxy Execution Monitor for newly constructed network connections that are sent or received by untrusted hosts. .003 CMSTP Monitor for newly constructed network connections that are sent or received by untrusted hosts, such as Sysmon Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external. Note: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic looks for the creation of a new CMSTP.exe process which initiates a network connection to a non-local IP address. This is a specific implementation where CMSTP.exe can be leveraged to setup listeners that will receive and install malware from remote sources in a trusted fashion. Analytic 1 - CMSTP (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"3\") Image=\"C:\\Windows\\System32\\CMSTP.exe\" | WHERE ((!cidrmatch(\"10.0.0.0/8\", SourceIp) AND !cidrmatch(\"192.168.0.0/16\", SourceIp) AND !cidrmatch(\"172.16.0.0/12\", SourceIp)) .005 Mshta Monitor for newly constructed network connections that are sent or received by untrusted hosts. .007 Msiexec Monitor for newly constructed network connections that are sent or received by untrusted hosts. .010 Regsvr32 Monitor for newly constructed network connections that are sent or received by untrusted hosts. Enterprise T1221 Template Injection Monitor for newly constructed network connections that are sent or received by untrusted hosts. Enterprise T1205 Traffic Signaling Monitor for newly constructed network connections that are sent or received by untrusted hosts. .001 Port Knocking Monitor for newly constructed network connections that are sent or received by untrusted hosts. .002 Socket Filters Monitor recently started applications creating raw socket connections.[5] Enterprise T1204 User Execution Monitor network traffic patterns associated with web-based user actions, such as clicking on phishing links or executing malware that tries to establish C2 communication. Analytic 1 - Web-based network connections to suspicious destinations. sourcetype=sysmon EventCode=3| search process_name IN (\"winword.exe\", \"chrome.exe\", \"firefox.exe\") | stats count by src_ip dest_ip dest_port process_name| where dest_ip NOT IN (\"\") .001 Malicious Link Monitor for network connections to suspicious or external sites shortly after a user clicks on a link, especially if the URL is linked to phishing or malicious activities. Analytic 1 - Web-based network connections to suspicious destinations. sourcetype=network_connection| search process_name IN (\"chrome.exe\", \"firefox.exe\", \"iexplore.exe\", \"msedge.exe\") OR src_ip IN (\"\") .004 Malicious Copy and Paste Monitor network traffic patterns associated with user actions, such as initiating connections to suspicious sites. ICS T0863 User Execution Monitor for newly constructed web-based network connections that are sent to malicious or suspicious destinations (e.g., destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g., monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, SCF, HTA, MSI, DLLs, or msiexec.exe). Enterprise T1102 Web Service Monitor for newly constructed network connections that are sent or received by untrusted hosts. .002 Bidirectional Communication Monitor for newly constructed network connections that are sent or received by untrusted hosts. .003 One-Way Communication Monitor for newly constructed network connections that are sent or received by untrusted hosts. Mobile T1481 Web Service Many properly configured firewalls may naturally block command and control traffic. .001 Dead Drop Resolver Many properly configured firewalls may naturally block command and control traffic. .002 Bidirectional Communication Many properly configured firewalls may naturally block bidirectional command and control traffic. .003 One-Way Communication Many properly configured firewalls may naturally block one-way command and control traffic. Enterprise T1669 Wi-Fi Networks Monitor for newly constructed network connections that are sent to or received by abnormal or untrusted hosts. Enterprise T1047 Windows Management Instrumentation Monitor network traffic for WMI connections for potential use to remotely edit configuration, start services, or query files. When remote WMI requests are over RPC it connects to a DCOM interface within the RPC group netsvcs. To detect this activity, a sensor is needed at the network level that can decode RPC traffic or on the host where the communication can be detected more natively, such as Event Tracing for Windows. Using wireshark/tshark decoders, the WMI interfaces can be extracted so that WMI activity over RPC can be detected. Although the description details how to detect remote WMI precisely, a decent estimate has been to look for the string RPCSS within the initial RPC connection on 135/tcp. It returns a superset of this activity, and will trigger on all DCOM-related services running within RPC, which is likely to also be activity that should be detected between hosts. More about RPCSS at : rpcss_dcom_interfaces.html Look for instances of the WMI querying in network traffic, and find the cases where a process is launched immediately after a connection is seen. This essentially merges the request to start a remote process via WMI with the process execution. If other processes are spawned from wmiprvse.exe in this time frame, it is possible for race conditions to occur, and the wrong process may be merged. If this is the case, it may be useful to look deeper into the network traffic to see if the desired command can be extracted. After the WMI connection has been initialized, a process can be remotely launched using the command: wmic /node:\"\" process call create \"\", which is detected in the third Detection Pseudocode. This leaves artifacts at both a network (RPC) and process (command line) level. When wmic.exe (or the schtasks API) is used to remotely create processes, Windows uses RPC (135/tcp) to communicate with the the remote machine. After RPC authenticates, the RPC endpoint mapper opens a high port connection, through which the schtasks Remote Procedure Call is actually implemented. With the right packet decoders, or by looking for certain byte streams in raw data, these functions can be identified. When the command line is executed, it has the parent process of C:\\windows\\system32\\wbem\\WmiPrvSE.exe. This analytic looks for these two events happening in sequence, so that the network connection and target process are output. Certain strings can be identifiers of the WMI by looking up the interface UUID for IRemUnknown2 in different formats- UUID 00000143-0000-0000-c000-000000000046 (decoded)- Hex 43 01 00 00 00 00 00 00 c0 00 00 00 00 00 00 46 (raw)- ASCII CF (printable text only) This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic. The transfer syntax is- UUID 8a885d04-1ceb-11c9-9fe8-08002b104860 (decoded)- Hex 04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60 (raw)- ASCII `]+H`` (printable text only) Thus, a great ASCII based signature is- CF]+HCFCFhost\" Note: To detect WMI over RPC (using DCOM), a sensor needs to exist that has the insight into individual connections and can actually decode and make sense of RPC traffic. Specifically, WMI can be detected by looking at RPC traffic where the target interface matches that of WMI, which is IRemUnknown2. Look for instances of the WMI querying in network traffic, and find the cases where a process is launched immediately after a connection is seen. This essentially merges the request to start a remote process via WMI with the process execution. If other processes are spawned from wmiprvse.exe in this time frame, it is possible for race conditions to occur, and the wrong process may be merged. If this is the case, it may be useful to look deeper into the network traffic to see if the desired command can be extracted. Analytic 1 - Monitor for WMI over RPC (DCOM) connections. Look for the string RPCSS within the initial RPC connection on port 135/tcp. index=windows_logs sourcetype=WinEventLog:Security OR sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational OR sourcetype=WinEventLog:Microsoft-Windows-Security-Auditing| eval ProcessName=lower(ProcessName), CommandLine=lower(CommandLine)| search ProcessName IN (\"wmic.exe\", \"powershell.exe\", \"wmiprvse.exe\", \"wmiadap.exe\", \"scrcons.exe\", \"wbemtool.exe\")| search CommandLine IN (\"process call create\", \"win32_process\", \"win32_service\", \"shadowcopy delete\", \"network\")| search (sourcetype=\"WinEventLog:Security\" EventCode=4688) OR (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=1)| join ProcessName [ search index=windows_logs sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=3 | eval DestinationIp = coalesce(DestinationIp, dest_ip)| eval DestinationPort = coalesce(DestinationPort, dest_port)| search DestinationPort IN (135, 5985, 5986) ]| stats count by _time, ComputerName, User, ProcessName, CommandLine, DestinationIp, DestinationPort, dest, src_ip, dest_ip| eval alert_message=\"Suspicious WMI Network Connection Detected: \" + ProcessName + \" executed by \" + User + \" on \" + ComputerName + \" with command: \" + CommandLine + \" connecting to \" + DestinationIp + \":\" + DestinationPort| where NOT (User=\"SYSTEM\" OR ProcessName=\"wmiprvse.exe\" OR (src_ip=\"trusted_ip_range\" AND DestinationIp=\"trusted_ip_range\"))| table _time, ComputerName, User, ProcessName, CommandLine, DestinationIp, DestinationPort, src_ip, dest_ip, alert_message Network Traffic: Network Traffic Content The full packet capture (PCAP) or session data that logs both protocol headers and payload content. This allows analysts to inspect command and control (C2) traffic, exfiltration, and other suspicious activity within network communications. Unlike metadata-based logs, full content analysis enables deeper protocol inspection, payload decoding, and forensic investigations. Data Collection Measures: Network Packet Capture (Full Content Logging) Wireshark / tcpdump / tshark Full packet captures (PCAP files) for manual analysis or IDS correlation. tcpdump -i eth0 -w capture.pcap Zeek (formerly Bro) Extracts protocol headers and payload details into structured logs. echo \"redef Log::default_store = Log::ASCII;\" > local.zeek | zeek -Cr capture.pcap local.zeek Suricata / Snort (IDS/IPS with PCAP Logging) Deep packet inspection (DPI) with signature-based and behavioral analysis. suricata -c /etc/suricata/suricata.yaml -i eth0 -l /var/log/suricata Host-Based Collection Sysmon Event ID 22 \u2013 DNS Query Logging, Captures DNS requests made by processes, useful for detecting C2 domains. Sysmon Event ID 3 \u2013 Network Connection Initiated, Logs process-to-network connection relationships. AuditD (Linux) \u2013 syscall=connect, Monitors outbound network requests from processes. auditctl -a always,exit -F arch=b64 -S connect -k network_activity Cloud & SaaS Traffic Collection AWS VPC Flow Logs / Azure NSG Flow Logs / Google VPC Flow Logs, Captures metadata about inbound/outbound network traffic. Cloud IDS (AWS GuardDuty, Azure Sentinel, Google Chronicle), Detects malicious activity in cloud environments by analyzing network traffic patterns. Network Traffic: Network Traffic Content The full packet capture (PCAP) or session data that logs both protocol headers and payload content. This allows analysts to inspect command and control (C2) traffic, exfiltration, and other suspicious activity within network communications. Unlike metadata-based logs, full content analysis enables deeper protocol inspection, payload decoding, and forensic investigations. Data Collection Measures: Network Packet Capture (Full Content Logging) Wireshark / tcpdump / tshark Full packet captures (PCAP files) for manual analysis or IDS correlation. tcpdump -i eth0 -w capture.pcap Zeek (formerly Bro) Extracts protocol headers and payload details into structured logs. echo \"redef Log::default_store = Log::ASCII;\" > local.zeek | zeek -Cr capture.pcap local.zeek Suricata / Snort (IDS/IPS with PCAP Logging) Deep packet inspection (DPI) with signature-based and behavioral analysis. suricata -c /etc/suricata/suricata.yaml -i eth0 -l /var/log/suricata Host-Based Collection Sysmon Event ID 22 \u2013 DNS Query Logging, Captures DNS requests made by processes, useful for detecting C2 domains. Sysmon Event ID 3 \u2013 Network Connection Initiated, Logs process-to-network connection relationships. AuditD (Linux) \u2013 syscall=connect, Monitors outbound network requests from processes. auditctl -a always,exit -F arch=b64 -S connect -k network_activity Cloud & SaaS Traffic Collection AWS VPC Flow Logs / Azure NSG Flow Logs / Google VPC Flow Logs, Captures metadata about inbound/outbound network traffic. Cloud IDS (AWS GuardDuty, Azure Sentinel, Google Chronicle), Detects malicious activity in cloud environments by analyzing network traffic patterns. Domain ID Name Detects Enterprise T1087 .002 Account Discovery: Domain Account Monitor and analyze traffic patterns and packet inspection associated to LDAP and MSRPC that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). ICS T0800 Activate Firmware Update Mode Monitor ICS automation network protocols for information that an asset has been placed into Firmware Update Mode. Enterprise T1595 Active Scanning Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Scanning IP Blocks Monitoring the content of network traffic can help detect patterns associated with active scanning activities. This can include identifying repeated connection attempts, unusual scanning behaviors, or probing activity targeting multiple IP addresses across a network. .002 Vulnerability Scanning Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .003 Wordlist Scanning Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Enterprise T1557 Adversary-in-the-Middle Monitor network traffic for anomalies associated with known AiTM behavior. .001 LLMNR/NBT-NS Poisoning and SMB Relay Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy. .002 ARP Cache Poisoning Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned. .003 DHCP Spoofing Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor network traffic for rogue DHCPv6 activity. .004 Evil Twin Monitor network traffic for suspicious/malicious behavior involving evil twin attacks. Intrusion prevention systems (WIDS) can identify traffic patterns indicative of activity associated with evil twins, rogue access points, and adversary-in-the-middle activity. ICS T0830 Adversary-in-the-Middle Monitor network traffic for anomalies associated with known AiTM behavior. For Collection activity where transmitted data is not manipulated, anomalies may be present in network management protocols (e.g., ARP, DHCP). Enterprise T1071 Application Layer Protocol Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Web Protocols Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 File Transfer Protocols Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .003 Mail Protocols Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .004 DNS Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for DNS over TLS (DoT) and DNS over HTTPS (DoH), that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .005 Publish/Subscribe Protocols Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). ICS T0802 Automated Collection Monitor for information collection on assets that may indicate deviations from standard operational tools. Examples include unexpected industrial automation protocol functions, new high volume communication sessions, or broad collection across many hosts within the network. Enterprise T1020 Automated Exfiltration Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous outbound traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration. ICS T0806 Brute Force I/O Monitor network traffic for ICS functions related to write commands for an excessive number of I/O points or manipulating a single value an excessive number of times. Enterprise T1612 Build Image on Host Monitor for network traffic associated with requests and/or downloads of container images, especially those that may be anomalous or known malicious. ICS T0892 Change Credential Monitor for device credential changes observable in automation or management network protocols. ICS T0858 Change Operating Mode Monitor ICS management protocols for functions that change an asset\u2019s operating mode. ICS T0885 Commonly Used Port Monitor for mismatches between protocols and their expected ports (e.g., non-HTTP traffic on tcp:80). Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[6] Enterprise T1586 Compromise Accounts Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Social Media Accounts Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). ICS T0884 Connection Proxy Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g., extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g., monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1659 Content Injection Monitor for other unusual network traffic that may indicate additional malicious content transferred to the system. Use network intrusion detection systems, sometimes with SSL/TLS inspection, to look for known malicious payloads, content obfuscation, and exploit code. Analytic 1 - Detecting Content Injection in Network Traffic (EventCode=3)OR (source=\"zeek_http_logs\" response_code IN (302, 307) AND url IN (malicious_redirect_list))OR (source=\"proxy_logs\" response_body_content IN (suspicious_script_list))| eval risk_score=case( response_code=302 AND url IN (malicious_redirect_list), 9, response_body_content IN (suspicious_script_list), 8, url LIKE \"%@%\", 7)| where risk_score >= 7| stats count by _time, host, user, url, response_code, risk_score Enterprise T1132 Data Encoding Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols and packet contents. .001 Standard Encoding Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. .002 Non-Standard Encoding Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Enterprise T1602 Data from Configuration Repository Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content) .001 SNMP (MIB Dump) Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flow (e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s)) .002 Network Device Configuration Dump Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content) Enterprise T1039 Data from Network Shared Drive Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1565 Data Manipulation Monitor for networks that solicits and obtains the configuration information of the queried device. .002 Transmitted Data Manipulation Monitor for networks that solicits and obtains the configuration information of the queried device. Enterprise T1001 Data Obfuscation Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. [6] .001 Junk Data Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[6] .002 Steganography Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[6] .003 Protocol or Service Impersonation Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.[6] Enterprise T1491 Defacement Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access internal and external websites and services). Consider correlating with application monitoring for indication of unplanned service interruptions or unauthorized content changes. .001 Internal Defacement Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 External Defacement Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). ICS T0812 Default Credentials Monitor network traffic for default credential use in protocols that allow unencrypted authentication. ICS T0814 Denial of Service Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g., extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g., monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). ICS T0868 Detect Operating Mode Monitor ICS automation network protocols for functions related to reading an asset\u2019s operating mode. In some cases, there may be multiple ways to detect a device\u2019s operating mode, one of which is typically used in the operational environment. Monitor for the operating mode being checked in unexpected ways. ICS T0816 Device Restart/Shutdown Monitor ICS automation protocols for functions that restart or shutdown a device. Commands to restart or shutdown devices may also be observable in traditional IT management protocols. Enterprise T1482 Domain Trust Discovery Monitor and analyze traffic patterns and packet inspection associated to LDAP and MSRPC that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Mobile T1407 Download New Code at Runtime Mobile security products may provide URL inspection services that could determine if a domain being visited is malicious. Enterprise T1189 Drive-by Compromise Detect suspicious script execution over HTTP/S. Identify JavaScript payloads with obfuscation or encoded execution. Look for exploit attempts in network payloads. (EventCode=5156 dest_port=80 OR dest_port=443 process=\"chrome.exe\" OR process=\"firefox.exe\")OR (source=\"/var/log/zeek/http.log\" method=\"GET\" uri IN (suspicious_js_files))| stats count by src_ip, dest_ip, uri, user_agent| where count > 3 ICS T0817 Drive-by Compromise Monitor for unusual network traffic that may indicate additional tools transferred to the system. Use network intrusion detection systems, sometimes with SSL/TLS inspection, to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code. Enterprise T1568 Dynamic Resolution Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .003 DNS Calculation Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1573 Encrypted Channel Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Symmetric Cryptography Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 Asymmetric Cryptography Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1499 Endpoint Denial of Service Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 OS Exhaustion Flood Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 Service Exhaustion Flood Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .003 Application Exhaustion Flood Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .004 Application or System Exploitation Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1585 Establish Accounts Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Social Media Accounts Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1048 Exfiltration Over Alternative Protocol Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Exfiltration Over Symmetric Encrypted Non-C2 Protocol Monitor for encrypted payloads using symmetric cryptography over plaintext channels, detection of RC4, AES, or Blowfish in network traffic, or HTTP, FTP, or DNS packets containing unusually long Base64 or XOR-encoded strings. Analytic 1 - Detecting Encrypted Payloads in Alternative Protocols (EventCode=3 OR source=\"zeek_http.log\" OR source=\"dns.log\")| where (uri_length > 200 OR request_body_length > 5000)| eval encoded_data=if(match(uri, \"([A-Za-z0-9+/=]{100,})\") OR match(request_body, \"([A-Za-z0-9+/=]{100,})\"), 1, 0)| where encoded_data=1| stats count by _time, host, user, uri, request_body_length, risk_score| eval risk_score=case( request_body_length > 10000, 9, request_body_length > 5000, 8)| where risk_score >= 8| table host, uri, request_body_length, risk_score .002 Exfiltration Over Asymmetric Encrypted Non-C2 Protocol Monitor for asymmetric encryption key exchange over unexpected network channels, detection of long Base64, PEM, or PGP keys transmitted in network payloads, or TLS handshakes or encrypted payloads in non-TLS standard traffic. Analytic 1 - Detecting Encrypted Payloads in Non-C2 Channels (EventCode=3 OR source=\"zeek_http.log\" OR source=\"dns.log\")| where (uri_length > 200 OR request_body_length > 5000)| eval encoded_data=if(match(uri, \"-----BEGIN (RSA|EC|PGP) PRIVATE KEY-----\") OR match(request_body, \"-----BEGIN (RSA|EC|PGP) PUBLIC KEY-----\"), 1, 0)| where encoded_data=1| stats count by _time, host, user, uri, request_body_length, risk_score| eval risk_score=case( request_body_length > 10000, 9, request_body_length > 5000, 8)| where risk_score >= 8| table host, uri, request_body_length, risk_score .003 Exfiltration Over Unencrypted Non-C2 Protocol Monitor for data obfuscation methods such as Base64, XOR, or URL encoding in HTTP requests, use of TFTP, FTP, or DNS for data exfiltration, or outbound requests containing encoded strings in GET or POST parameters. Analytic 1 - Detecting Encoded Data in Unencrypted Alternative Protocols (EventCode=3 OR source=\"zeek_http.log\" OR source=\"dns.log\")| where (uri_length > 200 OR request_body_length > 5000)| eval encoded_data=if(match(uri, \"([A-Za-z0-9+/=]{100,})\") OR match(request_body, \"([A-Za-z0-9+/=]{100,})\"), 1, 0)| where encoded_data=1| stats count by _time, host, user, uri, request_body_length, risk_score| eval risk_score=case( request_body_length > 10000, 9, request_body_length > 5000, 8)| where risk_score >= 8| table host, uri, request_body_length, risk_score Enterprise T1041 Exfiltration Over C2 Channel Hidden or encoded data inside normal C2 traffic (e.g., Base64, XOR, custom encoding).HTTP/S payloads with unusual long strings in GET/POST requests.DNS tunneling techniques used to bypass security controls. Analytic 1 - Detecting Encoded or Hidden Data in C2 Channels (EventCode=3 OR source=\"zeek_http.log\" OR source=\"dns.log\")| where (uri_length > 200 OR request_body_length > 5000)| eval encoded_data=if(match(uri, \"([A-Za-z0-9+/=]{100,})\") OR match(request_body, \"([A-Za-z0-9+/=]{100,})\"), 1, 0)| where encoded_data=1| stats count by _time, host, user, uri, request_body_length, risk_score| eval risk_score=case( request_body_length > 10000, 9, request_body_length > 5000, 8)| where risk_score >= 8| table host, uri, request_body_length, risk_score Enterprise T1011 Exfiltration Over Other Network Medium Monitor high-volume data transfers over secondary network connections, outbound SSH/SFTP connections over unauthorized networks, or anomalous encryption methods used for data exfiltration. Analytic 1 - Detecting Large Data Exfiltration via Alternate Network (EventCode=3)OR (source=\"zeek_conn.log\" dest_port IN (22, 443, 53) AND bytes_out > 5000000)OR (source=\"firewall_logs\" bytes_out > 10000000)| eval risk_score=case( bytes_out > 10000000, 9, bytes_out > 5000000, 8)| where risk_score >= 8| stats count by _time, host, user, dest_ip, dest_port, bytes_out, risk_score .001 Exfiltration Over Bluetooth Monitor high-volume data transfers over Bluetooth, Bluetooth PAN being used to route exfiltrated data, or Unusual Bluetooth protocol usage on enterprise endpoints. Analytic 1 - Detecting Large Data Exfiltration via Bluetooth (EventCode=3)OR (source=\"zeek_conn.log\" protocol=\"bluetooth\" bytes_out > 5000000)OR (source=\"firewall_logs\" protocol=\"bluetooth\" bytes_out > 10000000)| eval risk_score=case( bytes_out > 10000000, 9, bytes_out > 5000000, 8)| where risk_score >= 8| stats count by _time, host, user, dest_device, bytes_out, risk_score Enterprise T1567 Exfiltration Over Web Service Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Exfiltration to Code Repository Monitor for outbound network connections to code repository services (e.g., github.com, gitlab.com), web API calls to repository endpoints (POST https://api.github.com/repos/...), or SSH traffic to Git services (git@github.com:username/repo.git). Analytic 1 - Detecting Outbound Connections to Code Repositories (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (dest_ip IN (known_code_repos) AND bytes_out > 5000000)| stats count, sum(bytes_out) as total_bytes by _time, host, process, dest_ip| where total_bytes > 50000000| eval risk_score=case( total_bytes > 100000000, 9, total_bytes > 50000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, risk_score .002 Exfiltration to Cloud Storage Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .003 Exfiltration to Text Storage Sites Monitor and analyze network traffic for exfiltration attempts using text storage sites, i.e. POST requests to text storage sites, Base64 or other obfuscated data within outbound web requests, or unusual user-agent strings indicating API-based exfiltration.' Analytic 1 - Detecting Large Data Transfers to Pastebin or Similar Services (EventCode=3 OR source=\"zeek_http.log\" OR source=\"firewall_logs\")| where (dest_domain LIKE \".pastebin.com\" OR dest_domain LIKE \".hastebin.com\" OR dest_domain LIKE \".rentry.co\" OR dest_domain LIKE \".ghostbin.com\")| where (http_method=\"POST\")| stats count, sum(bytes_out) as total_bytes by _time, host, user, dest_domain, user_agent| where total_bytes > 500000| eval risk_score=case( total_bytes > 10000000, 9, total_bytes > 500000, 8)| where risk_score >= 8| table host, user, dest_domain, total_bytes, user_agent, risk_score .004 Exfiltration Over Webhook Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g., extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g., monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1190 Exploit Public-Facing Application Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection strings or known payloads. For example, monitor for successively chained functions that adversaries commonly abuse (i.e. gadget chaining) through unsafe deserialization to exploit publicly facing applications for initial access.[7] In AWS environments, monitor VPC flow logs and/or Elastic Load Balancer (ELB) logs going to and from instances hosting externally accessible applications. (source=\"/var/log/zeek/http.log\" OR source=\"C:\\Windows\\System32\\LogFiles\\Firewall\")| regex http_request=\"(?i)select.from|union.select|cmd=.|exec=.\"| stats count by src_ip, dest_ip, http_method, uri_path| where count > 10| table _time, src_ip, dest_ip, http_method, uri_path, count ICS T0819 Exploit Public-Facing Application Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads. Enterprise T1210 Exploitation of Remote Services Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads. sourcetype=\"network:packet_capture\" OR sourcetype=\"ids:alert\"| search (alert IN (\"SMB Exploit Detected\", \"RDP Exploit Attempt\", \"MySQL Exploit Attempt\")) OR (src_port IN (445, 3389, 3306))| stats count by src_ip, dest_ip, dest_port, protocol, signature, _time| eval anomaly_detected=if(count > threshold OR match(signature, \"Exploit Attempt|Remote Code Execution\"), \"suspicious\", \"normal\")| where anomaly_detected=\"suspicious\"| table _time, src_ip, dest_ip, dest_port, protocol, signature, anomaly_detected Mobile T1428 Exploitation of Remote Services Network traffic analysis could reveal patterns of compromise if devices attempt to access unusual targets or resources. ICS T0866 Exploitation of Remote Services Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads. Enterprise T1133 External Remote Services Analyze traffic to detect anomalous requests, API usage, or data transfers. Anomalous content within network traffic, such as unexpected API calls, file transfers, or large data uploads.Unusual commands or payloads transmitted through remote service channels. Analytic 1 - Large data transfers over remote service connections index=network sourcetype=\"network_packet_capture\"| stats count by src_ip, dest_ip, data_size, protocol| where data_size > 1000000| table _time, src_ip, dest_ip, data_size, protocol Enterprise T1187 Forced Authentication For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located. Analytic 1 - Detection of NTLM hash traffic or other suspicious authentication traffic. index=network sourcetype=\"stream:tcp\" (dest_port=445 OR dest_port=80 OR dest_port=443) | eval Protocol=case(dest_port==445, \"SMB\", dest_port==80, \"HTTP\", dest_port==443, \"HTTPS\", true(), \"Unknown\")| search (command IN (\"NTLMSSP_NEGOTIATE\", \"NTLMSSP_AUTH\")) | eval SuspiciousAuth=case( match(_raw, \"NTLMSSP_NEGOTIATE\"), \"NTLM Negotiate\", match(_raw, \"NTLMSSP_AUTH\"), \"NTLM Authentication\", true(), \"Unknown\") Enterprise T1589 Gather Victim Identity Information Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields. .002 Email Addresses Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields. Enterprise T1615 Group Policy Discovery Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). ICS T0891 Hardcoded Credentials Monitor network traffic for hardcoded credential use in protocols that allow unencrypted authentication. Enterprise T1665 Hide Infrastructure Network detection systems may be able to identify traffic for specific adversary command and control infrastructure. Correlate network traffic with data and patterns from Internet-facing resources gathered from scans to gain further insight into potential adversary C2 networks. Enterprise T1070 Indicator Removal Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .005 Network Share Connection Removal Monitoring for SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Enterprise T1105 Ingress Tool Transfer Monitor network traffic content for files and other potentially malicious content, especially data coming in from abnormal/unknown domain and IPs. Enterprise T1534 Internal Spearphishing Monitor for communication traffic containing suspicious payloads or URLs, especially those associated with internal email or chat systems. Analyze for outbound or inbound traffic related to known or newly registered domains that could be used for credential phishing or payload delivery. sourcetype=\"network:packet_capture\" OR sourcetype=\"ids:alert\"| search (http_request_uri=\"*.php?login\" OR dns IN (\"suspiciousdomain.com\", \"newly-registered-domain.com\")) OR (http_method=\"POST\" AND url_length > threshold)| stats count by src_ip, dest_ip, dest_port, protocol, http_request_uri, _time| eval anomaly_detected=if(count > threshold OR match(http_request_uri, \"login|credentials|reset\"), \"suspicious\", \"normal\")| where anomaly_detected=\"suspicious\"| table _time, src_ip, dest_ip, http_request_uri, protocol, anomaly_detected ICS T0883 Internet Accessible Device Monitor for unusual logins to Internet connected devices or unexpected protocols to/from the Internet. Network traffic content will provide valuable context and details about the content of network flows. Enterprise T1570 Lateral Tool Transfer Monitor for unusual processes with internal network connections creating files on-system may be suspicious Note: Analytic Event Type is for Zeek but can also be implemented in other Network Analysis Frameworks by parsing & decoding captured SMB2 network traffic. From a network traffic capture standpoint, it\u2019s important to capture the right traffic for this type of detection to function (e.g., all endpoint to endpoint if possible or workstation to server and workstation to workstation). As such, it is helpful to have a centralized server area where it is possible to monitor communications between servers and endpoints. ICS T0867 Lateral Tool Transfer Monitor for unusual processes with internal network connections creating files on-system which may be suspicious. ICS T0838 Modify Alarm Settings Monitor for alarm setting changes observable in automation or management network protocols. ICS T0836 Modify Parameter Monitor ICS management protocols for parameter changes, including for unexpected values, changes far exceeding standard values, or for parameters being changed in an unexpected way (e.g., via a new function, at an unusual time). ICS T0889 Modify Program Monitor device management protocols for functions that modify programs such as online edit and program append events. ICS T0839 Module Firmware Monitor ICS management protocols / file transfer protocols for protocol functions related to firmware changes. ICS T0801 Monitor Process State Monitor ICS automation network protocols for functions related to reading an operational process state (e.g., \"Read\" function codes in protocols like DNP3 or Modbus). In some cases, there may be multiple ways to monitor an operational process\u2019 state, one of which is typically used in the operational environment. Monitor for the operating mode being checked in unexpected ways. Enterprise T1599 Network Boundary Bridging Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Network Address Translation Traversal Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1095 Non-Application Layer Protocol Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). While VMCI traffic is invisible to most traditional network sniffing tools, there are ways to potentially monitor this traffic.[8] Enterprise T1571 Non-Standard Port Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Enterprise T1003 OS Credential Dumping Monitor for network protocols [9] [10] and other replication requests [11] from IPs not associated with known domain controllers. [12] Analytic 1 - Anomalous network traffic content related to credential managers index=network sourcetype=\"stream:tcp\" dest_port=389 NOT [| inputlookup known_dc_ip_addresses | fields ip]| eval SourceIP = src_ip, DestinationIP = dest_ip, Protocol = proto| search (content=\"LDAPSearchRequest\") OR (content=\"LDAPModifyRequest\") OR (content=\"bindRequest\") OR (content=\"searchResEntry\") OR (content=\"NTDS.dit\") .006 DCSync Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1566 Phishing Monitor for clicking on malicious links leading to credential phishing, traffic to newly registered or suspicious domains, malicious redirect chains embedded in emails, or downloading of executables from phishing sites. Analytic 1 - Detecting Phishing Link Clicks in Emails (EventCode=3)OR (source=\"zeek_http_logs\" uri IN (malicious_url_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case( domain IN (\"bit.ly\", \"tinyurl.com\"), 8, domain IN (\".xyz\", \".top\"), 7, uri IN (malicious_url_list), 9)| where risk_score >= 7| stats count by _time, host, user, uri, domain, risk_score .001 Spearphishing Attachment Monitor for clicks on phishing links leading to credential harvesting, traffic to newly registered or suspicious domains, hidden redirect chains embedded in phishing emails, or downloads of secondary payloads from phishing domains. Analytic 1 - Detecting Phishing URL Clicks (EventCode=3)OR (source=\"zeek_http_logs\" uri IN (malicious_url_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case( domain IN (\"bit.ly\", \"tinyurl.com\"), 8, domain IN (\".xyz\", \".top\"), 7, uri IN (malicious_url_list), 9)| where risk_score >= 7| stats count by _time, host, user, uri, domain, risk_score .002 Spearphishing Link Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Furthermore, monitor network traffic for cloned sites as well as homographs via the use of internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites). Analytic 1 - Detecting Clicks on Malicious Links in Phishing Emails (EventCode=3)OR (source=\"zeek_http_logs\" uri IN (malicious_url_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case( domain IN (\"bit.ly\", \"tinyurl.com\"), 8, domain IN (\".xyz\", \".top\"), 7, uri IN (malicious_url_list), 9)| where risk_score >= 7| stats count by _time, host, user, uri, domain, risk_score .003 Spearphishing via Service Monitor for outbound connections to personal email, social media, or file-sharing platforms, shortened URLs or redirect chains in chat messages, links leading to newly registered or uncommon domains, or encrypted traffic indicating potential TLS phishing interactions. Analytic 1 - Detecting Spearphishing Links from Third-Party Services (EventCode=3)OR (source=\"zeek_http_logs\" uri IN (malicious_url_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case( domain IN (\"bit.ly\", \"tinyurl.com\"), 8, domain IN (\".xyz\", \".top\"), 7, uri IN (malicious_url_list), 9)| where risk_score >= 7| stats count by _time, host, user, uri, domain, risk_score Mobile T1660 Phishing Mobile security products may provide URL inspection services that could determine if a domain being visited is malicious. Enterprise T1598 Phishing for Information Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Spearphishing Service Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 Spearphishing Attachment Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .003 Spearphishing Link Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Furthermore, monitor network traffic for homographs via the use of internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites). Also monitor and analyze traffic patterns and packet inspection for indicators of cloned websites. For example, if adversaries use HTTrack to clone websites, Mirrored from (victim URL) may be visible in the HTML section of packets. ICS T0861 Point & Tag Identification Monitor ICS automation protocols for anomalies related to reading point or tag data, such as new assets using these functions, changes in volume or timing, or unusual information being queried. Many protocols provide multiple ways to achieve the same result (e.g., functions with/without an acknowledgment or functions that operate on a single point vs. multiple points). Monitor for changes in the functions used. ICS T0843 Program Download Monitor for protocol functions related to program download or modification. Program downloads may be observable in ICS automation protocols and remote management protocols. ICS T0845 Program Upload Program uploads may be observable in ICS management protocols or file transfer protocols. Note when protocol functions related to program uploads occur. In cases where the ICS protocols is not well understood, one option is to examine network traffic for the program files themselves using signature-based tools. Enterprise T1572 Protocol Tunneling Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1090 Proxy Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Internal Proxy Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 External Proxy Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .003 Multi-hop Proxy Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .004 Domain Fronting Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1219 Remote Access Tools Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 Remote Desktop Software Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1563 Remote Service Session Hijacking Monitor network traffic for signs of hijacked sessions, such as unusual traffic patterns or unexpected session resumptions. Identify suspicious remote connections that align with ongoing user sessions. sourcetype=flow| search (dest_port=22 OR dest_port=3389 OR dest_port=23) AND (connection_state=\"ESTABLISHED\")| eval session_hijack=if(session_duration > threshold_duration AND connection_origin=\"suspicious_ip\", \"possible_hijack\", \"normal\")| where session_hijack=\"possible_hijack\"| stats count by src_ip, dest_ip, dest_port, connection_state, _time| table _time, src_ip, dest_ip, dest_port, session_hijack .001 SSH Hijacking Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 RDP Hijacking Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols including RDP. ICS T0846 Remote System Discovery Monitor for anomalies related to discovery related ICS functions, including devices that have not previously used these functions or for functions being sent to many outstations. Note that some ICS protocols use broadcast or multicast functionality, which may produce false positives. Also monitor for hosts enumerating network connected resources using non-ICS enterprise protocols. ICS T0888 Remote System Information Discovery Monitor for anomalies related to discovery related ICS functions, including devices that have not previously used these functions or for functions being sent to many outstations. Note that some ICS protocols use broadcast or multicast functionality, which may produce false positives. Also monitor for hosts enumerating network connected resources using non-ICS enterprise protocols. Enterprise T1496 Resource Hijacking Monitor network traffic content for resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. Note: Destination Host Name is not a comprehensive list of potential cryptocurrency URLs. This analytic has a hardcoded domain name which may change. .001 Compute Hijacking Monitor network traffic content for resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. .002 Bandwidth Hijacking Monitor network traffic content for strange or unusual patterns. Enterprise T1207 Rogue Domain Controller Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. [13][14] DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords). ICS T0848 Rogue Master Monitor for unexpected ICS protocol functions from new and existing devices. Monitoring known devices requires ICS function level insight to determine if an unauthorized device is issuing commands (e.g., a historian). Enterprise T1505 Server Software Component Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). [15] .003 Web Shell Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). ICS T0865 Spearphishing Attachment Monitor network traffic for suspicious email attachments. Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g., monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Use web proxies to review content of emails including sender information, headers, and attachments for potentially malicious content. ICS T0856 Spoof Reporting Message Spoofed reporting messages may be detected by reviewing the content of automation protocols, either through detecting based on expected values or comparing to other out of band process data sources. Spoofed messages may not precisely match legitimate messages which may lead to malformed traffic, although traffic may be malformed for many benign reasons. Monitor reporting messages for changes in how they are constructed. Various techniques enable spoofing a reporting message. Consider monitoring for Rogue Master and Adversary-in-the-Middle activity. ICS T0869 Standard Application Layer Protocol Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g., extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g., monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). ICS T0857 System Firmware Monitor ICS management protocols / file transfer protocols for protocol functions related to firmware changes. Enterprise T1033 System Owner/User Discovery Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols. Enterprise T1221 Template Injection Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1205 Traffic Signaling Monitor and analyze network packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider packet inspection for Wake-on-LAN magic packet consists of 6 bytes of FF followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.[16] Enterprise T1537 Transfer Data to Cloud Account Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous internal traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration. Enterprise T1199 Trusted Relationship Monitor network traffic associated with third-party provider access, focusing on unusual data transfers, remote session activity, and access to sensitive resources. Identify unexpected communication patterns, data exfiltration attempts, or traffic to/from suspicious IP addresses. Analytic 1 - Detecting unusual network activity from trusted 3rd parties (EventCode=3)OR (source=\"/var/log/zeek/conn.log\" \"SSH\")OR (source=\"aws_vpc_logs\" dest_port IN (3389, 22, 443))| eval risk_score=case( like(src_ip, \"%thirdparty%\"), 8, lateral_movement_detected=true, 7, new_connection_from_cloud=true, 9)| where risk_score >= 7| stats count by _time, host, src_ip, dest_ip, protocol, risk_score ICS T0855 Unauthorized Command Message Monitor for unexpected ICS protocol command functions to controllers from existing master devices (including from new processes) or from new devices. The latter is like detection for Rogue Master but requires ICS function level insight to determine if an unauthorized device is issuing commands (e.g., a historian). Monitoring for unexpected or problematic values below the function level will provide better insights into potentially malicious activity but at the cost of additional false positives depending on the underlying operational process. Enterprise T1204 User Execution Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe). .001 Malicious Link Inspect the content of the network traffic to look for signs of suspicious web traffic, such as phishing links or abnormal HTTP GET/POST requests. Analytic 1 - Suspicious network traffic content sourcetype=network_traffic_content| search http_method=\"GET\" OR http_method=\"POST\"| stats count by url domain http_method| where domain NOT IN (\"\") .004 Malicious Copy and Paste Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to malicious actors). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments. ICS T0863 User Execution Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious destinations (e.g., destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g., monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, SCF, HTA, MSI, DLLs, or msiexec.exe). Enterprise T1102 Web Service Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Dead Drop Resolver Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 Bidirectional Communication Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .003 One-Way Communication Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Network Traffic: Network Traffic Flow Summarized network packet data that captures session-level details such as source/destination IPs, ports, protocol types, timestamps, and data volume, without storing full packet payloads. This is commonly used for traffic analysis, anomaly detection, and network performance monitoring. Data Collection Measures: Network Flow Logs (Metadata Collection) NetFlow Summarized metadata for network conversations (no packet payloads). sFlow (Sampled Flow Logging) Captures sampled packets from switches and routers. Used for real-time traffic monitoring and anomaly detection. Zeek (Bro) Flow Logs Zeek logs session-level details in logs like conn.log, http.log, dns.log, etc. Host-Based Collection Sysmon Event ID 3 \u2013 Network Connection Initiated Logs process-level network activity, useful for detecting malicious outbound connections. AuditD (Linux) \u2013 syscall=connect Monitors system calls for network connections. auditctl -a always,exit -F arch=b64 -S connect -k network_activity Cloud & SaaS Flow Monitoring AWS VPC Flow Logs Captures metadata for traffic between EC2 instances, security groups, and internet gateways. Azure NSG Flow Logs / Google VPC Flow Logs Logs ingress/egress traffic for cloud-based resources. Network Traffic: Network Traffic Flow Summarized network packet data that captures session-level details such as source/destination IPs, ports, protocol types, timestamps, and data volume, without storing full packet payloads. This is commonly used for traffic analysis, anomaly detection, and network performance monitoring. Data Collection Measures: Network Flow Logs (Metadata Collection) NetFlow Summarized metadata for network conversations (no packet payloads). sFlow (Sampled Flow Logging) Captures sampled packets from switches and routers. Used for real-time traffic monitoring and anomaly detection. Zeek (Bro) Flow Logs Zeek logs session-level details in logs like conn.log, http.log, dns.log, etc. Host-Based Collection Sysmon Event ID 3 \u2013 Network Connection Initiated Logs process-level network activity, useful for detecting malicious outbound connections. AuditD (Linux) \u2013 syscall=connect Monitors system calls for network connections. auditctl -a always,exit -F arch=b64 -S connect -k network_activity Cloud & SaaS Flow Monitoring AWS VPC Flow Logs Captures metadata for traffic between EC2 instances, security groups, and internet gateways. Azure NSG Flow Logs / Google VPC Flow Logs Logs ingress/egress traffic for cloud-based resources. Domain ID Name Detects Enterprise T1595 Active Scanning Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Scanning IP Blocks Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 Vulnerability Scanning Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1557 Adversary-in-the-Middle Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. .001 LLMNR/NBT-NS Poisoning and SMB Relay Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. .002 ARP Cache Poisoning Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. .003 DHCP Spoofing Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow. .004 Evil Twin Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing), as well as usage of network management protocols such as enabling DHCP snooping, may be helpful in identifying rogue hardware.[17] Additionally, wireless pentesting hardware is often limited to older 802.11 protocols such as 802.11g or 802.11a.[18] ICS T0830 Adversary-in-the-Middle Monitor for network traffic originating from unknown/unexpected hosts. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. For added context on adversary procedures and background see Adversary-in-the-Middle and applicable sub-techniques. ICS T0878 Alarm Suppression Monitor for loss of network traffic which could indicate alarms are being suppressed. A loss of expected communications associated with network protocols used to communicate alarm events or process data could indicate this technique is being used. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. Enterprise T1071 Application Layer Protocol Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .001 Web Protocols Monitor for web traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .002 File Transfer Protocols Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .003 Mail Protocols Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .004 DNS Monitor for DNS traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). .005 Publish/Subscribe Protocols Monitor for traffic leveraging common publish/subscribe protocols to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1020 Automated Exfiltration Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpected hardware devices, or other uncommon data flows. .001 Traffic Duplication Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows. Analytic 1 - Detecting Traffic Duplication and Unexpected Mirroring Behavior (source=\"zeek_conn.log\" OR source=\"firewall_logs\" OR source=\"cloud_network_logs\")| where (flow_type=\"asymmetric\" OR flow_type=\"mirrored\")| where (dest_port IN (4789, 4790, 8000, 5000) OR bytes_out > 10000000)| eval risk_score=case( flow_type=\"asymmetric\" AND dest_port IN (4789, 4790), 9, flow_type=\"mirrored\" AND bytes_out > 10000000, 8)| where risk_score >= 8| stats count by _time, host, source_ip, dest_ip, bytes_out, risk_score ICS T0803 Block Command Message Monitor for a loss of network communications, which may indicate this technique is being used. ICS T0804 Block Reporting Message Monitor for a loss of network communications, which may indicate this technique is being used. ICS T0805 Block Serial COM Monitor for a loss of network communications, which may indicate this technique is being used. Enterprise T1612 Build Image on Host Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code. ICS T0885 Commonly Used Port Analyze network data for uncommon data flows (e.g., new protocols in use between hosts, unexpected ports in use). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. ICS T0884 Connection Proxy Monitor for known proxy protocols (e.g., SOCKS, Tor, peer-to-peer protocols) and tool usage (e.g., Squid, peer-to-peer software) on the network that are not part of normal operations. Also monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1543 .003 Create or Modify System Process: Windows Service Monitor for several ways that code can execute on a remote host. One of the most common methods is via the Windows Service Control Manager (SCM), which allows authorized users to remotely create and modify services. Several tools, such as PsExec, use this functionality. When a client remotely communicates with the Service Control Manager, there are two observable behaviors. First, the client connects to the RPC Endpoint Mapper over 135/tcp. This handles authentication, and tells the client what port the endpoint\u2014in this case the SCM\u2014is listening on. Then, the client connects directly to the listening port on services.exe. If the request is to start an existing service with a known command line, the the SCM process will run the corresponding command. This compound behavior can be detected by looking for services.exe receiving a network connection and immediately spawning a child process. Enterprise T1039 Data from Network Shared Drive Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network protocols such as SMB that revolve around network shares. Although there may be more native ways to detect detailed SMB events on the host, they can be extracted out of network traffic. With the right protocol decoders, port 445 traffic can be filtered and even the file path (relative to the share) can be retrieved. Looking at this activity more closely to obtain an adequate sense of situational awareness may make it possible to detect adversaries moving between hosts in a way that deviates from normal activity. Because SMB traffic is heavy in many environments, this analytic may be difficult to turn into something that can be used to quickly detect an APT. In some cases, it may make more sense to run this analytic in a forensic fashion. Looking through and filtering its output after an intrusion has been discovered may be helpful in identifying the scope of compromise. Enterprise T1565 Data Manipulation Monitor for network traffic originating from unknown/unexpected hardware devices. .002 Transmitted Data Manipulation Monitor for network traffic originating from unknown/unexpected hardware devices. Enterprise T1030 Data Transfer Size Limits Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Analytic 1 - Detecting Timed Small-Sized Data Transfers for Exfiltration (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (bytes_out > 100 AND bytes_out < 50000)| bucket span=10m _time| stats count, sum(bytes_out) as total_bytes by _time, host, dest_ip| where count > 5 // Ensures repeated transfers within 10-minute intervals| stats count by host, dest_ip, total_bytes, earliest(_time), latest(_time)| where count >= 5| eval risk_score=case( total_bytes > 500000, 9, total_bytes > 100000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, earliest, latest, risk_score ICS T0814 Denial of Service Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. ICS T0816 Device Restart/Shutdown Monitor for a loss of network communications, which may indicate a device has been shutdown or restarted. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. Enterprise T1568 Dynamic Resolution Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Fast Flux DNS In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection. .002 Domain Generation Algorithms Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more. [19] CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA. [20] Another approach is to use deep learning to classify domains as DGA-generated[21]] Enterprise T1667 Email Bombing Monitor network data for uncommon data flows. Abnormal spikes in incoming traffic volume to specific victim e-mail addresses or servers may indicate an email bombing attempt. Analytic 1 - Suspicious network traffic sourcetype=\"zeek:conn\" dest_port=25 OR dest_port=465 OR dest_port=587| stats count avg(bytes_in) by src_ip, dest_ip, dest_port, _time| eventstats avg(count) as avg_flows, stdev(count) as std_flows by dest_ip| eval anomaly=if(count > avg_flows + (2*std_flows), 1, 0)| search anomaly=1| table _time, src_ip, dest_ip, dest_port, count, avg_flows Enterprise T1499 Endpoint Denial of Service Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 OS Exhaustion Flood Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 Service Exhaustion Flood Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .003 Application Exhaustion Flood Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .004 Application or System Exploitation Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1048 Exfiltration Over Alternative Protocol Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Exfiltration Over Symmetric Encrypted Non-C2 Protocol Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 Exfiltration Over Asymmetric Encrypted Non-C2 Protocol Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .003 Exfiltration Over Unencrypted Non-C2 Protocol Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1041 Exfiltration Over C2 Channel Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1011 Exfiltration Over Other Network Medium Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols. .001 Exfiltration Over Bluetooth Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols. Enterprise T1567 Exfiltration Over Web Service Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Exfiltration to Code Repository Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Monitor for use of code repositories for data exfiltration. .002 Exfiltration to Cloud Storage Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Monitor for cloud storages for data exfiltration. .003 Exfiltration to Text Storage Sites Monitor network data for uncommon data flows, specifically to text storage sites such as Pastebin[.]com, Paste[.]ee, and Pastebin[.]pl. .004 Exfiltration Over Webhook Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1203 Exploitation for Client Execution Look for unusual outbound connections following abnormal process execution, as this could indicate an adversary has established a foothold and is initiating communication with C2 infrastructure. Analytic 1 - monitors for network traffic generated by exploited processes sourcetype=network_flow OR (sourcetype=Sysmon AND EventCode=3)| search process_name IN (\"chrome.exe\", \"firefox.exe\", \"winword.exe\", \"excel.exe\", \"acrord32.exe\", \"flashplayer.exe\")| stats count by src_ip dest_ip dest_port process_name| where dest_ip NOT IN (\"\") Enterprise T1133 External Remote Services Track the flow of traffic to/from external sources to detect anomalies or unusual patterns. Unusual patterns or high-volume traffic flows between internal and external systems.Connections to/from known malicious IPs or geolocations. Analytic 1 - High-Volume data transfers index=network sourcetype=\"network_traffic_flow\"| stats count by src_ip, dest_ip, bytes_sent, bytes_received| where bytes_sent > 1000000 OR bytes_received > 1000000| table _time, src_ip, dest_ip, bytes_sent, bytes_received ICS T0822 External Remote Services Monitor for network traffic originating from unknown/unexpected systems. Enterprise T1008 Fallback Channels Monitor network data for uncommon data flows, such as unexpected surges or other abnormal inbound/outbound patterns. Enterprise T1187 Forced Authentication Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems.If attempts are detected, then investigate endpoint data sources to find the root cause. Analytic 1 - Unusual network traffic patterns indicative of forced authentication attempts. index=network sourcetype=\"stream:tcp\" (dest_port=445 OR dest_port=80 OR dest_port=443)| eval Protocol=case(dest_port==445, \"SMB\", dest_port==80, \"HTTP\", dest_port==443, \"HTTPS\", true(), \"Unknown\")| eval SuspiciousConn=if((Protocol=\"SMB\" AND src_ip!=dest_ip AND (src_ip!=\"known_ip1\" AND dest_ip!=\"known_ip2\")), 1, 0)| where SuspiciousConn=1 Enterprise T1200 Hardware Additions Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. Analytic 1 - Detecting Unauthorized Network Devices (EventCode=10400)OR (source=\"/var/log/syslog\" \"new MAC address detected\")OR (source=\"firewall_logs\" \"DHCP Lease Granted\" mac_address NOT IN (trusted_macs))| eval risk_score=case( like(mac_address, \"%00:0C:29%\"), 8, like(mac_address, \"%Unknown%\"), 9, like(mac_address, \"%RaspberryPi%\"), 7)| where risk_score >= 7| stats count by _time, host, mac_address, ip_address, risk_score Enterprise T1105 Ingress Tool Transfer Monitor network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1534 Internal Spearphishing Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. ICS T0883 Internet Accessible Device Monitor for unexpected protocols to/from the Internet. While network traffic content and logon session metadata may directly identify a login event, new Internet-based network flows may also be a reliable indicator of this technique. Enterprise T1570 Lateral Tool Transfer Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. ICS T0867 Lateral Tool Transfer Monitor for network traffic originating from unknown/unexpected hosts. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. Mobile T1430 .002 Location Tracking: Impersonate SS7 Nodes Network carriers may be able to use firewalls, Intrusion Detection Systems (IDS), or Intrusion Prevention Systems (IPS) to detect and/or block SS7 exploitation.[22] The CSRIC also suggests threat information sharing between telecommunications industry members. Enterprise T1112 Modify Registry Remote access to the registry can be achieved via Windows API function RegConnectRegistry command line via reg.exe graphically via regedit.exe All of these behaviors call into the Windows API, which uses the NamedPipe WINREG over SMB to handle the protocol information. This network can be decoded with Wireshark or a similar sensor, and can also be detected by hooking the API function. Analytic 1 - Remote Registry source=\"Zeek:\" (dest_port=\"445\" AND proto_info.pipe=\"WINREG\") OR (proto_info.function=\"Create\" OR proto_info.function=\"SetValue\") Enterprise T1104 Multi-Stage Channels Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1599 Network Boundary Bridging Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Network Address Translation Traversal Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1498 Network Denial of Service Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Direct Network Flood Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 Reflection Amplification Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1046 Network Service Discovery Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. It should be noted that when a host/ port/ service scan is performed from a compromised machine, a single machine makes multiple calls to other hosts in the network to identify live hosts and services. After compromising an initial machine, adversaries commonly attempt to laterally move across the network. The first step to attempt the Lateral Movement often involves conducting host identification, port and service scans on the internal network via the compromised machine using tools such as Nmap, Cobalt Strike, etc. Note: It should be noted that when a host/ port/ service scan is performed from a compromised machine, a single machine makes multiple calls to other hosts in the network to identify live hosts and services. This can be detected using the following query Analytic 1 - Identifying Port Scanning Activity sourcetype='firewall_logs' dest_ip='internal_subnet' | stats dc(dest_port) as pcount by src_ip | where pcount >5 Enterprise T1095 Non-Application Layer Protocol Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. While VMCI traffic is invisible to most traditional network sniffing tools, there are ways to potentially monitor this traffic.[8] Enterprise T1571 Non-Standard Port Monitor network data flows for unexpected patterns and metadata that may be indicative of a mismatch between protocol and utilized port. Mobile T1509 Non-Standard Port Many properly configured firewalls may also naturally block command and control traffic over non-standard ports. Enterprise T1003 OS Credential Dumping Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analytic 1 - Unusual network communication patterns. index=network sourcetype=\"stream:tcp\" dest_port=389 NOT [| inputlookup known_dc_ip_addresses | fields ip] .006 DCSync Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1566 Phishing Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analytic 1 - Detecting Malicious Network Traffic Post-Phishing Execution (EventCode=3)OR (source=\"zeek_conn.log\" dest_ip IN (malicious_ip_list))OR (source=\"proxy_logs\" url IN (malicious_url_list))| eval risk_score=case( dest_ip IN (malicious_ip_list), 9, dest_port IN (4444, 1337, 8080), 8, user_agent LIKE \"%curl%\", 7)| where risk_score >= 7| stats count by _time, host, user, dest_ip, dest_port, risk_score .001 Spearphishing Attachment Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 Spearphishing Link Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .003 Spearphishing via Service Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Mobile T1660 Phishing Enterprises may be able to detect anomalous traffic originating from mobile devices, which could indicate compromise. Enterprise T1598 Phishing for Information Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Spearphishing Service Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 Spearphishing Attachment Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .003 Spearphishing Link Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. ICS T0845 Program Upload Monitor device communication patterns to identify irregular bulk transfers of data between the embedded ICS asset and other nodes within the network. Note these indicators are dependent on the profile of normal operations and the capabilities of the industrial automation protocols involved (e.g., partial program uploads). Enterprise T1572 Protocol Tunneling Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1090 Proxy Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Internal Proxy Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 External Proxy Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .003 Multi-hop Proxy Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Mobile T1604 Proxy Through Victim Enterprises may be able to detect anomalous traffic originating from mobile devices, which could indicate compromise. Enterprise T1219 Remote Access Tools Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1563 Remote Service Session Hijacking Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 SSH Hijacking Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 RDP Hijacking Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. RDP sessions may be split up into multiple flows and would therefore need to be aggregated. Anomaly detection using machine learning or other methods based on baselined RDP network flows may be a viable approach to alerting on potential RDP session hijacking. Enterprise T1021 Remote Services Monitor network data for uncommon data flows that may be related to abuse of Valid Accounts to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. Note: Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on network service protocols such as SSH and RDP. Analytic 1 - Suspicious Protocols sourcetype=\"netflow\" | search dest_port=22 OR dest_port=3389 OR dest_port=5900 OR dest_port=3283 // SSH, RDP, VNC, ARD .001 Remote Desktop Protocol Monitor network traffic for uncommon data flows that may use Valid Accounts to log into a computer using the Remote Desktop Protocol (RDP). The Remote Desktop Protocol (RDP), built in to Microsoft operating systems, allows a user to remotely log in to the desktop of another host. It allows for interactive access of the running windows, and forwards key presses, mouse clicks, etc. Network administrators, power users, and end-users may use RDP for day-to-day operations. From an adversary\u2019s perspective, RDP provides a means to laterally move to a new host. Determining which RDP connections correspond to adversary activity can be a difficult problem in highly dynamic environments, but will be useful in identifying the scope of a compromise.Remote Desktop can be detected in several ways Network connections to port 3389/tcp (assuming use of the default port) Packet capture analysis Detecting network connections from mstsc.exe Execution of the process rdpclip.exe Runs as the clipboard manager on the RDP target if clipboard sharing is enabled Analytic 1 - Suspicious RDP sourcetype=netflow LogonType=\"10\"| search dest_port=3389 // Default RDP port| stats count by src_ip, dest_ip, dest_port| where src_ip!=\"trusted_ips\" AND dest_ip!=\"internal_servers\" .002 SMB/Windows Admin Shares Monitor network data for uncommon SMB data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on SMB network flows. Notes: The logic for Implementation 1 is based around detecting on SMB write requests, which are often used by adversaries to move laterally to another host. Unlike SMB Reads, SMB Write requests typically require an additional level of access, resulting in less activity. Focusing on SMB Write activity narrows the field to looking at techniques associated with actively changing remote hosts, instead of passively reading files. The logic for Implementation 2 is based around detection of new processes that were created from a file written to an SMB share. First, a file is remotely written to a host via an SMB share; then, a variety of Execution techniques can be used to remotely establish execution of the file or script. To detect this behavior, look for files that are written to a host over SMB and then later run directly as a process or in the command line arguments. SMB File Writes and Remote Execution may happen normally in an environment, but the combination of the two behaviors is less frequent and more likely to indicate adversarial activity. Analytic 1 - SMB Write sourcetype=\"Zeek:SMB_Files\" port=\"445\" AND protocol=\"smb.write\" .006 Windows Remote Management Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows. When a Windows Remote Management connection is opened, the client sends HTTP requests to port 5985 for HTTP or 5986 for HTTPS on the target host. Each HTTP(S) request to the URI \"/wsman\" is called, and other information is set in the headers. Depending on the operation, the HTTP method may vary (i.e., GET, POST, etc.). This analytic would detect Remote PowerShell, as well as other communications that rely on WinRM. Additionally, it outputs the executable on the client host, the connection information, and the hostname of the target host. Look for network connections to port 5985 and 5986. To really decipher what is going on, these outputs should be fed into something that can do packet analysis. Note: Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152. ICS T0886 Remote Services Monitor network data for uncommon data flows (e.g., time of day, unusual source/destination address) that may be related to abuse of Valid Accounts to log into a service specifically designed to accept remote connections, such as RDP, Telnet, SSH, and VNC. ICS T0846 Remote System Discovery Monitor for new ICS protocol connections to existing assets or for device scanning (i.e., a host connecting to many devices) over ICS and enterprise protocols (e.g., ICMP, DCOM, WinRM). For added context on adversary enterprise procedures and background see Remote System Discovery Mitigation. ICS T0888 Remote System Information Discovery Monitor for new ICS protocol connections to existing assets or for device scanning (i.e., a host connecting to many devices) over ICS and enterprise protocols (e.g., ICMP, DCOM, WinRM). Enterprise T1496 Resource Hijacking Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Compute Hijacking Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 Bandwidth Hijacking Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. ICS T0848 Rogue Master Monitor for network traffic originating from unknown/unexpected devices or addresses. Local network traffic metadata could be used to identify unexpected connections, including unknown/unexpected source MAC addresses connecting to ports associated with operational protocols. Also, network management protocols such as DHCP and ARP may be helpful in identifying unexpected devices. Enterprise T1053 .002 Scheduled Task/Job: At Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. When AT.exe is used to remotely schedule tasks, Windows uses named pipes over SMB to communicate with the API on the remote machine. After authentication over SMB, the Named Pipe ATSVC is opened, over which the JobAdd function is called. On the remote host, the job files are created by the Task Scheduler and follow the convention C:\\Windows\\System32\\AT. This pipe activity could be discovered with a network decoder, such as that in wireshark, that can inspect SMB traffic to identify the use of pipes. It could also be detected by looking for raw packet capture streams or from a custom sensor on the host that hooks the appropriate API functions. If no network or API level of visibility is possible, this traffic may inferred by looking at SMB connections over 445/tcp followed by the creation of files matching the pattern C:\\Windows\\System32\\AT\\<job_id>. To detect AT via network traffic, a sensor is needed that has the ability to extract and decode PCAP information. Specifically, it needs to properly decode SMB and the functions that are implemented over it via NamedPipes. If a sensor meets these criteria, then the PCAP data needs to search for instances of the command JobAdd over the pipe ATSVC, which is all implemented over Windows SMB 445/tcp. Analytic 1 - Remotely Scheduled Tasks via AT index=network dest_port=445 protocol=\"smb\" pipe=\"ATSVC\" command=\"JobAdd\" .005 Scheduled Task/Job: Scheduled Task Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Look for RPC traffic after being mapped, which implies a destination port of at least 49152. If network inspection is available via packet captures or a NIDS, then traffic through the ITaskSchedulerService interface can be detected. Microsoft has a list of the possible methods that are implemented for the ITaskSchedulerService interface, which may be useful in differentiating read and query operations from creations and modifications. When scheduled tasks are created remotely, Windows uses RPC (135/tcp) to communicate with the Task Scheduler on the remote machine. Once an RPC connection is established, the client communicates with the Scheduled Tasks endpoint, which runs within the service group netsvcs. With packet capture and the right packet decoders or byte-stream based signatures, remote invocations of these functions can be identified.Certain strings can be identifiers of the schtasks, by looking up the interface UUID of ITaskSchedulerService in different formats UUID 86d35949-83c9-4044-b424-db363231fd0c (decoded) Hex 49 59 d3 86 c9 83 44 40 b4 24 db 36 32 31 fd 0c (raw) ASCII IYD@$621 (printable bytes only) This identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement an analytic. Analytic 1 - Look for RPC traffic with ITaskSchedulerService interface usage. sourcetype=Netflow OR sourcetype=PacketCapture OR sourcetype=WinEventLog:Security EventCode=5156 | search (dest_port=135 OR dest_port=5985 OR dest_port=5986) AND (protocol=\"tcp\" OR protocol=\"udp\") AND (Image=\"taskeng.exe\" OR Image=\"schtasks.exe\")| stats count by src_ip dest_ip dest_port| where count > threshold Enterprise T1029 Scheduled Transfer Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. Analytic 1 - Detecting High Volume Exfiltration at Specific Intervals (EventCode=3 OR source=\"zeek_conn.log\" OR source=\"firewall_logs\")| where (bytes_out > 10000000)| bucket span=1h _time| stats sum(bytes_out) as total_bytes by _time, host, dest_ip| where total_bytes > 100000000| stats count by host, dest_ip, total_bytes, earliest(_time), latest(_time)| where count >= 3| eval risk_score=case( total_bytes > 500000000, 9, total_bytes > 100000000, 8)| where risk_score >= 8| table host, dest_ip, total_bytes, earliest, latest, risk_score Enterprise T1505 Server Software Component Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .003 Web Shell Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1176 Software Extensions Monitor for network traffic directed towards software services from servers or network zones that should not be communicating with this service. .002 IDE Extensions Monitor for network traffic directed towards IDE services, such as global.rel.tunnels.api.visualstudio.com, from servers or network zones that should not be communicating with this service.[3] Analytic 1 - suspicious network connections sourcetype=zeek:conn_log OR sourcetype=zeek:http_log OR sourcetype=suricata_flow(host=\".tunnels.api.visualstudio.com\" OR host=\".jetbrains.com\")| lookup endpoint_asset_zones ip AS src_ip OUTPUT zone| where zone=\"prod\" OR zone=\"non-dev\"| stats count by src_ip, dest_ip, host, uri_path, http_method, zone, _time| sort -_time ICS T0856 Spoof Reporting Message Various techniques enable spoofing a reporting message. Consider monitoring for Rogue Master and Adversary-in-the-Middle activity which may precede this technique. ICS T0869 Standard Application Layer Protocol Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g., extraneous packets that do not belong to established flows , or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g., monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Enterprise T1033 System Owner/User Discovery Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1569 .002 System Services: Service Execution Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1205 Traffic Signaling Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows. .001 Port Knocking Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows. ICS T0864 Transient Cyber Asset Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) may be helpful in identifying transient assets. ICS T0855 Unauthorized Command Message Monitor for new or unexpected connections to controllers, which could indicate an Unauthorized Command Message being sent via Rogue Master. Enterprise T1102 Web Service Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .001 Dead Drop Resolver Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .002 Bidirectional Communication Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. .003 One-Way Communication Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Enterprise T1669 Wi-Fi Networks Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. ICS T0860 Wireless Compromise New or irregular network traffic flows may indicate potentially unwanted devices or sessions on wireless networks. In Wi-Fi networks monitor for changes such as rogue access points or low signal strength, indicating a device is further away from the access point then expected and changes in the physical layer signal.[23] [24] Network traffic content will provide important context, such as hardware (e.g., MAC) addresses, user accounts, and types of messages sent. ICS T0887 Wireless Sniffing Purely passive network sniffing cannot be detected effectively. In cases where the adversary interacts with the wireless network (e.g., joining a Wi-Fi network) detection may be possible. Monitor for new or irregular network traffic flows which may indicate potentially unwanted devices or sessions on wireless networks. In Wi-Fi networks monitor for changes such as rogue access points or low signal strength, indicating a device is further away from the access point then expected and changes in the physical layer signal.[23] [24] Network traffic content will provide important context, such as hardware (e.g., MAC) addresses, user accounts, and types of messages sent. References Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Secure Boot. Retrieved October 19, 2020. Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Cisco IOS Image File Verification. Retrieved October 19, 2020. Mnemonic. (n.d.). Advisory: Misuse of Visual Studio Code for traffic tunnelling. Retrieved March 30, 2025. AWS. (n.d.). GuardDuty EC2 finding types. Retrieved September 25, 2024. Jamie Harries. (2022, May 25). Hunting a Global Telecommunications Threat: DecisiveArchitect and Its Custom Implant JustForFun. Retrieved October 18, 2022. Gardiner, J., Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016. Rahman, Alyssa. (2021, December 13). Now You Serial, Now You Don\u2019t \u2014 Systematically Hunting for Deserialization Exploits. Retrieved November 28, 2023. Alex Marvi, Greg Blaum, and Ron Craft. (2023, June 28). Detection, Containment, and Hardening Opportunities for Privileged Guest Operations, Anomalous Behavior, and VMCI Backdoors on Compromised VMware Hosts. Retrieved March 26, 2025. Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017. Microsoft. (2017, December 1). MS-NRPC - Netlogon Remote Protocol. Retrieved December 6, 2017. Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017. Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017. Spencer S. (2018, February 22). DCSYNCMonitor. Retrieved March 30, 2018. Delpy, B. & LE TOUX, V. (n.d.). DCShadow. Retrieved March 20, 2018. US-CERT. (2015, November 13). Compromised Web Servers and Web Shells - Threat Awareness and Guidance. Retrieved June 8, 2016. Perry, David. (2020, August 11). WakeOnLAN (WOL). Retrieved February 17, 2021. Cisco. (n.d.). Configuring DHCP Snooping. Retrieved September 17, 2024. Ryan, Gabriel. (2019, October 28). Modern Wireless Tradecraft Pt I \u2014 Basic Rogue AP Theory \u2014 Evil Twin and Karma Attacks. Retrieved September 17, 2024. Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019. Chen, L., Wang, T.. (2017, May 5). Detecting Algorithmically Generated Domains Using Data Visualization and N-Grams Methods . Retrieved April 26, 2019. Ahuja, A., Anderson, H., Grant, D., Woodbridge, J.. (2016, November 2). Predicting Domain Generation Algorithms with Long Short-Term Memory Networks. Retrieved April 26, 2019. Communications Security, Reliability, Interoperability Council (CSRIC). (2017, March). Working Group 10 Legacy Systems Risk Reductions Final Report. Retrieved May 24, 2017. Koopmann, Lennart. (n.d.). Nzyme Alerts Introduction. Retrieved November 17, 2024. Tomko, A.; Rieser, C; Buell, H.; Zeret, D.; Turner, W.. (2007, March). Wireless Intrusion Detection. Retrieved September 26, 2022. "
},
{
"id": 1137,
"title": "File, Data Source DS0022",
"path": "/datasources/DS0022/index.html",
"content": " File A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media).[1] ID: DS0022 \u24d8 Platforms: ESXi, Linux, Network Devices, Windows, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.1 Created: 20 October 2021 Last Modified: 18 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) File: File Access To events where a file is opened or accessed, making its contents available to the requester. This includes reading, executing, or interacting with files by authorized or unauthorized entities. Examples include logging file access events (e.g., Windows Event ID 4663), monitoring file reads, and detecting unusual file access patterns. Examples: File Read Operations: A user opens a sensitive document (e.g., financial_report.xlsx) on a shared drive. File Execution: A script or executable file is accessed and executed (e.g., malware.exe is run from a temporary directory). Unauthorized File Access: An unauthorized user attempts to access a protected configuration file (e.g., /etc/passwd on Linux or System32 files on Windows). File Access Patterns: Bulk access to multiple files in a short time (e.g., mass access to documents on a file server). File Access via Network: Files on a network share are accessed remotely (e.g., logs of SMB file access). This data component can be collected through the following measures: Windows Windows Event Logs: Event ID 4663: Captures file system auditing details, including who accessed the file, access type, and file name. Sysmon: Event ID 11: Logs file creation time changes. Event ID 1 (process creation): Can provide insight into files executed. PowerShell: Commands to monitor file access in real-time: Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4663} Linux Auditd: Monitor file access events using audit rules: auditctl -w /path/to/file -p rwxa -k file_access View logs: ausearch -k file_access Inotify: Use inotify to track file access on Linux: inotifywait -m /path/to/watch -e access macOS Unified Logs: Monitor file access using the macOS Unified Logging System. FSEvents: File System Events can track file accesses: fs_usage | grep open Network Devices SMB/CIFS Logs: Monitor file access over network shares using logs from SMB or CIFS protocol. NAS Logs: Collect logs from network-attached storage systems for file access events. SIEM Integration Collect file access logs from all platforms (Windows, Linux, macOS) and centralize in a SIEM for correlation and analysis. File: File Access To events where a file is opened or accessed, making its contents available to the requester. This includes reading, executing, or interacting with files by authorized or unauthorized entities. Examples include logging file access events (e.g., Windows Event ID 4663), monitoring file reads, and detecting unusual file access patterns. Examples: File Read Operations: A user opens a sensitive document (e.g., financial_report.xlsx) on a shared drive. File Execution: A script or executable file is accessed and executed (e.g., malware.exe is run from a temporary directory). Unauthorized File Access: An unauthorized user attempts to access a protected configuration file (e.g., /etc/passwd on Linux or System32 files on Windows). File Access Patterns: Bulk access to multiple files in a short time (e.g., mass access to documents on a file server). File Access via Network: Files on a network share are accessed remotely (e.g., logs of SMB file access). This data component can be collected through the following measures: Windows Windows Event Logs: Event ID 4663: Captures file system auditing details, including who accessed the file, access type, and file name. Sysmon: Event ID 11: Logs file creation time changes. Event ID 1 (process creation): Can provide insight into files executed. PowerShell: Commands to monitor file access in real-time: Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4663} Linux Auditd: Monitor file access events using audit rules: auditctl -w /path/to/file -p rwxa -k file_access View logs: ausearch -k file_access Inotify: Use inotify to track file access on Linux: inotifywait -m /path/to/watch -e access macOS Unified Logs: Monitor file access using the macOS Unified Logging System. FSEvents: File System Events can track file accesses: fs_usage | grep open Network Devices SMB/CIFS Logs: Monitor file access over network shares using logs from SMB or CIFS protocol. NAS Logs: Collect logs from network-attached storage systems for file access events. SIEM Integration Collect file access logs from all platforms (Windows, Linux, macOS) and centralize in a SIEM for correlation and analysis. Domain ID Name Detects Enterprise T1087 Account Discovery Monitor access to file resources that contain local accounts and groups information such as /etc/passwd, /Users directories, and the SAM database. If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources. .001 Local Account Monitor access to file resources that contain local accounts and groups information such as /etc/passwd, /Users directories, and the Windows SAM database. If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources. Enterprise T1119 Automated Collection Monitor for unexpected files (e.g., .pdf, .docx, .jpg, etc.) viewed for collecting internal data. ICS T0802 Automated Collection Monitor for unexpected files (e.g., .pdf, .docx, .jpg) viewed for collecting internal data. Enterprise T1020 Automated Exfiltration Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection. Analytic 1 - Detecting File Access Before Automated Exfiltration (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/var/tmp/\", \"/home//Downloads/\", \"/media/exfil/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case( file_path IN (\"/media/exfil/\"), 9, file_path IN (\"/var/tmp/*\"), 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score Enterprise T1217 Browser Information Discovery Monitor for unusual access to stored browser data, such as local files and databases (e.g., %APPDATA%/Google/Chrome).[2] Rather than viewing these events in isolation, this activity may highlight a chain of behavior that could lead to other activities, such as Collection and Exfiltration. Enterprise T1555 Credentials from Password Stores Monitor for files being accessed that may search for common password storage locations to obtain user credentials. Analytic 1 - Unauthorized access to files containing credentials. index=security sourcetype IN (\"WinEventLog:Security\", \"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\")((sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"passwords\", \"creds\", \"credentials\", \"secrets\")) OR (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject IN (\"passwords\", \"creds\", \"credentials\", \"secrets\")) OR (sourcetype=\"linux_secure\" action=\"open\" filepath IN (\"/etc/shadow\", \"/etc/passwd\", \"/.aws/credentials\", \"/.ssh/id_rsa\")) OR (sourcetype=\"macos_secure\" event_type=\"open\" file_path IN (\"/Library/Keychains/\", \"/Users//Library/Keychains/\", \"/Users//.ssh/id_rsa\"))) .001 Keychain Monitor for Keychain files being accessed that may be related to malicious credential collection. Analytic 1 - Unauthorized access to Keychain files. index=security sourcetype=\"macos_secure\"(event_type=\"file_open\" AND file_path IN (\"~/Library/Keychains/\", \"/Library/Keychains/\", \"/Network/Library/Keychains/*\")) .003 Credentials from Web Browsers Identify web browser files that contain credentials such as Google Chrome\u2019s Login Data database file: AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Analytic 1 - Unauthorized access to web browser credential files. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") event_type=\"file_open\"((file_path IN (\"\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data\", \"\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\Login Data\", \"\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\\\logins.json\") AND Platform=\"Windows\") OR (file_path IN (\"/home//.mozilla/firefox//logins.json\", \"/home//.config/google-chrome/Default/Login Data\") AND Platform=\"Linux\") OR (file_path IN (\"/Users//Library/Application Support/Google/Chrome/Default/Login Data\", \"/Users//Library/Application Support/Firefox/Profiles//logins.json\") AND Platform=\"macOS\")) .004 Windows Credential Manager Consider monitoring file reads to Vault locations, %Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\, for suspicious activity.[3] Analytic 1 - Unauthorized access to Windows Vault credential files. index=security sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" event_type=\"file_access\"(file_path IN (\"%SystemDrive%\\Users\\\\AppData\\Local\\Microsoft\\Vault\\\\.vcrd\", \"%SystemDrive%\\Users\\\\AppData\\Local\\Microsoft\\Credentials\\\\.vcrd\", \"%SystemDrive%\\Users\\\\AppData\\Local\\Microsoft\\Vault\\\\Policy.vpol\", \"%SystemDrive%\\Users\\\\AppData\\Local\\Microsoft\\Credentials\\\\Policy.vpol\")) .005 Password Managers Monitor file reads that may acquire user credentials from third-party password managers.[4] Analytic 1 - Unauthorized access to password manager files. index=security sourcetype IN (\"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_secure\", \"macos_secure\") EventCode IN (1, 4663)(file_path IN (\"\\AppData\\Local\\Keepass\\.kdbx\", \"\\AppData\\Local\\LastPass\\.lpvault\", \"\\AppData\\Local\\1Password\\.agilekeychain\", \"\\AppData\\Local\\Bitwarden\\.json\", \"\\AppData\\Local\\Dashlane\\.db\", \"\\AppData\\Local\\PasswordSafe\\.psafe3\", \"/home//.keepass/.kdbx\", \"/home//.lastpass/.lpvault\", \"/home//.1password/.agilekeychain\", \"/home//.bitwarden/.json\", \"/home//.dashlane/.db\", \"/home//.passwordsafe/.psafe3\")) Enterprise T1005 Data from Local System Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases. On ESXi servers, this may include .vmdk and .vmsn files in the /vmfs/volumes directory. ICS T0893 Data from Local System Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (e.g., .pdf, .docx, .jpg, .dwg ) or local databases. Enterprise T1039 Data from Network Shared Drive Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) interacting with network shares. Enterprise T1025 Data from Removable Media Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system. Enterprise T1074 Data Staged Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. .001 Local Data Staging Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. .002 Remote Data Staging Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Enterprise T1114 Email Collection Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity. .001 Local Email Collection Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information. Enterprise T1048 Exfiltration Over Alternative Protocol Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. .001 Exfiltration Over Symmetric Encrypted Non-C2 Protocol Monitor for files being encrypted before transfer, temporary storage of encrypted files before exfiltration, or files with unusual extensions indicative of encryption (.aes, .enc, .bin). Analytic 1 - Detecting Encrypted Files Before Exfiltration (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\*\\Documents\\exfil\") AND file_extension IN (\"aes\", \"enc\", \"bin\"))| eval risk_score=case( file_extension=\"aes\" OR file_extension=\"enc\", 9, file_extension=\"bin\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, file_extension, risk_score .002 Exfiltration Over Asymmetric Encrypted Non-C2 Protocol Monitor files being encrypted before transmission, temporary storage of encrypted files in staging areas before exfiltration, or presence of public/private key files in suspicious locations. Analytic 1 - Detecting Encrypted Files Before Exfiltration (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\*\\Documents\\exfil\") AND file_extension IN (\"gpg\", \"rsa\", \"pem\", \"p12\"))| eval risk_score=case( file_extension=\"gpg\" OR file_extension=\"rsa\", 9, file_extension=\"pem\" OR file_extension=\"p12\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, file_extension, risk_score .003 Exfiltration Over Unencrypted Non-C2 Protocol Monitor files being accessed and staged before unencrypted exfiltration, creation of compressed archives before network transmission, or presence of encoded file formats that indicate obfuscation (.b64, .zip, .tar). Analytic 1 - Detecting File Access Before Unencrypted Exfiltration (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\*\\Documents\\exfil\") AND file_extension IN (\"b64\", \"tar\", \"zip\"))| eval risk_score=case( file_extension=\"b64\" OR file_extension=\"tar\", 9, file_extension=\"zip\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, file_extension, risk_score Enterprise T1041 Exfiltration Over C2 Channel Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel. Analytic 1 - Detecting File Access Before C2 Exfiltration (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case( file_path IN (\"/tmp/\", \"/var/tmp/\"), 9, file_path IN (\"/home//Downloads/*\"), 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score Enterprise T1011 Exfiltration Over Other Network Medium Monitor for access to sensitive files before potential exfiltration, files being staged in locations accessible to alternate networks, or usage of USB storage, external disks, or wireless file transfer. Analytic 1 - Detecting File Access Before Alternate Network Exfiltration (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/media/usb/\", \"/mnt/usb/\", \"/var/tmp/exfil/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case( file_path IN (\"/media/usb/\", \"/mnt/usb/\"), 9, file_path IN (\"/var/tmp/exfil/*\"), 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score .001 Exfiltration Over Bluetooth Monitor file access events in directories commonly used for data staging (/tmp, C:\\Users\\Public), files copied to Bluetooth shared folders, or high-volume file reads or writes before network activity. Analytic 1 - Detecting File Access Before Bluetooth Exfiltration (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/var/tmp/\", \"/home//Downloads/\", \"/media/bluetooth/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case( file_path IN (\"/media/bluetooth/\"), 9, file_path IN (\"/var/tmp/*\"), 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score Enterprise T1052 Exfiltration Over Physical Medium Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive. Analytic 1 - Detecting File Access to Removable Media (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/media/usb/\", \"/mnt/usb/\", \"D:\\USB\\\", \"E:\\USB\\\"))| eval risk_score=case( file_path LIKE \"%/media/usb/%\", 9, file_path LIKE \"%D:\\USB\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score .001 Exfiltration over USB Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device. Analytic 1 - Detecting File Transfers to USB Storage (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/media/usb/\", \"/mnt/usb/\", \"D:\\USB\\\", \"E:\\USB\\\"))| eval risk_score=case( file_path LIKE \"%/media/usb/%\", 9, file_path LIKE \"%D:\\USB\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score Enterprise T1567 Exfiltration Over Web Service Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Analytic 1 - Detecting File Staging Before Web Service Upload (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case( file_path LIKE \"/tmp/%\", 9, file_path LIKE \"C:\\Users\\\\Documents\\exfil\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score .001 Exfiltration to Code Repository Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel. Analytic 1 - Detecting File Staging for Exfiltration to Code Repositories (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/home//repos/\", \"C:\\Users\\\\Documents\\git_repos\\\", \"/var/tmp/repos/\"))| eval risk_score=case( file_path LIKE \"/home//repos/%\", 9, file_path LIKE \"C:\\Users\\\\Documents\\git_repos\\%\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score .002 Exfiltration to Cloud Storage Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel. Analytic 1 - Detecting File Staging Before Cloud Storage Upload (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case( file_path LIKE \"/tmp/%\", 9, file_path LIKE \"C:\\Users\\\\Documents\\exfil\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score .004 Exfiltration Over Webhook Monitor for files being accessed to exfiltrate data to a webhook as a malicious command and control channel. Analytic 1 - Detecting File Staging Before Webhook Upload (EventCode=11 OR EventCode=4663 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_path IN (\"/tmp/\", \"/var/tmp/\", \"/home//Downloads/\", \"C:\\Users\\\\Documents\\exfil\"))| eval risk_score=case( file_path LIKE \"/tmp/%\", 9, file_path LIKE \"C:\\Users\\\\Documents\\exfil\", 8)| where risk_score >= 8| stats count by _time, host, user, file_path, risk_score Enterprise T1187 Forced Authentication Monitor for access to files that may indicate attempts to coerce a user into providing authentication information. Analytic 1 - Suspicious access to files known to be used for forced authentication attacks. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"\\path\\to\\suspicious\\file\" | where match(ObjectName, \"(?i)\\(.*\\.)?(lnk|scf|url|doc|dot|xls|ppt|pdf|scf|html)$\") Enterprise T1654 Log Enumeration Monitor for access to system and service log files, especially from unexpected and abnormal users. Enterprise T1003 OS Credential Dumping Monitor file accesses that may indicate attempts to dump credential data from various storage locations such as LSASS memory, SAM, NTDS.dit, LSA secrets, cached domain credentials, proc filesystem, /etc/passwd, and /etc/shadow. Analytic 1 - Unauthorized access to credential storage files. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"\\config\\SAM\", \"\\ntds.dit\", \"\\policy\\secrets\", \"\\cache\"))OR (index=security sourcetype=\"auditd\" (key=\"path\" (value IN (\"/etc/passwd\", \"/etc/shadow\")) OR key=\"proctitle\" value IN (\"cat\", \"strings\", \"grep\", \"awk\", \"cut\", \"sed\", \"sort\", \"uniq\", \"head\", \"tail\", \"less\", \"more\")))OR(index=security sourcetype=\"macOS:UnifiedLog\" (process IN (\"cat\", \"grep\", \"awk\", \"cut\", \"sed\", \"sort\", \"uniq\", \"head\", \"tail\", \"less\", \"more\") OR message IN (\"/etc/passwd\", \"/etc/shadow\", \"/var/db/shadow/hash/*\", \"/private/etc/master.passwd\"))) .002 Security Account Manager Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. Analytic 1 - Unauthorized access to SAM database. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"*\\config\\SAM\" | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\", \"mimikatz.exe\", \"procdump.exe\") .003 NTDS Monitor for access or copy of the NTDS.dit. Note: Events 4656 and 4663 (Microsoft Windows Security Auditing) provide context of processes and users requesting access or accessing file objects (ObjectType = File) such as C:\\Windows\\NTDS\\ntds.dit. It is important to note that, in order to generate these events, a System Access Control List (SACL) must be defined for the ntds.dit file. Access rights that allow read operations on file objects and its attributes are %%4416 Read file data, %%4419 Read extended file attributes, %%4423 Read file attributes. If you search for just the name of the file and not the entire directory, you may get access events related to the ntds.dit file within a snapshot or volume shadow copy. Events 4656 and 4663 (Microsoft Windows Security Auditing) provide context of processes and users creating or copying file objects (ObjectType = File) such as C:\\Windows\\NTDS\\ntds.dit. It is important to note that, in order to generate these events, a System Access Control List (SACL) must be defined for the ntds.dit file. In order to filter file creation events, filter access rigths %%4417 Write data to the file and %%4424 Write file attributes. Event 11 (Microsoft Windows Sysmon) provide context of processes and users creating or copying files. Unfortunately, this event provides context of the file being created or copied, but not the file being copied. A good starting point would be to look for new files created or copied with extension .dit. Analytic 1 - Active Directory Dumping via NTDSUtil (sourcetype=WinEventLog:Security EventCode IN (4656, 4663)) OR (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"11\") ANDObjectType=\"File\" AND TargetFilename=\"*ntds.dit\" AND (AccessList=\"%%4416\" OR AccessList=\"%%4419\" OR AccessList=\"%%4417\" OR AccessList=\"%%4424\") .007 Proc Filesystem Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path /proc/\\/maps, where the \\ directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs. Analytic 1 - Unauthorized access to /proc filesystem. index=os sourcetype=\"linux_audit\" command IN (\"grep -E '^[0-9a-f-] r' /proc//maps\") .008 /etc/passwd and /etc/shadow Monitor for files being accessed that may attempt to dump the contents of /etc/passwd and /etc/shadow to enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access /etc/passwd and /etc/shadow, alerting on the pid, process name, and arguments of such programs. Analytic 1 - Unauthorized access to /etc/passwd and /etc/shadow. index=os sourcetype=\"linux_audit\" file IN (\"/etc/passwd\", \"/etc/shadow\") Enterprise T1018 Remote System Discovery Monitor for files (such as /etc/hosts) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. For Windows, Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on access attempts of local files that store host data, including C:\\Windows\\System32\\Drivers\\etc\\hosts. For Linux, auditing frameworks such as the audit daemon (auditd) can be used to alert on access attempts of local files that store host data, including /etc/hosts. ICS T0846 Remote System Discovery Monitor for files (such as /etc/hosts) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. ICS T0888 Remote System Information Discovery Monitor for files (such as /etc/hosts) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Enterprise T1091 Replication Through Removable Media Monitor for unexpected files accessed on removable media. Analytic 1 - File read events from removable media index=windows sourcetype=\"WinEventLog:Security\" EventID=4663Accesses=\"ReadData (or ListDirectory)\" AND ObjectType=\"File\"| stats count by ObjectName, Account_Name, ProcessName, ComputerName, _time| where match(ObjectName, \".:\\\\RemovableMedia\\\\.\") OR match(ObjectName, \".:\\\\USB.\")| table _time, ObjectName, Account_Name, ProcessName, ComputerName ICS T0847 Replication Through Removable Media Monitor for files accessed on removable media, particularly those with executable content. Enterprise T1649 Steal or Forge Authentication Certificates Monitor for attempts to access files that store information about certificates and their associated private keys. For example, personal certificates for users may be stored on disk in folders such as %APPDATA%\\Microsoft\\SystemCertificates\\My\\Certificates\\.[5][6] Enterprise T1558 Steal or Forge Kerberos Tickets Monitor for unexpected processes interacting with lsass.exe.[7] Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. .005 Ccache Files Monitor for abnormal read access to ccache files located in the /tmp directory of a system from non-user processes. Enterprise T1539 Steal Web Session Cookie Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console. Analytic 1 - Unexpected access to web session cookies files. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"\\AppData\\Roaming\\\\Cookies\\\" OR ObjectName=\"\\AppData\\Local\\\\Cookies\\\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject=\"\\AppData\\Roaming\\\\Cookies\\\" OR TargetObject=\"\\AppData\\Local\\\\Cookies\\\") OR(index=os sourcetype=\"linux_audit\" (filepath=\"/home//.mozilla/firefox/.default-release/cookies.sqlite\" OR filepath=\"/home//.config/google-chrome/Default/Cookies\")) OR(index=os sourcetype=\"macos_secure\" file_path=\"/Users//Library/Application Support/Google/Chrome/Default/Cookies\") OR(index=gsuite sourcetype=\"gsuite:admin\" event_name=\"LOGIN\" event_type=\"cookie_auth\") OR(index=o365 sourcetype=\"o365:management:activity\" Operation=\"UserLoginViaCookie\") Enterprise T1033 System Owner/User Discovery Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised Valid Accounts in-use by adversaries may help as well. Enterprise T1552 Unsecured Credentials Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's .bash_history is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like cat ~/.bash_history. Analytic 1 - Multiple file reads in a short period or searching for credential material. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"password\" OR ObjectName=\"credential\") OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject=\"password\" OR TargetObject=\"credential\") OR(index=os sourcetype=\"linux_audit\" action=\"open\" filepath IN (\"password\", \"credential\", \"passwd\", \"shadow\", \".pem\", \".key\")) OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path IN (\"password\", \"credential\", \"passwd\", \"shadow\", \".pem\", \".key\")) .001 Credentials In Files Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Analytic 1 - Unauthorized access to files containing credentials. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"password\", \"credential\", \"secret\", \"token\")) OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject IN (\"password\", \"credential\", \"secret\", \"token\")) OR(index=os sourcetype=\"linux_audit\" action=\"open\" filepath IN (\"password\", \"credential\", \"passwd\", \"shadow\", \".pem\", \".key\", \"secret\", \"token\")) OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path IN (\"password\", \"credential\", \"passwd\", \"shadow\", \".pem\", \".key\", \"secret\", \"token\")) .003 Bash History Monitoring when the user's .bash_history is read can help alert to suspicious activity. Analytic 1 - Unauthorized access to .bash_history. (index=os sourcetype=\"linux_secure\" action=\"open\" filepath=\"/home//.bash_history\") OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path=\"/Users//.bash_history\") | where User NOT IN (\"root\", \"daemon\", \"bin\", \"nobody\", \"_spotlight\", \"_mbsetupuser\")| where NOT match(User, \"^[a-z]+$\") # Filter out common service accounts .004 Private Keys Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Analytic 1 - Unauthorized access to cryptographic key files. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\", \"private key\", \"certificate\")) OR(index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 TargetObject IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\", \"private key\", \"certificate\")) OR(index=os sourcetype=\"linux_secure\" action=\"open\" filepath IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\", \"private key\", \"certificate\")) OR(index=os sourcetype=\"macos_secure\" event_type=\"open\" file_path IN (\".key\", \".pgp\", \".gpg\", \".ppk\", \".p12\", \".pem\", \".pfx\", \".cer\", \".p7b\", \".asc\", \"private key\", \"certificate\")) .006 Group Policy Preferences Monitor for attempts to access SYSVOL that involve searching for XML files. Analytic 1 - Unauthorized access to SYSVOL XML files. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"SYSVOL\" ObjectName=\"*.xml\"| eval AccessType=case( AccessMask=\"0x1\", \"Read\", AccessMask=\"0x2\", \"Write\", AccessMask=\"0x3\", \"Read/Write\", AccessMask=\"0x4\", \"Delete\", true(), \"Unknown\") ICS T0863 User Execution Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning PowerShell). File: File Creation A new file is created on a system or network storage. This action often signifies an operation such as saving a document, writing data, or deploying a file. Logging these events helps identify legitimate or potentially malicious file creation activities. Examples include logging file creation events (e.g., Sysmon Event ID 11 or Linux auditd logs). This data component can be collected through the following measures: Windows Sysmon: Event ID 11: Logs file creation events, capturing details like the file path, hash, and creation time. Windows Event Log: Enable \"Object Access\" auditing in Group Policy to track file creation under Event ID 4663. PowerShell: Real-time monitoring of file creation:Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4663} Linux Auditd: Use audit rules to monitor file creation: auditctl -w /path/to/directory -p w -k file_creation View logs: ausearch -k file_creation Inotify: Monitor file creation with inotifywait: inotifywait -m /path/to/watch -e create macOS Unified Logs: Use the macOS Unified Logging System to capture file creation events. FSEvents: Use File System Events to monitor file creation: fs_usage | grep create Network Devices NAS Logs: Monitor file creation events on network-attached storage devices. SMB Logs: Collect logs of file creation activities over SMB/CIFS protocols. SIEM Integration Forward logs from all platforms (Windows, Linux, macOS) to a SIEM for central analysis and alerting. File: File Creation A new file is created on a system or network storage. This action often signifies an operation such as saving a document, writing data, or deploying a file. Logging these events helps identify legitimate or potentially malicious file creation activities. Examples include logging file creation events (e.g., Sysmon Event ID 11 or Linux auditd logs). This data component can be collected through the following measures: Windows Sysmon: Event ID 11: Logs file creation events, capturing details like the file path, hash, and creation time. Windows Event Log: Enable \"Object Access\" auditing in Group Policy to track file creation under Event ID 4663. PowerShell: Real-time monitoring of file creation:Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4663} Linux Auditd: Use audit rules to monitor file creation: auditctl -w /path/to/directory -p w -k file_creation View logs: ausearch -k file_creation Inotify: Monitor file creation with inotifywait: inotifywait -m /path/to/watch -e create macOS Unified Logs: Use the macOS Unified Logging System to capture file creation events. FSEvents: Use File System Events to monitor file creation: fs_usage | grep create Network Devices NAS Logs: Monitor file creation events on network-attached storage devices. SMB Logs: Collect logs of file creation activities over SMB/CIFS protocols. SIEM Integration Forward logs from all platforms (Windows, Linux, macOS) to a SIEM for central analysis and alerting. Domain ID Name Detects Enterprise T1560 Archive Collected Data Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers. .001 Archive via Utility Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers. .002 Archive via Library Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers. .003 Archive via Custom Method Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers. Enterprise T1547 Boot or Logon Autostart Execution Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. .006 Kernel Modules and Extensions Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot. .008 LSASS Driver Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems. .009 Shortcut Modification Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.[8] Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections. .010 Port Monitors Monitor newly constructed files that may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation. .012 Print Processors Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. .013 XDG Autostart Entries Malicious XDG autostart entries may be detected by auditing file creation events within the /etc/xdg/autostart and ~/.config/autostart directories. Depending on individual configurations, defenders may need to query the environment variables $XDG_CONFIG_HOME or $XDG_CONFIG_DIRS to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline. .015 Login Items All login items created via shared file lists are viewable by using the System Preferences GUI or in the ~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm file.[9][10][11][12] These locations should be monitored and audited. Enterprise T1037 Boot or Logon Initialization Scripts Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence. .002 Login Hook Monitor for the creation of and/or changes to login hook files (/Library/Preferences/com.apple.loginwindow.plist), especially by unusual accounts outside of normal administration duties. .003 Network Logon Script Monitor for newly constructed files by unusual accounts outside of normal administration duties .004 RC Scripts Monitor for newly constructed /etc/rc.local files. .005 Startup Items Monitor for newly constructed files by unusual accounts outside of normal administration duties Enterprise T1554 Compromise Host Software Binary Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems. Enterprise T1659 Content Injection Monitor for unexpected and abnormal file creations that may indicate malicious content injected through online network communications. Analytic 1 - Detecting Malicious File Creation via Content Injection (EventCode=11 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_type IN (\"exe\", \"dll\", \"js\", \"vbs\", \"ps1\", \"sh\", \"php\"))| where (process_path=\"C:\\Users\\\\AppData\\Local\\Temp\\\" OR process_path=\"/tmp/\" OR process_path=\"/var/tmp/\")| eval risk_score=case( like(file_name, \"%.exe\"), 8, like(file_name, \"%.js\"), 9, like(file_name, \"%.sh\"), 7)| where risk_score >= 7| stats count by _time, host, user, file_name, process_path, risk_score Enterprise T1543 Create or Modify System Process Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. .001 Launch Agent Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. .002 Systemd Service Systemd service unit files may be detected by auditing file creation and modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and /home/$username/.config/systemd/user/ directories, as well as associated symbolic links. Systemd generators may be placed in system-wide directories such as /run/systemd/system-generators/, /etc/systemd/system-generators or user-specific directories such as /run/systemd/user-generators/. .004 Launch Daemon Monitor for new files added to the /Library/LaunchDaemons/ folder. The System LaunchDaemons are protected by SIP. Enterprise T1486 Data Encrypted for Impact Monitor for newly constructed files in user directories. Enterprise T1565 Data Manipulation Monitor for newly constructed files in order to manipulate external outcomes or hide activity .001 Stored Data Manipulation Monitor for newly constructed files in order to manipulate external outcomes or hide activity .003 Runtime Data Manipulation Monitor for newly constructed files in order to manipulate external outcomes or hide activity Enterprise T1074 Data Staged Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging. .001 Local Data Staging Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging. .002 Remote Data Staging Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging. Enterprise T1491 Defacement Monitor for newly constructed visual content for internal or external enterprise networks. .001 Internal Defacement Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users. .002 External Defacement Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. Enterprise T1006 Direct Volume Access Monitor for the creation of volume shadow copy and backup files, especially unexpected and irregular activity (relative to time, user, etc.). Enterprise T1189 Drive-by Compromise Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing. Detect browser process dropping files in suspicious locations (AppData, Temp, /tmp, /var/tmp). Identify exploit payloads (DLLs, JavaScript, shell scripts) written by the browser process. (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11 Image=\"C:\\Program Files\\Mozilla Firefox\\firefox.exe\" OR Image=\"C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\")OR (sourcetype=\"/var/log/audit/audit.log\" SYSCALL=\"open\" path=\"/tmp/%\" process=\"firefox\" OR process=\"chrome\")| eval risk_score = case( like(path, \"%\\Temp\\%\"), 5, like(path, \"%AppData%\"), 4, like(path, \"%/var/tmp%\"), 6)| where risk_score >= 5| table _time, host, process, path, risk_score ICS T0817 Drive-by Compromise Monitor for newly constructed files written to disk through a user visiting a website over the normal course of browsing. Enterprise T1667 Email Bombing Monitor for - Attachment creation events with excessive or repetitive file creation- Unusual file size from email messages (e.g., base64-encoded attachments dumped locally)- Burst of .eml, .msg, .tmp file extensions in mail client folders Analytic 1 - Email file creations EventCode=11 (file_name=\".eml\" OR file_name=\".msg\" OR file_name=\"*.tmp\")| stats count avg(file_size) max(file_size) by user, file_path, process_name, _time| where count > 100 OR max(file_size) > 1000000| table _time, user, process_name, file_path, file_name, count, max(file_size) Enterprise T1546 Event Triggered Execution Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. .002 Screensaver Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity. Analytic 1 - Created on disk that are being used as Screensaver files (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"11\") TargetObject=\"*\\Software\\Policies\\Microsoft\\Windows\\Control Panel\\Desktop\\SCRNSAVE.EXE\" .003 Windows Management Instrumentation Event Subscription Monitor for MOF files outside of the HKLM\\SOFTWARE\\Microsoft\\WBEM folder, as almost all legitimate MOF files will be stored in the WBEM folder.[13] Adversaries may create modified MOF files to be complied into WMI event subscriptions. .004 Unix Shell Configuration Modification Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user\u2019s shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the /etc/shells file. .005 Trap Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal. .008 Accessibility Features Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. .013 PowerShell Profile Locations where profile.ps1 can be stored should be monitored for new profiles. [14] Example profile locations include:* $PsHome\\Profile.ps1* $PsHome\\Microsoft.{HostProgram}_profile.ps1* $Home\\My Documents\\PowerShell\\Profile.ps1* $Home\\My Documents\\PowerShell\\Microsoft.{HostProgram}_profile.ps1 .014 Emond Monitor emond rules creation by checking for files created in /etc/emond.d/rules/ and /private/var/db/emondClients. .016 Installer Packages Monitor creation of files associated with installer packages that may be abused for malicious execution. Enterprise T1480 .002 Execution Guardrails: Mutual Exclusion Monitor for the suspicious creation of lock files \u2013 for example, in shared memory directories such as /var/run.[15] Enterprise T1187 Forced Authentication Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources. Analytic 1 - Creation of suspicious files in locations used for forced authentication attacks. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4663) OR (index=sysmon sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11) | where match(ObjectName, \"(?i)\\(.*\\.)?(lnk|scf|url|doc|dot|xls|ppt|pdf|html)$\")| where match(ObjectName, \"(?i)(desktop|public|downloads|temp|cache|start menu|startup)\") Enterprise T1564 Hide Artifacts Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection. .001 Hidden Files and Directories Monitor the file system and shell commands for files being created with a leading \".\" .006 Run Virtual Instance Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). On ESXi servers, this includes new .vmx files in the /vmfs/volumes/ directory. .009 Resource Forking Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. .012 File/Path Exclusions Monitor for newly constructed files, especially those that are unexpectedly created in folders associated with or spoofing that of trusted applications. Also, consider prioritizing monitoring and analyzing file activity in known file/path exclusions. .013 Bind Mounts Monitor for the creation of PID directories under /proc with unusual characteristics. For example, these directories should typically be read-only; the creation of a directory with write permissions may indicate unusual activity.[16] Enterprise T1574 Hijack Execution Flow Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs. .001 DLL Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates. Monitor for the creation of phantom DLL files. .004 Dylib Hijacking Monitor for newly constructed dylibs .005 Executable Installer File Permissions Weakness Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior. .006 Dynamic Linker Hijacking Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux (such as /etc/ld.so.preload) and DYLD_INSERT_LIBRARIES on macOS. .007 Path Interception by PATH Environment Variable Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious. .008 Path Interception by Search Order Hijacking Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious. .009 Path Interception by Unquoted Path Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious. .010 Services File Permissions Weakness Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten. .014 AppDomainManager Monitor for newly constructed files, especially unknown .NET assemblies and configuration files in user writable folder paths. Enterprise T1105 Ingress Tool Transfer Monitor for file creation and files transferred into the network. Enterprise T1056 Input Capture Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux (such as /etc/ld.so.preload) and DYLD_INSERT_LIBRARIES on macOS. .004 Credential API Hooking Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux (such as /etc/ld.so.preload) and DYLD_INSERT_LIBRARIES on macOS. Enterprise T1570 Lateral Tool Transfer Monitor newly constructed files to/from a lateral tool transfer ICS T0867 Lateral Tool Transfer Monitor for file creation in conjunction with other techniques (e.g., file transfers using Remote Services). Enterprise T1036 .007 Masquerading: Double File Extension Monitor for files written to disk that contain two file extensions, particularly when the second is an executable. Enterprise T1556 Modify Authentication Process Monitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.[17] Monitor for newly created files that may be used to register malicious network provider dynamic link libraries (DLLs). Analytic 1 - Unauthorized file creation in critical directories. index=security sourcetype IN (\"WinEventLog:Security\", \"wineventlog:sysmon\", \"linux_audit\", \"macos_secure\")(EventCode=4663 OR EventCode=11 OR EventCode=13 OR (sourcetype=\"linux_audit\" AND (syscall=\"creat\" OR syscall=\"open\" OR syscall=\"openat\")) OR (sourcetype=\"macos_secure\" AND action=\"file_write\"))| eval TargetFile=coalesce(ObjectName, FileName, target_file)| search TargetFile IN ( \"C:\\Windows\\System32\\config\\SAM\", \"C:\\Windows\\System32\\config\\system\", \"C:\\Windows\\System32\\config\\security\", \"C:\\Windows\\System32\\lsass.exe\", \"/etc/passwd\", \"/etc/shadow\", \"/etc/pam.d/\", \"/Library/Preferences/com.apple.loginwindow.plist\") .002 Password Filter DLL Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. Analytic 1 - Unauthorized DLL registration. index=windows_logs sourcetype=\"WinEventLog:Security\" OR sourcetype=\"XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\"| search (EventCode=4688 AND (CommandLine=\"regsvr32\" OR CommandLine=\"rundll32\") AND CommandLine=\"password.dll\")| join type=left Host [ search index=windows_logs sourcetype=\"WinEventLog:System\" | eval File_Creation_Time=strftime(_time, \"%Y-%m-%d %H:%M:%S\") | where EventCode=7045 OR EventCode=2 | fields Host, File_Creation_Time, FileName, FilePath ]| eval suspected_dll=if(match(FilePath, \".\\System32\\.\") OR match(FilePath, \".\\SysWOW64\\.\"), \"High\", \"Low\") .008 Network Provider DLL Monitor for newly created files that may be used to register malicious network provider dynamic link libraries (DLLs). Enterprise T1027 Obfuscated Files or Information Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). .004 Compile After Delivery Monitor for newly constructed files for payloads .006 HTML Smuggling Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. .009 Embedded Payloads Monitor for newly constructed files containing large amounts of data. Abnormal file sizes may be an indicator of embedded content. .012 LNK Icon Smuggling Monitor for downloaded malicious files, though developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by LNK Icon Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. .013 Encrypted/Encoded File Monitor for files with large entropy which don\u2019t match what is normal/expected given the file type and location. .014 Polymorphic Code Monitor for files with large entropy which don\u2019t match what is normal/expected given the file type and location. .015 Compression Monitor for files with large entropy which don\u2019t match what is normal/expected given the file type and location. .017 SVG Smuggling Monitor for newly constructed files via JavaScript. Developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by SVG Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. SVG Smuggling is often chained: .svg downloaded \u2192 parsed or executed by browser/email client Drops or references a secondary payload (HTML/JS/Payload) Follow-on execution with powershell, cmd, wscript, etc. Analytic 1 - Detect malicious use of SVG files embedded with script tags to assemble, download, or redirect to payloads. index= (sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" OR sourcetype=\"linux_audit\" OR sourcetype=\"osquery\")(file_name=\".svg\" OR file_path=\"\\Downloads\\.svg\" OR file_path=\"/tmp/.svg\" OR file_path=\"/Users//Downloads/.svg\")| join type=inner file_path [ search index= process_name IN (\"powershell.exe\", \"wscript.exe\", \"cmd.exe\", \"mshta.exe\", \"bash\", \"curl\", \"wget\") | stats min(_time) as proc_time by file_path, process_name, host]| eval time_diff=proc_time - _time| where time_diff >= 0 AND time_diff < 120| table _time, host, user, file_path, file_name, process_name, command_line, time_diff| sort _time Analytic 2 - Suspicious JavaScript or Obfuscation in SVG file_name=\".svg\"| rex field=_raw \"(?.?)\"| search js_payload=\"eval\" OR js_payload=\"atob\" OR js_payload=\"window.location\" OR js_payload=\"document.write\"| table _time, file_name, js_payload Enterprise T1137 Office Application Startup Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups. .001 Office Template Macros Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system. .002 Office Test Monitor for newly constructed files that may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. .006 Add-ins Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Enterprise T1003 OS Credential Dumping Monitor for the unexpected creation of memory dump files for processes that may contain credentials. Analytic 1 - Unexpected memory dump file creation. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"lsass.dmp\", \"\\config\\SAM\", \"\\ntds.dit\", \"\\policy\\secrets\", \"\\cache\"))OR (index=security sourcetype=\"linux_secure\" (key=\"path\" value IN (\"/etc/passwd\", \"/etc/shadow\")))OR (index=security sourcetype=\"macOS:UnifiedLog\" message IN (\"/var/db/shadow/hash/*\", \"/private/etc/master.passwd\")) .001 LSASS Memory Monitor for the unexpected creation of memory dump files for the LSASS process (e.g., lsass{*}.dmp). Analytic 1 - Unexpected creation of LSASS dump files. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName=\"\\lsass.dmp\" | where ProcessName IN (\"procdump.exe\", \"rundll32.exe\", \"taskmgr.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"comsvcs.dll\") .002 Security Account Manager Monitor newly constructed files being written with default names that have extracted credentials from the Security Account Manager. Analytic 1 - Creation of files with extracted SAM credentials. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 ObjectName IN (\"\\config\\SAM\", \"\\config\\system\", \"\\config\\security\", \"\\system32\\config\\sam\", \"\\system32\\config\\system\", \"\\system32\\config\\security\") | where ProcessName IN (\"reg.exe\", \"powershell.exe\", \"wmic.exe\", \"schtasks.exe\", \"cmd.exe\", \"rundll32.exe\", \"mimikatz.exe\", \"procdump.exe\") Enterprise T1566 Phishing Monitor for creation of suspicious email attachments in download directories, execution of phishing attachments (e.g., .docm, .lnk, .hta, .vbs), or files extracted from .zip, .rar, .iso containers that execute scripts. Analytic 1 - Detecting Malicious File Creation from Phishing Emails (EventCode=11 OR EventCode=1116)OR (source=\"/var/log/audit/audit.log\" SYSCALL=\"open\" path IN (\"/home/user/Downloads\", \"C:\\Users\\Public\\Downloads\"))| eval risk_score=case( like(path, \"%.vbs\"), 8, like(path, \"%.lnk\"), 7, like(path, \"%.exe\"), 6)| where risk_score >= 6| stats count by _time, host, path, user, risk_score .001 Spearphishing Attachment Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Analytic 1 - Detecting Malicious Email Attachments Creating Files (EventCode=11 OR source=\"/var/log/audit/audit.log\" type=\"open\")| where (file_type IN (\"exe\", \"vbs\", \"js\", \"docm\", \"lnk\"))| where (process_path=\"C:\\Users\\\\Downloads\\\" OR process_path=\"/home//Downloads/\")| eval risk_score=case( like(file_name, \"%.exe\"), 8, like(file_name, \"%.js\"), 9, like(file_name, \"%.vbs\"), 7)| where risk_score >= 7| stats count by _time, host, user, file_name, process_path, risk_score Enterprise T1542 Pre-OS Boot On UEFI boot systems, monitor for newly created files in the ESP. .003 Bootkit On UEFI boot systems, monitor for newly created files in the ESP. Enterprise T1219 .001 Remote Access Tools: IDE Tunneling Monitor for the creation of the file code_tunnel.json within the .vscode-cli directory in a user's home profile (~/.vscode-cli/code_tunnel.json on Linux/macOS or %UserProfile%\\.vscode-cli\\code_tunnel.json on Windows), which signals a Visual Studio Code tunnel has been established.[18] Analytic 1 - Monitor for active or persistent VS Code Tunnel sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=11(file_path=\"\\.vscode-cli\\code_tunnel.json\" OR file_path=\"/.vscode-cli/code_tunnel.json\")| stats min(_time) as creation_time by host, user, file_path| sort creation_time Enterprise T1091 Replication Through Removable Media Monitor for newly constructed files on removable media Analytic 1 - File creation events on removable media index=windows sourcetype=\"WinEventLog:Security\" EventID=4663Accesses=\"WriteData (or AddFile)\" AND ObjectType=\"File\"| stats count by ObjectName, Account_Name, ProcessName, ComputerName, _time| where match(ObjectName, \".:\\\\RemovableMedia\\\\.\") OR match(ObjectName, \".:\\\\USB.\")| table _time, ObjectName, Account_Name, ProcessName, ComputerName ICS T0847 Replication Through Removable Media Monitor for newly constructed files copied to or from removable media. Enterprise T1496 Resource Hijacking Monitor for common cryptomining or proxyware files on local systems that may indicate compromise and resource usage. .001 Compute Hijacking Monitor for common cryptomining files on local systems that may indicate compromise and resource usage. .002 Bandwidth Hijacking Monitor for common proxyware files on local systems that may indicate compromise and resource usage. Enterprise T1053 Scheduled Task/Job Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Analytic 1 - Look for new task files with unusual parameters. index=security_logs OR index=system_logs(sourcetype=\"docker_events\" OR sourcetype=\"kubernetes_events\" OR sourcetype=\"wineventlog:security\" OR sourcetype=\"linux_secure\" OR sourcetype=\"syslog\" OR sourcetype=\"file_monitoring\")| eval platform=case( sourcetype==\"docker_events\" OR sourcetype==\"kubernetes_events\", \"Containers\", sourcetype==\"wineventlog:security\", \"Windows\", sourcetype==\"linux_secure\" OR sourcetype==\"syslog\", \"Linux\", sourcetype==\"mac_os_events\", \"macOS\")| search ( (platform=\"Containers\" AND (event_type=\"file_create\" AND (file_path=\"/etc/cron.d/\" OR file_path=\"/etc/systemd/system/\"))) OR (platform=\"Windows\" AND EventCode=4663 AND (ObjectName=\"C:\\Windows\\System32\\Tasks\\\" OR ObjectName=\"C:\\Windows\\Tasks\\\")) OR (platform=\"Linux\" AND (file_path=\"/etc/cron.d/\" OR file_path=\"/etc/systemd/system/\")) OR (platform=\"macOS\" AND (file_path=\"/Library/LaunchDaemons/\" OR file_path=\"/Library/LaunchAgents/\"))) .005 Scheduled Task Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. In order to gain persistence, privilege escalation, or remote execution, an adversary may use the Windows Task Scheduler to schedule a command to be run at a specified time, date, and even host. Task Scheduler stores tasks as files in two locations - C:\\Windows\\Tasks (legacy) or C:\\Windows\\System32\\Tasks. Accordingly, this analytic looks for the creation of task files in these two locations. Analytic 1 - Look for new task files in %systemroot%\\System32\\Tasks. ((source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"11\") OR (sourcetype=WinEventLog:Security EventCode=4663)) (TargetFilename= \"C:\\Windows\\System32\\Tasks\\\" OR TargetFilename \"C:\\Windows\\Tasks\\*\") AND Image!= \"C:\\WINDOWS\\system32\\svchost.exe\" .007 Container Orchestration Job Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments. Note: This query monitors for .yaml configuration files that are used to define jobs and container behaviors within Kubernetes. Changes or creations of these files should be closely watched. Analytic 1 - Look for new file creation events with unusual parameters. sourcetype=kubernetes:file_creation file_path=\"/etc/kubernetes/manifests/*.yaml\" Enterprise T1505 Server Software Component Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components. .002 Transport Agent Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components. .003 Web Shell File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.[19] .004 IIS Components Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Enterprise T1176 Software Extensions Monitor for newly constructed files in directories associated with software extensions. Ensure all listed files are in alignment with approved extensions .001 Browser Extensions Monitor for - Newly written .crx, .xpi, or .mobileconfig files- Modified .plist files under /Library/Managed Preferences// (macOS)- Creation of extensions under: - Chrome: AppData\\Local\\Google\\Chrome\\User Data\\Default\\Extensions - Firefox: %APPDATA%\\Mozilla\\Firefox\\Profiles*.default\\extensions Analytic 1 - Detect newly written config files sourcetype=WinEventLog:Sysmon EventCode=11(TargetFilename=\"\\Extensions\\\" OR TargetFilename=\".crx\" OR TargetFilename=\".xpi\" OR TargetFilename=\"*.mobileconfig\")| stats count by TargetFilename, Image, User, Computer, _time| sort -_time ICS T0865 Spearphishing Attachment Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Enterprise T1553 .005 Subvert Trust Controls: Mark-of-the-Web Bypass Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. Enterprise T1218 System Binary Proxy Execution Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity. .001 Compiled HTML File Monitor presence and use of CHM files, especially if they are not typically used within an environment. .002 Control Panel Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services. .005 Mshta Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious .014 MMC Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as services.msc or eventvwr.msc. Invoking non-Microsoft .msc files may be an indicator of malicious activity. Enterprise T1080 Taint Shared Content Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious. Monitor for the creation of hidden files and directories that may be used to conceal malicious files or scripts on shared network locations. sourcetype=\"WinEventLog:Security\" EventCode=4663 OR sourcetype=\"linux:audit\" syscall IN (\"creat\", \"open\")| search ObjectType=\"File\" AccessMask=\"0x2\" // 0x2 indicates write access| stats count by ObjectName, AccountName, ProcessName, SourceIPAddress, _time| eval suspicious=if(match(ObjectName, \"\\.exe$|\\.lnk$|\\.scr$|\\.bat$|\\.vbs$\") AND AccountName!=\"known_admin_user\", \"suspicious\", \"normal\") Enterprise T1204 User Execution Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe). .001 Malicious Link Monitor for files created on a system after a user clicks on a malicious link. Look for common download paths and suspicious files with executable extensions. Analytic 1 - Files downloaded from links and then executed. sourcetype=Sysmon EventCode=11| search file_path IN (\"/Downloads/\", \"/Temp/\")| stats count by file_name file_path user| where file_name LIKE \"%.exe\" OR file_name LIKE \"%.zip\" OR file_name LIKE \"%.js\" OR file_name LIKE \"%.docm\" .002 Malicious File Monitor for files created in unusual directories or files with suspicious extensions. Focus on common locations like the Downloads folder, Temp directories, or the user\u2019s Desktop, especially files that would be of interest from spearphishing attachments. While batch files are not inherently malicious, it is uncommon to see them created after OS installation, especially in the Windows directory. This analytic looks for the suspicious activity of a batch file being created within the C:\\Windows\\System32 directory tree. There will be only occasional false positives due to administrator actions. For MacOS, utilities that work in concert with Apple\u2019s Endpoint Security Framework such as File Monitor can be used to track file creation events. Analytic 1 - Batch File Write to System32 (sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=\"11\") file_path=\"system32\" AND file_extension=\".bat\" Analytic 2 - New file creation in unusual directories. sourcetype=WinEventLog:Microsoft-Windows-Sysmon/Operational EventCode=11| search file_path IN (\"/Downloads/\", \"/Temp/\", \"/Desktop/\")| stats count by file_name file_extension file_path user| where file_extension IN (\"doc\", \"docx\", \"pdf\", \"xls\", \"rtf\", \"exe\", \"scr\", \"lnk\", \"pif\", \"cpl\", \"zip\") .004 Malicious Copy and Paste Monitor for files created on a system after a user executes an unusual command. Look for common download paths and suspicious files with executable extensions. File: File Deletion Refers to events where files are removed from a system or storage device. These events can indicate legitimate housekeeping activities or malicious actions such as attackers attempting to cover their tracks. Monitoring file deletions helps organizations identify unauthorized or suspicious activities. This data component can be collected through the following measures: Windows Sysmon: Event ID 23: Logs file deletion events, including details such as file paths and responsible processes. Windows Event Log: Enable \"Object Access\" auditing to monitor file deletions. PowerShell: Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4663} | Where-Object {$_.Message -like '*DELETE*'} Linux Auditd: Use audit rules to capture file deletion events: auditctl -a always,exit -F arch=b64 -S unlink -S rename -S rmdir -k file_deletion Query logs: ausearch -k file_deletion Inotify: Use inotifywait to monitor file deletions: inotifywait -m /path/to/watch -e delete macOS Endpoint Security Framework (ESF): Monitor events like ES_EVENT_TYPE_AUTH_UNLINK to capture file deletion activities. FSEvents: Track file deletion activities in real-time: fs_usage | grep unlink SIEM Integration Forward file deletion logs to a SIEM for centralized monitoring and correlation with other events. File: File Deletion Refers to events where files are removed from a system or storage device. These events can indicate legitimate housekeeping activities or malicious actions such as attackers attempting to cover their tracks. Monitoring file deletions helps organizations identify unauthorized or suspicious activities. This data component can be collected through the following measures: Windows Sysmon: Event ID 23: Logs file deletion events, including details such as file paths and responsible processes. Windows Event Log: Enable \"Object Access\" auditing to monitor file deletions. PowerShell: Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4663} | Where-Object {$_.Message -like '*DELETE*'} Linux Auditd: Use audit rules to capture file deletion events: auditctl -a always,exit -F arch=b64 -S unlink -S rename -S rmdir -k file_deletion Query logs: ausearch -k file_deletion Inotify: Use inotifywait to monitor file deletions: inotifywait -m /path/to/watch -e delete macOS Endpoint Security Framework (ESF): Monitor events like ES_EVENT_TYPE_AUTH_UNLINK to capture file deletion activities. FSEvents: Track file deletion activities in real-time: fs_usage | grep unlink SIEM Integration Forward file deletion logs to a SIEM for centralized monitoring and correlation with other events. Domain ID Name Detects Enterprise T1554 Compromise Host Software Binary Monitor for unexpected deletion of client software binaries to establish persistent access to systems. Enterprise T1485 Data Destruction Monitor for unexpected deletion to a file (ex: Sysmon EID 23) ICS T0809 Data Destruction Monitor for unexpected deletion of files. Enterprise T1565 Data Manipulation Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity .001 Stored Data Manipulation Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity .003 Runtime Data Manipulation Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity Enterprise T1562 Impair Defenses Monitor for missing log files hosts and services with known active periods. .012 Disable or Modify Linux Audit System Monitor for missing log files from machines with known active periods. Enterprise T1070 Indicator Removal Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. .001 Clear Windows Event Logs Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: \"The audit log was cleared\"). When an eventlog is cleared, a new event is created that alerts that the eventlog was cleared. For Security logs, its event code 1100 and 1102. For System logs, it is event code 104. It is unlikely that event log data would be cleared during normal operations, and it is likely that malicious attackers may try to cover their tracks by clearing an event log. When an event log gets cleared, it is suspicious. This is often done using wevtutil, a legitimate tool provided by Microsoft. This action interferes with event collection and notification, and may lead to a security event going undetected, thereby potentially leading to further compromise of the network. Alerting when a Clear Event Log is generated could point to this intruder technique. Centrally collecting events has the added benefit of making it much harder for attackers to cover their tracks. Event Forwarding permits sources to forward multiple copies of a collected event to multiple collectors, thus enabling redundant event collection. Using a redundant event collection model can minimize the single point of failure risk. Attackers may set the option of the sources of events with Limit-EventLog -LogName Security -OverflowAction DoNotOverwrite to not delete old Evenlog when the .evtx is full. By default the Security Log size is configured with the minimum value of 20 480KB (~23 000 EventLog). So if this option is enabled, all the new EventLogs will be automatically deleted. We can detect this behavior with the Security EventLog 1104. Attackers may delete .evtx with del C:\\Windows\\System32\\winevt\\logs\\Security.evtx or Remove-Item C:\\Windows\\System32\\winevt\\logs\\Security.evtx after having disabled and stopped the Eventlog service. As the EventLog service is disabled and stopped, the .evtx files are no longer used by this service and can be deleted. The new EventLog will be Unavailable until the configuration is reset. Attackers may use the powershell command Remove-EventLog -LogName Security to unregister source of events that are part of Windows (Application, Security\u2026). This command deletes the security EventLog (which also generates EventId 1102) but the new Eventlogs are still recorded until the system is rebooted . After the System is rebooted, the Security log is unregistered and doesn\u2019t log any new Eventlog. However logs generated between the command and the reboot are still available in the .evtx file. Analytic 1 - User Activity from Clearing Event Logs (source=\"WinEventLog:Security\" EventCode IN (1100, 1102, 1104)) OR (source=\"WinEventLog:System\" EventCode IN (104)) .002 Clear Linux or Mac System Logs Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs. .003 Clear Command History Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, ~/.bash_history, or /var/log/shell.log. Analytic 1 - Deletion of command history files (source=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=\"23\") OR (source=\"WinEventLog:Security\" EventCode=\"4663\") FilePath LIKE '%ConsoleHost_history.txt%' AND ObjectType == \"File\" AND (UserAccessList LIKE '%1537%' OR UserAccessList LIKE '%DELETE%')) .004 File Deletion Monitor for unexpected deletion of files from the system .008 Clear Mailbox Data Monitor for deletion of generated artifacts on a host system, including logs or captured files such as quarantined emails. On Windows 10, mail application data is stored in C:\\Users\\Username\\AppData\\Local\\Comms\\Unistore\\data. On Linux, mail data is stored in /var/spool/mail or /var/mail. On macOS, mail data is stored in ~/Library/Mail. .009 Clear Persistence Monitor for a file that may delete or alter generated artifacts associated with persistence on a host system. ICS T0872 Indicator Removal on Host Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Enterprise T1490 Inhibit System Recovery The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity. File: File Metadata contextual information about a file, including attributes such as the file's name, size, type, content (e.g., signatures, headers, media), user/owner, permissions, timestamps, and other related properties. File metadata provides insights into a file's characteristics and can be used to detect malicious activity, unauthorized modifications, or other anomalies. Examples: File Ownership and Permissions: Checking the owner and permissions of a critical configuration file like /etc/passwd on Linux or C:\\Windows\\System32\\config\\SAM on Windows. Timestamps: Analyzing the creation, modification, and access timestamps of a file. File Content and Signatures: Extracting the headers of an executable file to verify its signature or detect packing/obfuscation. File Attributes: Analyzing attributes like hidden, system, or read-only flags in Windows. File Hashes: Generating MD5, SHA-1, or SHA-256 hashes of files to compare against threat intelligence feeds. File Location: Monitoring files located in unusual directories or paths, such as temporary or user folders. This data component can be collected through the following measures: Windows Sysinternals Tools: Use AccessEnum or PSFile to retrieve metadata about file access and permissions. Windows Event Logs: Enable object access auditing and monitor events like 4663 (Object Access) and 5140 (A network share object was accessed). PowerShell: Use Get-Item or Get-ChildItem cmdlets: Get-ChildItem -Path \"C:\\Path\\To\\Directory\" -Recurse | Select-Object Name, Length, LastWriteTime, Attributes Linux File System Commands: Use ls -l or stat to retrieve file metadata: stat /path/to/file Auditd: Configure audit rules to log metadata access: auditctl -w /path/to/file -p wa -k file_metadata Filesystem Integrity Tools: Tools like tripwire or AIDE (Advanced Intrusion Detection Environment) can monitor file metadata changes. macOS FSEvents: Use FSEvents to track file metadata changes. Endpoint Security Framework (ESF): Capture metadata-related events via ESF APIs. Command-Line Tools: Use ls -l or xattr for file attributes: ls -l@ /path/to/file SIEM Integration Forward file metadata logs from endpoint or network devices to a SIEM for centralized analysis. File: File Metadata contextual information about a file, including attributes such as the file's name, size, type, content (e.g., signatures, headers, media), user/owner, permissions, timestamps, and other related properties. File metadata provides insights into a file's characteristics and can be used to detect malicious activity, unauthorized modifications, or other anomalies. Examples: File Ownership and Permissions: Checking the owner and permissions of a critical configuration file like /etc/passwd on Linux or C:\\Windows\\System32\\config\\SAM on Windows. Timestamps: Analyzing the creation, modification, and access timestamps of a file. File Content and Signatures: Extracting the headers of an executable file to verify its signature or detect packing/obfuscation. File Attributes: Analyzing attributes like hidden, system, or read-only flags in Windows. File Hashes: Generating MD5, SHA-1, or SHA-256 hashes of files to compare against threat intelligence feeds. File Location: Monitoring files located in unusual directories or paths, such as temporary or user folders. This data component can be collected through the following measures: Windows Sysinternals Tools: Use AccessEnum or PSFile to retrieve metadata about file access and permissions. Windows Event Logs: Enable object access auditing and monitor events like 4663 (Object Access) and 5140 (A network share object was accessed). PowerShell: Use Get-Item or Get-ChildItem cmdlets: Get-ChildItem -Path \"C:\\Path\\To\\Directory\" -Recurse | Select-Object Name, Length, LastWriteTime, Attributes Linux File System Commands: Use ls -l or stat to retrieve file metadata: stat /path/to/file Auditd: Configure audit rules to log metadata access: auditctl -w /path/to/file -p wa -k file_metadata Filesystem Integrity Tools: Tools like tripwire or AIDE (Advanced Intrusion Detection Environment) can monitor file metadata changes. macOS FSEvents: Use FSEvents to track file metadata changes. Endpoint Security Framework (ESF): Capture metadata-related events via ESF APIs. Command-Line Tools: Use ls -l or xattr for file attributes: ls -l@ /path/to/file SIEM Integration Forward file metadata logs from endpoint or network devices to a SIEM for centralized analysis. Domain ID Name Detects Enterprise T1548 Abuse Elevation Control Mechanism Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). .001 Setuid and Setgid Monitor the file system for files that have the setuid or setgid bits set. Enterprise T1554 Compromise Host Software Binary Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment Enterprise T1543 .003 Create or Modify System Process: Windows Service Adversaries may modify the binary file for an existing service to achieve Persistence while potentially Defense Evasion. If a newly created or modified runs as a service, it may indicate APT activity. However, services are frequently installed by legitimate software. A well-tuned baseline is essential to differentiating between benign and malicious service modifications. Look for events where a file was created and then later run as a service. In these cases, a new service has been created or the binary has been modified. Many programs, such as msiexec.exe, do these behaviors legitimately and can be used to help validate legitimate service creations/modifications. Enterprise T1565 Data Manipulation Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc that would aid in the manipulation of data to hide activity .003 Runtime Data Manipulation Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc that would aid in the manipulation of data to hide activity Enterprise T1546 Event Triggered Execution Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc. .006 LC_LOAD_DYLIB Addition Changes to binaries that do not line up with application updates or patches are also extremely suspicious. Enterprise T1222 File and Directory Permissions Modification Monitor and investigate attempts to modify ACLs and file/directory ownership. .001 Windows File and Directory Permissions Modification Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified. Adversaries sometimes modify object access rights at the operating system level. There are varying motivations behind this action - they may not want some files/objects to be changed on systems for persistence reasons and therefore provide admin only rights; also, they may want files to be accessible with lower levels of permissions. Windows environment logs can be noisy, so we take the following into consideration: We need to exclude events generated by the local system (subject security ID \"NT AUTHORITY\\SYSTEM\") and focus on actual user events. When a permission modification is made for a folder, a new event log is generated for each subfolder and file under that folder. It is advised to group logs based on handle ID or user ID. The Windows security log (event ID 4670) also includes information about the process that modifies the file permissions. It is advised to focus on uncommon process names, and it is also uncommon for real-users to perform this task without a GUI. Pseudocode Event ID is for Windows Security Log (Event ID 4670 - Permissions on an object were changed). Windows Event ID 4719 (An Attempt Was Made to Access An Object) can also be used to alert on changes to Active Directory audit policy for a system. Analytic 1 - Access Permission Modification for Windows (source=\"*WinEventLog:Security\" EventCode IN (4670, 4719)) Object_Type=\"File\" Security_ID!=\"NT AUTHORITY\\SYSTEM\" .002 Linux and Mac File and Directory Permissions Modification Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. This looks for any invocations of chmod. Note that this is likely to be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod. Linux environment logs can be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod. Analytic 1 - Access Permission Modification for Linux sourcetype=linux_logs CommandLine=\"chmod*\" Enterprise T1564 Hide Artifacts Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions that may attempt to hide artifacts associated with their behaviors to evade detection. .001 Hidden Files and Directories Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions may set files and directories to be hidden to evade detection mechanisms. .004 NTFS File Attributes Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA. [20] .007 VBA Stomping If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the PROJECT stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the PROJECT stream will inhibit attempts of reading the VBA source code through the GUI.[21] .009 Resource Forking Identify files with the com.apple.ResourceFork extended attribute and large data amounts stored in resource forks. .014 Extended Attributes Monitor for the presence of custom extended attributes not whitelisted based on developer workflows. Enterprise T1070 Indicator Removal Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. .006 Timestomp Monitor for modifications to file metadata. Compare the $STANDARD_INFORMATION and $FILE_NAME attributes in the Master File Table (MFT).[22] Additionally, look for nanoseconds in a timestamp matching \"0000000\". This often shows the use of an automated tool such as Metasploit.[22] ICS T0872 Indicator Removal on Host Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Enterprise T1570 Lateral Tool Transfer Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts. ICS T0867 Lateral Tool Transfer Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts. Enterprise T1036 Masquerading Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters\"\\u202E\", \"[U+202E]\", and \"%E2%80%AE\". Check and ensure that file headers/signature and extensions match using magic bytes detection and/or file signature validation.[23] In Linux, the file command may be used to check the file signature.[24] .001 Invalid Code Signature Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers. .002 Right-to-Left Override Monitor for common formats of RTLO characters within filenames such as \\u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it. .003 Rename Legitimate Utilities Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. .005 Match Legitimate Resource Name or Location Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect. .006 Space after Filename Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious. .007 Double File Extension Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc. ICS T0849 Masquerading Collect file hashes. Monitor for file names that do not match their expected hash. Perform file monitoring. Files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters\"\\u202E\", \"[U+202E]\", and \"%E2%80%AE\". For added context on adversary procedures and background see Masquerading Mitigation and applicable sub-techniques. Enterprise T1027 Obfuscated Files or Information Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc. File-based signatures may be capable of detecting code obfuscation depending on the methods used.[25][26][27] .001 Binary Padding Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. .002 Software Packing Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code. .003 Steganography Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography. .004 Compile After Delivery Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc. .007 Dynamic API Resolution Depending on the method used to obfuscate API function calls, a file-based signature may be capable of detecting dynamical resolution.[25][26][27] .008 Stripped Payloads Detecting the presence of stripped payloads may be difficult and unwarranted in real-time, though analyzing contextual data about files (such as content and character entropy) may highlight attempts at obfuscation. .009 Embedded Payloads Monitor contextual data about a file that may highlight embedded payloads, which may include information such as name, the content (ex: signature, headers, or data/media), file size, etc.; correlate with other suspicious behavior to reduce false positives. .010 Command Obfuscation Scripts containing obfuscated content may have higher entropy of characters/strings. .012 LNK Icon Smuggling Monitor contextual data about a file that may highlight embedded malicious content, which may include information such as name, the content (ex: signature, headers, or data/media), file size, etc.; correlate with other suspicious behavior to reduce false positives. .013 Encrypted/Encoded File Monitor for and analyze files which contain content with large entropy, as this may indicate potentially malicious encrypted data. .014 Polymorphic Code Monitor for and analyze files which contain content with large entropy, as this may indicate potentially malicious compressed or encrypted data. .015 Compression Monitor data about archive files, such as the signatures and the filenames inside of ZIP archives. Files which contain content with large entropy may indicate potentially malicious compressed data. .016 Junk Code Insertion When executed, the resulting process from files containing dead code may exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. Enterprise T1055 Process Injection Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/owner, permissions, etc. .013 Process Doppelg\u00e4nging Scan file objects reported during the PsSetCreateProcessNotifyRoutine, [28] which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. [29] Also consider comparing file objects loaded in memory to the corresponding file on disk. [30] Enterprise T1553 Subvert Trust Controls Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers. .001 Gatekeeper Bypass Review false values under the LSFileQuarantineEnabled entry in an application's Info.plist file (required by every application). false under LSFileQuarantineEnabled indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified LSFileQuarantineEnabled entry will default to not setting the quarantine flag. QuarantineEvents is a SQLite database containing a list of all files assigned the com.apple.quarantine attribute, located at ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed. [31] .002 Code Signing Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers. .005 Mark-of-the-Web Bypass Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd). Enterprise T1195 Supply Chain Compromise Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ((sourcetype=\"WinEventLog:Microsoft-Windows-Sysmon/Operational\" EventCode=15) OR (sourcetype=\"WinEventLog:Security\" EventCode=4663)) OR (source=\"/var/log/audit/audit.log\" SYSCALL=\"open\" path IN (\"/bin\", \"/usr/bin\", \"/etc\"))| eval risk_score=case( like(path, \"%system32%\"), 7, like(path, \"%/usr/local/bin%\"), 6, like(path, \"%Program Files%\"), 5)| where risk_score >= 5| stats count by host, user, path, process, risk_score| table _time, host, user, path, process, risk_score .001 Compromise Software Dependencies and Development Tools Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. (EventCode=15 OR EventCode=4663) OR (source=\"/var/log/audit/audit.log\" SYSCALL=\"open\" path IN (\"/usr/bin/gcc\", \"/usr/bin/make\", \"/usr/local/bin/node\", \"/opt/build-tools/\"))| eval risk_score=case( like(path, \"%npm%\"), 7, like(path, \"%python%\"), 6, like(path, \"%gcc%\"), 6, like(path, \"%make%\"), 5)| where risk_score >= 5| stats count by host, user, path, process, risk_score| table _time, host, user, path, process, risk_score .002 Compromise Software Supply Chain Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ICS T0862 Supply Chain Compromise Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures. Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/owner, permissions, etc. File: File Modification Changes made to a file, including updates to its contents, metadata, access permissions, or attributes. These modifications may indicate legitimate activity (e.g., software updates) or unauthorized changes (e.g., tampering, ransomware, or adversarial modifications). Examples: Content Modifications: Changes to the content of a configuration file, such as modifying /etc/ssh/sshd_config on Linux or C:\\Windows\\System32\\drivers\\etc\\hosts on Windows. Permission Changes: Altering file permissions to allow broader access, such as changing a file from 644 to 777 on Linux or modifying NTFS permissions on Windows. Attribute Modifications: Changing a file's attributes to hidden, read-only, or system on Windows. Timestamp Manipulation: Adjusting a file's creation or modification timestamp using tools like touch in Linux or timestomping tools on Windows. Software or System File Changes: Modifying system files such as boot.ini, kernel modules, or application binaries. This data component can be collected through the following measures: Windows Event Logs: Enable file system auditing to monitor file modifications using Security Event ID 4670 (File System Audit) or Sysmon Event ID 2 (File creation time changed). PowerShell: Use Get-ItemProperty or Get-Acl cmdlets to monitor file properties: Get-Item -Path \"C:\\path\\to\\file\" | Select-Object Name, Attributes, LastWriteTime Linux File System Monitoring: Use tools like auditd with rules to monitor file modifications: auditctl -w /path/to/file -p wa -k file_modification Inotify: Use inotifywait to watch for real-time changes to files or directories: inotifywait -m /path/to/file macOS Endpoint Security Framework (ESF): Monitor file modification events using ESF APIs. Audit Framework: Configure audit rules to track file changes. Command-Line Tools: Use fs_usage to monitor file activities: fs_usage -w /path/to/file SIEM Tools Collect logs from endpoint agents (e.g., Sysmon, Auditd) and file servers to centralize file modification event data. File: File Modification Changes made to a file, including updates to its contents, metadata, access permissions, or attributes. These modifications may indicate legitimate activity (e.g., software updates) or unauthorized changes (e.g., tampering, ransomware, or adversarial modifications). Examples: Content Modifications: Changes to the content of a configuration file, such as modifying /etc/ssh/sshd_config on Linux or C:\\Windows\\System32\\drivers\\etc\\hosts on Windows. Permission Changes: Altering file permissions to allow broader access, such as changing a file from 644 to 777 on Linux or modifying NTFS permissions on Windows. Attribute Modifications: Changing a file's attributes to hidden, read-only, or system on Windows. Timestamp Manipulation: Adjusting a file's creation or modification timestamp using tools like touch in Linux or timestomping tools on Windows. Software or System File Changes: Modifying system files such as boot.ini, kernel modules, or application binaries. This data component can be collected through the following measures: Windows Event Logs: Enable file system auditing to monitor file modifications using Security Event ID 4670 (File System Audit) or Sysmon Event ID 2 (File creation time changed). PowerShell: Use Get-ItemProperty or Get-Acl cmdlets to monitor file properties: Get-Item -Path \"C:\\path\\to\\file\" | Select-Object Name, Attributes, LastWriteTime Linux File System Monitoring: Use tools like auditd with rules to monitor file modifications: auditctl -w /path/to/file -p wa -k file_modification Inotify: Use inotifywait to watch for real-time changes to files or directories: inotifywait -m /path/to/file macOS Endpoint Security Framework (ESF): Monitor file modification events using ESF APIs. Audit Framework: Configure audit rules to track file changes. Command-Line Tools: Use fs_usage to monitor file activities: fs_usage -w /path/to/file SIEM Tools Collect logs from endpoint agents (e.g., Sysmon, Auditd) and file servers to centralize file modification event data. Domain ID Name Detects Enterprise T1548 Abuse Elevation Control Mechanism On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the LOG_INPUT and LOG_OUTPUT directives in the /etc/sudoers file. Consider monitoring for /usr/libexec/security_authtrampoline executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. .001 Setuid and Setgid Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user\u2019s context. .003 Sudo and Sudo Caching On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the LOG_INPUT and LOG_OUTPUT directives in the /etc/sudoers file. .006 TCC Manipulation Monitor for changes to files associated with TCC settings, such as /Library/Application Support/com.apple.TCC/TCC.db and the overwrites file. Enterprise T1098 Account Manipulation Monitor for changes made to files related to account settings, such as /etc/ssh/sshd_config and the authorized_keys file for each user on a system. .004 SSH Authorized Keys Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config. Enterprise T1547 Boot or Logon Autostart Execution Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. .001 Registry Run Keys / Startup Folder Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders. [32] .006 Kernel Modules and Extensions Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot. .007 Re-opened Applications Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened. .008 LSASS Driver Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems. .009 Shortcut Modification Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections. .013 XDG Autostart Entries Malicious XDG autostart entries may be detected by auditing file modification events within the /etc/xdg/autostart and ~/.config/autostart directories. Depending on individual configurations, defenders may need to query the environment variables $XDG_CONFIG_HOME or $XDG_CONFIG_DIRS to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline. .015 Login Items All login items created via shared file lists are viewable by using the System Preferences GUI or in the ~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm file.[9][10][11][12] These locations should be monitored and audited. Enterprise T1037 Boot or Logon Initialization Scripts Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties. .002 Login Hook Monitor for changes to login hook files (/Library/Preferences/com.apple.loginwindow.plist), especially by unusual accounts outside of normal administration duties. .003 Network Logon Script Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties .004 RC Scripts Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory. On ESXi servers, the /etc/rc.local.d/local.sh file should almost always be empty.[33] .005 Startup Items Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder Enterprise T1554 Compromise Host Software Binary Monitor changes to client software that do not correlate with known software or patch cycles. Enterprise T1543 Create or Modify System Process Monitor for changes to files associated with system-level processes. .001 Launch Agent Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications. .002 Systemd Service Systemd service unit files may be detected by auditing file creation and modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and /home/$username/.config/systemd/user/ directories, as well as associated symbolic links. Systemd generators may be modified in system-wide directories such as /run/systemd/system-generators/, /etc/systemd/system-generators or user-specific directories such as /run/systemd/user-generators/. .004 Launch Daemon Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence. Enterprise T1485 Data Destruction Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:\\Windows\\System32. ICS T0809 Data Destruction Monitor for changes made to a large quantity of files for unexpected modifications in both user directories and directories used to store programs and OS components (e.g., C:\\Windows\\System32). Enterprise T1486 Data Encrypted for Impact Monitor for changes made to files in user directories. Enterprise T1565 Data Manipulation Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity .001 Stored Data Manipulation Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity .003 Runtime Data Manipulation Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity Enterprise T1491 Defacement Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes. .001 Internal Defacement Monitor internal and websites for unplanned content changes. .002 External Defacement Monitor external websites for unplanned content changes. Enterprise T1140 Deobfuscate/Decode Files or Information Monitor for changes made to files for unexpected modifications that attempt to hide artifacts. On Windows, Event ID 4663 (Security Log - An attempt was made to access an object) can be used to alert on suspicious file accesses (e.g., attempting to write to a file which shouldn\u2019t be further modified) that may coincide with attempts to hide artifacts. Enterprise T1546 Event Triggered Execution Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. .002 Screensaver Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity. Note: Although there are no standard events for file modification, Windows Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on attempted accesses of screensaver files (typically ending in a file extension of .scr). .004 Unix Shell Configuration Modification Monitor for changes to /etc/profile and /etc/profile.d, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.[34] .005 Trap Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal. .006 LC_LOAD_DYLIB Addition Monitor file systems for changes to application binaries and invalid checksums/signatures. .008 Accessibility Features Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. .011 Application Shimming Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. .013 PowerShell Profile Locations where profile.ps1 can be stored should be monitored for modifications. [14] Example profile locations include:* $PsHome\\Profile.ps1* $PsHome\\Microsoft.{HostProgram}_profile.ps1* $Home\\My Documents\\PowerShell\\Profile.ps1* $Home\\My Documents\\PowerShell\\Microsoft.{HostProgram}_profile.ps1 .014 Emond Monitor emond rules creation by checking for files modified in /etc/emond.d/rules/ and /private/var/db/emondClients. .017 Udev Rules Monitor the creation and modification of files in the directories where udev rules are located: /etc/udev/rules.d/, /run/udev/rules.d/, /lib/udev/rules.d/, /usr/lib/udev/rules.d/, and /usr/local/lib/udev/rules.d/. Analyze and monitor changes to RUN assignment key.[35][36] Enterprise T1203 Exploitation for Client Execution Monitor file system changes associated with exploitation, such as suspicious files dropped by browsers, Office apps, or third-party programs, which can be used for further stages of attack. Analytic 1 - identifies file creations or modifications associated with commonly exploited software sourcetype=linux_auditd| search file_path IN (\"/Users//Library/\", \"C:\\Users\\\\AppData\\Roaming\\\", \"/home/*/.config/\", \"/var/tmp/\")| stats count by file_path process_name user| where process_name IN (\"chrome.exe\", \"firefox.exe\", \"winword.exe\", \"excel.exe\", \"acrord32.exe\", \"flashplayer.exe\") Enterprise T1187 Forced Authentication Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources. Analytic 1 - Modifications to files known to be used for forced authentication attacks. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4663) | where match(ObjectName, \"(?i)\\(.*\\.)?(lnk|scf|url|doc|dot|xls|ppt|pdf|html)$\")| where match(ObjectName, \"(?i)(desktop|public|downloads|temp|cache|start menu|startup)\") Enterprise T1564 Hide Artifacts Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection. .002 Hidden Users Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the /Library/Preferences/com.apple.loginwindow plist file for unexpected modifications to the Hide500Users key value on macOS.[37] .003 Hidden Window Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the apple.awt.UIElement or any other suspicious plist tag in plist files and flag them. .004 NTFS File Attributes There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: file.ext:ads[.ext]) is commonly associated with ADSs. [38] [39] [40] For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f. .005 Hidden File System Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded. .008 Email Hiding Rules On MacOS systems, monitor for modifications to the RulesActiveState.plist, SyncedRules.plist, UnsyncedRules.plist, and MessageRules.plist files.[41] Enterprise T1574 Hijack Execution Flow Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious. .001 DLL Monitor for changes made to .manifest / .local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. To detect DLL substitution, monitor for changes made to DLLs in trusted locations, such as C:\\Windows\\System32. .004 Dylib Hijacking Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. .005 Executable Installer File Permissions Weakness Monitor for changes to binaries and service executables that may normally occur during software updates. .006 Dynamic Linker Hijacking Monitor for changes to files associated with loading shared libraries such as LD_PRELOAD on Linux (such as /etc/ld.so.preload) and DYLD_INSERT_LIBRARIES on macOS. .008 Path Interception by Search Order Hijacking Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names. .009 Path Interception by Unquoted Path Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references. .010 Services File Permissions Weakness Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving. Enterprise T1562 Impair Defenses Monitor changes made to configuration files that contain settings for logging and defensive tools. .012 Disable or Modify Linux Audit System Monitor changes made to the /etc/audit/audit.rules file containing the sequence of auditctl commands loaded at boot time. Enterprise T1070 Indicator Removal Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. .002 Clear Linux or Mac System Logs Monitor for changes made to system log files, typically stored in /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes .003 Clear Command History Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, ~/.bash_history, or /var/log/shell.log, for unexpected modifications to contents, access permissions, and attributes. Analytic 1 : Modification of access rights to command history files (source=\"WinEventLog:Security\" EventCode IN (4663, 4670) AND Path=\"ConsoleHost_history.txt\" AND ObjectType=\"File\") AND (UserAccessList=\"1539\" OR UserAccessList=\"WRITE_DAC\") OR (ObjectNewSd=\";FA\" OR ObjectNewSd=\";FW\" OR ObjectNewSd=\";BU*\") .006 Timestomp Monitor for unexpected modifications to file timestamps. .007 Clear Network Connection History and Configurations Monitor changes to files that may be indicators of deleting or altering malicious network configuration settings as well as generated artifacts on a host system that highlight network connection history, such as Default.rdp or /var/log/. .008 Clear Mailbox Data Monitor for changes made to generated artifacts on a host system, including logs or captured files such as quarantined emails. On Windows 10, mail application data is stored in C:\\Users\\Username\\AppData\\Local\\Comms\\Unistore\\data. On Linux, mail data is stored in /var/spool/mail or /var/mail. On macOS, mail data is stored in ~/Library/Mail. .009 Clear Persistence Monitor for changes made to a file may delete or alter generated artifacts associated with persistence on a host system. .010 Relocate Malware Monitor for changes to files that may highlight malware or otherwise potentially malicious payloads being copied between different file/folder locations on a host. ICS T0872 Indicator Removal on Host Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. Enterprise T1056 Input Capture Monitor for changes made to files for unexpected modifications to access permissions and attributes. Monitor for changes to files associated with loading shared libraries such as LD_PRELOAD on Linux (such as /etc/ld.so.preload) and DYLD_INSERT_LIBRARIES on macOS. Analytic 1 - Unexpected file modifications. index=security sourcetype=\"WinEventLog:Security\" EventCode=4663 | where Object_Type=\"File\" AND Access_Mask IN (\"0x2\", \"0x4\", \"0x20\", \"0x80\", \"0x100\") .003 Web Portal Capture Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content. .004 Credential API Hooking Monitor for changes to files associated with loading shared libraries such as LD_PRELOAD on Linux (such as /etc/ld.so.preload) and DYLD_INSERT_LIBRARIES on macOS. Enterprise T1036 Masquerading Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Windows Event ID 4663 (An Attempt Was Made to Access An Object) can be used to alert on attempted file accesses that may be associate with Masquerading. .003 Rename Legitimate Utilities Monitor for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled. Note: There are no standard Windows events for file modification. However, Event ID 4663 (An attempt was made to access an object) can be used to audit and alert on attempts to access system utility binaries; the \"Accesses\" field can be used to filter by type of access (e.g., MODIFY vs DELETE). .008 Masquerade File Type Check and ensure that file headers/signature and extensions match using magic bytes detection and/or file signature validation.[23] In Linux, the file command may be used to check the file signature.[24] ICS T0849 Masquerading Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Enterprise T1556 Modify Authentication Process Monitor for suspicious modification of files associated with authentication processes, such as configuration files and module paths (e.g. /etc/pam.d/). Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files. Also monitor for access to certificates and cryptographic keys material. Analytic 1 - Unauthorized modifications to authentication-related files. index=security sourcetype IN (\"WinEventLog:Security\", \"WinEventLog:Microsoft-Windows-Sysmon/Operational\", \"linux_audit\", \"macos_secure\")(EventCode=4663 OR EventCode=11 OR EventCode=13 OR (sourcetype=\"linux_audit\" AND (syscall IN (\"creat\", \"open\", \"openat\", \"write\", \"chmod\", \"chown\", \"unlink\"))) OR (sourcetype=\"macos_secure\" AND action=\"file_write\"))| eval TargetFile=coalesce(ObjectName, FileName, target_file)| search TargetFile IN ( \"C:\\Windows\\System32\\config\\SAM\", \"C:\\Windows\\System32\\config\\system\", \"C:\\Windows\\System32\\config\\security\", \"C:\\Windows\\System32\\lsass.exe\", \"C:\\Windows\\System32\\Drivers\\etc\\hosts\", \"/etc/passwd\", \"/etc/shadow\", \"/etc/pam.d/\", \"/etc/security/\", \"/etc/sshd_config\", \"/etc/ssh/sshd_config\", \"/Library/Preferences/com.apple.loginwindow.plist\", \"/Library/Security/authorization\", \"/etc/krb5.conf\", \"/etc/krb5.keytab\", \"/etc/pam.conf\", \"/etc/security/access.conf\", \"/etc/security/limits.conf\", \"/etc/security/namespace.conf\", \"/etc/security/sepermit.conf\", \"/etc/security/time.conf\")| eval User=coalesce(Account_Name, user, uid, user_name)| eval Platform=case( sourcetype==\"WinEventLog:Security\", \"Windows\", sourcetype==\"wineventlog:sysmon\", \"Windows\", sourcetype==\"linux_audit\", \"Linux\", sourcetype==\"macos_secure\", \"macOS\", true(), \"Unknown\") .001 Domain Controller Authentication Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).[42] Analytic 1 - Unauthorized changes to authentication-related DLLs. index=windows sourcetype=WinEventLog:Security ( (EventCode=4663 AND Object_Type=\"File\" AND Object_Name IN (\"C:\\Windows\\System32\\lsass.exe\", \"C:\\Windows\\System32\\samlib.dll\", \"C:\\Windows\\System32\\cryptdll.dll\", \"C:\\Windows\\System32\\samsrv.dll\")) OR (EventCode=4662 AND Object_Type=\"File\" AND Object_Name IN (\"C:\\Windows\\System32\\lsass.exe\", \"C:\\Windows\\System32\\samlib.dll\", \"C:\\Windows\\System32\\cryptdll.dll\", \"C:\\Windows\\System32\\samsrv.dll\")) OR (EventCode=4670 AND Object_Name IN (\"C:\\Windows\\System32\\lsass.exe\", \"C:\\Windows\\System32\\samlib.dll\", \"C:\\Windows\\System32\\cryptdll.dll\", \"C:\\Windows\\System32\\samsrv.dll\"))) .003 Pluggable Authentication Modules Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files. Analytic 1 - Unauthorized changes to PAM configuration and module paths. index=os sourcetype=\"linux_audit\" OR sourcetype=\"auditd\" (type=\"MODIFY\" OR type=\"CREATE\" OR type=\"DELETE\") (file=\"/etc/pam.d/\" OR file=\"/usr/lib/security/\" OR file=\"/lib/security/*\") .004 Network Device Authentication Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.[43][44] Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image. .007 Hybrid Identity Monitor for suspicious modification of files associated with hybrid identity authentication processes, such as configuration files. Monitor for access to certificates and cryptographic keys material. Enterprise T1601 Modify System Image Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction with Patch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file. Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised. [43] Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. [44] .001 Patch System Image Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7 Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13 .002 Downgrade System Image Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction with Patch System Image, it may be appropriate to also verify the integrity of the vendor provided operating system image file. Enterprise T1137 Office Application Startup Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups. .001 Office Template Macros Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated .002 Office Test Monitor for changes made to files that may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. .006 Add-ins Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Enterprise T1647 Plist File Modification Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from \\~/Library/Scripts or \\~/Library/Preferences. Also, monitor for significant changes to any path pointers in a modified plist. Enterprise T1653 Power Settings Monitor for unexpected changes to configuration files associated with the power settings of a system. Enterprise T1542 Pre-OS Boot On UEFI boot systems, monitor for newly modified files in the ESP, especially ones whose modification times do not match other files or files in C:\\Windows\\Boot\\EFI.[45] .003 Bootkit On UEFI boot systems, monitor for newly modified files in the ESP, especially ones whose modification times do not match other files or files in C:\\Windows\\Boot\\EFI.[45] Enterprise T1055 Process Injection Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. .009 Proc Memory Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases. ICS T0873 Project File Infection Monitor for unexpected changes to project files, although if the malicious modification occurs in tandem with legitimate changes it will be difficult to isolate the unintended changes by analyzing only file systems modifications. Enterprise T1014 Rootkit Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR. [46] Enterprise T1053 Scheduled Task/Job Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Analytic 1 - Look for task file modifications with unusual parameters. index=security_logs OR index=system_logs(sourcetype=\"docker_events\" OR sourcetype=\"kubernetes_events\" OR sourcetype=\"wineventlog:security\" OR sourcetype=\"linux_secure\" OR sourcetype=\"syslog\" OR sourcetype=\"file_monitoring\")| eval platform=case( sourcetype==\"docker_events\" OR sourcetype==\"kubernetes_events\", \"Containers\", sourcetype==\"wineventlog:security\", \"Windows\", sourcetype==\"linux_secure\" OR sourcetype==\"syslog\", \"Linux\", sourcetype==\"mac_os_events\", \"macOS\")| search ( (platform=\"Containers\" AND (event_type=\"file_modify\" AND (file_path=\"/etc/cron.d/\" OR file_path=\"/etc/systemd/system/\" OR file_path=\"/etc/crontab\"))) OR (platform=\"Windows\" AND EventCode=4663 AND (ObjectName=\"C:\\Windows\\System32\\Tasks\\\" OR ObjectName=\"C:\\Windows\\Tasks\\\")) OR (platform=\"Linux\" AND (file_path=\"/etc/cron.d/\" OR file_path=\"/etc/systemd/system/\" OR file_path=\"/etc/crontab\")) OR (platform=\"macOS\" AND (file_path=\"/Library/LaunchDaemons/\" OR file_path=\"/Library/LaunchAgents/\"))) .002 At On Windows, monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, all at jobs are stored in /var/spool/cron/atjobs/.[47] Analytic 1 - Look for task file modifications with unusual parameters. (Linux) index=linux_logs sourcetype=syslog \"at\" \"/var/spool/cron/atjobs/\"| rex \"user=(?\\w+)\" Analytic 2 - Look for task file modifications with unusual parameters. (Windows) index=windows_logs sourcetype=WinEventLog:System EventCode=4663 Object_Type=\"File\"| rex field=_raw \"Object_Name=(?[^\\r\\n]+)\"| search file_path=\"at\"| where NOT (user=\"SYSTEM\" AND file_path=\"C:\\Windows\\Tasks\\allowed_task.job\") .003 Cron Monitor modifications to crontab files or system-wide cron directories. Monitor for changes made to files for unexpected modifications to access permissions and attributes. Analytic 1 - Modified Files in Linux Cron Directories index=linux sourcetype:cron_logs:scheduled_tasks\" | search \"modification\" AND (file_path=\"/etc/crontab\" OR file_path=\"/var/spool/cron/crontabs/\" OR file_path=\"/etc/cron.d/\") .005 Scheduled Task Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc. Analytic 1 - Look for task file modifications with unusual parameters. sourcetype=WinEventLog:Security (EventCode=4663 OR file_path=\"C:\\Windows\\System32\\Tasks\\*\")| stats count by user host file_path action| where action=\"Write\" OR action=\"Create\" .006 Systemd Timers Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links. Analytic 1 - Look for systemd timer file modifications with unusual parameters. sourcetype=linux_file_audit (file_path=\"/etc/systemd/system/.timer\" OR file_path=\"/etc/systemd/system/.service\" OR file_path=\"~/.config/systemd/user/.timer\" OR file_path=\"/usr/lib/systemd/system/.timer\")| stats count by user host file_path action| where action=\"Create\" OR action=\"Write\" Enterprise T1505 Server Software Component Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems. .003 Web Shell Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems. .004 IIS Components Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to %windir%\\system32\\inetsrv\\config\\applicationhost.config could indicate an IIS module installation.[48][49] .005 Terminal Services DLL Monitor unexpected changes and/or interactions with termsrv.dll, which is typically stored in %SystemRoot%\\System32\\. Enterprise T1489 Service Stop Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users. ICS T0881 Service Stop Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users. Enterprise T1553 Subvert Trust Controls Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[50] Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \"Hide Microsoft Entries\" and \"Hide Windows Entries\" are both deselected.[50] On macOS, the removal of the com.apple.quarantine flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates. .001 Gatekeeper Bypass The removal of the com.apple.quarantine flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates. .003 SIP and Trust Provider Hijacking Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.[50] Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \"Hide Microsoft Entries\" and \"Hide Windows Entries\" are both deselected.[50] Enterprise T1569 System Services Track changes to critical service-related files (e.g., /etc/systemd/system/, /etc/init.d/, and service binaries on Linux, C:\\Windows\\System32\\services.exe on Windows, or /Library/LaunchDaemons on macOS). Analytic 1 - Unusual file modifications related to system services. sourcetype=file_monitor| search file_path IN (\"/etc/systemd/system/\", \"/etc/init.d/\", \"/Library/LaunchDaemons/*\", \"C:\\Windows\\System32\\services.exe\") .001 Launchctl Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users /Library/LaunchAgents or /Library/LaunchDaemons folders. Launch Agent or Launch Daemon with executable paths pointing to /tmp and /Shared folders locations are potentially suspicious. Analytic 1 - Suspicious plist file modifications. sourcetype=osquery OR sourcetype=FSEvents| search file_path IN (\"/Library/LaunchAgents/\", \"/Library/LaunchDaemons/\")| where file_action=\"modified\" AND new_executable_path IN (\"/tmp/\", \"/Shared/\") .003 Systemctl Every systemd service must have a corresponding unit file on disk which can be monitored. Unit files are located in the /etc/systemd/system, /usr/lib/systemd/system/, and /home/$username/.config/systemd/user/ directories. Analytic 1 - suspicious modification of service unit files sourcetype=auditd(path IN (\"/etc/systemd/system/\", \"/usr/lib/systemd/system/\", \"/home//.config/systemd/user/\") AND (syscall=\"open\" OR syscall=\"write\"))| stats count by file_path, user, process_name, _time| where NOT match(file_path, \"expected_admin_changes\")| sort -_time Enterprise T1080 Taint Shared Content Monitor for files that write or overwrite many files to a network shared directory may be suspicious.Track file modification events in shared directories, especially modifications that alter executables or scripts. Monitor for signs of binary tampering, such as changes to .DLL or .EXE files that were previously trusted. Look for metadata changes, such as new authors or timestamps inconsistent with expected changes. sourcetype=\"WinEventLog:Security\" EventCode=4663 OR sourcetype=\"linux:audit\" syscall=\"write\"| search ObjectType=\"File\" AccessMask=\"0x2\"| stats count by ObjectName, AccountName, ProcessName, SourceIPAddress, _time| eval modification_suspicious=if(match(ObjectName, \"\\.exe$|\\.dll$|\\.lnk$\") AND ProcessName!=\"approved_tool.exe\", \"suspicious\", \"normal\")| where modification_suspicious=\"suspicious\" Enterprise T1600 Weaken Encryption File Modification .001 Reduce Key Space There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation. .002 Disable Crypto Hardware There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation. References Microsoft. (2018, May 31). File Management (Local File Systems). Retrieved September 28, 2021. Chrome Enterprise and Education Help. (n.d.). Use Chrome Browser with Roaming User Profiles. Retrieved March 28, 2023. Arntz, P. (2016, March 30). The Windows Vault . Retrieved November 23, 2020. ise. (2019, February 19). Password Managers: Under the Hood of Secrets Management. Retrieved January 22, 2021. Schroeder, W. & Christensen, L. (2021, June 22). Certified Pre-Owned - Abusing Active Directory Certificate Services. Retrieved August 2, 2022. Syynimaa, N. (2022, February 15). Stealing and faking Azure AD device identities. Retrieved August 3, 2022. French, D. (2018, October 2). Detecting Attempts to Steal Passwords from Memory. Retrieved October 11, 2019. French, D., Filar, B.. (2020, March 21). A Chain Is No Stronger Than Its Weakest LNK. Retrieved November 30, 2020. Apple. (n.d.). Open items automatically when you log in on Mac. Retrieved October 1, 2021. hoakley. (2021, September 16). How to run an app or tool at startup. Retrieved October 5, 2021. Patrick Wardle. (2018, July 23). Block Blocking Login Items. Retrieved October 1, 2021. Stokes, Phil. (2019, June 17). HOW MALWARE PERSISTS ON MACOS. Retrieved September 10, 2019. Chad Tilbury. (2023, May 22). Finding Evil WMI Event Consumers with Disk Forensics. Retrieved February 9, 2024. Malware Archaeology. (2016, June). WINDOWS POWERSHELL LOGGING CHEAT SHEET - Win 7/Win 2008 or later. Retrieved June 24, 2016. Elastic. (n.d.). Abnormal Process ID or Lock File Created. Retrieved September 19, 2024. DFIR. (2024, May 16). The 'Invisibility Cloak' - Slash-Proc Magic. Retrieved April 11, 2025. Chris Ross. (2018, October 17). Persistent Credential Theft with Authorization Plugins. Retrieved April 22, 2021. Truvis Thornton. (2023, September 25). Visual Studio Code: embedded reverse shell and how to block, create Sentinel Detection, and add Environment Prevention. Retrieved March 24, 2025. NSA Cybersecurity Directorate. (n.d.). Mitigating Web Shells. Retrieved July 22, 2021. Harrell, C. (2012, December 11). Extracting ZeroAccess from NTFS Extended Attributes. Retrieved June 3, 2016. Cole, R., Moore, A., Stark, G., Stancill, B. (2020, February 5). STOMP 2 DIS: Brilliance in the (Visual) Basics. Retrieved September 17, 2020. Lina Lau. (2022, April 28). Defence Evasion Technique: Timestomping Detection \u2013 NTFS Forensics. Retrieved September 30, 2024. Li, V. (2019, October 2). Polyglot Files: a Hacker\u2019s best friend. Retrieved September 27, 2022. Kessler, G. (2022, December 9). GCK'S FILE SIGNATURES TABLE. Retrieved August 23, 2022. Brennan, M. (2022, February 16). Hackers No Hashing: Randomizing API Hashes to Evade Cobalt Strike Shellcode Detection. Retrieved August 22, 2022. Choi, S. (2015, August 6). Obfuscated API Functions in Modern Packers. Retrieved August 22, 2022. Jason (jxb5151). (2021, January 28). findapihash.py. Retrieved August 22, 2022. Microsoft. (n.d.). PsSetCreateProcessNotifyRoutine routine. Retrieved December 20, 2017. Liberman, T. & Kogan, E. (2017, December 7). Lost in Transaction: Process Doppelg\u00e4nging. Retrieved December 20, 2017. hasherezade. (2017, December 18). Process Doppelg\u00e4nging \u2013 a new way to impersonate a process. Retrieved December 20, 2017. hoakley. (2020, October 29). Quarantine and the quarantine flag. Retrieved September 13, 2021. Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016. Asher Langton. (2022, December 9). A Custom Python Backdoor for VMWare ESXi Servers. Retrieved March 26, 2025. Patrick Wardle. (2019, September 17). Writing a File Monitor with Apple's Endpoint Security Framework. Retrieved December 17, 2020. Eder P. Ignacio. (2024, February 21). Leveraging Linux udev for persistence. Retrieved September 26, 2024. Ruben Groenewoud. (2024, August 29). Linux Detection Engineering - A Sequel on Persistence Mechanisms. Retrieved October 16, 2024. Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved December 10, 2021. Marlin, J. (2013, March 24). Alternate Data Streams in NTFS. Retrieved March 21, 2018. Moe, O. (2018, January 14). Putting Data in Alternate Data Streams and How to Execute It. Retrieved June 30, 2018. Moe, O. (2018, April 11). Putting Data in Alternate Data Streams and How to Execute It - Part 2. Retrieved June 30, 2018. Apple. (n.d.). Use rules to manage emails you receive in Mail on Mac. Retrieved June 14, 2021. Dell SecureWorks. (2015, January 12). Skeleton Key Malware Analysis. Retrieved April 8, 2019. Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Cisco IOS Image File Verification. Retrieved October 19, 2020. Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Cisco IOS Run-Time Memory Integrity Verification. Retrieved October 19, 2020. Microsoft Incident Response. (2023, April 11). Guidance for investigating attacks using CVE-2022-21894: The BlackLotus campaign. Retrieved February 12, 2025. Wikipedia. (2016, June 1). Rootkit. Retrieved June 2, 2016. Craig Rowland. (2019, July 25). Getting an Attacker IP Address from a Malicious Linux At Job. Retrieved October 15, 2021. Microsoft. (2007, November 24). IIS Modules Overview. Retrieved June 17, 2021. Hromcov\u00e1, Z., Cherepanov, A. (2021). Anatomy of Native IIS Malware. Retrieved September 9, 2021. Graeber, M. (2017, September). Subverting Trust in Windows. Retrieved January 31, 2018. "
},
{
"id": 1138,
"title": "User Account, Data Source DS0002",
"path": "/datasources/DS0002/index.html",
"content": " User Account A profile representing a user, device, service, or application used to authenticate and access resources ID: DS0002 \u24d8 Platforms: Containers, ESXi, IaaS, Identity Provider, Linux, Office Suite, SaaS, Windows, macOS \u24d8 Collection Layers: Cloud Control Plane, Container, Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.2 Created: 20 October 2021 Last Modified: 18 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) User Account: User Account Authentication An attempt (successful and failed login attempts) by a user, service, or application to gain access to a network, system, or cloud-based resource. This typically involves credentials such as passwords, tokens, multi-factor authentication (MFA), or biometric validation. Data Collection Measures: Host-Based Authentication Logs Windows Event Logs Event ID 4776 \u2013 NTLM authentication attempt. Event ID 4624 \u2013 Successful user logon. Event ID 4625 \u2013 Failed authentication attempt. Event ID 4648 \u2013 Explicit logon with alternate credentials. Linux/macOS Authentication Logs /var/log/auth.log, /var/log/secure \u2013 Logs SSH, sudo, and other authentication attempts. AuditD \u2013 Tracks authentication events via PAM modules. macOS Unified Logs \u2013 /var/db/diagnostics captures authentication failures. Cloud Authentication Logs Azure AD Logs Sign-in Logs \u2013 Tracks authentication attempts, MFA challenges, and conditional access failures. Audit Logs \u2013 Captures authentication-related configuration changes. Microsoft Graph API \u2013 Provides real-time sign-in analytics. Google Workspace & Office 365 Google Admin Console \u2013 User Login Report tracks login attempts and failures. Office 365 Unified Audit Logs \u2013 Captures logins across Exchange, SharePoint, and Teams. AWS CloudTrail & IAM Tracks authentication via AWS IAM AuthenticateUser and sts:GetSessionToken. Logs failed authentications to AWS Management Console and API requests. Container Authentication Monitoring Kubernetes Authentication Logs kubectl audit logs \u2013 Captures authentication attempts for service accounts and admin users. Azure Kubernetes Service (AKS) and Google Kubernetes Engine (GKE) \u2013 Logs IAM authentication events. User Account: User Account Authentication An attempt (successful and failed login attempts) by a user, service, or application to gain access to a network, system, or cloud-based resource. This typically involves credentials such as passwords, tokens, multi-factor authentication (MFA), or biometric validation. Data Collection Measures: Host-Based Authentication Logs Windows Event Logs Event ID 4776 \u2013 NTLM authentication attempt. Event ID 4624 \u2013 Successful user logon. Event ID 4625 \u2013 Failed authentication attempt. Event ID 4648 \u2013 Explicit logon with alternate credentials. Linux/macOS Authentication Logs /var/log/auth.log, /var/log/secure \u2013 Logs SSH, sudo, and other authentication attempts. AuditD \u2013 Tracks authentication events via PAM modules. macOS Unified Logs \u2013 /var/db/diagnostics captures authentication failures. Cloud Authentication Logs Azure AD Logs Sign-in Logs \u2013 Tracks authentication attempts, MFA challenges, and conditional access failures. Audit Logs \u2013 Captures authentication-related configuration changes. Microsoft Graph API \u2013 Provides real-time sign-in analytics. Google Workspace & Office 365 Google Admin Console \u2013 User Login Report tracks login attempts and failures. Office 365 Unified Audit Logs \u2013 Captures logins across Exchange, SharePoint, and Teams. AWS CloudTrail & IAM Tracks authentication via AWS IAM AuthenticateUser and sts:GetSessionToken. Logs failed authentications to AWS Management Console and API requests. Container Authentication Monitoring Kubernetes Authentication Logs kubectl audit logs \u2013 Captures authentication attempts for service accounts and admin users. Azure Kubernetes Service (AKS) and Google Kubernetes Engine (GKE) \u2013 Logs IAM authentication events. Domain ID Name Detects Enterprise T1119 Automated Collection Monitor Azure AD (Entra ID) Sign In logs for suspicious Applications authenticating to the Graph API or other sensitive Resources using User Agents attributed to scripting interpreters such as python or Powershell. Analytic 1 - Suspicious applications, unusual user agents (e.g., python, PowerShell), anomalous IP addresses, and unmanaged devices index=\"azure_ad_signin_logs\" Operation=\"UserLogin\"| search UserAgent=\"python\" OR UserAgent=\"PowerShell\"| stats count by ClientIP, UserId, DeviceProperties| where ClientIP!=\"expected_ip\" OR DeviceProperties!=\"expected_properties\" Enterprise T1110 Brute Force Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Analytic 1 - Multiple failed logon attempts across different accounts. (index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379))OR (index=security sourcetype=\"linux_secure\" message=\"Failed password\")OR (index=security sourcetype=\"macos_secure\" message=\"Failed to authenticate user\") .001 Password Guessing Monitor for many failed authentication attempts across various accounts that may result from password guessing attempts.[1] Analytic 1 - Multiple failed logon attempts across different accounts. (index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR(index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\") .002 Password Cracking Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379) Analytic 1 - Multiple failed logon attempts across different accounts. (index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR(index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\") .003 Password Spraying Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.[1] Analytic 1 - Multiple failed logon attempts across different accounts, especially targeting common usernames. (index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR(index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\") .004 Credential Stuffing Monitor for many failed authentication attempts across various accounts that may result from credential stuffing attempts.[1] Analytic 1 - Multiple failed logon attempts across different accounts, especially using commonly used passwords. (index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 5379)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR(index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\") | where match(Password, \"(?i)(Password123|Password1|123456|12345678|qwerty|abc123|letmein|welcome|monkey|admin|login|pass|guest|root)\") Enterprise T1538 Cloud Service Dashboard Correlate other security systems with login information, such as user accounts, IP addresses, and login names.[1] Enterprise T1212 Exploitation for Credential Access Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen. Analytic 1 - High number of failed authentication attempts or unusual logon patterns. (index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 4648)) OR (index=os sourcetype=\"linux_secure\" message=\"Failed password\") OR (index=os sourcetype=\"macos_secure\" message=\"Failed to authenticate user\") Enterprise T1606 .002 Forge Web Credentials: SAML Tokens Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim. Enterprise T1070 Indicator Removal Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware. .003 Clear Command History Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file. .005 Network Share Connection Removal Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity. Enterprise T1556 Modify Authentication Process Monitor for account authentications in which MFA credentials are not provided by the user account to the authenticating entity. Analytic 1 - Windows Successful logons without MFA. index=your_index sourcetype=\"WinEventLog:Security\" EventCode=4624 | eval MFA_used=if(searchmatch(\"MFA\"), \"Yes\", \"No\")| where MFA_used=\"No\"| stats count by Account_Name, Logon_Type, IpAddress, ComputerName Analytic 2 - Linux Successful logons without MFA. index=your_index sourcetype=\"linux_secure\" OR sourcetype=\"macos_auth\" \"Accepted password\" | eval MFA_used=if(searchmatch(\"MFA\"), \"Yes\", \"No\")| where MFA_used=\"No\"| stats count by user, src_ip, host .006 Multi-Factor Authentication Monitor for account authentications in which MFA credentials are not provided by the user account to the authenticating entity. Enterprise T1621 Multi-Factor Authentication Request Generation Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism. Analytic 1 - Anomalous IP addresses, unmanaged devices, unusual User Agents indicating automation tools or scripts, high failure rates index=\"m365_audit_logs\" Operation=\"UserLoginFailed\" ErrorNumber=\"500121\"| stats count by ClientIP, UserId, DeviceProperties| where ClientIP!=\"expected_ip\" OR DeviceProperties!=\"expected_properties\" Enterprise T1207 Rogue Domain Controller Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with \"GC/\") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235\u20134B06\u201311D1-AB04\u201300C04FC2DCD2) can be set without logging.[2] A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete. Enterprise T1552 Unsecured Credentials Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials. Analytic 1 - Failed or unusual logon attempts using compromised credentials. (index=security sourcetype=\"WinEventLog:Security\" EventCode IN (4625, 4648)) OR(index=os sourcetype=\"linux_secure\" message=\"Failed password\" OR message=\"Invalid user\") OR(index=os sourcetype=\"macos_secure\" event_type=\"authentication_failure\" OR message=\"Failed to authenticate user\") .005 Cloud Instance Metadata API It may be possible to detect adversary use of credentials they have obtained such as in Valid Accounts. Analytic 1 - Failed or unusual logon attempts using compromised credentials. index=security sourcetype=\"aws:cloudtrail\" eventName=\"ConsoleLogin\" (errorMessage=\"Failed authentication\" OR errorMessage=\"Invalid login attempt\") ORindex=security sourcetype=\"azure:activity\" operationName=\"Sign-in activity\" (status=\"Failed\" OR status=\"Error\") ORindex=security sourcetype=\"gcp:activity\" protoPayload.methodName=\"google.iam.v1.logging.GetPolicy\" (protoPayload.status.message=\"Failed\" OR protoPayload.status.message=\"Invalid login attempt\") .007 Container API It may be possible to detect adversary use of credentials they have obtained such as in Valid Accounts. Analytic 1 - Failed or unusual logon attempts using compromised credentials. (index=containers sourcetype=\"docker:events\" action=\"create\" container_name=\"\" user!=\"root\") OR(index=containers sourcetype=\"kubernetes:api\" verb IN (\"create\", \"patch\", \"delete\") objectRef.resource IN (\"pods\", \"secrets\") user.username!=\"system:serviceaccount:\") Enterprise T1550 Use Alternate Authentication Material Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. .002 Pass the Hash Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process. .003 Pass the Ticket Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. Enterprise T1078 Valid Accounts Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. .001 Default Accounts Monitor for logins to default accounts outside of expected contexts. For example, in ESXi environments, monitor the /var/log/hostd.log file for logins to the vpxuser default user account that do not come from the vCenter server IP or use the VMWare-Client/X.X.X user-agent.[3] .002 Domain Accounts Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux Note: For Windows, Security Logs events, including Event ID 4624, can be monitored to track user login behavior. For Linux, auditing frameworks that support File Integrity Monitoring (FIM), including the audit daemon (auditd), can be used to alert on changes to files that store login information. These files include: /etc/login.defs, /etc/securetty, /var/log/faillog, /var/log/lastlog, /var/log/tallylog. For MacOS, auditing frameworks that support capturing information on user logins, such as OSQuery, can be used to audit user account logins and authentications. .003 Local Accounts Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux. Notes: For Linux, auditing frameworks such as the audit daemon (auditd) can be used to alert on changes to log files that track authentication attempts, including /var/log/secure. .004 Cloud Accounts Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account, account usage at atypical hours, or account authentication from unexpected locations or IP addresses. Service accounts should only be accessible from IP addresses from within the cloud environment.[4] For example, in Azure AD environments, consider using Identity Protection to flag risky sign-ins based on location, device compliance, and other factors. In Okta environments, configure Suspicious Activity Reporting to allow users to report suspicious logins and other behavior they do not recognize.[5] Analytic 1 - Anomalous IP addresses, unmanaged devices, unusual User Agents indicating automation tools or scripts Note: To detect suspicious logins to cloud accounts using valid credentials from unusual sources. \"`index=\"\"m365_audit_logs\"\" Operation=\"\"UserLoggedIn\"\" ResultStatus=\"\"Success\"\"| stats count by ClientIP, UserId, DeviceProperties| where ClientIP!=\"\"expected_ip\"\" OR DeviceProperties!=\"\"expected_properties\"\"\" ICS T0859 Valid Accounts Monitor for an authentication attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. User Account: User Account Creation The initial establishment of a new user, service, or machine account within an operating system, cloud environment, or identity management system. Data Collection Measures: Host-Based Logging Windows Event Logs Event ID 4720 \u2013 A new user account was created. Event ID 4732/4735 \u2013 A user was added to a privileged group. Event ID 4798 \u2013 Enumeration of user accounts. Linux/macOS Authentication Logs /var/log/auth.log, /var/log/secure \u2013 Logs useradd, adduser, passwd, and groupmod activities. AuditD \u2013 Detects new account creation via PAM (useradd, usermod). OSQuery \u2013 The users table tracks newly created accounts. Cloud-Based Logging Azure AD Logs Azure AD Audit Logs \u2013 Tracks new user and service account creation. Azure Graph API \u2013 Provides logs on new account provisioning. AWS IAM & CloudTrail Logs CreateUser, CreateRole \u2013 Tracks new IAM user creation. AttachRolePolicy \u2013 Identifies privilege escalation via account creation. Google Workspace & Office 365 Logs Google Admin Console \u2013 Logs user creation in User Accounts API. Microsoft 365 Unified Audit Log \u2013 Tracks new account provisioning. Container & Network Account Creation Logs Kubernetes Account Creation Logs kubectl audit logs \u2013 Detects new service account provisioning. GKE/Azure AKS Logs \u2013 Track new container service accounts. User Account: User Account Creation The initial establishment of a new user, service, or machine account within an operating system, cloud environment, or identity management system. Data Collection Measures: Host-Based Logging Windows Event Logs Event ID 4720 \u2013 A new user account was created. Event ID 4732/4735 \u2013 A user was added to a privileged group. Event ID 4798 \u2013 Enumeration of user accounts. Linux/macOS Authentication Logs /var/log/auth.log, /var/log/secure \u2013 Logs useradd, adduser, passwd, and groupmod activities. AuditD \u2013 Detects new account creation via PAM (useradd, usermod). OSQuery \u2013 The users table tracks newly created accounts. Cloud-Based Logging Azure AD Logs Azure AD Audit Logs \u2013 Tracks new user and service account creation. Azure Graph API \u2013 Provides logs on new account provisioning. AWS IAM & CloudTrail Logs CreateUser, CreateRole \u2013 Tracks new IAM user creation. AttachRolePolicy \u2013 Identifies privilege escalation via account creation. Google Workspace & Office 365 Logs Google Admin Console \u2013 Logs user creation in User Accounts API. Microsoft 365 Unified Audit Log \u2013 Tracks new account provisioning. Container & Network Account Creation Logs Kubernetes Account Creation Logs kubectl audit logs \u2013 Detects new service account provisioning. GKE/Azure AKS Logs \u2013 Track new container service accounts. Domain ID Name Detects Enterprise T1136 Create Account Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller). .001 Local Account Monitor for newly constructed user and service accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network, a Kubernetes cluster, or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller). .002 Domain Account Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller). .003 Cloud Account Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts, such as accounts that do not follow specified naming conventions or accounts created by unapproved users or sources.[6] Monitor for newly created admin accounts that go over a certain threshold of known admins. Analytic 1 - Unusual ActorPrincipalNames, creation of accounts with suspicious properties index=\"azure_ad_audit_logs\" Category=\"UserManagement\" Activity=\"Add user\"| search ActorPrincipalName=\"*\" AND IPAddress!=\"expected_ip\"| table Time, ActorPrincipalName, IPAddress, Target1UserPrincipalName, Target1DisplayName Enterprise T1564 Hide Artifacts Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection. .002 Hidden Users Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify. Enterprise T1036 Masquerading Monitor for newly constructed accounts with names that are unusually generic or identical to recently-deleted accounts. .010 Masquerade Account Name Monitor for newly constructed accounts with names that are unusually generic or identical to recently-deleted accounts. User Account: User Account Deletion The removal of a user, service, or machine account from an operating system, cloud identity management system, or directory service. Data Collection Measures: Host-Based Logging Windows Event Logs Event ID 4726 \u2013 A user account was deleted. Event ID 4733/4735 \u2013 A user was removed from a privileged group. Event ID 1102 \u2013 Security log was cleared (potential cover-up). Linux/macOS Authentication Logs /var/log/auth.log, /var/log/secure \u2013 Logs userdel, deluser, passwd -l. AuditD \u2013 Tracks account deletions via PAM events (userdel). OSQuery \u2013 The users table can detect account removal. Cloud-Based Logging Azure AD Logs Azure AD Audit Logs \u2013 Tracks user and service account deletions. Azure Graph API \u2013 Monitors identity changes. AWS IAM & CloudTrail Logs DeleteUser, DeleteRole \u2013 Tracks IAM user deletion. DetachRolePolicy \u2013 Identifies privilege revocation before deletion. Google Workspace & Office 365 Logs Google Admin Console \u2013 Logs user removal activities. Microsoft 365 Unified Audit Log \u2013 Captures deleted accounts in Active Directory. Container & Network Account Deletion Logs Kubernetes Service Account Deletion kubectl audit logs \u2013 Detects when service accounts are removed from pods. GKE/Azure AKS Logs \u2013 Track containerized identity removals. User Account: User Account Deletion The removal of a user, service, or machine account from an operating system, cloud identity management system, or directory service. Data Collection Measures: Host-Based Logging Windows Event Logs Event ID 4726 \u2013 A user account was deleted. Event ID 4733/4735 \u2013 A user was removed from a privileged group. Event ID 1102 \u2013 Security log was cleared (potential cover-up). Linux/macOS Authentication Logs /var/log/auth.log, /var/log/secure \u2013 Logs userdel, deluser, passwd -l. AuditD \u2013 Tracks account deletions via PAM events (userdel). OSQuery \u2013 The users table can detect account removal. Cloud-Based Logging Azure AD Logs Azure AD Audit Logs \u2013 Tracks user and service account deletions. Azure Graph API \u2013 Monitors identity changes. AWS IAM & CloudTrail Logs DeleteUser, DeleteRole \u2013 Tracks IAM user deletion. DetachRolePolicy \u2013 Identifies privilege revocation before deletion. Google Workspace & Office 365 Logs Google Admin Console \u2013 Logs user removal activities. Microsoft 365 Unified Audit Log \u2013 Captures deleted accounts in Active Directory. Container & Network Account Deletion Logs Kubernetes Service Account Deletion kubectl audit logs \u2013 Detects when service accounts are removed from pods. GKE/Azure AKS Logs \u2013 Track containerized identity removals. Domain ID Name Detects Enterprise T1531 Account Access Removal Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted). Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Enterprise T1070 Indicator Removal Monitor for unexpected deletions of user accounts. Windows event logs may highlight activity associated with an adversary's attempt to remove an account (e.g., Event ID 4726 - A user account was deleted). Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate account modification events with other indications of malicious activity where possible. .009 Clear Persistence Monitor for unexpected deletions of user accounts. Windows event logs may highlight activity associated with an adversary's attempt to remove an account (e.g., Event ID 4726 - A user account was deleted). Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate account modification events with other indications of malicious activity where possible. User Account: User Account Metadata Contextual data about an account, which may include a username, user ID, environmental data, etc. User Account: User Account Metadata Contextual data about an account, which may include a username, user ID, environmental data, etc. Domain ID Name Detects Enterprise T1134 Access Token Manipulation Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. .005 SID-History Injection Examine data in user\u2019s SID-History attributes Enterprise T1564 Hide Artifacts Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection. .002 Hidden Users Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and the Hide500Users key value in the /Library/Preferences/com.apple.loginwindow plist file set to TRUE.[7] Enterprise T1556 .005 Modify Authentication Process: Reversible Encryption Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.[8] Enterprise T1201 Password Policy Discovery Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. User Account: User Account Modification Changes made to an existing user, service, or machine account, including alterations to attributes, permissions, roles, authentication methods, or group memberships. Data Collection Measures: Host-Based Logging Windows Event Logs Event ID 4738 \u2013 A user account was changed. Event ID 4725 \u2013 A user account was disabled. Event ID 4724 \u2013 An attempt was made to reset an account's password. Event ID 4767 \u2013 A user account was unlocked. Linux/macOS Authentication Logs /var/log/auth.log, /var/log/secure \u2013 Tracks account modifications (usermod, chage, passwd). AuditD \u2013 Monitors account changes (useradd, usermod, gpasswd). OSQuery \u2013 Queries the users table for recent modifications. Cloud-Based Logging Azure AD Logs Azure AD Audit Logs \u2013 Tracks modifications to users and security groups. Azure Graph API \u2013 Captures changes to authentication policies and MFA settings. AWS IAM & CloudTrail Logs ModifyUser, UpdateLoginProfile \u2013 Captures changes to IAM user attributes. AttachUserPolicy, AddUserToGroup \u2013 Detects policy and group modifications. Google Workspace & Office 365 Logs Google Admin Console \u2013 Logs account changes, role modifications, and group membership updates. Microsoft 365 Unified Audit Log \u2013 Captures modifications to security settings and privileged account changes. Container & Network Account Modification Logs Kubernetes Service Account Changes kubectl audit logs \u2013 Detects service account modifications in Kubernetes clusters. GKE/Azure AKS Logs \u2013 Monitors role and permission changes. User Account: User Account Modification Changes made to an existing user, service, or machine account, including alterations to attributes, permissions, roles, authentication methods, or group memberships. Data Collection Measures: Host-Based Logging Windows Event Logs Event ID 4738 \u2013 A user account was changed. Event ID 4725 \u2013 A user account was disabled. Event ID 4724 \u2013 An attempt was made to reset an account's password. Event ID 4767 \u2013 A user account was unlocked. Linux/macOS Authentication Logs /var/log/auth.log, /var/log/secure \u2013 Tracks account modifications (usermod, chage, passwd). AuditD \u2013 Monitors account changes (useradd, usermod, gpasswd). OSQuery \u2013 Queries the users table for recent modifications. Cloud-Based Logging Azure AD Logs Azure AD Audit Logs \u2013 Tracks modifications to users and security groups. Azure Graph API \u2013 Captures changes to authentication policies and MFA settings. AWS IAM & CloudTrail Logs ModifyUser, UpdateLoginProfile \u2013 Captures changes to IAM user attributes. AttachUserPolicy, AddUserToGroup \u2013 Detects policy and group modifications. Google Workspace & Office 365 Logs Google Admin Console \u2013 Logs account changes, role modifications, and group membership updates. Microsoft 365 Unified Audit Log \u2013 Captures modifications to security settings and privileged account changes. Container & Network Account Modification Logs Kubernetes Service Account Changes kubectl audit logs \u2013 Detects service account modifications in Kubernetes clusters. GKE/Azure AKS Logs \u2013 Monitors role and permission changes. Domain ID Name Detects Enterprise T1548 Abuse Elevation Control Mechanism Log cloud API calls to assume, create, or impersonate additional roles, policies, and permissions. Review uses of just-in-time access to ensure that any justifications provided are valid and only expected actions were taken. .005 Temporary Elevated Cloud Access Log API calls to assume, create, or impersonate additional roles, policies, and permissions. Review uses of just-in-time access to ensure that any justifications provided are valid and only expected actions were taken. Enterprise T1531 Account Access Removal Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:Event ID 4723 - An attempt was made to change an account's passwordEvent ID 4724 - An attempt was made to reset an account's passwordEvent ID 4725 - A user account was disabled Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Enterprise T1098 Account Manipulation Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password. Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts. .001 Additional Cloud Credentials Monitor for unexpected changes to cloud user accounts, such as Azure Activity Logs highlighting malicious Service Principal and Application modifications. Monitor for the use of API and CLI commands that add passwords, access keys, or tokens to accounts, such as CreateAccessKey, GetFederationToken, and CreateLoginProfile in AWS or service-accounts keys create in GCP. Also monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account. .002 Additional Email Delegate Permissions Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts. .003 Additional Cloud Roles Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. Monitor for updates to IAM policies and roles attached to user accounts. Analytic 1 - Unusual ActorPrincipalNames, unexpected role assignments to sensitive roles (e.g., Global Admin) Note: To detect the assignment of additional cloud roles using potentially hijacked accounts. \"index=\"\"azure_ad_audit_logs\"\" Category=\"\"RoleManagement\"\" Activity=\"\"Add member to role\"\"| search ActorPrincipalName=\"\"*\"\" AND (Target1ModifiedProperty1NewValue=\"\"Global Administrator\"\" OR Target1ModifiedProperty2NewValue=\"\"Global Administrator\"\") AND IPAddress!=\"\"expected_ip\"\"| table Time, ActorPrincipalName, IPAddress, Target1UserPrincipalName, Target1ModifiedProperty1NewValue\" .005 Device Registration Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.[9] .006 Additional Container Cluster Roles Collect usage logs from accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to high-privileged cluster roles that go over a certain threshold of known admins. .007 Additional Local or Domain Groups Monitor events for changes to account objects and/or permissions on systems and the domain. Monitor for modification of account permissions in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts or machine accounts being unexpectedly added into security groups. Monitor for accounts assigned to admin roles, such as Windows domain administrators, that go over a certain threshold of known admins. Enterprise T1562 Impair Defenses Monitor for changes to account settings associated with users/tenants that may impact defensive logging capabilities, such as the Update User and Change User License events in the Azure AD audit log.[10] .008 Disable or Modify Cloud Logs Monitor for changes to account settings associated with users/tenants that may impact defensive logging capabilities, such as the Update User and Change User License events in the Azure AD audit log.[10] Enterprise T1556 Modify Authentication Process Monitor for the enrollment of devices and user accounts with alternative security settings that do not require MFA credentials for successful logon. Analytic 1 - Unauthorized modification of user accounts Windows (User Account Modification) index=your_index sourcetype=\"WinEventLog:Security\" EventCode IN (4720, 4722, 4724, 4738, 4725, 4732, 4733, 4735, 4737) | eval Risk_Level=if(MemberName=\"Domain Admins\" OR MemberName=\"Administrators\", \"High\", \"Low\")| stats count by TargetUserName, AccountName, EventCode, Risk_Level, ComputerName| where Risk_Level=\"High\" Analytic 2 - macOS/Linux (User Account Modification) index=your_index sourcetype=\"linux_secure\" OR sourcetype=\"macos_auth\" \"usermod\" OR \"passwd\" OR \"chpasswd\" OR \"adduser\" OR \"deluser\" OR \"vipw\" | stats count by user, command, src_ip, host | where command IN (\"usermod\", \"passwd\", \"chpasswd\", \"adduser\", \"deluser\", \"vipw\") .006 Multi-Factor Authentication Monitor for the enrollment of devices and user accounts with alternative security settings that do not require MFA credentials for successful logon. Monitor for attempts to disable MFA on individual user accounts.[1] Additionally, monitor for attempts to change or reset users\u2019 MFA factor settings. For example, in Okta environments, the event user.mfa.factor.reset_all will trigger when all MFA factors are reset for a user. [5] Analytic 1 - Unusual registration of MFA devices, changes to StrongAuthenticationPhoneAppDetail properties. index=\"m365_audit_logs\" Workload=\"AzureActiveDirectory\" Operation=\"Update user\" Actor=\"Azure MFA StrongAuthenticationService\"| search ObjectId!=\"expected_user_id\"| table CreationTime, Actor, ObjectId, IPAddress, ModifiedProperties Enterprise T1528 Steal Application Access Token Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a \"High severity app permissions\" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users. Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app\u2019s purpose, or apps with old \"Last authorized\" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps. Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access. Analytic 1 - Unauthorized app permissions or unusual activity patterns in app logs. (index=security sourcetype=\"WinEventLog:Security\" EventCode=4720 OR EventCode=4722 OR EventCode=4738) OR(index=azuread sourcetype=\"azure:activity\" operationName IN (\"Add member to role\", \"Update user\", \"Update group\")) OR(index=gsuite sourcetype=\"gsuite:admin\" event_type IN (\"UPDATE_USER\", \"ADD_USER_TO_GROUP\")) OR(index=o365 sourcetype=\"o365:management:activity\" operation IN (\"Add member to role\", \"Update user\", \"Update group\")) References Pany, D. & Hanley, C. (2023, May 3). Cloudy with a Chance of Bad Logs: Cloud Platform Log Configurations to Consider in Investigations. Retrieved October 16, 2023. Lucand,G. (2018, February 18). Detect DCShadow, impossible?. Retrieved March 30, 2018. Alex Marvi, Greg Blaum, and Ron Craft. (2023, June 28). Detection, Containment, and Hardening Opportunities for Privileged Guest Operations, Anomalous Behavior, and VMCI Backdoors on Compromised VMware Hosts. Retrieved March 26, 2025. Dror Alon. (2022, December 8). Compromised Cloud Compute Credentials: Case Studies From the Wild. Retrieved March 9, 2023. Okta Defensive Cyber Operations. (2023, August 31). Cross-Tenant Impersonation: Prevention and Detection. Retrieved March 4, 2024. Microsoft . (2022, September 16). Azure Active Directory security operations guide. Retrieved February 21, 2023. Amit Serper. (2016). Cybereason Lab Analysis OSX.Pirrit. Retrieved December 10, 2021. Metcalf, S. (2015, November 22). Dump Clear-Text Passwords for All Admins in the Domain Using Mimikatz DCSync. Retrieved November 15, 2021. Microsoft. (2022, March 22). DEV-0537 criminal actor targeting organizations for data exfiltration and destruction. Retrieved March 23, 2022. Mandiant. (2021, January 19). Remediation and Hardening Strategies for Microsoft 365 to Defend Against UNC2452. Retrieved January 22, 2021. "
},
{
"id": 1139,
"title": "Named Pipe, Data Source DS0023",
"path": "/datasources/DS0023/index.html",
"content": " Named Pipe Mechanisms that allow inter-process communication locally or over the network. A named pipe is usually found as a file and processes attach to it[1] ID: DS0023 \u24d8 Platforms: Linux, Windows, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Named Pipe: Named Pipe Metadata Contextual data about a named pipe on a system, including pipe name and creating process (ex: Sysmon EIDs 17-18) Data Collection Measures: Windows: Sysmon Event ID 17: Logs the creation of a named pipe. Sysmon Event ID 18: Logs connection attempts to a named pipe. Windows Security Event ID 5145: Logs access attempts to named pipes via SMB shares. ETW (Event Tracing for Windows): Provides deep telemetry into named pipe interactions. Linux/macOS: AuditD (mkfifo, open, read, write syscalls): Tracks FIFO (named pipe) creation and usage. Lsof (lsof -p <PID> or lsof | grep PIPE): Lists active named pipes and associated processes. Strace (strace -e open <process>): Monitors named pipe interactions. Endpoint Detection & Response (EDR): Capture named pipe events as part of process tracking. Memory Forensics: Volatility Plugin (pipescan): Enumerates named pipes in system memory. Rekall Framework: Identifies active named pipes and associated processes. Named Pipe: Named Pipe Metadata Contextual data about a named pipe on a system, including pipe name and creating process (ex: Sysmon EIDs 17-18) Data Collection Measures: Windows: Sysmon Event ID 17: Logs the creation of a named pipe. Sysmon Event ID 18: Logs connection attempts to a named pipe. Windows Security Event ID 5145: Logs access attempts to named pipes via SMB shares. ETW (Event Tracing for Windows): Provides deep telemetry into named pipe interactions. Linux/macOS: AuditD (mkfifo, open, read, write syscalls): Tracks FIFO (named pipe) creation and usage. Lsof (lsof -p <PID> or lsof | grep PIPE): Lists active named pipes and associated processes. Strace (strace -e open <process>): Monitors named pipe interactions. Endpoint Detection & Response (EDR): Capture named pipe events as part of process tracking. Memory Forensics: Volatility Plugin (pipescan): Enumerates named pipes in system memory. Rekall Framework: Identifies active named pipes and associated processes. Domain ID Name Detects Enterprise T1570 Lateral Tool Transfer Monitor for contextual data about named pipes on the system. References Microsoft. (2018, May 31). Named Pipes. Retrieved September 28, 2021. "
},
{
"id": 1140,
"title": "WMI, Data Source DS0005",
"path": "/datasources/DS0005/index.html",
"content": " WMI The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers[1][2] ID: DS0005 \u24d8 Platform: Windows \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) WMI: WMI Creation Initial construction of a WMI object, such as a filter, consumer, subscription, binding, or providers. Data Collection Measures: Windows Security Event Logs: Event ID 5861 (WMI Permanent Event Subscription) Event ID 5860 (WMI Event Filter Activity) Event ID 5857 (WMI Event Consumer Activity) Sysmon Logs: Sysmon Event ID 19 \u2013 WMI Event Filter Created Sysmon Event ID 20 \u2013 WMI Event Consumer Created Sysmon Event ID 21 \u2013 WMI Event Binding Created Endpoint Detection & Response (EDR) Detects WMI-based persistence techniques. WMI: WMI Creation Initial construction of a WMI object, such as a filter, consumer, subscription, binding, or providers. Data Collection Measures: Windows Security Event Logs: Event ID 5861 (WMI Permanent Event Subscription) Event ID 5860 (WMI Event Filter Activity) Event ID 5857 (WMI Event Consumer Activity) Sysmon Logs: Sysmon Event ID 19 \u2013 WMI Event Filter Created Sysmon Event ID 20 \u2013 WMI Event Consumer Created Sysmon Event ID 21 \u2013 WMI Event Binding Created Endpoint Detection & Response (EDR) Detects WMI-based persistence techniques. Domain ID Name Detects Enterprise T1546 Event Triggered Execution Monitor for newly constructed WMI Objects that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. .003 Windows Management Instrumentation Event Subscription Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence. [3] [4] Monitor for the creation of new WMI EventFilter, EventConsumer, and FilterToConsumerBinding events. Event ID 5861 is logged on Windows 10 systems when new EventFilterToConsumerBinding events are created.[5] Enterprise T1027 Obfuscated Files or Information Monitor for the creation of WMI Objects and values that may highlight storage of malicious data such as commands or payloads. .011 Fileless Storage Monitor for the creation of WMI Objects and values that may highlight storage of malicious data such as commands or payloads. Enterprise T1021 Remote Services Monitor for newly constructed WMI objects that is often used to log into a service that accepts remote connects. Enterprise T1047 Windows Management Instrumentation Monitor for newly constructed WMI objects that will execute malicious commands and payloads. Analytic 1 - WMI object creation events index=security sourcetype=\"WinEventLog:Microsoft-Windows-WMI-Activity/Operational\" (EventCode=5861 OR EventCode=5857 OR EventCode=5858) | eval CommandLine = coalesce(CommandLine, ParentCommandLine) | where (EventCode=5861 AND (CommandLine LIKE \"create\" OR CommandLine LIKE \"process\")) OR (EventCode=5857 AND (CommandLine LIKE \"exec\" OR CommandLine LIKE \"invoke\")) OR (EventCode=5858 AND (CommandLine LIKE \"payload\" OR CommandLine LIKE \"wmic\")) References Microsoft. (2018, May 31). WMI System Classes. Retrieved September 29, 2021. Microsoft. (2018, May 31). WMI Architecture. Retrieved September 29, 2021. Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016. French, D. (2018, October 9). Detecting & Removing an Attacker\u2019s WMI Persistence. Retrieved October 11, 2019. French, D., Murphy, B. (2020, March 24). Adversary tradecraft 101: Hunting for persistence using Elastic Security (Part 1). Retrieved December 21, 2020. "
},
{
"id": 1141,
"title": "Service, Data Source DS0019",
"path": "/datasources/DS0019/index.html",
"content": " Service A computer process that is configured to execute continuously in the background and perform system tasks, in some cases before any user has logged in[1][2] ID: DS0019 \u24d8 Platforms: ESXi, Linux, Windows, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.1 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Service: Service Creation The registration of a new service or daemon on an operating system. Data Collection Measures: Windows Event Logs Event ID 4697 - Captures the creation of a new Windows service. Event ID 7045 - Captures services installed by administrators or adversaries. Event ID 7034 - Could indicate malicious service modification or exploitation. Sysmon Logs Sysmon Event ID 1 - Process Creation (captures service executables). Sysmon Event ID 4 - Service state changes (detects service installation). Sysmon Event ID 13 - Registry modifications (captures service persistence changes). PowerShell Logging Monitor New-Service and Set-Service PowerShell cmdlets in Event ID 4104 (Script Block Logging). Linux/macOS Collection Methods AuditD & Syslog Daemon Logs (/var/log/syslog, /var/log/messages, /var/log/daemon.log) AuditD Rules: auditctl -w /etc/systemd/system -p wa -k service_creation Detects changes to systemd service configurations. Systemd Journals (journalctl -u <service_name>) Captures newly created systemd services. LaunchDaemons & LaunchAgents (macOS) Monitor /Library/LaunchDaemons/ and /Library/LaunchAgents/ for new plist files. Service: Service Creation The registration of a new service or daemon on an operating system. Data Collection Measures: Windows Event Logs Event ID 4697 - Captures the creation of a new Windows service. Event ID 7045 - Captures services installed by administrators or adversaries. Event ID 7034 - Could indicate malicious service modification or exploitation. Sysmon Logs Sysmon Event ID 1 - Process Creation (captures service executables). Sysmon Event ID 4 - Service state changes (detects service installation). Sysmon Event ID 13 - Registry modifications (captures service persistence changes). PowerShell Logging Monitor New-Service and Set-Service PowerShell cmdlets in Event ID 4104 (Script Block Logging). Linux/macOS Collection Methods AuditD & Syslog Daemon Logs (/var/log/syslog, /var/log/messages, /var/log/daemon.log) AuditD Rules: auditctl -w /etc/systemd/system -p wa -k service_creation Detects changes to systemd service configurations. Systemd Journals (journalctl -u <service_name>) Captures newly created systemd services. LaunchDaemons & LaunchAgents (macOS) Monitor /Library/LaunchDaemons/ and /Library/LaunchAgents/ for new plist files. Domain ID Name Detects Enterprise T1557 Adversary-in-the-Middle Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as remote logins or process creation events. .001 LLMNR/NBT-NS Poisoning and SMB Relay Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045. [3] Deploy an LLMNR/NBT-NS spoofing detection tool.[4] ICS T0830 Adversary-in-the-Middle Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045. Enterprise T1543 Create or Modify System Process Monitor for newly constructed services/daemons that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. .001 Launch Agent Monitor Launch Agent creation through additional plist files and utilities such as Objective-See\u2019s KnockKnock application. .002 Systemd Service Monitor for new constructed systemd services to repeatedly execute malicious payloads as part of persistence. .003 Windows Service Creation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 [5][6]), especially those associated with unknown/abnormal drivers. New, benign services may be created during installation of new software. Analytic 1 - Creation of new services with unusual directory paths such as temporal files in APPDATA (sourcetype=WinEventLog:Security EventCode=\"4697\") OR (sourcetype=WinEventLog:System EventCode=\"7045\") | where ServiceFilePath LIKE \"%APPDATA%\" OR ServiceImage LIKE \"%PUBLIC%\" .004 Launch Daemon Monitor for newly constructed services may create or modify Launch Daemons to execute malicious payloads as part of persistence. Enterprise T1564 Hide Artifacts Monitor for newly constructed services/daemons that may attempt to hide artifacts associated with their behaviors to evade detection. .006 Run Virtual Instance Monitor for newly constructed services/daemons that may carry out malicious operations using a virtual instance to avoid detection. Consider monitoring for new Windows Service, with respect to virtualization software. Enterprise T1036 Masquerading Monitor for newly constructed services/daemons that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. .004 Masquerade Task or Service Monitor for newly constructed services/daemons. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. ICS T0849 Masquerading Monitor for newly constructed services/daemons that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Enterprise T1569 System Services Track the creation of new services, which could indicate adversarial activity aimed at persistence or execution. Analytic 1 - Monitors service creation and modification activities sourcetype=service_logs| search service_action=\"create\" OR service_action=\"modify\"| where user NOT IN (\"known_admins\") AND service_name NOT IN (\"known_services\") .001 Launchctl Monitor the creation or modification of Launch Agents or Launch Daemons via the launchctl command. Analytic 1 - Create Service In Suspicious File Path sourcetype=osquery| search service_action=\"create\" OR service_action=\"modify\"| where user NOT IN (\"known_admins\") AND service_name IN (\"LaunchAgents\", \"LaunchDaemons\") .002 Service Execution Monitor newly constructed services that abuse control manager to execute malicious commands or payloads. Analytic 1 - Suspicious Service Creation sourcetype=WinEventLog:Security OR sourcetype=WinEventLog:System EventCode=4697 OR EventCode=7045| table _time, user, service_name, service_file_name, process_id| where service_file_name != \"legitimate_software_path\" // Exclude legitimate services .003 Systemctl Monitor the creation or modification of system services via the systemctl command. Analytic 1 - suspicious systemctl service creation sourcetype=auditd(command=\"systemctl\" AND command=\"enable\" OR command=\"create\")| stats count by user, command, process_name, _time| where NOT match(command, \"whitelisted_services\")| sort -_time Service: Service Metadata Contextual data about a service/daemon, which may include information such as name, service executable, start type, etc. Service: Service Metadata Contextual data about a service/daemon, which may include information such as name, service executable, start type, etc. Domain ID Name Detects Enterprise T1197 BITS Jobs BITS runs as a service and its status can be checked with the Sc query utility (sc query bits).[7] Enterprise T1574 Hijack Execution Flow Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data. .005 Executable Installer File Permissions Weakness Monitor for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques. .010 Services File Permissions Weakness Hashing of binaries and service executables could be used to detect replacement against historical data. Enterprise T1562 Impair Defenses Monitor contextual data about a service/daemon, which may include information such as name, service executable, start type that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. .001 Disable or Modify Tools Monitor for telemetry that provides context of security software services being disabled or modified. In cloud environments, monitor virtual machine logs for the status of cloud security agents. Spyware and malware remain a serious problem and Microsoft developed security services, Windows Defender and Windows Firewall, to combat this threat. In the event Windows Defender or Windows Firewall is turned off, administrators should correct the issue immediately to prevent the possibility of infection or further infection and investigate to determine if caused by crash or user manipulation.Note: Windows Event code 7036 from the System log identifies if a service has stopped or started. This analytic looks for \"Windows Defender\" or \"Windows Firewall\" that has stopped. Analytic 1 - User Activity from Stopping Windows Defensive Services (source=\"WinEventLog:System\" EventCode=\"7036\") ServiceName=\"Windows Defender\" OR ServiceName=\"Windows Firewall\" AND ServiceName=\"stopped*\" Enterprise T1490 Inhibit System Recovery Monitor the status of services involved in system recovery. Note: For Windows, Event ID 7040 can be used to alert on changes to the start type of a service (e.g., going from enabled at startup to disabled) associated with system recovery. Enterprise T1036 Masquerading Monitor for contextual data about a service/daemon, which may include information such as name, service executable, start type, etc. .004 Masquerade Task or Service Monitor for changes made to services for unexpected modifications to names, descriptions, and/or start types Enterprise T1021 .006 Remote Services: Windows Remote Management Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior. sourcetype=\"WinEventLog:System\" EventCode=7045| search ServiceName=\"WinRM\"| stats count by AccountName, ServiceName, ServiceFileName, _time| where count > 1| eval service_change=if(match(ServiceFileName, \"winrm.exe\"), \"suspicious\", \"normal\")| where service_change=\"suspicious\"| table _time, AccountName, ServiceName, ServiceFileName, service_change Enterprise T1489 Service Stop Alterations to the service binary path or the service startup type changed to disabled may be suspicious. ICS T0881 Service Stop Alterations to the service binary path or the service startup type changed to disabled may be suspicious. Service: Service Modification Changes made to an existing service or daemon, such as modifying the service name, start type, execution parameters, or security configurations. *Data Collection Measures: * Windows Event Logs Event ID 7040 - Detects modifications to the startup behavior of a service. Event ID 7045 - Can capture changes made to existing services. Event ID 7036 - Tracks when services start or stop, potentially indicating malicious tampering. Event ID 4697 - Can detect when an adversary reinstalls a service with different parameters. Sysmon Logs Sysmon Event ID 13 - Detects changes to service configurations in the Windows Registry (e.g., HKLM\\SYSTEM\\CurrentControlSet\\Services\\). Sysmon Event ID 1 - Can track execution of sc.exe or PowerShell Set-Service. PowerShell Logging Event ID 4104 (Script Block Logging) - Captures execution of commands like Set-Service, New-Service, or sc config. Command-Line Logging (Event ID 4688) - Tracks usage of service modification commands: sc config <service_name> start= auto sc qc <service_name> Linux/macOS Collection Methods Systemd Journals (journalctl -u <service_name>) Tracks modifications to systemd service configurations. Daemon Logs (/var/log/syslog, /var/log/messages, /var/log/daemon.log) Captures changes to service state and execution parameters. AuditD Rules for Service Modification Monitor modifications to /etc/systemd/system/ for new or altered service unit files: auditctl -w /etc/systemd/system/ -p wa -k service_modification Track execution of systemctl or service commands: auditctl -a always,exit -F arch=b64 -S execve -F a0=systemctl -F key=service_mod OSQuery for Linux/macOS Monitoring Query modified services using OSQuery\u2019s processes or system_info tables: SELECT * FROM systemd_units WHERE state != 'running'; macOS Launch Daemon/Agent Modification Monitor for changes in: /Library/LaunchDaemons/ /Library/LaunchAgents/ Track modifications to .plist files indicating persistence attempts. Service: Service Modification Changes made to an existing service or daemon, such as modifying the service name, start type, execution parameters, or security configurations. *Data Collection Measures: * Windows Event Logs Event ID 7040 - Detects modifications to the startup behavior of a service. Event ID 7045 - Can capture changes made to existing services. Event ID 7036 - Tracks when services start or stop, potentially indicating malicious tampering. Event ID 4697 - Can detect when an adversary reinstalls a service with different parameters. Sysmon Logs Sysmon Event ID 13 - Detects changes to service configurations in the Windows Registry (e.g., HKLM\\SYSTEM\\CurrentControlSet\\Services\\). Sysmon Event ID 1 - Can track execution of sc.exe or PowerShell Set-Service. PowerShell Logging Event ID 4104 (Script Block Logging) - Captures execution of commands like Set-Service, New-Service, or sc config. Command-Line Logging (Event ID 4688) - Tracks usage of service modification commands: sc config <service_name> start= auto sc qc <service_name> Linux/macOS Collection Methods Systemd Journals (journalctl -u <service_name>) Tracks modifications to systemd service configurations. Daemon Logs (/var/log/syslog, /var/log/messages, /var/log/daemon.log) Captures changes to service state and execution parameters. AuditD Rules for Service Modification Monitor modifications to /etc/systemd/system/ for new or altered service unit files: auditctl -w /etc/systemd/system/ -p wa -k service_modification Track execution of systemctl or service commands: auditctl -a always,exit -F arch=b64 -S execve -F a0=systemctl -F key=service_mod OSQuery for Linux/macOS Monitoring Query modified services using OSQuery\u2019s processes or system_info tables: SELECT * FROM systemd_units WHERE state != 'running'; macOS Launch Daemon/Agent Modification Monitor for changes in: /Library/LaunchDaemons/ /Library/LaunchAgents/ Track modifications to .plist files indicating persistence attempts. Domain ID Name Detects Enterprise T1543 Create or Modify System Process Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. .001 Launch Agent Monitor for changes made to launch agents to repeatedly execute malicious payloads as part of persistence. .002 Systemd Service Analyze the contents of .service files present on the file system and ensure that they refer to legitimate, expected executables. .003 Windows Service Monitor for changes made to Windows services to repeatedly execute malicious payloads as part of persistence. .004 Launch Daemon Monitor services for changes made to Launch Daemons to execute malicious payloads as part of persistence. Enterprise T1574 .011 Hijack Execution Flow: Services Registry Permissions Weakness Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. ICS T0849 Masquerading Monitor for changes made to services that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. References Microsoft. (2017, March 30). Introduction to Windows Service Applications. Retrieved September 28, 2021. The Linux Foundation. (2006, January 11). An introduction to services, runlevels, and rc.d scripts. Retrieved September 28, 2021. Kuehn, E. (2018, April 11). Ever Run a Relay? Why SMB Relays Should Be On Your Mind. Retrieved February 7, 2019. Robertson, K. (2016, August 28). Conveigh. Retrieved November 17, 2017. Miroshnikov, A. & Hall, J. (2017, April 18). 4697(S): A service was installed in the system. Retrieved August 7, 2018. Hardy, T. & Hall, J. (2018, February 15). Use Windows Event Forwarding to help with intrusion detection. Retrieved August 7, 2018. Microsoft. (2011, July 19). Issues with BITS. Retrieved January 12, 2018. "
},
{
"id": 1142,
"title": "Logon Session, Data Source DS0028",
"path": "/datasources/DS0028/index.html",
"content": " Logon Session Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorization[1] ID: DS0028 \u24d8 Platforms: ESXi, IaaS, Identity Provider, Linux, Office Suite, SaaS, Windows, macOS \u24d8 Collection Layers: Cloud Control Plane, Host, Network Contributors: Center for Threat-Informed Defense (CTID) Version: 1.2 Created: 20 October 2021 Last Modified: 18 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Logon Session: Logon Session Creation The successful establishment of a new user session following a successful authentication attempt. This typically signifies that a user has provided valid credentials or authentication tokens, and the system has initiated a session associated with that user account. This data is crucial for tracking authentication events and identifying potential unauthorized access. Examples: Windows Systems Event ID: 4624 Logon Type: 2 (Interactive) or 10 (Remote Interactive via RDP). Account Name: JohnDoe Source Network Address: 192.168.1.100 Authentication Package: NTLM Linux Systems /var/log/utmp or /var/log/wtmp: Log format: login user [tty] from [source_ip] User: jane IP: 10.0.0.5 Timestamp: 2024-12-28 08:30:00 macOS Systems /var/log/asl.log or unified logging framework: Log: com.apple.securityd: Authentication succeeded for user 'admin' Cloud Environments Azure Sign-In Logs: Activity: Sign-in successful Client App: Browser Location: Unknown (Country: X) Google Workspace Activity: Login Event Type: successful_login Source IP: 203.0.113.55 This data component can be collected through the following measures: Windows Systems Event Logs: Monitor Security Event Logs using Event ID 4624 for successful logons. PowerShell Example: Get-EventLog -LogName Security -InstanceId 4624 Linux Systems Log Files: Monitor /var/log/utmp, /var/log/wtmp, or /var/log/auth.log for logon events. Tools: Use last or who commands to parse login records. macOS Systems Log Sources: Monitor /var/log/asl.log or Apple Unified Logs using the log show command. Command Example: log show --predicate 'eventMessage contains \"Authentication succeeded\"' --info Cloud Environments Azure AD: Use Azure Monitor to analyze sign-in logs. Example CLI Query: az monitor log-analytics query -w <workspace_id> --analytics-query \"AzureActivity | where ActivityStatus == 'Success' and OperationName == 'Sign-in'\" Google Workspace: Enable and monitor Login Audit logs from the Admin Console. Office 365: Use Audit Log Search in Microsoft 365 Security & Compliance Center for login-related events. Network Logs Sources: Network authentication mechanisms (e.g., RADIUS or TACACS logs). Enable EDR Monitoring: EDR tools monitor logon session activity, including the creation of new sessions. Configure alerts for: Suspicious logon types (e.g., Logon Type 10 for RDP or Type 5 for Service). Logons from unusual locations, accounts, or devices. Leverage EDR telemetry for session attributes like source IP, session duration, and originating process. Logon Session: Logon Session Creation The successful establishment of a new user session following a successful authentication attempt. This typically signifies that a user has provided valid credentials or authentication tokens, and the system has initiated a session associated with that user account. This data is crucial for tracking authentication events and identifying potential unauthorized access. Examples: Windows Systems Event ID: 4624 Logon Type: 2 (Interactive) or 10 (Remote Interactive via RDP). Account Name: JohnDoe Source Network Address: 192.168.1.100 Authentication Package: NTLM Linux Systems /var/log/utmp or /var/log/wtmp: Log format: login user [tty] from [source_ip] User: jane IP: 10.0.0.5 Timestamp: 2024-12-28 08:30:00 macOS Systems /var/log/asl.log or unified logging framework: Log: com.apple.securityd: Authentication succeeded for user 'admin' Cloud Environments Azure Sign-In Logs: Activity: Sign-in successful Client App: Browser Location: Unknown (Country: X) Google Workspace Activity: Login Event Type: successful_login Source IP: 203.0.113.55 This data component can be collected through the following measures: Windows Systems Event Logs: Monitor Security Event Logs using Event ID 4624 for successful logons. PowerShell Example: Get-EventLog -LogName Security -InstanceId 4624 Linux Systems Log Files: Monitor /var/log/utmp, /var/log/wtmp, or /var/log/auth.log for logon events. Tools: Use last or who commands to parse login records. macOS Systems Log Sources: Monitor /var/log/asl.log or Apple Unified Logs using the log show command. Command Example: log show --predicate 'eventMessage contains \"Authentication succeeded\"' --info Cloud Environments Azure AD: Use Azure Monitor to analyze sign-in logs. Example CLI Query: az monitor log-analytics query -w <workspace_id> --analytics-query \"AzureActivity | where ActivityStatus == 'Success' and OperationName == 'Sign-in'\" Google Workspace: Enable and monitor Login Audit logs from the Admin Console. Office 365: Use Audit Log Search in Microsoft 365 Security & Compliance Center for login-related events. Network Logs Sources: Network authentication mechanisms (e.g., RADIUS or TACACS logs). Enable EDR Monitoring: EDR tools monitor logon session activity, including the creation of new sessions. Configure alerts for: Suspicious logon types (e.g., Logon Type 10 for RDP or Type 5 for Service). Logons from unusual locations, accounts, or devices. Leverage EDR telemetry for session attributes like source IP, session duration, and originating process. Domain ID Name Detects Enterprise T1185 Browser Session Hijacking Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior. Enterprise T1538 Cloud Service Dashboard Monitor for newly constructed logon behavior across cloud service management consoles.[2] In AWS environments, look for the ConsoleLogin sign-in event. Enterprise T1526 Cloud Service Discovery Monitor for newly constructed logon behavior that may attempt to enumerate the cloud services running on a system after gaining access. Look for suspicious Applications and accounts authenticating to the Windows Azure Service Management API using User Agents values attributed to scripting utilities such as python or Powershell. Analytic 1 - Applications or accounts with unusual User Agents, anomalous IP addresses, unexpected locations, and usernames index=\"azure_ad_signin_logs\" Resource=\"Windows Azure Service Management API\" AND (UserAgent=\"python\" OR UserAgent=\"PowerShell\")| stats count by UserAgent, UserID, IPAddress, Location| where IPAddress!=\"expected_ip\" OR Location!=\"expected_location\"the new Enterprise T1213 Data from Information Repositories Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. [3] Sharepoint audit logging can also be configured to report when a user shares a resource. [4] The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. [5] In AWS environments, GuardDuty can be configured to report suspicious login activity in services such as RDS.[6] Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities. .001 Confluence Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter. [5] Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities. .002 Sharepoint Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents. [3] As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. Analytic 1 - Suspicious actor IPs, unusual user agents (e.g., malware, scripting interpreters like PowerShell, Python), anomalous login times index=\"azure_ad_signin_logs\" Resource=\"Office 365 SharePoint Online\" AND (UserAgent=\"PowerShell\" OR UserAgent=\"Mozilla\")| stats count by UserAgent, UserID, IPAddress, Location| where IPAddress!=\"expected_ip\" OR Location!=\"expected_location\" .003 Code Repositories Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents. .004 Customer Relationship Management Software Monitor for newly constructed logon behavior across the CRM software which can be configured to report access to certain information. As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. ICS T0811 Data from Information Repositories Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents.[3] Sharepoint audit logging can also be configured to report when a user shares a resource.[4] The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter.[5] Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities. ICS T0812 Default Credentials Monitor logon sessions for default credential use. Enterprise T1114 Email Collection Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). .002 Remote Email Collection Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). Analytic 1 - Suspicious actor IPs, unusual user agents (e.g., malware, scripting interpreters like PowerShell, Python), anomalous login times Note: To detect suspicious logon session creation activities related to remote email collection. index=\"azure_ad_signin_logs\" Resource=\"Office 365 Exchange Online\" AND (UserAgent=\"PowerShell\" OR UserAgent=\"AADInternals\")| stats count by UserAgent, UserID, IPAddress, Location| where IPAddress!=\"expected_ip\" OR Location!=\"expected_location\" Enterprise T1606 Forge Web Credentials Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.[7]. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.[8] .001 Web Cookies Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. .002 SAML Tokens Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.[7] These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.[8] ICS T0823 Graphical User Interface Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Remote Services may be used to access a host\u2019s GUI. ICS T0891 Hardcoded Credentials Monitor logon sessions for hardcoded credential use, when feasible. Enterprise T1556 Modify Authentication Process Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.[9] Analytic 1 - Unusual logon patterns and times. index=security sourcetype IN (\"WinEventLog:Security\", \"linux_secure\", \"macos_secure\")(EventCode=4624 OR EventCode=4625 OR EventCode=4768 OR EventCode=4769 OR EventCode=4776 OR EventCode=4778 OR EventCode=4779 OR EventCode=5379 OR EventCode=22)| eval LogonType=case( EventCode==4624, \"Logon\", EventCode==4625, \"Failed Logon\", EventCode IN (4768, 4769), \"Kerberos\", EventCode==4776, \"NTLM\", EventCode==4778, \"Session Reconnected\", EventCode==4779, \"Session Disconnected\", EventCode==5379, \"Login Attempt\", EventCode==22, \"Interactive Logon\", true(), \"Other\")| eval User=coalesce(user, UserName, Account_Name, user_name)| eval System=coalesce(ComputerName, host)| eval Platform=case( sourcetype==\"WinEventLog:Security\", \"Windows\", sourcetype==\"linux_secure\", \"Linux\", sourcetype==\"macos_secure\", \"macOS\", true(), \"Unknown\")| where (date_wday!=\"saturday\" AND date_wday!=\"sunday\") AND (date_hour<9 OR date_hour>17)| bin _time span=1m| stats earliest(_time) as first_time, latest(_time) as last_time, count by User, System, LogonType, Platform| eval duration=last_time-first_time| where (LogonType=\"Logon\" AND duration<60 AND count > 1) OR (LogonType=\"Failed Logon\" AND count > 5)| eval isOddTime=if(date_hour<9 OR date_hour>17, \"Yes\", \"No\")| eval isMultipleSystems=if(count>1, \"Yes\", \"No\")| table first_time, last_time, duration, User, System, LogonType, Platform, count, isOddTime, isMultipleSystems| sort -count .001 Domain Controller Authentication Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.[9] Analytic 1 - Unusual logon patterns and times. index=windows sourcetype=\"WinEventLog:Security\" ( (EventCode=4624 OR EventCode=4768) AND Logon_Type=3 AND NOT [search index=windows sourcetype=\"WinEventLog:Security\" EventCode=4768 | stats count by Account_Name | where count < 10 | fields Account_Name]) .003 Pluggable Authentication Modules Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Analytic 1 - Unusual logon patterns and times. index=linux_logs OR index=macos_logs(source=\"/var/log/secure\" OR source=\"/var/log/auth.log\" OR source=\"/var/log/system.log\")(\"session opened\" OR \"session closed\")| eval is_normal_hours=if(hour(_time) >= 8 AND hour(_time) <= 18, 1, 0)| search NOT [search index=linux_logs OR index=macos_logs (source=\"/etc/pam.d/*\" OR source=\"/etc/passwd\" OR source=\"/etc/shadow\") action=modified | fields user] .006 Multi-Factor Authentication Monitor for logon sessions for user accounts and devices that did not require MFA for authentication. Analytic 1 - Successful logons without MFA. index=security sourcetype=\"azure:eventhub\" OR sourcetype=\"o365:management:activity\" OR sourcetype=\"gsuite:reports:admin\" OR sourcetype=\"linux_secure\" OR sourcetype=\"WinEventLog:Security\" (EventID=\"4624\" OR EventID=\"4648\" OR EventID=\"AuthenticationSuccess\" OR EventCode IN (\"4104\", \"552\", \"1200\") OR EventName=\"UserLoggedIn\" OR action=\"login_success\")| eval MFA_used = case( isnotnull('AdditionalProperties.MFARequired') AND AdditionalProperties.MFARequired=\"true\", \"MFA\", isnotnull('AdditionalProperties.MFAStatus') AND AdditionalProperties.MFAStatus=\"success\", \"MFA\", isnotnull('AdditionalProperties.MFA') AND AdditionalProperties.MFA=\"success\", \"MFA\", isnotnull('AuthenticationMethod') AND AuthenticationMethod IN (\"MFA\", \"TOTP\", \"U2F\", \"Push Notification\"), \"MFA\", isnotnull('MultiFactorUsed') AND MultiFactorUsed=\"Yes\", \"MFA\", 1==1, \"No MFA\")| search MFA_used=\"No MFA\" .007 Hybrid Identity Monitor for discrepancies in authentication to cloud services, such as PTA sign-ins recorded in Entra ID that lack corresponding events in AD.[10] Enterprise T1621 Multi-Factor Authentication Request Generation Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials. Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Monitor for newly constructed logon behavior from credentials being accessed by process memory of the LSASS. For example, detect behaviors of Secretsdump against a system, not being a Domain Controller. Analytic 1 - Unusual logon sessions from LSASS memory access. index=security sourcetype=\"WinEventLog:Security\" EventCode=4624 TargetUserName=\"*\"| eval LogonType=case(Logon_Type==\"2\", \"Interactive\", Logon_Type==\"3\", \"Network\", Logon_Type==\"4\", \"Batch\", Logon_Type==\"5\", \"Service\", Logon_Type==\"7\", \"Unlock\", Logon_Type==\"8\", \"NetworkCleartext\", Logon_Type==\"9\", \"NewCredentials\", Logon_Type==\"10\", \"RemoteInteractive\", Logon_Type==\"11\", \"CachedInteractive\")| where LogonType IN (\"Interactive\", \"RemoteInteractive\", \"NetworkCleartext\") Enterprise T1563 Remote Service Session Hijacking Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. sourcetype IN (\"WinEventLog:Security\", \"linux_secure\", \"macos_secure\")| search event_code=4624 OR process=\"sshd\" OR message=\"Accepted password for\"| eval abnormal_login=if(logon_type IN (\"3\", \"10\") AND src_ip IN (\"untrusted_ip_range\") AND user NOT IN (\"allowed_users\"), \"suspicious\", \"normal\")| where abnormal_login=\"suspicious\"| stats count by src_ip, user, host, logon_type, _time| table _time, src_ip, user, host, logon_type, abnormal_login .001 SSH Hijacking Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users. .002 RDP Hijacking Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Windows security log Event ID 4624 (An account was successfully logged on) is generated when a user logs onto a remote machine using RDP. Correlating logon session creation events with RDP network flows can provide a clearer picture of RDP activity and serve as a useful starting point for investigating suspicious RDP connections. Enterprise T1021 Remote Services Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for \"screensharingd\" and \"Authentication\" event messages. [11][12] Note: When using Security event id 4624, %$ means user names that do not end with $ character. Usually, computer accounts or local system accounts names end with the $ character. When using Security event 4624, UserName and UserLogonId correspond to TargetUserName and TargetLogonId respectively. When using Security event 4624, LogonType 3 corresponds to a Network Logon Analytic 1 - New services being created under network logon sessions by non-system users(sourcetype=\"WinEventLog:Security\" EventCode IN (4624, 4648, 4625)) AND LogonType=\"3\" AND UserName NOT '$' | rename UserLogonId AS LogonID| join type=inner LogonID[| search (source=\"WinEventLog:Security\" EventCode=\"4697\") | rename UserLogonId as LogonID] .001 Remote Desktop Protocol Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitoring logon and logoff events for hosts on the network is very important for situational awareness. This information can be used as an indicator of unusual activity as well as to corroborate activity seen elsewhere. Could be applied to a number of different types of monitoring depending on what information is desired. Some use cases include monitoring for all remote connections and building login timelines for users. Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista. Note: This analytic looks for user logon events and filters out the top 30 account names to reduce the occurrence of noisy service accounts and the like. It is meant as a starting point for situational awareness around such events. This is liable to be quite noisy and will need tweaking, especially in terms of the number of top users filtered out. Analytic 1 sourcetype=\"WinEventLog:Security\" EventCode IN (4624, 4634, 4647, 4778, 4779)| search LogonType=10 // RDP Interactive Logon| eval is_suspicious=if((user!=\"expected_users\") AND (dest_ip!=\"expected_servers\"), \"True\", \"False\")| where is_suspicious=\"True\" .002 SMB/Windows Admin Shares Monitor for logon behavior (ex: EID 4624 Logon Type 3) using Valid Accounts to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. [13][14] index=\"wineventlog\" sourcetype=\"WinEventLog:Security\" EventCode=4624 LogonType=3| stats count by Account_Name, dest, src_ip, _time| eval suspicious_login=if(count > threshold AND src_ip NOT IN (\"trusted_ips\"), \"suspicious\", \"normal\")| where suspicious_login=\"suspicious\"| table _time, Account_Name, dest, src_ip, suspicious_login .004 SSH Monitor for user accounts logged into systems that may use Valid Accounts to log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in /var/log/auth.log or /var/log/secure depending on the distro you are using. For Linux systems, the Audit framework (auditd) can be used to monitor any writes to SSH log files that store information about logged in accounts such as /var/log/auth.log. For macOS systems (10.12+), Unified Logs can be queried to show SSH daemon (sshd) messages that include information on logged in accounts. The following command-line can be used to query the last hour\u2019s worth of unified logs in this manner: log show -info --debug --predicate 'processImagePath CONTAINS \"sshd\" AND eventMessage CONTAINS \"Accepted\"' --last 1h | grep sshd sourcetype=\"/var/log/auth.log\" OR source=\"/var/log/secure\"| search message=\"Accepted password\" OR message=\"Accepted publickey\"| stats count by user, src_ip, dest_host, _time| eval ssh_anomaly=if(count > threshold OR dest_host IN (\"sensitive_hosts\"), \"suspicious\", \"normal\")| where ssh_anomaly=\"suspicious\"| table _time, user, src_ip, dest_host, ssh_anomaly For ESXi systems, SSH logins will be recorded in the following log files: /var/log/shell.log, /var/log/hostd.log, /var/log/auth.log, and /var/log/vobd.log.[15] .005 VNC Monitor for user accounts logged into systems that may use Valid Accounts to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems log show --predicate 'process = \"screensharingd\" and eventMessage contains \"Authentication:\"' can be used to review incoming VNC connection attempts for suspicious activity.[12] sourcetype=\"vnc_logs\"| search message=\"Authentication succeeded\" OR message=\"Authentication failed\"| stats count by user, src_ip, dest_host, _time| eval vnc_anomaly=if(count > threshold OR dest_host IN (\"critical_hosts\"), \"suspicious\", \"normal\")| where vnc_anomaly=\"suspicious\"| table _time, user, src_ip, dest_host, vnc_anomaly .006 Windows Remote Management Monitor for user accounts logging into the system via Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user. sourcetype=\"WinEventLog:Security\" EventCode=4624| search LogonType=3 (WorkstationName=\"*\" AND LogonProcessName=\"User32\") | stats count by AccountName, IpAddress, WorkstationName, _time| eval suspicious_login=if(count > threshold OR AccountName IN (\"sensitive_accounts\"), \"suspicious\", \"normal\")| where suspicious_login=\"suspicious\"| table _time, AccountName, IpAddress, WorkstationName, suspicious_login .007 Cloud Services Monitor for newly constructed logon behavior to cloud services. For example, in Azure AD, consider using Identity Protection to monitor for suspicious login behaviors to cloud resources. [16] sourcetype=\"azure:signinlogs\" OR sourcetype=\"google:admin_audit\" OR sourcetype=\"o365:audit\"| stats count by UserPrincipalName, ClientIP, _time, LoginStatus| eval suspicious=if(LoginStatus=\"failure\" OR match(ClientIP, \"untrusted_ip_pattern\"), \"suspicious\", \"normal\")| where suspicious=\"suspicious\"| table _time, UserPrincipalName, ClientIP, LoginStatus, suspicious .008 Direct Cloud VM Connections Monitor cloud audit logs and host logs for logon session events. These can be found in CloudTrail, Unified Audit Logs, Windows Event Logs and /var/log/auth.log or /var/log/secure for Linux systems. Monitor direct cloud VM logins through native services, such as Azure Serial Console or AWS EC2 Instance Connect, especially focusing on privileged access or access attempts that deviate from established baselines. Identify unexpected or unauthorized access patterns, such as logins from untrusted IP addresses, irregular times, or unauthorized users accessing sensitive VMs. sourcetype=\"azure:activity\" OR sourcetype=\"aws:cloudtrail\"| search EventName=\"SerialConsoleConnect\" OR EventName=\"InstanceConnect\"| stats count by UserIdentity.Arn, SourceIPAddress, EventTime, EventName| eval suspicious=if(match(SourceIPAddress, \"untrusted_ip_pattern\") OR count > threshold_limit, \"suspicious\", \"normal\")| where suspicious=\"suspicious\"| table EventTime, UserIdentity.Arn, SourceIPAddress, EventName, suspicious ICS T0886 Remote Services Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For added context on adversary procedures and background see Remote Services and applicable sub-techniques. Enterprise T1649 Steal or Forge Authentication Certificates Monitor certificate-based authentication events, such as EID 4768 when an AD CS certificate is used for Kerberos authentication (especially those that don\u2019t correspond to legitimately issued certificates) or when Secure Channel (Schannel, associated with SSL/TLS) is highlighted as the Logon Process associated with an EID 4624 logon event.[17] Enterprise T1199 Trusted Relationship Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims. Analytic 1 - Detecting Suspicious Logins from Trusted 3rd parties (EventCode=4624 OR EventCode=4625) OR (source=\"/var/log/auth.log\" OR source=\"/var/log/secure\" \"sshd\")OR (source=\"o365_audit_logs\" operation=\"UserLoggedIn\")OR (source=\"aws_cloudtrail\" eventName=\"ConsoleLogin\")| eval risk_score=case( like(User, \"%thirdparty%\"), 8, failed_attempts > 5, 7, geo_location!=\"expected_location\", 6)| where risk_score >= 6| stats count by _time, host, User, geo_location, risk_score Enterprise T1550 Use Alternate Authentication Material Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. .002 Pass the Hash Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. Note: Analytic Event ID is for Windows Security Log (Event ID 4624 - An account was successfully logged on). The successful use of Pass the Hash for lateral movement between workstations would trigger Event ID 4624, with an event level of Information, from the Windows Security log. This event would show an account logon with a LogonType of 3 using NTLM authentication, a logon that is not a domain logon, and the user account not being the ANONYMOUS LOGON account. Analytic 1 - Successful Local Account Login (sourcetype=\"WinEventLog:Security\" EventCode=\"4624\") LogonType=3 AND AuthenticationPackageName=\"NTLM\" AND TargetUser != \"ANONYMOUS LOGON\" .003 Pass the Ticket Monitor for newly constructed logon behavior that may \"pass the ticket\" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Enterprise T1078 Valid Accounts Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). sourcetype=\"WinEventLog:Security\" EventCode=4624 | stats count by _time, user, src_ip, dest_ip, LogonType| where LogonType IN (\"2\", \"10\") // Interactive or RDP logon| eval is_suspicious=if(src_ip!=\"expected_ip\", \"True\", \"False\")| where is_suspicious=\"True\"| table _time, user, src_ip, dest_ip, LogonType .001 Default Accounts Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately. .002 Domain Accounts Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. A remote desktop logon, through Remote Desktop Protocol, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary. Multiple users logged into a single machine at the same time, or even within the same hour, do not typically occur in networks we have observed.Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista. Logon types 2, 3, 9 and 10 are of interest. For more details see the Logon Types table on Microsoft\u2019s Audit Logon Events page. Analytic 1 - Remote Desktop Logon (source=\"*WinEventLog:Security\" EventCode=\"4624\") AuthenticationPackageName= \"Negotiate\" AND Severity= \"Information\" AND logon_type= \"10\" .003 Local Accounts Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. A remote desktop logon, through Remote Desktop Protocol, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary. Multiple users logged into a single machine at the same time, or even within the same hour, do not typically occur in networks we have observed.Logon events are Windows Event Code 4624 for Windows Vista and above, 518 for pre-Vista. Logoff events are 4634 for Windows Vista and above, 538 for pre-Vista. Logon types 2, 3, 9 and 10 are of interest. For more details see the Logon Types table on Microsoft\u2019s Audit Logon Events page. Analytic 1 - Remote Desktop Logon (source=\"*WinEventLog:Security\" EventCode=\"4624\") AuthenticationPackageName= \"Negotiate\" AND Severity= \"Information\" AND logon_type= \"10\" .004 Cloud Accounts Monitor for suspicious account behavior across cloud services that share account. ICS T0859 Valid Accounts Monitor for logon behavior that may abuse credentials of existing accounts as a means of gaining Lateral Movement or Persistence. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). ICS T0860 Wireless Compromise Monitor login sessions for new or unexpected devices or sessions on wireless networks. Logon Session: Logon Session Metadata Contextual data about a logon session, such as username, logon type, access tokens (security context, user SIDs, logon identifiers, and logon SID), and any activity associated within it Logon Session: Logon Session Metadata Contextual data about a logon session, such as username, logon type, access tokens (security context, user SIDs, logon identifiers, and logon SID), and any activity associated within it Domain ID Name Detects Enterprise T1133 External Remote Services Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours. ICS T0822 External Remote Services Monitor authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours, including use of Valid Accounts. Enterprise T1606 .002 Forge Web Credentials: SAML Tokens Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.[7] ICS T0883 Internet Accessible Device Monitor logon activity for unexpected or unusual access to devices from the Internet. Enterprise T1621 Multi-Factor Authentication Request Generation Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts. Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Monitor authentication logs and analyze for unusual access patterns. A remote desktop logon, through RDP, may be typical of a system administrator or IT support, but only from select workstations. Monitoring remote desktop logons and comparing to known/approved originating systems can detect lateral movement of an adversary. Analytic 1 sourcetype=\"WinEventLog:Security\" EventCode=\"4624\" AND LogonType=\"10\" AND AuthenticationPackageName=\"Negotiate\" AND TargetUserName=\"Admin*\") Enterprise T1558 Steal or Forge Kerberos Tickets Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).[18] [19] .001 Golden Ticket Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets). .002 Silver Ticket Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Enterprise T1199 Trusted Relationship Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Analytic 1 - Detecting abnormal session activity from trusted accounts (EventCode=4776) OR (source=\"o365_audit_logs\" operation IN (\"RefreshTokenUsed\", \"MFABypassed\"))OR (source=\"aws_cloudtrail\" eventName IN (\"GetSessionToken\", \"AssumeRole\"))| eval risk_score=case( session_duration > 12*3600, 7, multiple_locations_within_10min=true, 8, mfa_bypass=true, 9)| where risk_score >= 7| stats count by _time, host, User, session_duration, mfa_bypass, risk_score Enterprise T1078 Valid Accounts Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. .002 Domain Accounts Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). .003 Local Accounts Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). .004 Cloud Accounts Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). ICS T0859 Valid Accounts Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. References Microsoft. (2021, September 6). Audit logon events. Retrieved September 28, 2021. Pany, D. & Hanley, C. (2023, May 3). Cloudy with a Chance of Bad Logs: Cloud Platform Log Configurations to Consider in Investigations. Retrieved October 16, 2023. Microsoft. (2017, July 19). Configure audit settings for a site collection. Retrieved April 4, 2018. Microsoft. (n.d.). Sharepoint Sharing Events. Retrieved October 8, 2021. Atlassian. (2018, January 9). How to Enable User Access Logging. Retrieved April 4, 2018. AWS. (n.d.). GuardDuty RDS Protection. Retrieved September 24, 2024. Sygnia. (2020, December). Detection and Hunting of Golden SAML Attack. Retrieved November 17, 2024. MSRC. (2020, December 13). Customer Guidance on Recent Nation-State Cyber Attacks. Retrieved December 17, 2020. Microsoft. (2016, April 15). Audit Policy Recommendations. Retrieved June 3, 2016. Dr. Nestori Syynimaa. (2022, September 20). Exploiting Azure AD PTA vulnerabilities: Creating backdoor and harvesting credentials. Retrieved September 28, 2022. Dan Borges. (2019, July 21). MacOS Red Teaming 206: ARD (Apple Remote Desktop Protocol). Retrieved September 10, 2021. Sarah Edwards. (2020, April 30). Analysis of Apple Unified Logs: Quarantine Edition [Entry 6] \u2013 Working From Home? Remote Logins. Retrieved August 19, 2021. Payne, J. (2015, November 26). Tracking Lateral Movement Part One - Special Groups and Specific Service Accounts. Retrieved February 1, 2016. Payne, J. (2015, November 23). Monitoring what matters - Windows Event Forwarding for everyone (even if you already have a SIEM.). Retrieved February 1, 2016. Zhongyuan Hau (Aaron), Ren Jie Yow, and Yoav Mazor. (2025, January 21). ESXi Ransomware Attacks: Stealthy Persistence through. Retrieved March 27, 2025. Microsoft. (2022, August 26). Protecting Microsoft 365 from on-premises attacks. Retrieved February 21, 2023. Schroeder, W. & Christensen, L. (2021, June 22). Certified Pre-Owned - Abusing Active Directory Certificate Services. Retrieved August 2, 2022. Bani, M. (2018, February 23). Detecting Kerberoasting activity using Azure Security Center. Retrieved March 23, 2018. Metcalf, S. (2015, December 31). Cracking Kerberos TGS Tickets Using Kerberoast \u2013 Exploiting Kerberos to Compromise the Active Directory Domain. Retrieved March 22, 2018. "
},
{
"id": 1143,
"title": "Operational Databases, Data Source DS0040",
"path": "/datasources/DS0040/index.html",
"content": " Operational Databases Operational databases contain information about the status of the operational process and associated devices, including any measurements, events, history, or alarms that have occurred ID: DS0040 \u24d8 Collection Layer: Host Version: 1.0 Created: 11 May 2022 Last Modified: 16 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Operational Databases: Device Alarm This includes alarms associated with unexpected device functions, such as shutdowns, restarts, failures, or configuration changes Operational Databases: Device Alarm This includes alarms associated with unexpected device functions, such as shutdowns, restarts, failures, or configuration changes Domain ID Name Detects ICS T0800 Activate Firmware Update Mode Monitor device alarms that indicate the devices has been placed into Firmware Update Mode, although not all devices produce such alarms. ICS T0878 Alarm Suppression Monitor for loss of expected device alarms which could indicate alarms are being suppressed. As noted in the technique description, there may be multiple sources of alarms in an ICS environment. Discrepancies between alarms may indicate the adversary is suppressing some but not all the alarms in the environment. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. ICS T0892 Change Credential Monitor for device alarms produced when device management passwords are changed, although not all devices will produce such alarms. ICS T0858 Change Operating Mode Monitor alarms for information about when an operating mode is changed, although not all devices produce such logs. ICS T0816 Device Restart/Shutdown Devices may produce alarms about restarts or shutdowns. Monitor for unexpected device restarts or shutdowns. ICS T0821 Modify Controller Tasking Monitor device alarms that indicate controller task parameters have changed, although not all devices produce such alarms. Program Download may be used to enable this technique. Monitor for program downloads which may be noticeable via operational alarms. Asset management systems should be consulted to understand expected program versions. ICS T0836 Modify Parameter Monitor for device alarms produced when parameters are changed, although not all devices will produce such alarms. ICS T0889 Modify Program Monitor device alarms that indicate the program has changed, although not all devices produce such alarms. ICS T0839 Module Firmware Monitor for firmware changes which may be observable via operational alarms from devices. ICS T0843 Program Download Monitor device alarms for program downloads, although not all devices produce such alarms. ICS T0848 Rogue Master Monitor for new master devices communicating with outstations, which may be visible in alarms within the ICS environment. ICS T0856 Spoof Reporting Message Monitor asset logs for alarms or other information the adversary is unable to directly suppress. Relevant alarms include those from a loss of communications due to Adversary-in-the-Middle activity. ICS T0857 System Firmware Monitor for firmware changes which may be observable via operational alarms from devices. Operational Databases: Process History/Live Data This includes any data stores that maintain historical or real-time events and telemetry recorded from various sensors or devices Operational Databases: Process History/Live Data This includes any data stores that maintain historical or real-time events and telemetry recorded from various sensors or devices Domain ID Name Detects ICS T0878 Alarm Suppression Monitor for loss of operational process data which could indicate alarms are being suppressed. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. ICS T0803 Block Command Message Monitor for lack of operational process data which may help identify a loss of communications. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. ICS T0804 Block Reporting Message Monitor for lack of operational process data which may help identify a loss of communications. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. ICS T0805 Block Serial COM Monitor for lack of operational process data which may help identify a loss of communications. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. ICS T0806 Brute Force I/O Monitor operational process data for write commands for an excessive number of I/O points or manipulating a single value an excessive number of times. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. ICS T0814 Denial of Service Monitor operational data for indicators of temporary data loss which may indicate a Denial of Service. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. ICS T0838 Modify Alarm Settings Data about the industrial process may indicate it is operating outside of expected bounds and could help indicate that that an alarm setting has changed. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. ICS T0855 Unauthorized Command Message Monitor industrial process history data for events that correspond with command message functions, such as setpoint modification or changes to system status for key devices. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. Operational Databases: Process/Event Alarm This includes a list of any process alarms or alerts produced to indicate unusual or concerning activity within the operational process (e.g., increased temperature/pressure) Operational Databases: Process/Event Alarm This includes a list of any process alarms or alerts produced to indicate unusual or concerning activity within the operational process (e.g., increased temperature/pressure) Domain ID Name Detects ICS T0878 Alarm Suppression Monitor for loss of expected operational process alarms which could indicate alarms are being suppressed. As noted in the technique description, there may be multiple sources of alarms in an ICS environment. Discrepancies between alarms may indicate the adversary is suppressing some but not all the alarms in the environment. This will not directly detect the technique\u2019s execution, but instead may provide additional evidence that the technique has been used and may complement other detections. ICS T0803 Block Command Message Monitor asset alarms which may help identify a loss of communications. Consider correlating alarms with other data sources that indicate traffic has been blocked, such as network traffic. In cases where alternative methods of communicating with outstations exist alarms may still be visible even if command messages are blocked. ICS T0804 Block Reporting Message Monitor asset alarms which may help identify a loss of communications. Consider correlating alarms with other data sources that indicate traffic has been blocked, such as network traffic. In cases where alternative methods of communicating with outstations exist alarms may still be visible even if reporting messages are blocked. ICS T0805 Block Serial COM Monitor asset alarms which may help identify a loss of communications. Consider correlating alarms with other data sources that indicate traffic has been blocked, such as network traffic. In cases where alternative methods of communicating with outstations exist alarms may still be visible even if messages over serial COM ports are blocked. ICS T0855 Unauthorized Command Message Monitor for anomalous or unexpected commands that may result in changes to the process operation (e.g., discrete write, logic and device configuration, mode changes) observable via asset application logs. "
},
{
"id": 1144,
"title": "Web Credential, Data Source DS0006",
"path": "/datasources/DS0006/index.html",
"content": " Web Credential Credential material, such as session cookies or tokens, used to authenticate to web applications and services[1][2] ID: DS0006 \u24d8 Platforms: Identity Provider, Linux, Office Suite, SaaS, Windows, macOS \u24d8 Collection Layers: Cloud Control Plane, Host Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Web Credential: Web Credential Creation Initial construction of new web credential material (ex: Windows EID 1200 or 4769) Web Credential: Web Credential Creation Initial construction of new web credential material (ex: Windows EID 1200 or 4769) Domain ID Name Detects Enterprise T1606 Forge Web Credentials Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.[3] Additionally, detect on unusual API calls to generate access tokens, such as sts:GetFederationToken in AWS.[4] .002 SAML Tokens Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.[3] Web Credential: Web Credential Usage An attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) Web Credential: Web Credential Usage An attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) Domain ID Name Detects Enterprise T1606 Forge Web Credentials Monitor for the use of Access Tokens to access services such as Email that were created using SAML tokens which do not have corresponding 1202 events in the domain.[3] .001 Web Cookies Monitor for the usage of unexpected or unusual cookies to access resources and services. Forged web cookies may be associated with unknown accounts and could be the result of compromised secrets such as passwords or Private Keys. .002 SAML Tokens Monitor for the use of access tokens to access services such as email that were created using SAML tokens which do not have corresponding 1202 events (i.e. \"The Federation Service validated a new credential\") in the domain.[3] Enterprise T1550 Use Alternate Authentication Material Monitor for an attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. .001 Application Access Token Monitor the use of application access tokens to interact with resources or services that do not fit the organization baseline. For example, an application that is not meant to read emails accessing users\u2019 mail boxes and potentially exfiltrating sensitive data, or a token associated with a cloud service account being used to make API calls from an IP address outside of the cloud environment.[5] In AWS environments, configure GuardDuty to alert when EC2 instance credentials are accessed from another AWS account or an external IP address.[6] .004 Web Session Cookie Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. References Hsu, S. (2018, June 30). Session vs Token Based Authentication. Retrieved September 29, 2021. Auth0. (n.d.). Access Tokens. Retrieved September 29, 2021. Sygnia. (2020, December). Detection and Hunting of Golden SAML Attack. Retrieved November 17, 2024. Vaishnav Murthy and Joel Eng. (2023, January 30). How Adversaries Can Persist with AWS User Federation. Retrieved March 10, 2023. Dror Alon. (2022, December 8). Compromised Cloud Compute Credentials: Case Studies From the Wild. Retrieved March 9, 2023. AWS. (n.d.). GuardDuty IAM finding types. Retrieved September 24, 2024. "
},
{
"id": 1145,
"title": "Active Directory, Data Source DS0026",
"path": "/datasources/DS0026/index.html",
"content": " Active Directory A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices)[1] ID: DS0026 \u24d8 Platforms: Identity Provider, Windows \u24d8 Collection Layers: Cloud Control Plane, Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Active Directory: Active Directory Credential Request Requests for authentication credentials via Kerberos or other methods like NTLM and LDAP queries. Examples: Kerberos TGT and Service Tickets (Event IDs 4768, 4769) NTLM Authentication Events LDAP Bind Requests Data Collection Measures: Security Event Logging: Enable \"Audit Kerberos Authentication Service\" or \"Audit Kerberos Service Ticket Operations.\" Captured Events: IDs 4768, 4769, 4624. Windows Event Forwarding (WEF): Forward domain controller logs to SIEM. SIEM Integration: Use tools like Splunk or Azure Sentinel for log analysis. Kerberos Debug Logging: Registry Key: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Kerberos\\Parameters. Set DWORD LogLevel to 1. Azure AD Logs: Monitor Sign-In Logs for authentication and policy issues. Enable EDR Monitoring: Use EDR to detect suspicious processes querying authentication mechanisms (e.g., lsass.exe memory access). Active Directory: Active Directory Credential Request Requests for authentication credentials via Kerberos or other methods like NTLM and LDAP queries. Examples: Kerberos TGT and Service Tickets (Event IDs 4768, 4769) NTLM Authentication Events LDAP Bind Requests Data Collection Measures: Security Event Logging: Enable \"Audit Kerberos Authentication Service\" or \"Audit Kerberos Service Ticket Operations.\" Captured Events: IDs 4768, 4769, 4624. Windows Event Forwarding (WEF): Forward domain controller logs to SIEM. SIEM Integration: Use tools like Splunk or Azure Sentinel for log analysis. Kerberos Debug Logging: Registry Key: HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Kerberos\\Parameters. Set DWORD LogLevel to 1. Azure AD Logs: Monitor Sign-In Logs for authentication and policy issues. Enable EDR Monitoring: Use EDR to detect suspicious processes querying authentication mechanisms (e.g., lsass.exe memory access). Domain ID Name Detects Enterprise T1649 Steal or Forge Authentication Certificates Monitor AD CS certificate requests (ex: EID 4886) as well as issued certificates (ex: EID 4887) for abnormal activity, including unexpected certificate enrollments and signs of abuse within certificate attributes (such as abusable EKUs).[2] Enterprise T1558 Steal or Forge Kerberos Tickets Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.[3][4][5]Monitor the lifetime of TGT tickets for values that differ from the default domain duration.[6] Monitor for indications of Pass the Ticket being used to move laterally. .001 Golden Ticket Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4769, 4768), RC4 encryption within TGTs, and TGS requests without preceding TGT requests. Monitor the lifetime of TGT tickets for values that differ from the default domain duration. Monitor for indications of Pass the Ticket being used to move laterally. .003 Kerberoasting Monitor for anomalous Kerberos activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]). .004 AS-REP Roasting Monitor for anomalous activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]). Enterprise T1550 Use Alternate Authentication Material Monitor requests of new ticket granting ticket or service tickets to a Domain Controller, such as Windows EID 4769 or 4768, that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. .002 Pass the Hash Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Windows Security events such as 4768 (A Kerberos authentication ticket (TGT) was requested) and 4769 (A Kerberos service ticket was requested) combined with logon session creation information may be indicative of an overpass the hash attempt. .003 Pass the Ticket Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket.[5] Active Directory: Active Directory Object Access Object access refers to activities where AD objects (e.g., user accounts, groups, policies) are accessed or queried. Example: Windows Event ID 4661 logs object access attempts. Examples: Attribute Access: e.g., userPassword, memberOf, securityDescriptor. Group Enumeration: Enumerating critical group members (e.g., Domain Admins). User Attributes: Commonly accessed attributes like samAccountName, lastLogonTimestamp. Policy Access: Accessing GPOs to understand security settings. Data Collection Measures: Audit Policies: Enable \"Audit Directory Service Access\" under Advanced Audit Policies (Success and Failure). Path: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Audit Policies > Object AccessEnable: Audit Directory Service Access (Success and Failure). Captured Events: IDs 4661, 4662. Event Forwarding: Use WEF to centralize logs for SIEM analysis. SIEM Integration: Collect and parse logs (e.g., 4661, 4662) using tools like Splunk or Azure Sentinel. Log Filtering: Focus on sensitive objects/attributes like: Domain Admins group. userPassword, ntSecurityDescriptor. Enable EDR Monitoring: Detect processes accessing sensitive AD objects (e.g., samAccountName, securityDescriptor). Log all attempts to enumerate critical groups (e.g., \"Domain Admins\"). Active Directory: Active Directory Object Access Object access refers to activities where AD objects (e.g., user accounts, groups, policies) are accessed or queried. Example: Windows Event ID 4661 logs object access attempts. Examples: Attribute Access: e.g., userPassword, memberOf, securityDescriptor. Group Enumeration: Enumerating critical group members (e.g., Domain Admins). User Attributes: Commonly accessed attributes like samAccountName, lastLogonTimestamp. Policy Access: Accessing GPOs to understand security settings. Data Collection Measures: Audit Policies: Enable \"Audit Directory Service Access\" under Advanced Audit Policies (Success and Failure). Path: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Audit Policies > Object AccessEnable: Audit Directory Service Access (Success and Failure). Captured Events: IDs 4661, 4662. Event Forwarding: Use WEF to centralize logs for SIEM analysis. SIEM Integration: Collect and parse logs (e.g., 4661, 4662) using tools like Splunk or Azure Sentinel. Log Filtering: Focus on sensitive objects/attributes like: Domain Admins group. userPassword, ntSecurityDescriptor. Enable EDR Monitoring: Detect processes accessing sensitive AD objects (e.g., samAccountName, securityDescriptor). Log all attempts to enumerate critical groups (e.g., \"Domain Admins\"). Domain ID Name Detects Enterprise T1615 Group Policy Discovery Monitor for abnormal LDAP queries with filters for groupPolicyContainer and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed. Enterprise T1003 OS Credential Dumping Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. [7] [8] [9] Note: Domain controllers may not log replication requests originating from the default domain controller account. [10]. Monitor for replication requests [11] from IPs not associated with known domain controllers. [12] Analytic 1 - Suspicious Replication Requests sourcetype=WinEventLog:Security EventCode=\"4662\" AND AccessMask= \"0x100\" AND (guid= \"1131f6ad-9c07-11d1-f79f-00c04fc2dcd2\" OR guid= \"1131f6aa-9c07-11d1-f79f-00c04fc2dcd2\" OR guid= \"9923a32a-3607-11d2-b9be-0000f87a36b2\" OR guid= \"89e95b76-444d-4c62-991a-0facbeda640c\") .006 DCSync Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.[7] [8] [9] Note: Domain controllers may not log replication requests originating from the default domain controller account.[10] Analytic 1 - Monitor for replication requests from IPs not associated with known domain controllers. index=security sourcetype=\"WinEventLog:Security\" EventCode=4662 AccessMask=0x100 guid IN (\"1131f6ad-9c07-11d1-f79f-00c04fc2dcd2\", \"1131f6aa-9c07-11d1-f79f-00c04fc2dcd2\", \"9923a32a-3607-11d2-b9be-0000f87a36b2\", \"89e95b76-444d-4c62-991a-0facbeda640c\") Enterprise T1033 System Owner/User Discovery Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. [7] [8] [9] Note: Domain controllers may not log replication requests originating from the default domain controller account. [10]. Monitor for replication requests [11] from IPs not associated with known domain controllers. [12] Active Directory: Active Directory Object Creation Creating new objects in AD, such as user accounts, groups, organizational units (OUs), or trust relationships. Logged as Event ID 5137. Examples: User Account Creation: New user account. Group Creation: New security/distribution group. OU Creation: New organizational unit. Service Account Creation: New service account for automation or malicious tasks. Trust Object Creation: Trust relationship with another domain. Data Collection Measures: Audit Policy: Enable \"Audit Directory Service Changes\" (Success and Failure). Path: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Audit Policies > Directory Service Changes. Key Event: Event ID 5137 (object creation). Log Forwarding: Use WEF to centralize logs for SIEM tools (e.g., Splunk). Enable EDR Monitoring: Track processes that create new accounts or modify AD objects. Correlate object creation with suspicious commands (e.g., net user /add). Active Directory: Active Directory Object Creation Creating new objects in AD, such as user accounts, groups, organizational units (OUs), or trust relationships. Logged as Event ID 5137. Examples: User Account Creation: New user account. Group Creation: New security/distribution group. OU Creation: New organizational unit. Service Account Creation: New service account for automation or malicious tasks. Trust Object Creation: Trust relationship with another domain. Data Collection Measures: Audit Policy: Enable \"Audit Directory Service Changes\" (Success and Failure). Path: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Audit Policies > Directory Service Changes. Key Event: Event ID 5137 (object creation). Log Forwarding: Use WEF to centralize logs for SIEM tools (e.g., Splunk). Enable EDR Monitoring: Track processes that create new accounts or modify AD objects. Correlate object creation with suspicious commands (e.g., net user /add). Domain ID Name Detects Enterprise T1098 .001 Account Manipulation: Additional Cloud Credentials Monitor M365 Audit logs for Add application or Add serviceprincipal operations involving the AzureActiveDirectoryworkloads. Scrutinize extended properties such user agents, app display names, and RequiredAppPermissions (e.g., ImpersonationAccessGrants and DirectAccessGrants). Analytic 1 - Creation of applications with unusual permissions or from suspicious user agents/IPs. Note: To detect the creation of potentially malicious applications using hijacked admin credentials or from unusual IP addresses. \"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Add application\"\"| search ActorUserPrincipalName!=\"\"expected_admin_user\"\"| table CreationTime, ActorUserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\" Analytic 2 - Creation of service principals with suspicious user agents or from unusual IP addresses. Note: To detect the creation of potentially malicious service principals using hijacked admin credentials or from unusual IP addresses. \"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Add service principal\"\"| search ActorUserPrincipalName!=\"\"expected_admin_user\"\"| table CreationTime, ActorUserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\" .005 Account Manipulation: Device Registration Monitor for the registration or joining of new device objects in Active Directory. Raise alerts when new devices are registered or joined without using MFA.[13] Analytic 1 - Device registration events with suspicious user agents, unusual OS types, OS versions, or display names. Note: To detect the registration of potentially malicious devices using hijacked admin credentials or from unusual IP addresses. index=\"m365_audit_logs\" Workload=\"AzureActiveDirectory\" Operation IN (\"Add registered owner to device\", \"Add device\", \"Add registered users to device\")| search ActorUserPrincipalName!=\"expected_admin_user\"| table CreationTime, ActorUserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties Enterprise T1484 Domain or Tenant Policy Modification Monitor for newly constructed active directory objects, such as Windows EID 5137. .001 Group Policy Modification Monitor for newly constructed active directory objects, such as Windows EID 5137. .002 Trust Modification Monitor for newly constructed active directory objects, such as Windows EID 5137. Enterprise T1207 Rogue Domain Controller Baseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects.[14] Active Directory: Active Directory Object Deletion Object deletion in AD (e.g., user accounts, groups, OUs) is logged as Event ID 5141. Examples: User Account: Deleted user. Group: Deleted security/distribution group. Organizational Unit (OU): Loss of configurations or policies. Service Account: Disrupted operations or cover tracks. Trust Object: Removed domain trust, disrupting connectivity. Data Collection Measures: Audit Policy: Enable \"Audit Directory Service Changes\" (Success and Failure). Path: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Audit Policies > Directory Service Changes. Key Event: Event ID 5141. Log Forwarding: Use WEF to centralize logs for SIEM tools (e.g., Splunk). Enable EDR Monitoring: Detect processes or users that initiate unauthorized object deletions. Monitor tools and scripts that may delete key directory objects. Active Directory: Active Directory Object Deletion Object deletion in AD (e.g., user accounts, groups, OUs) is logged as Event ID 5141. Examples: User Account: Deleted user. Group: Deleted security/distribution group. Organizational Unit (OU): Loss of configurations or policies. Service Account: Disrupted operations or cover tracks. Trust Object: Removed domain trust, disrupting connectivity. Data Collection Measures: Audit Policy: Enable \"Audit Directory Service Changes\" (Success and Failure). Path: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Audit Policies > Directory Service Changes. Key Event: Event ID 5141. Log Forwarding: Use WEF to centralize logs for SIEM tools (e.g., Splunk). Enable EDR Monitoring: Detect processes or users that initiate unauthorized object deletions. Monitor tools and scripts that may delete key directory objects. Domain ID Name Detects Enterprise T1484 Domain or Tenant Policy Modification Monitor for unexpected deletion of an active directory object, such as Windows EID 5141. .001 Group Policy Modification Monitor for unexpected deletion of an active directory object, such as Windows EID 5141. Active Directory: Active Directory Object Modification Changes to AD objects (e.g., users, groups, OUs) are logged as Event ID 5136 (Object Modification) or 5163 (Attribute Changes). Examples: User Account: Modifying attributes (e.g., group membership, enabling/disabling accounts). Group Membership: Adding/removing members. OU: Changing properties/permissions (e.g., delegation). Service Account: Modifying SPNs or other attributes. Object Attributes: Changes to passwords, logon hours, or control flags. Data Collection Measures: Audit Policy: Enable \"Audit Directory Service Changes\" (Success and Failure). Path: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Audit Policies > Directory Service Changes. Key Events: 5136 (modifications), 5163 (attribute changes). Log Forwarding: Use WEF to centralize logs for SIEM. Parse logs to extract: Object Name, Attribute Changed, Initiator Account Name. Enable EDR Monitoring: Detect changes to critical attributes (e.g., memberOf, logonHours). Track processes modifying directory service objects (e.g., Set-ADUser or dsmod). Enable EDR Monitoring: Detect changes to critical attributes (e.g., memberOf, logonHours). Track processes modifying directory service objects (e.g., Set-ADUser or dsmod). Active Directory: Active Directory Object Modification Changes to AD objects (e.g., users, groups, OUs) are logged as Event ID 5136 (Object Modification) or 5163 (Attribute Changes). Examples: User Account: Modifying attributes (e.g., group membership, enabling/disabling accounts). Group Membership: Adding/removing members. OU: Changing properties/permissions (e.g., delegation). Service Account: Modifying SPNs or other attributes. Object Attributes: Changes to passwords, logon hours, or control flags. Data Collection Measures: Audit Policy: Enable \"Audit Directory Service Changes\" (Success and Failure). Path: Computer Configuration > Policies > Windows Settings > Security Settings > Advanced Audit Policy Configuration > Audit Policies > Directory Service Changes. Key Events: 5136 (modifications), 5163 (attribute changes). Log Forwarding: Use WEF to centralize logs for SIEM. Parse logs to extract: Object Name, Attribute Changed, Initiator Account Name. Enable EDR Monitoring: Detect changes to critical attributes (e.g., memberOf, logonHours). Track processes modifying directory service objects (e.g., Set-ADUser or dsmod). Enable EDR Monitoring: Detect changes to critical attributes (e.g., memberOf, logonHours). Track processes modifying directory service objects (e.g., Set-ADUser or dsmod). Domain ID Name Detects Enterprise T1134 Access Token Manipulation Monitor for changes made to AD settings that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. .005 SID-History Injection Monitor for changes to account management events on Domain Controllers for successful and failed changes to SID-History. [15] [16] Enterprise T1531 Account Access Removal Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.). Analytic 1 - Unusual password change operations index=\"m365_audit_logs\" Operation=\"Change user password\"| stats count by Actor, TargetUser| where Actor!=\"expected_actor\" AND TargetUser!=\"expected_target_user\" Enterprise T1098 Account Manipulation Monitor for the registration or joining of new device objects in Active Directory. Raise alerts when new devices are registered or joined without using MFA.[13] .001 Additional Cloud Credentials Monitor M365 Audit logs for Update application or Update Service principal operations involving the AzureActiveDirectory workloads. Look for suspicious modified properties RequiredResourceAccess changes. Analytic 1 - Suspicious modifications to RequiredResourceAccess, unexpected user agents, unusual modification times. Note: To detect suspicious updates to applications which might indicate the granting of unauthorized permissions or impersonation access. \"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Update application\"\"| search NOT (UserAgent=\"\"expected_user_agent\"\")| table CreationTime, UserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\" Analytic 2 - Suspicious key descriptions, unexpected user agents, unusual modification times. Note: To detect suspicious updates to application certificates and secrets, which might indicate unauthorized access or changes. \"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Update application \u2013 Certificates and secrets management\"\"| search NOT (UserAgent=\"\"expected_user_agent\"\")| table CreationTime, UserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\" Analytic 3 - Suspicious service principal names, unexpected user agents, unusual modification times. Note: To detect suspicious updates to service principals, which might indicate unauthorized access or changes. \"index=\"\"m365_audit_logs\"\" Workload=\"\"AzureActiveDirectory\"\" Operation=\"\"Update service principal\"\"| search NOT (UserAgent=\"\"expected_user_agent\"\")| table CreationTime, UserPrincipalName, IPAddress, ExtendedProperties, ModifiedProperties\" Enterprise T1037 Boot or Logon Initialization Scripts Monitor for changes made in the Active Directory that may use scripts automatically executed at boot or logon initialization to establish persistence. .003 Network Logon Script Monitor for changes made in the Active Directory that may use network logon scripts automatically executed at logon initialization to establish persistence. Enterprise T1671 Cloud Application Integration Monitor M365 Audit logs for the Operations Add app role assignment grant to user and/or Consent to application occurring against AzureActiveDirectory Workloads.[17] Enterprise T1484 Domain or Tenant Policy Modification Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.). .001 Group Policy Modification Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.). .002 Trust Modification Monitor for changes made to AD settings for unexpected modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain. Enterprise T1222 File and Directory Permissions Modification Monitor for changes made to ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. .001 Windows File and Directory Permissions Modification Monitor for changes made to DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Enterprise T1556 Modify Authentication Process Monitor for changes made to AD security settings related to MFA logon requirements, such as changes to Azure AD Conditional Access Policies or the registration of new MFA applications. Monitor for changes made to security settings related to Azure AD Conditional Access Policies. These can be found in the Azure AD audit log under the operation name Update Conditional Access policy.[18] Analytic 1 - Changes to AD security settings outside of normal maintenance windows. index=security sourcetype IN (\"WinEventLog:Security\", \"azure:activity\", \"gsuite:reports:activity\", \"aws:cloudtrail\", \"linux_audit\", \"macos_secure\", \"network_logs\")(EventCode IN (4670, 5136, 5137, 5139, 5141) OR eventName IN (\"UpdateUser\", \"UpdateGroup\", \"UpdatePolicy\", \"UpdateRole\", \"PutRolePolicy\", \"AttachUserPolicy\", \"AttachGroupPolicy\", \"AttachRolePolicy\") OR \"protoPayload.methodName\" IN (\"directory.users.update\", \"admin.directory.group.update\", \"admin.directory.roleAssignments.update\")) .005 Reversible Encryption Monitor property changes in Group Policy: Computer Configuration\\Windows Settings\\Security Settings\\Account Policies\\Password Policy\\Store passwords using reversible encryption. By default, the property should be set to Disabled. Analytic 1 - Enabling reversible encryption outside of standard procedures. index=windows source=\"WinEventLog:Security\" (EventCode=5136 OR EventCode=5137 OR EventCode=5138 OR EventCode=5139)| search AttributeLDAPDisplayName=\"msDS-User-Account-Control-Computed\" OR AttributeLDAPDisplayName=\"userParameters\"| rex field=_raw \"ObjectDN=(?P[^,]+)\"| eval Modification=if(match(AttributeValue, \".;PwdProperties=1.\"), \"Enabled\", \"Disabled\")| stats count by ObjectDN, Modification, EventCode, AttributeValue| where Modification=\"Enabled\" .006 Multi-Factor Authentication Monitor for changes made to AD security settings related to MFA logon requirements, such as changes to Azure AD Conditional Access Policies or the registration of new MFA applications. .009 Conditional Access Policies Monitor for changes made to security settings related to Entra ID Conditional Access Policies. For example, these can be found in the Entra ID audit log under the operation name Update Conditional Access policy.[18] Enterprise T1207 Rogue Domain Controller Leverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.[19] [20] Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). [14] Enterprise T1528 Steal Application Access Token Monitor M365 Audit logs for the Operations Add app role assignment grant to user and/or Consent to application occurring against AzureActiveDirectory Workloads. Analytic 1 - Unusual app role assignments or consents to applications. index=security sourcetype=\"WinEventLog:Security\" EventCode=5136 OR (index=azuread sourcetype=\"azure:activity\" operationName=\"Add member to role\" OR operationName=\"Update application\" OR operationName=\"Update servicePrincipal\") OR(index=gsuite sourcetype=\"gsuite:admin\" event_type=\"UPDATE_GROUP\" OR event_type=\"UPDATE_USER\") OR(index=o365 sourcetype=\"o365:management:activity\" operation IN (\"Add member to role\", \"Update user\", \"Update group\")) Enterprise T1649 Steal or Forge Authentication Certificates Monitor for changes to CA attributes and settings, such as AD CS certificate template modifications (ex: EID 4899/4900 once a potentially malicious certificate is enrolled).[2] References Foulds, I. et al. (2018, August 7). AD DS Getting Started. Retrieved September 23, 2021. Schroeder, W. & Christensen, L. (2021, June 22). Certified Pre-Owned - Abusing Active Directory Certificate Services. Retrieved August 2, 2022. Metcalf, S. (2015, May 03). Detecting Forged Kerberos Ticket (Golden Ticket & Silver Ticket) Use in Active Directory. Retrieved December 23, 2015. Jeff Warren. (2019, February 19). How to Detect Pass-the-Ticket Attacks. Retrieved February 27, 2020. Abolins, D., Boldea, C., Socha, K., Soria-Machado, M. (2016, April 26). Kerberos Golden Ticket Protection. Retrieved July 13, 2017. Microsoft. (2015, March 24). Kerberos Golden Ticket Check (Updated). Retrieved February 27, 2020. Microsoft. (2017, December 1). MS-DRSR Directory Replication Service (DRS) Remote Protocol. Retrieved December 4, 2017. Microsoft. (n.d.). IDL_DRSGetNCChanges (Opnum 3). Retrieved December 4, 2017. SambaWiki. (n.d.). DRSUAPI. Retrieved December 4, 2017. Schroeder, W. (2015, September 22). Mimikatz and DCSync and ExtraSids, Oh My. Retrieved December 4, 2017. Microsoft. (n.d.). MS-SAMR Security Account Manager (SAM) Remote Protocol (Client-to-Server) - Transport. Retrieved December 4, 2017. Metcalf, S. (2015, September 25). Mimikatz DCSync Usage, Exploitation, and Detection. Retrieved December 4, 2017. Microsoft. (2020, September 16). Azure Active Directory security operations for devices. Retrieved February 21, 2023. Delpy, B. & LE TOUX, V. (n.d.). DCShadow. Retrieved March 20, 2018. Metcalf, S. (2015, September 19). Sneaky Active Directory Persistence #14: SID History. Retrieved November 30, 2017. Microsoft. (n.d.). Using DsAddSidHistory. Retrieved November 30, 2017. Mauricio Velazco. (2024, January 4). Hunting M365 Invaders: Blue Team\u2019s Guide to Initial Access Vectors. Retrieved April 3, 2025. Microsoft. (2023, October 23). Troubleshooting Conditional Access policy changes. Retrieved January 2, 2024. Microsoft. (n.d.). Polling for Changes Using the DirSync Control. Retrieved March 30, 2018. Lucand,G. (2018, February 18). Detect DCShadow, impossible?. Retrieved March 30, 2018. "
},
{
"id": 1146,
"title": "Firmware, Data Source DS0001",
"path": "/datasources/DS0001/index.html",
"content": " Firmware Computer software that provides low-level control for the hardware and device(s) of a host, such as BIOS or UEFI/EFI ID: DS0001 \u24d8 Platforms: Linux, Windows, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Firmware: Firmware Modification Changes made to firmware, which may include its settings, configurations, or underlying data. This can encompass alterations to the Master Boot Record (MBR), Volume Boot Record (VBR), or other firmware components critical to system boot and functionality. Such modifications are often indicators of adversary activity, including malware persistence and system compromise. Examples: Changes to Master Boot Record (MBR): Modifying the MBR to load malicious code during the boot process. Changes to Volume Boot Record (VBR): Altering the VBR to redirect boot processes to malicious locations. Firmware Configuration Changes: Modifying BIOS/UEFI settings such as disabling Secure Boot. Firmware Image Tampering: Updating firmware with a malicious or unauthorized image. Logs or Errors Indicating Firmware Changes: Logs showing unauthorized firmware updates or checksum mismatches. This data component can be collected through the following measures: BIOS/UEFI Logs: Enable and monitor BIOS/UEFI logs to capture settings changes or firmware updates. Firmware Integrity Monitoring: Use tools or firmware security features to detect changes to firmware components. Endpoint Detection and Response (EDR) Solutions: Many EDR platforms can detect abnormal firmware activity, such as changes to MBR/VBR or unauthorized firmware updates. File System Monitoring: Monitor changes to MBR/VBR-related files using tools like Sysmon or auditd. Windows Example (Sysmon): Monitor Event ID 7 (Raw disk access). Linux Example (auditd): auditctl -w /dev/sda -p wa -k firmware_modification Network Traffic Analysis: Capture firmware updates downloaded over the network, particularly from untrusted sources. Use network monitoring tools like Zeek or Wireshark to analyze firmware-related traffic. Secure Boot Logs: Collect and analyze Secure Boot logs for signs of tampering or unauthorized configurations. Example: Use PowerShell to retrieve Secure Boot settings on Windows: Confirm-SecureBootUEFI Vendor-Specific Firmware Tools: Many hardware vendors provide tools for firmware integrity checks.Examples: Intel Platform Firmware Resilience (PFR). Lenovo UEFI diagnostics. Firmware: Firmware Modification Changes made to firmware, which may include its settings, configurations, or underlying data. This can encompass alterations to the Master Boot Record (MBR), Volume Boot Record (VBR), or other firmware components critical to system boot and functionality. Such modifications are often indicators of adversary activity, including malware persistence and system compromise. Examples: Changes to Master Boot Record (MBR): Modifying the MBR to load malicious code during the boot process. Changes to Volume Boot Record (VBR): Altering the VBR to redirect boot processes to malicious locations. Firmware Configuration Changes: Modifying BIOS/UEFI settings such as disabling Secure Boot. Firmware Image Tampering: Updating firmware with a malicious or unauthorized image. Logs or Errors Indicating Firmware Changes: Logs showing unauthorized firmware updates or checksum mismatches. This data component can be collected through the following measures: BIOS/UEFI Logs: Enable and monitor BIOS/UEFI logs to capture settings changes or firmware updates. Firmware Integrity Monitoring: Use tools or firmware security features to detect changes to firmware components. Endpoint Detection and Response (EDR) Solutions: Many EDR platforms can detect abnormal firmware activity, such as changes to MBR/VBR or unauthorized firmware updates. File System Monitoring: Monitor changes to MBR/VBR-related files using tools like Sysmon or auditd. Windows Example (Sysmon): Monitor Event ID 7 (Raw disk access). Linux Example (auditd): auditctl -w /dev/sda -p wa -k firmware_modification Network Traffic Analysis: Capture firmware updates downloaded over the network, particularly from untrusted sources. Use network monitoring tools like Zeek or Wireshark to analyze firmware-related traffic. Secure Boot Logs: Collect and analyze Secure Boot logs for signs of tampering or unauthorized configurations. Example: Use PowerShell to retrieve Secure Boot settings on Windows: Confirm-SecureBootUEFI Vendor-Specific Firmware Tools: Many hardware vendors provide tools for firmware integrity checks.Examples: Intel Platform Firmware Resilience (PFR). Lenovo UEFI diagnostics. Domain ID Name Detects Enterprise T1495 Firmware Corruption Monitor for changes made to the firmware for unexpected modifications to settings and/or data. [1] Log attempts to read/write to BIOS and compare against known patching behavior. Enterprise T1564 Hide Artifacts Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may attempt to hide artifacts associated with their behaviors to evade detection. .005 Hidden File System Monitor for changes made to firmware for unexpected modifications to settings and/or data that may use a hidden file system to conceal malicious activity from users and security tools. Bootkit ICS T0839 Module Firmware Monitor firmware for unexpected changes. Asset management systems should be consulted to understand known-good firmware versions. Dump and inspect BIOS images on vulnerable systems and compare against known good images.[2] Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior. Likewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed.[3] [4] [5] Enterprise T1542 Pre-OS Boot Monitor for changes made on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI .001 System Firmware Monitor for changes made to firmware. [1] Dump and inspect BIOS images on vulnerable systems and compare against known good images. [2] Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.Likewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed. [3] [4] [5] .002 Component Firmware Monitor for changes that may reveal indicators of malicious firmware such as strings. Also consider comparing components, including hashes of component firmware and behavior, against known good images. .004 ROMMONkit There are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation. .005 TFTP Boot Monitor for changes to boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment. [6] Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols. Enterprise T1014 Rootkit Monitor for changes made to firmware for unexpected modifications to settings and/or data that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. ICS T0851 Rootkit Monitor for changes made to firmware for unexpected modifications to settings and/or data that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Asset management systems should be consulted to understand known-good firmware versions and configurations. ICS T0857 System Firmware Monitor firmware for unexpected changes. Asset management systems should be consulted to understand known-good firmware versions. Dump and inspect BIOS images on vulnerable systems and compare against known good images.[2] Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior. Likewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed.[3] [4] [5] References Upham, K. (2014, March). Going Deep into the BIOS with MITRE Firmware Security Research. Retrieved January 5, 2016. Butterworth, J. (2013, July 30). Copernicus: Question Your Assumptions about BIOS Security. Retrieved December 11, 2015. Beek, C., Samani, R. (2017, March 8). CHIPSEC Support Against Vault 7 Disclosure Scanning. Retrieved March 13, 2017. Intel. (2017, March 18). CHIPSEC Platform Security Assessment Framework. Retrieved March 20, 2017. Intel Security. (2005, July 16). HackingTeam's UEFI Rootkit Details. Retrieved November 17, 2024. Cisco. (n.d.). Cisco IOS Software Integrity Assurance - Boot Information. Retrieved October 21, 2020. "
},
{
"id": 1147,
"title": "Malware Repository, Data Source DS0004",
"path": "/datasources/DS0004/index.html",
"content": " Malware Repository Information obtained (via shared or submitted samples) regarding malicious software (droppers, backdoors, etc.) used by adversaries ID: DS0004 \u24d8 Platform: PRE \u24d8 Collection Layer: OSINT Version: 1.1 Created: 20 October 2021 Last Modified: 16 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Malware Repository: Malware Content Code, strings, signatures, and other identifying characteristics of a malicious payload stored within a malware repository. It includes both static (file-based) and dynamic (behavioral or execution-based) components that can be analyzed for threat intelligence, detection, and prevention purposes. Examples: Static Analysis: Executable Code: Analyze binary data to identify unique patterns, obfuscated code, or embedded resources. Strings Extraction: Use tools like strings or YARA rules to identify hardcoded URLs, IPs, filenames, or suspicious function calls. Signatures: Extract cryptographic hashes (MD5, SHA256) of files to track known malware variants or detect previously unseen samples. Dynamic Analysis: Behavioral Observations: Monitor execution traces to capture API calls, registry modifications, or network traffic patterns indicative of malicious behavior. Memory Analysis: Examine memory dumps to uncover injected code or runtime-decrypted payloads. Artifacts: Record file system changes, process creation events, and command-line arguments. Threat Intelligence Integration: Campaign Attribution: Associate observed code snippets or signatures with known APT campaigns or ransomware families. Indicator Sharing: Share identified Indicators of Compromise (IOCs) with threat intelligence platforms (e.g., MISP, OpenCTI). Examples of Malware Content: Embedded C2 domains (e.g., malicious-domain.com hardcoded in the payload). Fileless malware indicators, such as PowerShell scripts invoking Invoke-Mimikatz. Malware-specific signatures, such as unique PE header values for a particular strain. Data Collection Measures: Collection from Public Malware Repositories: VirusTotal: Obtain samples for static analysis. Hybrid Analysis: Gather execution data from sandbox analysis. Any.Run: Access interactive malware execution traces. MalwareBazaar: Download malware samples for research and signature generation. Automate data extraction using repository APIs (e.g., VirusTotal API for hash lookups or sample retrieval). Internal Malware Labs: Sandbox Environments: Use dynamic malware analysis tools such as Cuckoo Sandbox or Joe Sandbox to execute and monitor malware in a controlled environment. Capture runtime behavior logs, memory dumps, and file system changes. Reverse Engineering: Disassemble binaries with tools like IDA Pro, Ghidra, or Radare2 to identify malicious functionality and extract code patterns. EDR/Endpoint Telemetry: Collect samples of malicious binaries or scripts from infected endpoints using tools like CrowdStrike, Carbon Black, or SentinelOne. Extract memory-resident payloads from live systems for analysis. Threat Intelligence Platforms: Gather contextual metadata for identified malware using tools like OpenCTI, Recorded Future, or ThreatConnect. Participate in intelligence-sharing groups such as ISACs (e.g., FS-ISAC, IT-ISAC). Custom Data Collection Pipelines: Use open-source tools like malwoverview or Maltrail to automate sample downloads, hash extraction, and IOC generation. Malware Repository: Malware Content Code, strings, signatures, and other identifying characteristics of a malicious payload stored within a malware repository. It includes both static (file-based) and dynamic (behavioral or execution-based) components that can be analyzed for threat intelligence, detection, and prevention purposes. Examples: Static Analysis: Executable Code: Analyze binary data to identify unique patterns, obfuscated code, or embedded resources. Strings Extraction: Use tools like strings or YARA rules to identify hardcoded URLs, IPs, filenames, or suspicious function calls. Signatures: Extract cryptographic hashes (MD5, SHA256) of files to track known malware variants or detect previously unseen samples. Dynamic Analysis: Behavioral Observations: Monitor execution traces to capture API calls, registry modifications, or network traffic patterns indicative of malicious behavior. Memory Analysis: Examine memory dumps to uncover injected code or runtime-decrypted payloads. Artifacts: Record file system changes, process creation events, and command-line arguments. Threat Intelligence Integration: Campaign Attribution: Associate observed code snippets or signatures with known APT campaigns or ransomware families. Indicator Sharing: Share identified Indicators of Compromise (IOCs) with threat intelligence platforms (e.g., MISP, OpenCTI). Examples of Malware Content: Embedded C2 domains (e.g., malicious-domain.com hardcoded in the payload). Fileless malware indicators, such as PowerShell scripts invoking Invoke-Mimikatz. Malware-specific signatures, such as unique PE header values for a particular strain. Data Collection Measures: Collection from Public Malware Repositories: VirusTotal: Obtain samples for static analysis. Hybrid Analysis: Gather execution data from sandbox analysis. Any.Run: Access interactive malware execution traces. MalwareBazaar: Download malware samples for research and signature generation. Automate data extraction using repository APIs (e.g., VirusTotal API for hash lookups or sample retrieval). Internal Malware Labs: Sandbox Environments: Use dynamic malware analysis tools such as Cuckoo Sandbox or Joe Sandbox to execute and monitor malware in a controlled environment. Capture runtime behavior logs, memory dumps, and file system changes. Reverse Engineering: Disassemble binaries with tools like IDA Pro, Ghidra, or Radare2 to identify malicious functionality and extract code patterns. EDR/Endpoint Telemetry: Collect samples of malicious binaries or scripts from infected endpoints using tools like CrowdStrike, Carbon Black, or SentinelOne. Extract memory-resident payloads from live systems for analysis. Threat Intelligence Platforms: Gather contextual metadata for identified malware using tools like OpenCTI, Recorded Future, or ThreatConnect. Participate in intelligence-sharing groups such as ISACs (e.g., FS-ISAC, IT-ISAC). Custom Data Collection Pipelines: Use open-source tools like malwoverview or Maltrail to automate sample downloads, hash extraction, and IOC generation. Domain ID Name Detects Enterprise T1587 Develop Capabilities Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control. .001 Malware Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time. Enterprise T1588 Obtain Capabilities Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific Malware-as-a-Service (MaaS) offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.[1] Malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in Cobalt Strike payloads.[2] .001 Malware Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.[1] Malware Repository: Malware Metadata Contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information Malware Repository: Malware Metadata Contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information Domain ID Name Detects Enterprise T1587 Develop Capabilities Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control. .001 Malware Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle. .002 Code Signing Certificates Consider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as Code Signing or Install Root Certificate. Enterprise T1588 Obtain Capabilities Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control. .001 Malware Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle. .002 Tool Monitor for contextual data about a malicious payload, such as compilation times, file hashes, as well as watermarks or other identifiable configuration information. In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in Cobalt Strike payloads.[2]Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle. .003 Code Signing Certificates Consider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as Code Signing or Install Root Certificate. References FireEye. (2014). SUPPLY CHAIN ANALYSIS: From Quartermaster to SunshopFireEye. Retrieved March 6, 2017. Maynier, E. (2020, December 20). Analyzing Cobalt Strike for Fun and Profit. Retrieved October 12, 2021. "
},
{
"id": 1148,
"title": "Kernel, Data Source DS0008",
"path": "/datasources/DS0008/index.html",
"content": " Kernel A computer program, at the core of a computer OS, that resides in memory and facilitates interactions between hardware and software components[1][2] ID: DS0008 \u24d8 Platforms: Linux, macOS \u24d8 Collection Layer: Host Contributors: Center for Threat-Informed Defense (CTID) Version: 1.0 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Kernel: Kernel Module Load The process of loading a kernel module into the operating system kernel. Kernel modules are object files that extend the kernel\u2019s functionality, such as adding support for device drivers, new filesystems, or additional system calls. This action can be legitimate (e.g., loading a driver) or malicious (e.g., adding a rootkit). Data Collection Measures: Linux: Auditd: Enable auditing of kernel module loading. Example rule: -a always,exit -F arch=b64 -S init_module,delete_module. Syslog: Monitor /var/log/syslog or /var/log/messages for entries related to kernel module loads. Systemd Journal: Use journalctl to query logs for module loading events: journalctl -k | grep \"Loading kernel module\" macOS: Unified Logs: Use the log command to query kernel module events: log show --predicate 'eventMessage contains \"kextload\"' --info Endpoint Security Framework (ESF): Monitor for ES_EVENT_TYPE_AUTH_KEXTLOAD (kernel extension loading events). Kernel-Specific Tools: Lsmod: Use lsmod to list loaded kernel modules in real-time. Kprobe/eBPF: Use extended Berkeley Packet Filter (eBPF) or Kernel Probes (kprobes) to monitor kernel events, including module loading. Example using eBPF tools like BCC:sudo python /path/to/bcc/tools/kprobe -v do_init_module Enable EDR Monitoring: Configure alerts for: Suspicious kernel module loads from non-standard paths (e.g., /tmp). Unexpected or unsigned kernel modules. Review detailed telemetry data provided by the EDR for insight into who initiated the module load, the file path, and whether the module was signed. Kernel: Kernel Module Load The process of loading a kernel module into the operating system kernel. Kernel modules are object files that extend the kernel\u2019s functionality, such as adding support for device drivers, new filesystems, or additional system calls. This action can be legitimate (e.g., loading a driver) or malicious (e.g., adding a rootkit). Data Collection Measures: Linux: Auditd: Enable auditing of kernel module loading. Example rule: -a always,exit -F arch=b64 -S init_module,delete_module. Syslog: Monitor /var/log/syslog or /var/log/messages for entries related to kernel module loads. Systemd Journal: Use journalctl to query logs for module loading events: journalctl -k | grep \"Loading kernel module\" macOS: Unified Logs: Use the log command to query kernel module events: log show --predicate 'eventMessage contains \"kextload\"' --info Endpoint Security Framework (ESF): Monitor for ES_EVENT_TYPE_AUTH_KEXTLOAD (kernel extension loading events). Kernel-Specific Tools: Lsmod: Use lsmod to list loaded kernel modules in real-time. Kprobe/eBPF: Use extended Berkeley Packet Filter (eBPF) or Kernel Probes (kprobes) to monitor kernel events, including module loading. Example using eBPF tools like BCC:sudo python /path/to/bcc/tools/kprobe -v do_init_module Enable EDR Monitoring: Configure alerts for: Suspicious kernel module loads from non-standard paths (e.g., /tmp). Unexpected or unsigned kernel modules. Review detailed telemetry data provided by the EDR for insight into who initiated the module load, the file path, and whether the module was signed. Domain ID Name Detects Enterprise T1547 Boot or Logon Autostart Execution Monitor for unusual kernel driver installation activity that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. .006 Kernel Modules and Extensions LKMs are typically loaded into /lib/modules and have had the extension .ko (\"kernel object\") since version 2.6 of the Linux kernel. [3] Enterprise T1611 Escape to Host Monitor for the installation of kernel modules that could be abused to escape containers on a host. References Unified Compliance Framework. (2016, December 20). The audit system must be configured to audit the loading and unloading of dynamic kernel modules.. Retrieved September 28, 2021. Kerrisk, M. (2021, March 22). INIT_MODULE(2). Retrieved September 28, 2021. Wikipedia. (2018, March 17). Loadable kernel module. Retrieved April 9, 2018. "
},
{
"id": 1149,
"title": "Instance, Data Source DS0030",
"path": "/datasources/DS0030/index.html",
"content": " Instance A virtual server environment which runs workloads, hosted on-premise or by third-party cloud providers[1][2] ID: DS0030 \u24d8 Platform: IaaS \u24d8 Collection Layer: Cloud Control Plane Version: 1.0 Created: 20 October 2021 Last Modified: 17 November 2024 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Instance: Instance Creation The initial provisioning and construction of a virtual machine (VM) or compute instance within a cloud infrastructure environment. This activity involves defining and allocating resources such as CPU, memory, storage, and networking to spin up a new compute instance. Examples: AWS: creating an EC2 instance using RunInstances API calls. Azure, creating a VM through the Azure Resource Manager (ARM). GCP, an instance.insert action recorded. Data Collection Measures: AWS CloudTrail: CloudTrail logs stored in S3 or accessible via CloudWatch. Azure Activity Logs: Accessible in Azure Monitor or exported to a storage account. GCP Audit Logs: Logs Explorer or BigQuery. Instance: Instance Creation The initial provisioning and construction of a virtual machine (VM) or compute instance within a cloud infrastructure environment. This activity involves defining and allocating resources such as CPU, memory, storage, and networking to spin up a new compute instance. Examples: AWS: creating an EC2 instance using RunInstances API calls. Azure, creating a VM through the Azure Resource Manager (ARM). GCP, an instance.insert action recorded. Data Collection Measures: AWS CloudTrail: CloudTrail logs stored in S3 or accessible via CloudWatch. Azure Activity Logs: Accessible in Azure Monitor or exported to a storage account. GCP Audit Logs: Logs Explorer or BigQuery. Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.In AWS, CloudTrail logs capture the creation of an instance in the RunInstances event, and in Azure the creation of a VM may be captured in Azure activity logs.[3] [4] Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances create to create a VM.[5] .002 Create Cloud Instance The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity. In AWS, CloudTrail logs capture the creation of an instance in the RunInstances event, and in Azure the creation of a VM may be captured in Azure activity logs.[3] [4] Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances create to create a VM.[5] Analytic 1 - Operations performed by unexpected initiators, unusual resource names, frequent modifications index=\"azure_activity_logs\" (OperationName=\"Create or Update Virtual Machine\" OR OperationName=\"Create or Update Virtual Machine Extension\")| stats count by InitiatorName, Resource| where Resource LIKE \"Microsoft.Compute/virtualMachines*\" AND (Status!=\"Succeeded\" OR InitiatorName!=\"expected_initiator\")| sort by Time Enterprise T1535 Unused/Unsupported Cloud Regions Monitor system logs to review instance activities occurring across all cloud environments and regions. Enterprise T1204 User Execution Monitor for newly constructed instances that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. .003 Malicious Image Monitor for newly constructed instances that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior. Instance: Instance Deletion Removal of a virtual machine (VM) or compute instance within a cloud infrastructure. This activity results in the termination and deletion of the allocated resources (e.g., CPU, memory, storage), making the instance unavailable for future use. Examples: AWS: instance deletion involves the TerminateInstances API call, which is recorded in CloudTrail logs. Azure: VM deletion can be monitored via Azure Activity Logs, showing the Microsoft.Compute/virtualMachines/delete operation. GCP: instance deletion is logged as an instance.delete operation within GCP Audit Logs. *Data Collection Measures: AWS CloudTrail: CloudTrail logs stored in S3 or forwarded to CloudWatch. Azure Activity Logs: Accessible via Azure Monitor or exported to a storage account. GCP Audit Logs: Logs Explorer or BigQuery. Instance: Instance Deletion Removal of a virtual machine (VM) or compute instance within a cloud infrastructure. This activity results in the termination and deletion of the allocated resources (e.g., CPU, memory, storage), making the instance unavailable for future use. Examples: AWS: instance deletion involves the TerminateInstances API call, which is recorded in CloudTrail logs. Azure: VM deletion can be monitored via Azure Activity Logs, showing the Microsoft.Compute/virtualMachines/delete operation. GCP: instance deletion is logged as an instance.delete operation within GCP Audit Logs. *Data Collection Measures: AWS CloudTrail: CloudTrail logs stored in S3 or forwarded to CloudWatch. Azure Activity Logs: Accessible via Azure Monitor or exported to a storage account. GCP Audit Logs: Logs Explorer or BigQuery. Domain ID Name Detects Enterprise T1485 Data Destruction Monitor for unexpected deletion of a virtual machine or database instance (ex: instance.delete within GCP Audit Logs, DeleteDBInstance in AWS) Enterprise T1578 Modify Cloud Compute Infrastructure The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity. In AWS, CloudTrail logs capture the deletion of an instance in the TerminateInstances event, and in Azure the deletion of a VM may be captured in Azure activity logs.[3] [4] Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances delete to delete a VM.[5] .003 Delete Cloud Instance The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity. In AWS, CloudTrail logs capture the deletion of an instance in the TerminateInstances event, and in Azure the deletion of a VM may be captured in Azure activity logs.[3] [4] Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of gcloud compute instances delete to delete a VM.[5] Analytic 1 - Operations performed by unexpected initiators, unusual resource names, frequent deletions index=\"azure_activity_logs\" (OperationName=\"Delete Virtual Machine\" OR OperationName=\"Delete Disk\" OR OperationName=\"Delete Role Assignment\")| stats count by InitiatorName, Resource| where Resource LIKE \"Microsoft.Compute/virtualMachines*\" AND (Status!=\"Succeeded\" OR InitiatorName!=\"expected_initiator\")| sort by Time Instance: Instance Enumeration The process of retrieving or querying a list of virtual machine instances or compute instances within a cloud infrastructure. This activity provides a view of all available or running instances, typically including their associated metadata such as instance ID, name, state, and configuration details. Examples: AWS: instance enumeration involves the DescribeInstances API call, which retrieves information about running or stopped EC2 instances. Azure: VM enumeration can be monitored via the Microsoft.Compute/virtualMachines/read operation. GCP: instance enumeration is logged as an instance.list operation within GCP Audit Logs. Data Collection Measures: AWS CloudTrail: CloudTrail logs stored in S3 or forwarded to CloudWatch. Azure Activity Logs: Accessible via Azure Monitor or exported to a storage account. GCP Audit Logs: Logs Explorer or BigQuery. Instance: Instance Enumeration The process of retrieving or querying a list of virtual machine instances or compute instances within a cloud infrastructure. This activity provides a view of all available or running instances, typically including their associated metadata such as instance ID, name, state, and configuration details. Examples: AWS: instance enumeration involves the DescribeInstances API call, which retrieves information about running or stopped EC2 instances. Azure: VM enumeration can be monitored via the Microsoft.Compute/virtualMachines/read operation. GCP: instance enumeration is logged as an instance.list operation within GCP Audit Logs. Data Collection Measures: AWS CloudTrail: CloudTrail logs stored in S3 or forwarded to CloudWatch. Azure Activity Logs: Accessible via Azure Monitor or exported to a storage account. GCP Audit Logs: Logs Explorer or BigQuery. Domain ID Name Detects Enterprise T1580 Cloud Infrastructure Discovery Monitor cloud logs for API calls and other potentially unusual activity related to cloud instance enumeration. Discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. Instance: Instance Metadata Contextual data about an instance and activity around it such as name, type, or status Instance: Instance Metadata Contextual data about an instance and activity around it such as name, type, or status Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure Periodically baseline instances to identify malicious modifications or additions. .002 Create Cloud Instance Periodically baseline instances to identify malicious modifications or additions. .003 Delete Cloud Instance Periodically baseline instances to identify malicious modifications or additions. .004 Revert Cloud Instance Periodically baseline instances to identify malicious modifications or additions. Enterprise T1535 Unused/Unsupported Cloud Regions Monitor and consider configuring alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold. Instance: Instance Modification Changes made to a virtual machine (VM) or compute instance, including alterations to its configuration, metadata, attached policies, or operational state. Such modifications can include updating metadata, attaching or detaching resource policies, resizing instances, or modifying network configurations. Examples: AWS: instance modifications include API actions like ModifyInstanceAttribute, ModifyInstanceMetadataOptions, or RebootInstances. Azure: modifications can be tracked through operations like Microsoft.Compute/virtualMachines/write. GCP: instance modification events include operations like instances.setMetadata, instances.addResourcePolicies, or instances.resize. Data Collection Measures: AWS CloudTrail: Log Location: Stored in S3 or forwarded to CloudWatch. Azure Activity Logs: Log Location: Accessible via Azure Monitor or exported to a storage account. GCP Audit Logs: Log Location: Logs Explorer or BigQuery. Instance: Instance Modification Changes made to a virtual machine (VM) or compute instance, including alterations to its configuration, metadata, attached policies, or operational state. Such modifications can include updating metadata, attaching or detaching resource policies, resizing instances, or modifying network configurations. Examples: AWS: instance modifications include API actions like ModifyInstanceAttribute, ModifyInstanceMetadataOptions, or RebootInstances. Azure: modifications can be tracked through operations like Microsoft.Compute/virtualMachines/write. GCP: instance modification events include operations like instances.setMetadata, instances.addResourcePolicies, or instances.resize. Data Collection Measures: AWS CloudTrail: Log Location: Stored in S3 or forwarded to CloudWatch. Azure Activity Logs: Log Location: Accessible via Azure Monitor or exported to a storage account. GCP Audit Logs: Log Location: Logs Explorer or BigQuery. Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. .004 Revert Cloud Instance Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. Instance: Instance Start The initiation or activation of a virtual machine instance within a cloud infrastructure. This action typically involves starting an existing instance that had been stopped or paused, allowing it to resume operation. Examples: Google Cloud Platform (GCP): Starting an instance through instance.start API activity. AWS: Logging of StartInstances in AWS CloudTrail for EC2 instances. Azure: Microsoft.Compute/virtualMachines/start entries indicate a VM instance being started. Data Collection Measures: Google Cloud Platform: Enable GCP Audit Logs for Compute Engine. Log Event: Look for instance.start entries in Cloud Logging. Amazon Web Services (AWS): AWS CloudTrail. Log Event: Search for StartInstances events associated with EC2. Microsoft Azure: Azure Activity Logs. Log Event: Filter for Microsoft.Compute/virtualMachines/start operations. Instance: Instance Start The initiation or activation of a virtual machine instance within a cloud infrastructure. This action typically involves starting an existing instance that had been stopped or paused, allowing it to resume operation. Examples: Google Cloud Platform (GCP): Starting an instance through instance.start API activity. AWS: Logging of StartInstances in AWS CloudTrail for EC2 instances. Azure: Microsoft.Compute/virtualMachines/start entries indicate a VM instance being started. Data Collection Measures: Google Cloud Platform: Enable GCP Audit Logs for Compute Engine. Log Event: Look for instance.start entries in Cloud Logging. Amazon Web Services (AWS): AWS CloudTrail. Log Event: Search for StartInstances events associated with EC2. Microsoft Azure: Azure Activity Logs. Log Event: Filter for Microsoft.Compute/virtualMachines/start operations. Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to activation of instances that are occurring outside of normal activity/planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. .004 Revert Cloud Instance Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to activation of instances that are occurring outside of normal activity/planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. Enterprise T1204 User Execution Monitor for the activation or invocation of an instance (ex: instance.start within GCP Audit Logs) .003 Malicious Image Monitor for the activation or invocation of an instance (ex: instance.start within GCP Audit Logs) Instance: Instance Stop The deactivation or shutdown of a virtual machine instance within a cloud infrastructure. This action typically involves stopping a running instance, which halts its operation and releases certain associated resources, such as CPU and memory. Examples: Google Cloud Platform (GCP): instance.stop events recorded in GCP Audit Logs indicate the deactivation of an instance. Amazon Web Services (AWS): StopInstances actions in AWS CloudTrail indicate EC2 instances being stopped. Microsoft Azure: Microsoft.Compute/virtualMachines/deallocate or stop events in Azure Activity Logs represent a virtual machine being stopped or deallocated. Instance: Instance Stop The deactivation or shutdown of a virtual machine instance within a cloud infrastructure. This action typically involves stopping a running instance, which halts its operation and releases certain associated resources, such as CPU and memory. Examples: Google Cloud Platform (GCP): instance.stop events recorded in GCP Audit Logs indicate the deactivation of an instance. Amazon Web Services (AWS): StopInstances actions in AWS CloudTrail indicate EC2 instances being stopped. Microsoft Azure: Microsoft.Compute/virtualMachines/deallocate or stop events in Azure Activity Logs represent a virtual machine being stopped or deallocated. Domain ID Name Detects Enterprise T1578 Modify Cloud Compute Infrastructure Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to deactivation of instances that are occurring outside of planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. .004 Revert Cloud Instance Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to deactivation of instances that are occurring outside of planned operations. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones. References Microsoft. (n.d.). What is a virtual machine (VM)?. Retrieved November 17, 2024. Google. (n.d.). Virtual machine instances. Retrieved October 13, 2021. Amazon. (n.d.). Search CloudTrail logs for API calls to EC2 Instances. Retrieved June 17, 2020. Microsoft. (n.d.). View Azure activity logs. Retrieved June 17, 2020. Google. (n.d.). Audit Logs. Retrieved June 1, 2020. "
},
{
"id": 1150,
"title": "Application Log, Data Source DS0015",
"path": "/datasources/DS0015/index.html",
"content": " Application Log Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)[1] ID: DS0015 \u24d8 Platforms: ESXi, IaaS, Linux, Office Suite, SaaS, Windows, macOS \u24d8 Collection Layers: Cloud Control Plane, Host Version: 1.1 Created: 20 October 2021 Last Modified: 25 April 2025 Version Permalink Live Version Data Components This data source does not have any techniques in the selected domain(s) Application Log: Application Log Content Application Log Content refers to logs generated by applications or services, providing a record of their activity. These logs may include metrics, errors, performance data, and operational alerts from web, mail, or other applications. These logs are vital for monitoring application behavior and detecting malicious activities or anomalies. Examples: Web Application Logs: These logs include information about requests, responses, errors, and security events (e.g., unauthorized access attempts). Email Application Logs: Logs contain metadata about emails sent, received, or blocked (e.g., sender/receiver addresses, message IDs). SaaS Application Logs: Activity logs include user logins, configuration changes, and access to sensitive resources. Cloud Application Logs: Logs detail control plane activities, including API calls, instance modifications, and network changes. System/Application Monitoring Logs: Logs provide insights into application performance, errors, and anomalies. This data component can be collected through the following measures: Configure Application Logging Enable logging within the application or service. Examples: Web Servers: Enable access and error logs in NGINX or Apache. Email Systems: Enable audit logging in Microsoft Exchange or Gmail. Centralized Log Management Use log management solutions like Splunk, or a cloud-native logging solution. Configure the application to send logs to a centralized system for analysis. Cloud-Specific Collection Use services like AWS CloudWatch, Azure Monitor, or Google Cloud Operations Suite for cloud-based applications. Ensure logging is enabled for all critical resources (e.g., API calls, IAM changes). SIEM Integration Integrate application logs with a SIEM platform (e.g., Splunk, QRadar) for real-time correlation and analysis. Use parsers to standardize log formats and extract key fields like timestamps, user IDs, and error codes. Application Log: Application Log Content Application Log Content refers to logs generated by applications or services, providing a record of their activity. These logs may include metrics, errors, performance data, and operational alerts from web, mail, or other applications. These logs are vital for monitoring application behavior and detecting malicious activities or anomalies. Examples: Web Application Logs: These logs include information about requests, responses, errors, and security events (e.g., unauthorized access attempts). Email Application Logs: Logs contain metadata about emails sent, received, or blocked (e.g., sender/receiver addresses, message IDs). SaaS Application Logs: Activity logs include user logins, configuration changes, and access to sensitive resources. Cloud Application Logs: Logs detail control plane activities, including API calls, instance modifications, and network changes. System/Application Monitoring Logs: Logs provide insights into application performance, errors, and anomalies. This data component can be collected through the following measures: Configure Application Logging Enable logging within the application or service. Examples: Web Servers: Enable access and error logs in NGINX or Apache. Email Systems: Enable audit logging in Microsoft Exchange or Gmail. Centralized Log Management Use log management solutions like Splunk, or a cloud-native logging solution. Configure the application to send logs to a centralized system for analysis. Cloud-Specific Collection Use services like AWS CloudWatch, Azure Monitor, or Google Cloud Operations Suite for cloud-based applications. Ensure logging is enabled for all critical resources (e.g., API calls, IAM changes). SIEM Integration Integrate application logs with a SIEM platform (e.g., Splunk, QRadar) for real-time correlation and analysis. Use parsers to standardize log formats and extract key fields like timestamps, user IDs, and error codes. Domain ID Name Detects Enterprise T1098 .002 Account Manipulation: Additional Email Delegate Permissions Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None. A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring. .005 Account Manipulation: Device Registration Entra ID creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.[2] Additionally, joined devices can be viewed via the Entra ID portal.[3] ICS T0800 Activate Firmware Update Mode Monitor asset log which may provide information that an asset has been placed into Firmware Update Mode. Some assets may log firmware updates themselves without logging that the device has been placed into update mode. Enterprise T1557 Adversary-in-the-Middle Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.[4] .003 DHCP Spoofing Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.[4][5] ICS T0830 Adversary-in-the-Middle Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM. ICS T0803 Block Command Message Monitor application logs for changes to settings and other events associated with network protocols that may be used to block communications. ICS T0804 Block Reporting Message Monitor application logs for changes to settings and other events associated with network protocols that may be used to block communications. ICS T0805 Block Serial COM Monitor application logs for changes to settings and other events associated with network protocols that may be used to block communications. Enterprise T1110 Brute Force Monitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials. .001 Password Guessing Monitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.[6] .002 Password Cracking Monitor authentication logs for system and application login failures of Valid Accounts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as OS Credential Dumping or Kerberoasting. .003 Password Spraying Monitor authentication logs for system and application login failures of Valid Accounts. Consider the following event IDs:[7]Domain Controllers: \"Audit Logon\" (Success & Failure) for event ID 4625.Domain Controllers: \"Audit Kerberos Authentication Service\" (Success & Failure) for event ID 4771.All systems: \"Audit Logon\" (Success & Failure) for event ID 4648.[6] .004 Credential Stuffing Monitor authentication logs for system and application login failures of Valid Accounts. If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.[6] ICS T0806 Brute Force I/O Some asset application logs may provide information on I/O points related to write commands. Monitor for write commands for an excessive number of I/O points or manipulating a single value an excessive number of times. ICS T0858 Change Operating Mode Monitor device application logs which may contain information related to operating mode changes, although not all devices produce such logs. ICS T0807 Command-Line Interface Monitor logs from installed applications (e.g., historian logs) for unexpected commands or abuse of system features. Enterprise T1213 Data from Information Repositories Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. .001 Confluence Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. .002 Sharepoint Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. .003 Code Repositories Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies. .004 Customer Relationship Management Software Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the CRM database as a source to mine valuable information. Monitor access to the CRM database, especially performed by privileged users as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of records; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. .005 Messaging Applications Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to messaging applications, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access messaging applications. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies. ICS T0811 Data from Information Repositories Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies. Enterprise T1622 Debugger Evasion Monitor debugger logs for signs of abnormal and potentially malicious activity. Enterprise T1491 Defacement Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network. .001 Internal Defacement Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users. .002 External Defacement Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. ICS T0814 Denial of Service Monitor for application logging, messaging, and/or other artifacts that may result from Denial of Service (DoS) attacks which degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Enterprise T1610 Deploy Container Monitor application logs for any unexpected or suspicious container deployment activities through the management API or service-specific logs (e.g., Docker Daemon logs, Kubernetes event logs). Analytic 1 - Container creation and start activities in Docker and Kubernetes sourcetype=docker:daemon OR sourcetype=kubernetes:event| where action IN (\"create\", \"start\") ICS T0816 Device Restart/Shutdown Device restarts and shutdowns may be observable in device application logs. Monitor for unexpected device restarts or shutdowns. Enterprise T1484 Domain or Tenant Policy Modification Monitor changes to cloud-based directory services and identity tenants, especially regarding the addition of new federated identity providers. In Okta environments, the event system.idp.lifecycle.create will trigger on the creation of an identity provider, while sign-ins from a third-party identity provider will create the event user.authentication.auth_via_IDP.[8] .002 Trust Modification Monitor changes to cloud-based directory services and identity tenants, especially regarding the addition of new federated identity providers. In Okta environments, the event system.idp.lifecycle.create will trigger on the creation of an identity provider, while sign-ins from a third-party identity provider will create the event user.authentication.auth_via_IDP.[8] In AWS environments, alert on events such as StartSSO, CreateSAMLProvider, or CreateOIDCProvider.[9] Enterprise T1189 Drive-by Compromise Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before. ICS T0817 Drive-by Compromise Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before. Enterprise T1667 Email Bombing Monitor e-mail logs for an abnormally high volume of messages or message content sent to specific victim e-mail addresses or servers. Analytic 1 - Spike in Email Volume index=email_logs sourcetype=\"mail:log\"| timechart span=5m count by recipient_email| eventstats avg(count) as avg_count stdev(count) as std_dev by recipient_email| eval spike=if(count > avg_count + (3*std_dev), 1, 0)| search spike=1| table _time, recipient_email, count, avg_count, std_dev Enterprise T1114 Email Collection Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.[10] High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level. .002 Remote Email Collection In Office365 environments, consider using PurviewAudit to collect MailItemsAccessed events and monitoring for unusual email access behavior.[6] .003 Email Forwarding Rule Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.[11]Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.[10] High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level. In environments using Exchange, monitor logs for the creation or modification of mail transport rules. Enterprise T1672 Email Spoofing Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[12][13] Analytic 1 - Detect Spoofed Emails Using SPF/DKIM/DMARC Failures sourcetype=\"o365:messageTrace\"| search AuthenticationDetails=\"fail\" OR SPF=\"fail\" OR DKIM=\"fail\" OR DMARC=\"fail\"| eval spoof_score=if(SPF=\"fail\", 1, 0) + if(DKIM=\"fail\", 1, 0) + if(DMARC=\"fail\", 1, 0)| where spoof_score >= 2| table _time, SenderFromAddress, RecipientAddress, Subject, AuthenticationDetails, spoof_score Analytic 2 - Domain Mismatch Detection (Generic SMTP/Proxy Logs) index=email_logs sourcetype=mail| eval from_domain=lower(substr(Sender, strpos(Sender, \"@\")+1))| eval return_path_domain=lower(substr(ReturnPath, strpos(ReturnPath, \"@\")+1))| where from_domain!=return_path_domain AND isnotnull(ReturnPath)| stats count by from_domain, return_path_domain, Subject, _time Enterprise T1499 Endpoint Denial of Service Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS. .002 Service Exhaustion Flood Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS. .003 Application Exhaustion Flood Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS. .004 Application or System Exploitation Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. [14] Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS. Enterprise T1675 ESXi Administration Command Monitor for Guest Operations API calls executed from the ESXi host to a guest VM, especially:- StartProgramInGuest- ListProcessesInGuest- InitiateFileTransferFromGuest- ListFileInGuest Sudden usage from ESXi management accounts (especially out of hours). Use of Guest Ops on VMs where vmtoolsd is not typically used or disabled. Operations from unusual ESXi IPs or using credentials not normally associated with VM management. [15] Analytic 1 - ESXi Abuse sourcetype=\"vmware:log\"| eval guest_operation=coalesce('eventMessage', 'message')| search guest_operation=\"StartProgramInGuest\" OR guest_operation=\"ListProcessesInGuest\" OR guest_operation=\"ListFileInGuest\" OR guest_operation=\"InitiateFileTransferFromGuest\"| stats count by host, vm_name, user, guest_operation, _time| eventstats count as total_operations by host| where total_operations > 10 OR (user!=\"expected_admin\" AND total_operations > 1)| table _time, host, vm_name, user, guest_operation Enterprise T1048 Exfiltration Over Alternative Protocol Monitor cloud-based file hosting services, such as Google Drive and Microsoft OneDrive, for unusual instances of file downloads \u2013 for example, many downloads by a single user in a short period of time. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies. Additionally, data loss prevention policies can be defined to detect and alert on exfiltration events on particularly sensitive data. Analytic 1 - Detecting Alternative Exfiltration via Cloud Services (EventCode=\"FileUploaded\" OR EventCode=\"PutObject\" OR source=\"O365_audit\" OR source=\"Google_Admin_Logs\")| where (action IN (\"upload\", \"putObject\", \"email_sent\", \"drive_upload\"))| stats count by _time, host, user, action, destination, file_size| where count >= 3| eval risk_score=case( action IN (\"putObject\", \"FileUploaded\") AND file_size > 10000000, 9, action IN (\"email_sent\") AND file_size > 5000000, 8)| where risk_score >= 8| table _time, host, user, action, destination, file_size, risk_score Enterprise T1567 Exfiltration Over Web Service Review logs for SaaS services, including Office 365 and Google Workspace, to detect the configuration of new webhooks or other features that could be abused to exfiltrate data. Analytic 1 - Detecting Large File Uploads to Web Services (EventCode=\"FileUploaded\" OR EventCode=\"PutObject\" OR source=\"O365_audit\" OR source=\"Google_Admin_Logs\")| where (file_size > 5000000) // Detects files larger than 5MB| stats count by _time, host, user, action, service_name, file_size| where count >= 3| eval risk_score=case( file_size > 50000000, 9, // High-risk large file transfer file_size > 5000000, 8)| where risk_score >= 8| table _time, host, user, action, service_name, file_size, risk_score .004 Exfiltration Over Webhook Review logs for SaaS services, including Office 365 and Google Workspace, to detect the configuration of new webhooks. Analytic 1 - Detecting Webhook Creation in SaaS Platforms (EventCode=\"WebhookCreated\" OR EventCode=\"WebhookSubscriptionCreated\" OR EventCode=\"IntegrationAdded\")| where (action IN (\"create_webhook\", \"add_webhook\", \"modify_webhook\"))| stats count by _time, host, user, action, service_name, webhook_url| where count >= 3| eval risk_score=case( action IN (\"create_webhook\", \"modify_webhook\"), 9, action IN (\"add_webhook\"), 8)| where risk_score >= 8| table _time, host, user, action, service_name, webhook_url, risk_score Enterprise T1190 Exploit Public-Facing Application Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation. Web server logs (e.g., var/log/httpd or /var/log/apache for Apache web servers on Linux) may also record evidence of exploitation. (source=\"C:\\inetpub\\logs\\LogFiles\\W3SVC*\" OR source=\"/var/log/apache2/access.log\" OR source=\"/var/log/nginx/access.log\")| eval exploit_attempt=if(like(cs_uri_query, \"%exec%\") OR like(cs_uri_query, \"%cmd%\") OR like(cs_uri_query, \"%cat /etc/passwd%\") OR like(cs_uri_query, \"%../../%\"), 1, 0)| stats count by src_ip, cs_uri_query, sc_status| where exploit_attempt=1 AND count > 5| table _time, src_ip, cs_uri_query, sc_status, count ICS T0819 Exploit Public-Facing Application Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation. Enterprise T1203 Exploitation for Client Execution Monitor log entries from browsers, Office applications, and third-party applications for suspicious behavior, such as crashes, abnormal terminations, or instability that could indicate an attempted exploit. Analytic 1 - logs related to application crashes or unexpected behavior, which could signal an attempt to exploit vulnerabilities. sourcetype=WinEventLog:Application EventCode=1000| search application IN (\"chrome.exe\", \"firefox.exe\", \"winword.exe\", \"excel.exe\", \"acrord32.exe\", \"flashplayer.exe\")| stats count by application event_description| where event_description IN (\"crash\", \"instability\", \"unexpected termination\") Enterprise T1212 Exploitation for Credential Access Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Enterprise T1211 Exploitation for Defense Evasion Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. ICS T0820 Exploitation for Evasion Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. ICS T0890 Exploitation for Privilege Escalation Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Enterprise T1210 Exploitation of Remote Services Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation. sourcetype=\"WinEventLog:System\" (EventCode=7031 OR EventCode=1000) OR sourcetype=\"linux:syslog\" OR sourcetype=\"macos:system\"| search Message=\"service terminated unexpectedly\" OR Message=\"segmentation fault\" OR Message=\"service restart\"| stats count by Host, ServiceName, Message, _time| eval exploitation_suspicious=if(count > threshold OR match(Message, \"segmentation fault|service terminated unexpectedly\"), \"suspicious\", \"normal\")| where exploitation_suspicious=\"suspicious\"| table _time, Host, ServiceName, Message, exploitation_suspicious ICS T0866 Exploitation of Remote Services Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash, which may be recorded in the application log. Enterprise T1133 External Remote Services When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application. Analytic 1 - Failed connection attempts from remote services index=\"remote_access_logs\" sourcetype=\"vpn_logs\" OR sourcetype=\"rdp_logs\" OR sourcetype=\"citrix_logs\"| stats count by src_ip, dest_ip, user, status, _time| where status=\"failed\" AND count > 5| table _time, user, src_ip, dest_ip, status ICS T0822 External Remote Services When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application. Enterprise T1657 Financial Theft Review and monitor financial application logs for signs of financial theft, such as abnormal monetary transactions or resource balances. Email logs may also highlight account takeovers, impersonation, or another activity that may enable monetary theft. Enterprise T1200 Hardware Additions Monitor new external hardware devices connected to a system (USB, Thunderbolt, PCIe), unauthorized HID (Human Interface Device) injections simulating keyboard/mouse inputs, unusual kernel-level access from attached devices (e.g., DMA attacks), or execution of suspicious processes upon device connection. Analytic 1 - Detecting Unauthorized USB or Thunderbolt Devices (EventCode=6416) OR (source=\"/var/log/messages\" OR source=\"/var/log/syslog\" \"usb\" OR \"thunderbolt\")OR (source=\"sysmon\" EventCode=1 Image=\"C:\\Windows\\System32\\cmd.exe\" CommandLine=\"usb\")| eval risk_score=case( like(DeviceID, \"%BadUSB%\"), 8, like(DeviceID, \"%RubberDucky%\"), 9, like(DeviceID, \"%LanTap%\"), 7)| where risk_score >= 7| stats count by _time, host, DeviceID, user, risk_score Enterprise T1564 Hide Artifacts Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection. .008 Email Hiding Rules Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries. In environments using Exchange, monitor logs for the creation or modification of mail transport rules. Enterprise T1562 .002 Impair Defenses: Disable Windows Event Logging Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits. Enterprise T1656 Impersonation Review and monitor email and other user communication logs for signs of impersonation, such as suspicious emails (e.g., from known malicious or compromised accounts) or content associated with an adversary's actions on objective (e.g., abnormal monetary transactions). Enterprise T1070 Indicator Removal Monitor logs for abnormal modifications to application settings, such as the creation of malicious Exchange transport rules. .008 Clear Mailbox Data In environments using Exchange, monitor logs for the creation or modification of mail processing settings, such as transport rules. Enterprise T1534 Internal Spearphishing Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.[16] sourcetype=\"office365:audit\" OR sourcetype=\"googleworkspace:email\" OR sourcetype=\"chat:log\"| search action IN (\"SendEmail\", \"AddAttachment\", \"CreateMailItem\") OR event IN (\"message_sent\", \"attachment_added\")| eval sender_domain=split(sender, \"@\")[1]| where sender_domain=\"internaldomain.com\" AND (like(subject, \"%urgent%\") OR like(body, \"%reset your password%\") OR match(attachment, \".(exe|vbs|js|docm|xlsm|zip)\"))| stats count by sender, recipient, subject, attachment, _time| eval spearphishing_detected=if(count > threshold OR match(subject, \"reset|verify|urgent|important\"), \"suspicious\", \"normal\")| where spearphishing_detected=\"suspicious\"| table _time, sender, recipient, subject, attachment, spearphishing_detected ICS T0838 Modify Alarm Settings Monitor ICS asset application logs that indicate alarm settings have changed, although not all assets will produce such logs. Enterprise T1556 Modify Authentication Process Enable security auditing to collect logs from hybrid identity solutions. For example, monitor sign-ins to the Entra ID Application Proxy Connector, which are typically generated only when a new Pass Through Authentication (PTA) Agent is added. [17] If AD FS is in use, review the logs for event ID 501, which specifies all EKU attributes on a claim, and raise alerts on any values that are not configured in your environment.[18] Analytic 1 - Unexpected sign-ins or new PTA Agent additions. index=third_party_logs sourcetype IN (\"azure:activity\", \"gsuite:reports:activity\", \"aws:cloudtrail\", \"office365:management\", \"saas_audit\")(eventName IN (\"AddServicePrincipal\", \"AddUser\", \"UpdateUser\", \"AddGroup\", \"UpdateGroup\", \"AddPolicy\", \"UpdatePolicy\", \"AddRole\", \"UpdateRole\", \"PutRolePolicy\", \"AttachUserPolicy\", \"AttachGroupPolicy\", \"AttachRolePolicy\") OR eventCategory IN (\"Sign-ins\", \"Security\", \"AuditLogs\") OR EventID IN (501, 4662) OR \"protoPayload.methodName\" IN (\"directory.users.update\", \"admin.directory.group.update\", \"admin.directory.roleAssignments.update\")) .006 Multi-Factor Authentication Monitor for changes made to global multi-factor authentication settings in Identity-as-a-Service providers. For example, in Okta environments, the events system.mfa.factor.activate and system.mfa.factor.deactivate will trigger when an MFA factor is globally activated or deactivated. [8] Analytic 1 - Changes to MFA settings outside of normal maintenance windows. index=security sourcetype=\"audit\" OR sourcetype=\"azure:eventhub\" OR sourcetype=\"o365:management:activity\" OR sourcetype=\"gsuite:reports:admin\" EventCode IN (\"UserAddedToMFAExcludedGroup\", \"MFASettingsModified\", \"MFASettingsDisabled\", \"AddMFAOption\", \"RemoveMFAOption\", \"MFAEnforcementDisabled\") .007 Hybrid Identity Enable security auditing to collect logs from hybrid identity solutions. For example, monitor sign-ins to the Entra ID Application Proxy Connector, which are typically generated only when a new PTA Agent is added. [17] If AD FS is in use, review the logs for event ID 501, which specifies all EKU attributes on a claim, and raise alerts on any values that are not configured in your environment.[18] ICS T0821 Modify Controller Tasking Monitor asset application logs for information that indicate task parameters have changed. ICS T0836 Modify Parameter Monitor device application logs parameter changes, although not all devices will produce such logs. ICS T0889 Modify Program Monitor device application logs that indicate the program has changed, although not all devices produce such logs. ICS T0839 Module Firmware Monitor device application logs for firmware changes, although not all devices will produce such logs. ICS T0801 Monitor Process State Monitor applications logs for any access attempts to operational databases (e.g., historians) or other sources of operational data within the ICS environment. These devices should be monitored for adversary collection using techniques relevant to the underlying technologies (e.g., Windows, Linux). Enterprise T1621 Multi-Factor Authentication Request Generation Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised. Enterprise T1027 Obfuscated Files or Information The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. .005 Indicator Removal from Tools The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. .014 Polymorphic Code The initial detection of a malicious tool or anomalous behavior may trigger an anti-virus or other security tool alert, and may be one of the only indications received before the code is able to mutate and evade the same type of detection. The alerting system should be thoroughly investigated beyond the initial alert for activity that may not have been detected. Enterprise T1137 Office Application Startup Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[19] .003 Outlook Forms Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[19] .004 Outlook Home Page Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[19] .005 Outlook Rules Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose tool Ruler can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.[19] Enterprise T1069 Permission Groups Discovery Monitor for logging, messaging, and other artifacts provided by cloud services. .003 Cloud Groups Monitor for events collected that may attempt to find cloud groups and permission settings. Enterprise T1566 Phishing Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[12][13] URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link. Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. Correlate these records with system events. Analytic 1 - Detecting Malicious Phishing Emails (source=\"o365_message_trace\" OR source=\"gmail_security_logs\" OR source=\"/var/log/maillog\")| search (\"dkim=fail\" OR \"spf=fail\" OR \"dmarc=fail\" OR \"suspicious attachment\")| eval risk_score=case( like(subject, \"%password reset%\"), 8, like(subject, \"%urgent action required%\"), 7, like(subject, \"%invoice%\"), 6)| where risk_score >= 6| stats count by _time, src_email, dest_email, subject, attachment_name, risk_score .001 Spearphishing Attachment Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[12][13] Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.[20] Analytic 1 - Detecting Phishing Emails with Malicious Attachments (source=\"o365_audit\" OR source=\"gmail_logs\" OR source=\"email_gateway\")| where (spf=\"fail\" OR dkim=\"fail\" OR dmarc=\"fail\")| where (attachment IN (\"docm\", \"exe\", \"vbs\", \"js\", \"zip\"))| where (subject=\"invoice\" OR subject=\"urgent action required\" OR subject=\"account security update\")| eval risk_score=case( spf=\"fail\" AND dkim=\"fail\", 9, attachment IN (\"exe\", \"js\", \"vbs\"), 8, subject IN (\"invoice\", \"security update\"), 7)| where risk_score >= 7| stats count by _time, sender, recipient, subject, risk_score .002 Spearphishing Link Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[12][13] URL inspection within email (including expanding shortened links and identifying obfuscated URLs) can help detect links leading to known malicious sites.[21] Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link. Furthermore, monitor browser logs for homographs in ASCII and in internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites). Analytic 1 - Detecting Phishing Emails with Malicious Links (source=\"o365_audit\" OR source=\"gmail_logs\" OR source=\"email_gateway\")| where (spf=\"fail\" OR dkim=\"fail\" OR dmarc=\"fail\")| where (subject=\"account security alert\" OR subject=\"urgent action required\" OR subject=\"password reset\")| where (url LIKE \"%tinyurl.com%\" OR url LIKE \"%bit.ly%\" OR url LIKE \"%@%\" OR url LIKE \"%.xyz\" OR url LIKE \"%.top\")| eval risk_score=case( spf=\"fail\" AND dkim=\"fail\", 9, url LIKE \"%@%\", 8, url LIKE \"%.xyz\" OR url LIKE \"%.top\", 7)| where risk_score >= 7| stats count by _time, sender, recipient, subject, url, risk_score .003 Spearphishing via Service Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Analytic 1 - Detecting Malicious Downloads from Personal Email or Social Media (EventCode=1 OR EventCode=4688)OR (source=\"/var/log/audit/audit.log\" type=\"open\")| where (process_path=\"C:\\Users\\\\Downloads\\\" OR process_path=\"/home//Downloads/\")| where (parent_process IN (\"chrome.exe\", \"firefox.exe\", \"edge.exe\", \"safari.exe\") AND url IN (\"mail.google.com\", \"outlook.live.com\", \"linkedin.com\", \"telegram.org\", \"discord.com\", \"dropbox.com\"))| eval risk_score=case( like(file_name, \"%.exe\"), 8, like(file_name, \"%.js\"), 9, like(file_name, \"%.vbs\"), 7)| where risk_score >= 7| stats count by _time, host, user, file_name, process_path, parent_process, risk_score .004 Spearphishing Voice Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. Correlate these records with system events. Enterprise T1598 Phishing for Information Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[12][13]When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts). Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. .001 Spearphishing Service Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access. .002 Spearphishing Attachment Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[12][13] .003 Spearphishing Link Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.[12][13] Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links and identifying obfuscated URLs) can also help detect links leading to known malicious sites.[21] Furthermore, monitor browser logs for homographs in ASCII and in internationalized domain names abusing different character sets (e.g. Cyrillic vs Latin versions of trusted sites). .004 Spearphishing Voice Monitor call logs from corporate devices to identify patterns of potential voice phishing, such as calls to/from known malicious phone numbers. ICS T0861 Point & Tag Identification Monitor asset application logs which may provide information about requests for points or tags. Look for anomalies related to reading point or tag data, such as new assets using these functions, changes in volume or timing, or unusual information being queried. Many devices provide multiple ways to achieve the same result (e.g., functions with/without an acknowledgment or functions that operate on a single point vs. multiple points). Monitor for changes in the functions used. ICS T0843 Program Download Monitor devices configuration logs which may contain alerts that indicate whether a program download has occurred. Devices may maintain application logs that indicate whether a full program download, online edit, or program append function has occurred. ICS T0845 Program Upload Monitor for device alarms produced when program uploads occur, although not all devices will produce such alarms. Enterprise T1496 Resource Hijacking Monitor logs for software-as-a-service (SaaS) applications for signs of abuse. .003 SMS Pumping Monitor for excessive use of SMS services, especially on public sign-up forms. For example, alert on large quantities of messages sent to adjacent numbers. In SMS-based OTP flows, monitor for large quantities of incomplete verification cycles.[22] In Amazon Cognito environments, monitor for spikes in calls to the SignUp or ResendConfirmationCode API.[9] .004 Cloud Service Hijacking Monitor for excessive use of SaaS applications, especially messaging and AI-related services. In AWS SES environments, monitor for spikes in calls to the SendEmail or SendRawEmail API. Especially note the use of services which are not typically used by the organization. ICS T0848 Rogue Master Monitor for new master devices communicating with outstation assets, which may be visible in asset application logs. Enterprise T1594 Search Victim-Owned Websites Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields. Enterprise T1505 Server Software Component Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. [23] .001 SQL Stored Procedures Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.[24] Consider enabling audit features that can log malicious startup activities. .002 Transport Agent Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. .003 Web Shell Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. [23] .006 vSphere Installation Bundles Monitor ESXi hosts for suspicious installation of new VIBs. The /var/log/esxupdate.log file records VIB installation, including where the VIB was downloaded from and the options used to install the VIB (such as force/nosigcheck).[15] Analytic 1 - Detection bypassing signatures sourcetype=\"esxupdate_log\"(\"Installed\" AND (\"--force\" OR \"--no-sig-check\" OR \"acceptance level: CommunitySupported\"))| rex field=_raw \"Installed:\\s(?\\S+)\"| rex field=_raw \"Source:\\s(?\\S+)\"| table _time, host, vib_name, source_url, _raw| sort by _time desc Enterprise T1648 Serverless Execution Monitor Serverless Execution activities by examining logs that contain information about Serverless function invocations. This is especially useful for detecting anomalous behavior within AWS Lambda, Azure Functions, or Google Cloud Functions. For example, in Exchange environments emails sent by Power Automate via the Outlook 365 connector include the phrase \u2018Power App\u2019 or \u2018Power Automate\u2019 in the SMTP header 'x-ms-mail-application.'[25] Analytic 1 - Failed or abnormal serverless function invocations across AWS, Azure, and Google Cloud sourcetype=aws:lambda OR sourcetype=azure:function OR sourcetype=gcp:function| where result_status != \"Success\" Enterprise T1072 Software Deployment Tools Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.Perform application deployment at regular times so that irregular deployment activity stands out. Analytic 1 - Look for irregular deployment activity, systems not typically used for deployment suddenly pushing software, abnormal account login activity sourcetype= aws_system_manager OR sourcetype=azure_arc | search (event_description=\"deployment\" OR action=\"push\" OR result=\"success\" OR result=\"failure\" OR command=\"run script\") Analytic 2 - Look for signs of malicious payloads or configurations being pushed using legitimate software deployment tools sourcetype=\"aws:cloudtrail\" OR sourcetype=\"windows:eventlog\" OR sourcetype=\"sccm:execmgr\"| search EventName=\"SendCommand\" OR EventName=\"StartSession\" OR \"SoftwareDeploymentEvent\"| stats count by UserIdentity.Arn, SourceIPAddress, EventTime, EventName, Command| eval suspicious=if(count > threshold_limit OR match(UserIdentity.Arn, \"unexpected_user_pattern\"), \"suspicious\", \"normal\")| where suspicious=\"suspicious\"| table EventTime, UserIdentity.Arn, SourceIPAddress, EventName, Command, suspicious ICS T0865 Spearphishing Attachment Monitor mail server and proxy logs for evidence of messages originating from spoofed addresses, including records indicating failed DKIM+SPF validation or mismatched message headers.[12][13] Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Enterprise T1649 Steal or Forge Authentication Certificates Ensure CA audit logs are enabled and monitor these services for signs of abuse.[26] ICS T0857 System Firmware Monitor device application logs for firmware changes, although not all devices will produce such logs. Enterprise T1537 Transfer Data to Cloud Account Monitor logs for SaaS applications to detect instances of data being shared inappropriately. For example, in Microsoft 365, file sharing events will appear in Audit logs under the event names SharingInvitationCreated, AnonymousLinkCreated, SecureLinkCreated, or AddedToSecureLink, with TargetUserOrGroupType being Guest.[27] In Google Workspace, externally shared files will have a Visibility property of Shared externally in the Drive audit logs.[28] Analytic 1 - Detecting Cloud Data Sharing with External Accounts (EventCode=\"ModifySnapshotAttribute\" OR EventCode=\"PutBucketAcl\" OR EventCode=\"CreateSharedAccessSignature\")| where (action IN (\"share\", \"modify_acl\", \"create_sas_url\"))| stats count by _time, host, user, action, destination_account, object_type| where count >= 3| eval risk_score=case( action IN (\"share\", \"create_sas_url\") AND destination_account NOT IN (trusted_accounts), 9, action IN (\"modify_acl\"), 8)| where risk_score >= 8| table _time, host, user, action, destination_account, object_type, risk_score ICS T0864 Transient Cyber Asset Networking devices such as switches may log when new client devices connect (e.g., SNMP notifications). Monitor for any logs documenting changes to network connection status to determine when a new connection has occurred, including the resulting addresses (e.g., IP, MAC) of devices on that network. Enterprise T1199 Trusted Relationship Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network. Monitor logs for unexpected actions taken by any delegated administrator accounts.[29] ICS T0855 Unauthorized Command Message Monitor for anomalous or unexpected commands that may result in changes to the process operation (e.g., discrete write, logic and device configuration, mode changes) observable via asset application logs. Enterprise T1552 Unsecured Credentials Monitor application logs for activity that may highlight malicious attempts to access application data, especially abnormal search activity targeting passwords and other artifacts related to credentials.[30] Analytic 1 - Abnormal search activity targeting passwords and other credential artifacts. (index=third_party sourcetype IN (\"mailserver_logs\", \"webapp_logs\", \"appliance_logs\") (\"search\" OR \"query\" OR \"find\" OR \"grep\") (\"password\" OR \"credential\" OR \"key\" OR \"secret\" OR \"token\")) .008 Chat Messages Monitor application logs for activity that may highlight malicious attempts to access application data, especially abnormal search activity targeting passwords and other artifacts related to credentials.[30] Analytic 1 - Abnormal search activity targeting passwords and other credential artifacts. index=security sourcetype IN (\"gsuite:activity\", \"o365:audit\", \"slack:events\", \"teams:events\") (action IN (\"message_send\", \"file_upload\") AND (message_content=\"password\" OR message_content=\"token\" OR message_content=\"apikey\" OR message_content=\"credentials\" OR message_content=\"login\" OR file_name=\"password\" OR file_name=\"token\" OR file_name=\"apikey\" OR file_name=\"credentials\")) Enterprise T1550 Use Alternate Authentication Material Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. .004 Web Session Cookie Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline. Enterprise T1204 User Execution Monitor logs from applications to detect user-initiated actions such as opening malicious documents, clicking on phishing links, or executing downloaded malware. Analytic 1 - Logs showing unexpected user actions triggering unusual processes. sourcetype=application_log EventCode=1000 OR EventCode=1001| search application IN (\"winword.exe\", \"excel.exe\", \"chrome.exe\", \"firefox.exe\", \"adobe.exe\", \"zip.exe\")| stats count by application event_description| where event_description IN (\"opened document\", \"clicked link\", \"executed file\") .003 Malicious Image Monitor logs from cloud platforms like AWS, GCP, or Azure to detect anomalies related to container or image execution. Look for unusual patterns or log events that deviate from typical behavior. Analytic 1 - Unusual application logs indicating image execution anomalies. sourcetype=application_log EventCode=1000 OR EventCode=1001| search log_level=ERROR OR log_level=WARNING OR message IN (\"failed to pull image\", \"container crash\", \"unauthorized access\") ICS T0863 User Execution Monitor for application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution. ICS T0860 Wireless Compromise Monitor application logs for new or unexpected devices or sessions on wireless networks. References Confluence Support. (2021, April 22). Working with Confluence Logs. Retrieved September 23, 2021. Dr. Nestori Syynimaa. (2021, January 31). BPRT unleashed: Joining multiple devices to Azure AD and Intune. Retrieved March 4, 2022. Microsoft. (2022, February 18). Manage device identities by using the Azure portal. Retrieved April 13, 2022. Microsoft. (2006, August 31). DHCP Server Operational Events. Retrieved March 7, 2022. Shoemaker, E. (2015, December 31). Solution: Monitor DHCP Scopes and Detect Man-in-the-Middle Attacks with PRTG and PowerShell. Retrieved September 12, 2024. Pany, D. & Hanley, C. (2023, May 3). Cloudy with a Chance of Bad Logs: Cloud Platform Log Configurations to Consider in Investigations. Retrieved October 16, 2023. Metcalf, S. (2018, May 6). Trimarc Research: Detecting Password Spraying with Security Event Auditing. Retrieved January 16, 2019. Okta Defensive Cyber Operations. (2023, August 31). Cross-Tenant Impersonation: Prevention and Detection. Retrieved March 4, 2024. Ben Fletcher and Steve de Vera. (2024, June). New tactics and techniques for proactive threat detection. Retrieved September 25, 2024. McMichael, T.. (2015, June 8). Exchange and Office 365 Mail Forwarding. Retrieved October 8, 2019. Damian Pfammatter. (2018, September 17). Hidden Inbox Rules in Microsoft Exchange. Retrieved October 12, 2021. Microsoft. (2020, October 13). Anti-spoofing protection in EOP. Retrieved October 19, 2020. Australian Cyber Security Centre. (2012, December). Mitigating Spoofed Emails Using Sender Policy Framework. Retrieved November 17, 2024. Cid, D.. (2015, August 2). BIND9 \u2013 Denial of Service Exploit in the Wild. Retrieved April 26, 2019. Alex Marvi, Greg Blaum, and Ron Craft. (2023, June 28). Detection, Containment, and Hardening Opportunities for Privileged Guest Operations, Anomalous Behavior, and VMCI Backdoors on Compromised VMware Hosts. Retrieved March 26, 2025. Chris Taylor. (2017, October 5). When Phishing Starts from the Inside. Retrieved October 8, 2019. Mike Burns. (2020, September 30). Detecting Microsoft 365 and Azure Active Directory Backdoors. Retrieved September 28, 2022. Microsoft Threat Intelligence Center, Microsoft Detection and Response Team, Microsoft 365 Defender Research Team . (2022, August 24). MagicWeb: NOBELIUM\u2019s post-compromise trick to authenticate as anyone. Retrieved September 28, 2022. SensePost. (2017, September 21). NotRuler - The opposite of Ruler, provides blue teams with the ability to detect Ruler usage against Exchange. Retrieved February 4, 2019. Stepanic, D.. (2020, January 13). Embracing offensive tooling: Building detections against Koadic using EQL. Retrieved November 17, 2024. Nick Simonian. (2023, May 22). Don't @ Me: URL Obfuscation Through Schema Abuse. Retrieved August 4, 2023. Twilio. (n.d.). What is SMS Pumping Fraud?. Retrieved September 25, 2024. US-CERT. (2015, November 13). Compromised Web Servers and Web Shells - Threat Awareness and Guidance. Retrieved June 8, 2016. Sutherland, S. (2016, March 7). Maintaining Persistence via SQL Server \u2013 Part 1: Startup Stored Procedures. Retrieved September 12, 2024. Microsoft. (2022, February 15). Email exfiltration controls for connectors. Retrieved May 27, 2022. Schroeder, W. & Christensen, L. (2021, June 22). Certified Pre-Owned - Abusing Active Directory Certificate Services. Retrieved August 2, 2022. Microsoft. (2023, October 1). Use sharing auditing in the audit log. Retrieved March 4, 2024. Google. (n.d.). Drive log events. Retrieved March 4, 2024. Microsoft Threat Intelligence Center. (2021, October 25). NOBELIUM targeting delegated administrative privileges to facilitate broader attacks. Retrieved January 31, 2022. Slack Help Center. (n.d.). View Access Logs for your workspace. Retrieved April 10, 2023. "
}
]