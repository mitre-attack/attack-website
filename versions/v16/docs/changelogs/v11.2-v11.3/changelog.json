{
    "enterprise-attack": {
        "techniques": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "software": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "groups": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "campaigns": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "mitigations": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "datasources": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "datacomponents": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        }
    },
    "mobile-attack": {
        "techniques": {
            "additions": [
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--08ea902d-ecb5-47ed-a453-2798057bb2d3",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 15:54:05.633000+00:00",
                    "modified": "2022-04-05 16:53:29.994000+00:00",
                    "name": "Abuse Elevation Control Mechanism",
                    "description": "Adversaries may circumvent mechanisms designed to control elevated privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can gain on a machine. Authorization has to be granted to specific users in order to perform tasks that are designated as higher risk. An adversary can use several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "privilege-escalation"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1626",
                            "external_id": "T1626"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html",
                            "external_id": "APP-22"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "When an application requests administrator permission, users are presented with a popup and the option to grant or deny the request. Application vetting services can detect when an application requests administrator permission. Extra scrutiny could be applied to applications that do",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--9c049d7b-c92a-4733-9381-27e2bd2ccadc",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 15:59:05.830000+00:00",
                    "modified": "2022-04-06 14:19:17.679000+00:00",
                    "name": "Device Administrator Permissions",
                    "description": "Adversaries may abuse Android\u2019s device administration API to obtain a higher degree of control over the device. By abusing the API, adversaries can perform several nefarious actions, such as resetting the device\u2019s password for [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642), factory resetting the device for [File Deletion](https://attack.mitre.org/techniques/T1630/002) and to delete any traces of the malware, disabling all the device\u2019s cameras, or to make it more difficult to uninstall the app.\n\nDevice administrators must be approved by the user at runtime, with a system popup showing which actions have been requested by the app. In conjunction with other techniques, such as [Input Injection](https://attack.mitre.org/techniques/T1516), an app can programmatically grant itself administrator permissions without any user input.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "privilege-escalation"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1626/001",
                            "external_id": "T1626.001"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html",
                            "external_id": "APP-22"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users are prompted for approval when an application requests device administrator permissions. Users can see which applications are registered as device administrators in the device settings. Application vetting services can check for the string `BIND_DEVICE_ADMIN` in the application\u2019s manifest. This indicates it can prompt the user for device administrator permissions.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e2c2249a-eb82-4614-8dd4-9c514dde65e2",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 13:29:47.590000+00:00",
                    "modified": "2022-04-06 13:29:47.590000+00:00",
                    "name": "Account Access Removal",
                    "description": "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: credentials changed) to remove access to accounts. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1640",
                            "external_id": "T1640"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could closely scrutinize applications that request Device Administrator permissions.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--08e22979-d320-48ed-8711-e7bf94aabb13",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-05 20:11:08.894000+00:00",
                    "modified": "2022-04-11 19:27:44.048000+00:00",
                    "name": "Adversary-in-the-Middle",
                    "description": "Adversaries may attempt to position themselves between two or more networked devices to support follow-on behaviors such as [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642).  \n\n \n\n[Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1638) can be achieved through several mechanisms, such as a malicious application registering itself as a VPN client. By doing this, the adversary can effectively redirect device traffic to wherever they want. However, registering as a VPN client requires user consent on both Android and iOS. Additionally, on iOS, the application requires a special entitlement that must be granted by Apple. Alternatively, if an application is able to escalate privileges, it can potentially utilize those privileges to gain access to network traffic.  \n\n \n\nOutside of a mobile device, adversaries may be able to capture traffic by employing a rogue base station or Wi-Fi access point. These devices will allow adversaries to capture network traffic after it has left the device, while it is flowing to its destination. On a local network, enterprise techniques could be used, such as DNS redirection or DNS poisoning.  \n\n \n\nIf applications properly encrypt their network traffic, sensitive data may not be accessible an adversary, depending on the point of capture. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1638",
                            "external_id": "T1638"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html",
                            "external_id": "CEL-3"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html",
                            "external_id": "APP-0"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html",
                            "external_id": "APP-1"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-8.html",
                            "external_id": "APP-8"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-12.html",
                            "external_id": "ECO-12"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services should look for applications that request VPN access. These applications should be heavily scrutinized since VPN functionality is not very common. Mobile security products can potentially detect rogue Wi-Fi access points if the adversary is attempting to decrypt traffic using an untrusted SSL certificate. \n\n \n\nOn both Android and iOS, users must grant consent to an application to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is active. Users can see registered VPN services in the device settings. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--2282a98b-5049-4f61-9381-55baca7c1add",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 19:06:27.177000+00:00",
                    "modified": "2022-04-06 13:07:45.661000+00:00",
                    "name": "Web Protocols",
                    "description": "Adversaries may communicate using application layer protocols associated with web protocols traffic to avoid detection/network filtering by blending in with existing traffic. Commands to remote mobile devices, and often the results of those commands, will be embedded within the protocol traffic between the mobile client and server. \n\nWeb protocols such as HTTP and HTTPS are used for web traffic as well as well as notification services native to mobile messaging services such as Google Cloud Messaging (GCM) and newly, Firebase Cloud Messaging (FCM), (GCM/FCM: two-way communication) and Apple Push Notification Service (APNS; one-way server-to-device).  Such notification services leverage HTTP/S via the respective API and are commonly abused on Android and iOS respectively in order blend in with routine device traffic making it difficult for enterprises to inspect. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1437/001",
                            "external_id": "T1437.001"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-29.html",
                            "external_id": "APP-29"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Abuse of standard application protocols can be difficult to detect as many legitimate mobile applications leverage such protocols for language-specific APIs. Enterprises may be better served focusing on detection at other stages of adversarial behavior. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--29f1f56c-7b7a-4c14-9e39-59577ea2743c",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 13:40:37.259000+00:00",
                    "modified": "2022-04-06 12:14:24.393000+00:00",
                    "name": "Command and Scripting Interpreter",
                    "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, Android is a UNIX-like OS and includes a basic [Unix Shell](https://attack.mitre.org/techniques/T1623/001) that can be accessed via the Android Debug Bridge (ADB) or Java\u2019s `Runtime` package.\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0027) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "execution"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1623",
                            "external_id": "T1623"
                        },
                        {
                            "source_name": "Samsung Knox Mobile Threat Defense",
                            "description": "Samsung Knox Partner Program. (n.d.). Knox for Mobile Threat Defense. Retrieved March 30, 2022.",
                            "url": "https://partner.samsungknox.com/mtd"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Command-line activities can potentially be detected through Mobile Threat Defense integrations with lower-level OS APIs. This could grant the MTD agents access to running processes and their parameters, potentially detecting unwanted or malicious shells.\n\nApplication vetting services could detect the invocations of methods that could be used to execute shell commands.(Citation: Samsung Knox Mobile Threat Defense)",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--693cdbff-ea73-49c6-ac3f-91e7285c31d1",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 13:59:50.479000+00:00",
                    "modified": "2022-04-05 16:45:47.619000+00:00",
                    "name": "Unix Shell",
                    "description": "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the underlying command prompts on Android and iOS devices. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges that are only accessible if the device has been rooted or jailbroken. \n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems. \n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with SSH. Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence. \n\nIf the device has been rooted or jailbroken, adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user. This dangerous level of permissions allows the adversary to run special commands and modify protected system files.  ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "execution"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1623/001",
                            "external_id": "T1623.001"
                        },
                        {
                            "source_name": "Samsung Knox Mobile Threat Defense",
                            "description": "Samsung Knox Partner Program. (n.d.). Knox for Mobile Threat Defense. Retrieved March 30, 2022.",
                            "url": "https://partner.samsungknox.com/mtd"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Command-line activities can potentially be detected through Mobile Threat Defense integrations with lower-level OS APIs. This could grant the MTD agents access to running processes and their parameters, potentially detecting unwanted or malicious shells.\n\nApplication vetting services could detect the invocations of methods that could be used to execute shell commands.(Citation: Samsung Knox Mobile Threat Defense)",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--4f14e30b-8b57-4a7b-9093-2c0778ea99cf",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 19:53:27.791000+00:00",
                    "modified": "2022-04-08 15:38:38.744000+00:00",
                    "name": "Compromise Client Software Binary",
                    "description": "Adversaries may modify system software binaries to establish persistent access to devices. System software binaries are used by the underlying operating system and users over adb or terminal emulators. \n\nAdversaries may make modifications to client software binaries to carry out malicious tasks when those binaries are executed. For example, malware may come with a pre-compiled malicious binary intended to overwrite the genuine one on the device. Since these binaries may be routinely executed by the system or user, the adversary can leverage this for persistent access to the device. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1645",
                            "external_id": "T1645"
                        },
                        {
                            "source_name": "Android-VerifiedBoot",
                            "description": "Android. (n.d.). Verified Boot. Retrieved December 21, 2016.",
                            "url": "https://source.android.com/security/verifiedboot/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html",
                            "external_id": "APP-27"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Verified Boot can detect unauthorized modifications to the system partition.(Citation: Android-VerifiedBoot) Android\u2019s SafetyNet API provides remote attestation capabilities, which could potentially be used to identify and respond to compromised devices. Samsung Knox provides a similar remote attestation capability on supported Samsung devices. Application vetting services could detect applications trying to modify files in protected parts of the operating system.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--cc6e0637-76d2-4af3-a604-9d8d3ff8a6b3",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 14:55:10.494000+00:00",
                    "modified": "2022-04-05 17:08:36.315000+00:00",
                    "name": "Credentials from Password Store",
                    "description": "Adversaries may search common password storage locations to obtain user credentials. Passwords can be stored in several places on a device, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1634",
                            "external_id": "T1634"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-11.html",
                            "external_id": "AUT-11"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can potentially detect jailbroken devices. Application vetting services may be able to detect known privilege escalation exploits contained within applications, as well as searching application packages for strings that correlate to known password store locations.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--8605a0ec-b44a-4e98-a7fc-87d4bd3acb66",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 15:01:32.169000+00:00",
                    "modified": "2022-04-05 17:09:03.861000+00:00",
                    "name": "Keychain",
                    "description": "Adversaries may collect keychain data from an iOS device to acquire credentials. Keychains are the built-in way for iOS to keep track of users' passwords and credentials for many services and features such as Wi-Fi passwords, websites, secure notes, certificates, private keys, and VPN credentials. \n\nOn the device, the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data. Standard iOS APIs allow applications access to their own keychain contained within the database. By utilizing a privilege escalation exploit or existing root access, adversaries can access the entire encrypted database.(Citation: Apple Keychain Services)(Citation: Elcomsoft Decrypt Keychain) ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1634/001",
                            "external_id": "T1634.001"
                        },
                        {
                            "source_name": "Apple Keychain Services",
                            "description": "Apple, Inc.. (n.d.). Keychain Services. Retrieved June 24, 2020.",
                            "url": "https://developer.apple.com/documentation/security/keychain_services"
                        },
                        {
                            "source_name": "Elcomsoft Decrypt Keychain",
                            "description": "V. Katalov. (2018, December 18). Six Ways to Decrypt iPhone Passwords from the Keychain. Retrieved June 24, 2020.",
                            "url": "https://blog.elcomsoft.com/2018/12/six-ways-to-decrypt-iphone-passwords-from-the-keychain/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-11.html",
                            "external_id": "AUT-11"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can potentially detect jailbroken devices. Application vetting services may be able to detect known privilege escalation exploits contained within applications, as well as searching application packages for strings that correlate to known password store locations.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c548d8c4-a0a3-4a24-bb79-2a84abbc7b36",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 13:34:46.021000+00:00",
                    "modified": "2022-04-06 13:35:57.044000+00:00",
                    "name": "Data Manipulation",
                    "description": "Adversaries may insert, delete, or alter data in order to manipulate external outcomes or hide activity. By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application, process, and the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system, typically gained through a prolonged information gathering campaign, in order to have the desired impact.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1641",
                            "external_id": "T1641"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for use of standard APIs (e.g. the clipboard API) that could indicate data manipulation is occurring.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--74e6003f-c7f4-4047-983b-708cc19b96b6",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 13:39:39.779000+00:00",
                    "modified": "2022-04-21 17:34:52.311000+00:00",
                    "name": "Transmitted Data Manipulation",
                    "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity to deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system, typically gained through a prolonged information gathering campaign, in order to have the desired impact.\n\nOne method to achieve [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1641/001) is by modifying the contents of the device clipboard. Malicious applications may monitor clipboard activity through the `ClipboardManager.OnPrimaryClipChangedListener` interface on Android to determine when clipboard contents have changed. Listening to clipboard activity, reading clipboard contents, and modifying clipboard contents requires no explicit application permissions and can be performed by applications running in the background. However, this behavior has changed with the release of Android 10.\n\nAdversaries may use [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1641/001) to replace text prior to being pasted. For example, replacing a copied Bitcoin wallet address with a wallet address that is under adversarial control.\n\n[Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1641/001) was seen within the Android/Clipper.C trojan. This sample was detected by ESET in an application distributed through the Google Play Store targeting cryptocurrency wallet numbers.(Citation: ESET Clipboard Modification February 2019)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1641/001",
                            "external_id": "T1641.001"
                        },
                        {
                            "source_name": "ESET Clipboard Modification February 2019",
                            "description": "ESET. (2019, February 11). First clipper malware discovered on Google Play.. Retrieved July 26, 2019.",
                            "url": "https://www.eset.com/uk/about/newsroom/press-releases/first-clipper-malware-discovered-on-google-play-1/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Applications could be vetted for their use of the clipboard manager APIs with extra scrutiny given to application that make use of them.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--2ccc3d39-9598-4d32-9657-42e1c7095d26",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-05 19:57:15.734000+00:00",
                    "modified": "2022-04-05 19:57:15.734000+00:00",
                    "name": "Dynamic Resolution",
                    "description": "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. This algorithm can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1637",
                            "external_id": "T1637"
                        },
                        {
                            "source_name": "Data Driven Security DGA",
                            "description": "Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.",
                            "url": "https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Detecting dynamically generated domains can be challenging due to the number of different Domain Generation Algorithms (DGAs), constantly evolving malware families, and the increasing complexity of the algorithms. There are a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) Content delivery network (CDN) domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, a more general approach for detecting a suspicious domain is to check for recently registered names or rarely visited domains.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fd211238-f767-4599-8c0d-9dca36624626",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-05 19:59:03.161000+00:00",
                    "modified": "2022-04-05 19:59:22.888000+00:00",
                    "name": "Domain Generation Algorithms",
                    "description": "Adversaries may use [Domain Generation Algorithms](https://attack.mitre.org/techniques/T1637/001) (DGAs) to procedurally generate domain names for uses such as command and control communication   or malicious application distribution.(Citation: securelist rotexy 2018)\n\nDGAs increase the difficulty for defenders to block, track, or take over the command and control channel, as there could potentially be thousands of domains that malware can check for instructions.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1637/001",
                            "external_id": "T1637.001"
                        },
                        {
                            "source_name": "Data Driven Security DGA",
                            "description": "Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.",
                            "url": "https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/"
                        },
                        {
                            "source_name": "securelist rotexy 2018",
                            "description": "T. Shishkova, L. Pikman. (2018, November 22).  The Rotexy mobile Trojan \u2013 banker and ransomware. Retrieved September 23, 2019.",
                            "url": "https://securelist.com/the-rotexy-mobile-trojan-banker-and-ransomware/88893/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There are a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, a more general approach for detecting a suspicious domain is to check for recently registered names ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--16d73b64-5681-4ea0-9af4-4ad86f7c96e8",
                    "created": "2022-04-05 20:15:43.636000+00:00",
                    "modified": "2022-04-05 20:16:21.324000+00:00",
                    "name": "Asymmetric Cryptography",
                    "description": "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic, rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private that should not be distributed. Due to how asymmetric algorithms work, the sender encrypts data with the receiver\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA, ElGamal, and ECDSA.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1521/002).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1521/002",
                            "external_id": "T1521.002"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Since data encryption is a common practice in many legitimate applications and uses standard programming language-specific APIs, encrypting data for command and control communication is regarded as undetectable to the user.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--bb4387ab-7a51-468b-bf5f-a9a8612f0303",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-05 20:14:17.310000+00:00",
                    "modified": "2022-04-05 20:14:17.310000+00:00",
                    "name": "Symmetric Cryptography",
                    "description": "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic, rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, Blowfish, and RC4.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1521/001",
                            "external_id": "T1521.001"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Since data encryption is a common practice in many legitimate applications and uses standard programming language-specific APIs, encrypting data for command and control communication is regarded as undetectable to the user.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--eb6cf439-1bcb-4d10-bc68-1eed844ed7b3",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 13:52:05.619000+00:00",
                    "modified": "2022-04-19 21:17:48.281000+00:00",
                    "name": "Endpoint Denial of Service",
                    "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users.\n\nOn Android versions prior to 7, apps can abuse Device Administrator access to reset the device lock passcode, preventing the user from unlocking the device. After Android 7, only device or profile owners (e.g. MDMs) can reset the device\u2019s passcode.(Citation: Android resetPassword)\n\nOn iOS devices, this technique does not work because mobile device management servers can only remove the screen lock passcode; they cannot set a new passcode. However, on jailbroken devices, malware has been discovered that can lock the user out of the device.(Citation: Xiao-KeyRaider)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1642",
                            "external_id": "T1642"
                        },
                        {
                            "source_name": "Xiao-KeyRaider",
                            "description": "Claud Xiao. (2015, August 30). KeyRaider: iOS Malware Steals Over 225,000 Apple Accounts to Create Free App Utopia. Retrieved December 12, 2016.",
                            "url": "http://researchcenter.paloaltonetworks.com/2015/08/keyraider-ios-malware-steals-over-225000-apple-accounts-to-create-free-app-utopia/"
                        },
                        {
                            "source_name": "Android resetPassword",
                            "description": "Google. (n.d.). DevicePolicyManager. Retrieved October 1, 2019.",
                            "url": "https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html#resetPassword(java.lang.String,%20int)"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, users can review which applications have Device Administrator access in the device settings and revoke permission where appropriate. Application vetting services can detect and closely scrutinize applications that utilize Device Administrator access.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d446b9f0-06a9-4a8d-97ee-298cfee84f14",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 14:25:41.721000+00:00",
                    "modified": "2022-04-29 17:28:39.379000+00:00",
                    "name": "Event Triggered Execution",
                    "description": "Adversaries may establish persistence using system mechanisms that trigger execution based on specific events. Mobile operating systems have means to subscribe to events such as receiving an SMS message, device boot completion, or other device activities. \n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via automatically and repeatedly executing malicious code. After gaining access to a victim\u2019s system, adversaries may create or modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1624",
                            "external_id": "T1624"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services can detect which broadcast intents an application registers for and which permissions it requests. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--3775a580-a1d1-46c4-8147-c614a715f2e9",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 14:41:00.672000+00:00",
                    "modified": "2022-04-19 16:49:10.650000+00:00",
                    "name": "Broadcast Receivers",
                    "description": "Adversaries may establish persistence using system mechanisms that trigger execution based on specific events. Mobile operating systems have means to subscribe to events such as receiving an SMS message, device boot completion, or other device activities. \n\nAn intent is a message passed between Android applications or system components. Applications can register to receive broadcast intents at runtime, which are system-wide intents delivered to each app when certain events happen on the device, such as network changes or the user unlocking the screen. Malicious applications can then trigger certain actions within the app based on which broadcast intent was received. \n\nIn addition to Android system intents, malicious applications can register for intents broadcasted by other applications. This allows the malware to respond based on actions in other applications. This behavior typically indicates a more intimate knowledge, or potentially the targeting of specific devices, users, or applications. \n\nIn Android 8 (API level 26), broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest. In most cases, applications that register through the manifest will no longer receive the broadcasts. Now, applications must register context-specific broadcast receivers while the user is actively using the app.(Citation: Android Changes to System Broadcasts) ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1624/001",
                            "external_id": "T1624.001"
                        },
                        {
                            "source_name": "Android Changes to System Broadcasts",
                            "description": "Google. (2019, December 27). Broadcasts Overview. Retrieved January 27, 2020.",
                            "url": "https://developer.android.com/guide/components/broadcasts#changes-system-broadcasts"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_contributors": [
                        "Alex Hinchliffe, Palo Alto Networks"
                    ],
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services can detect which broadcast intents an application registers for and which permissions it requests. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--498e7b81-238d-404c-aa5e-332904d63286",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 20:31:16.624000+00:00",
                    "modified": "2022-04-11 15:08:20.821000+00:00",
                    "name": "Execution Guardrails",
                    "description": "Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary\u2019s campaign. Values an adversary can provide about a target system or environment to use as guardrails may include environment information such as location.(Citation: SWB Exodus March 2019)\n\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [System Checks](https://attack.mitre.org/techniques/T1633/001). While use of [System Checks](https://attack.mitre.org/techniques/T1633/001) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1627",
                            "external_id": "T1627"
                        },
                        {
                            "source_name": "SWB Exodus March 2019",
                            "description": "Security Without Borders. (2019, March 29). Exodus: New Android Spyware Made in Italy. Retrieved September 3, 2019.",
                            "url": "https://securitywithoutborders.org/blog/2019/03/29/exodus.html"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Detecting the use of guardrails may be difficult depending on the implementation. Users can review which applications have location and sensitive phone information permissions in the operating system\u2019s settings menu. Application vetting services can detect unnecessary and potentially permissions or API calls.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e422b6fa-4739-46b9-992e-82f1b350c780",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 20:36:03.177000+00:00",
                    "modified": "2022-04-21 17:30:57.081000+00:00",
                    "name": "Geofencing",
                    "description": "Adversaries may use a device\u2019s geographical location to limit certain malicious behaviors. For example, malware operators may limit the distribution of a second stage payload to certain geographic regions.(Citation: Lookout eSurv)\n\n[Geofencing](https://attack.mitre.org/techniques/T1627/001)\u202fis accomplished by persuading the user to grant the application permission to access location services. The application can then collect, process, and exfiltrate the device\u2019s location to perform location-based actions, such as ceasing malicious behavior or showing region-specific advertisements. \n\nOne method to accomplish\u202f[Geofencing](https://attack.mitre.org/techniques/T1627/001)\u202fon Android is to use the built-in Geofencing API to automatically trigger certain behaviors when the device enters or exits a specified radius around a geographical location. Similar to  other\u202f[Geofencing](https://attack.mitre.org/techniques/T1627/001) methods, this requires that the user has granted the `ACCESS_FINE_LOCATION` and `ACCESS_BACKGROUND_LOCATION` permissions. The latter is only required if the application targets Android 10 (API level 29) or higher. However, Android 11 introduced additional permission controls that may restrict background location collection based on user permission choices at runtime. These additional controls include \"Allow only while using the app\", which will effectively prohibit background location collection.  \n\nSimilarly, on iOS, developers can use built-in APIs to setup and execute geofencing. Depending on the use case, the app will either need to call\u202f`requestWhenInUseAuthorization()`\u202for\u202f`requestAlwaysAuthorization()`, depending on when access to the location services is required. Similar to Android, users also have the option to limit when the application can access the device\u2019s location, including one-time use and only when the application is running in the foreground.  \n\n[Geofencing](https://attack.mitre.org/techniques/T1627/001)\u202fcan be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. For example, location data could be used to limit malware spread and/or capabilities, which could also potentially evade application analysis environments (ex: malware analysis outside of the target geographic area). Other malicious usages could include showing language-specific input prompts and/or advertisements.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1627/001",
                            "external_id": "T1627.001"
                        },
                        {
                            "source_name": "Lookout eSurv",
                            "description": "A. Bauer. (2019, April 8). Lookout discovers phishing sites distributing new iOS and Android surveillanceware. Retrieved September 11, 2020.",
                            "url": "https://blog.lookout.com/esurv-research"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can review which applications have location permissions in the operating system\u2019s settings menu. On Android 10 and later, the system shows a notification to the user when an app has been accessing device location in the background. Application vetting services can detect unnecessary and potentially abused location permissions or API calls.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--3e091a89-a493-4a6c-8e88-d57be19bb98d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 13:19:33.785000+00:00",
                    "modified": "2022-04-29 17:29:00.038000+00:00",
                    "name": "Exfiltration Over Alternative Protocol",
                    "description": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Different protocol channels could also include Web services such as cloud storage. Adversaries may opt to also encrypt and/or obfuscate these alternate channels. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "exfiltration"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1639",
                            "external_id": "T1639"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-30.html",
                            "external_id": "APP-30"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Exfiltration Over Alternative Protocols can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--37047267-3e56-453c-833e-d92b68118120",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 13:22:57.683000+00:00",
                    "modified": "2022-04-06 13:23:10.087000+00:00",
                    "name": "Exfiltration Over Unencrypted Non-C2 Protocol",
                    "description": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.\n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). Adversaries may employ custom or publicly available encoding/compression algorithms (such as base64) or embed data within protocol headers and fields.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "exfiltration"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1639/001",
                            "external_id": "T1639.001"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-30.html",
                            "external_id": "APP-30"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Exfiltration Over Alternative Protocols can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--32063d7f-0a39-440d-a4a3-2694488f96cc",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 15:43:45.913000+00:00",
                    "modified": "2022-04-08 16:25:44.552000+00:00",
                    "name": "Exfiltration Over C2 Channel",
                    "description": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "exfiltration"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1646",
                            "external_id": "T1646"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-29.html",
                            "external_id": "APP-29"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Exfiltration over C2 channel can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a8e971b8-8dc7-4514-8249-ae95427ec467",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 13:55:14.390000+00:00",
                    "modified": "2022-04-06 13:55:14.390000+00:00",
                    "name": "Generate Traffic from Victim",
                    "description": "Adversaries may generate outbound traffic from devices. This is typically performed to manipulate external outcomes, such as to achieve carrier billing fraud or to manipulate app store rankings or ratings. Outbound traffic is typically generated as SMS messages or general web traffic, but may take other forms as well.\n\nIf done via SMS messages, Android apps must hold the `SEND_SMS` permission. Additionally, sending an SMS message requires user consent if the recipient is a premium number. Applications cannot send SMS messages on iOS",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1643",
                            "external_id": "T1643"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-16.html",
                            "external_id": "APP-16"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, users can review which applications can use premium SMS features in the \u201cSpecial access\u201d page within application settings. Application vetting services can detect when applications request the `SEND_SMS` permission, which should be infrequently used.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fc53309d-ebd5-4573-9242-57024ebdad4f",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 20:00:12.654000+00:00",
                    "modified": "2022-04-08 15:44:24.536000+00:00",
                    "name": "Hide Artifacts",
                    "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Mobile operating systems have features and developer APIs to hide various artifacts, such as an application\u2019s launcher icon. These APIs have legitimate usages, such as hiding an icon to avoid application drawer clutter when an application does not have a usable interface. Adversaries may abuse these features and APIs to hide artifacts from the user to evade detection.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1628",
                            "external_id": "T1628"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "The user can examine the list of all installed applications in the device settings. Application vetting services could potentially detect the usage of APIs intended for artifact hiding.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--f05fc151-aa62-47e3-ae57-2d1b23d64bf6",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 20:06:22.194000+00:00",
                    "modified": "2022-05-20 17:16:08.997000+00:00",
                    "name": "Suppress Application Icon",
                    "description": "A malicious application could suppress its icon from being displayed to the user in the application launcher. This hides the fact that it is installed, and can make it more difficult for the user to uninstall the application. Hiding the application's icon programmatically does not require any special permissions. \n\nThis behavior has been seen in the BankBot/Spy Banker family of malware.(Citation: android-trojan-steals-paypal-2fa)(Citation: sunny-stolen-credentials)(Citation: bankbot-spybanker) \n\nBeginning in Android 10, changes were introduced to inhibit malicious applications\u2019 ability to hide their icon. If an app is a system app, requests no permissions, or does not have a launcher activity, the application\u2019s icon will be fully hidden. Further, if the device is fully managed or the application is in a work profile, the icon will be fully hidden. Otherwise, a synthesized activity is shown, which is a launcher icon that represents the app\u2019s details page in the system settings. If the user clicks the synthesized activity in the launcher, they are taken to the application\u2019s details page in the system settings.(Citation: Android 10 Limitations to Hiding App Icons)(Citation: LauncherApps getActivityList)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1628/001",
                            "external_id": "T1628.001"
                        },
                        {
                            "source_name": "Android 10 Limitations to Hiding App Icons",
                            "description": "Android. (n.d.). Android 10 Release Notes: Limitations to hiding app icons. Retrieved March 30, 2022.",
                            "url": "https://source.android.com/setup/start/android-10-release#limitations_to_hiding_app_icons"
                        },
                        {
                            "source_name": "LauncherApps getActivityList",
                            "description": "Android. (n.d.). LauncherApps: getActivityList. Retrieved March 30, 2022.",
                            "url": "https://developer.android.com/reference/kotlin/android/content/pm/LauncherApps#getactivitylist"
                        },
                        {
                            "source_name": "sunny-stolen-credentials",
                            "description": "Luk\u00e1\u0161 \u0160tefanko. (2017, February 22). Sunny with a chance of stolen credentials: Malicious weather app found on Google Play. Retrieved July 11, 2019.",
                            "url": "https://www.welivesecurity.com/2017/02/22/sunny-chance-stolen-credentials-malicious-weather-app-found-google-play/"
                        },
                        {
                            "source_name": "android-trojan-steals-paypal-2fa",
                            "description": "Luk\u00e1\u0161 \u0160tefanko. (2018, December 11). Android Trojan steals money from PayPal accounts even with 2FA on. Retrieved July 11, 2019.",
                            "url": "https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/"
                        },
                        {
                            "source_name": "bankbot-spybanker",
                            "description": "NJCCIC. (2017, March 2). BankBot/Spy Banker. Retrieved July 11, 2019.",
                            "url": "https://www.cyber.nj.gov/threat-profiles/android-malware-variants/bankbot-spybanker"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_contributors": [
                        "Emily Ratliff, IBM"
                    ],
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "The user can examine the list of all installed applications, including those with a suppressed icon, in the device settings. If the user is redirected to the device settings when tapping an application\u2019s icon, they should inspect the application to ensure it is genuine. Application vetting services could potentially detect the usage of APIs intended for suppressing the application\u2019s icon.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--24a77e53-0751-46fc-b207-99378fb35c08",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-11 20:05:56.069000+00:00",
                    "modified": "2022-04-11 20:05:56.069000+00:00",
                    "name": "User Evasion",
                    "description": "Adversaries may attempt to avoid detection by hiding malicious behavior from the user. By doing this, an adversary\u2019s modifications would most likely remain installed on the device for longer, allowing the adversary to continue to operate on that device. \n\nWhile there are many ways this can be accomplished, one method is by using the device\u2019s sensors. By utilizing the various motion sensors on a device, such as accelerometer or gyroscope, an application could detect that the device is being interacted with. That way, the application could continue to run while the device is not in use but cease operating while the user is using the device, hiding anything that would indicate malicious activity was ongoing. Accessing the sensors in this way does not require any permissions from the user, so it would be completely transparent.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1628/002",
                            "external_id": "T1628.002"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products may be able to detect some forms of user evasion. Otherwise, the act of hiding malicious activity could be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--670a4d75-103b-4b14-8a9e-4652fa795edd",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 14:49:18.650000+00:00",
                    "modified": "2022-04-05 16:52:19.152000+00:00",
                    "name": "Hijack Execution Flow",
                    "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run applications. Hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur over time. \n\nThere are many ways an adversary may hijack the flow of execution. A primary way is by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs or resources, such as file directories, could also be poisoned to include malicious payloads.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1625",
                            "external_id": "T1625"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html",
                            "external_id": "APP-27"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile threat defense agents could detect unauthorized operating system modifications by using attestation.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c6e17ca2-08b5-4379-9786-89bd05241831",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 15:07:51.646000+00:00",
                    "modified": "2022-04-05 16:52:49.037000+00:00",
                    "name": "System Runtime API Hijacking",
                    "description": "Adversaries may execute their own malicious payloads by hijacking the way an operating system run applications. Hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur at later points in time. \n\n\nOn Android, adversaries may overwrite the standard OS API library with a malicious alternative to hook into core functions to achieve persistence. By doing this, the adversary\u2019s code will be executed every time the overwritten API function is called by an app on the infected device.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1625/001",
                            "external_id": "T1625.001"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html",
                            "external_id": "APP-27"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile threat defense agents could detect unauthorized operating system modifications by using attestation. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--20b0931a-8952-42ca-975f-775bad295f1a",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 18:42:22.117000+00:00",
                    "modified": "2022-04-05 16:57:50.075000+00:00",
                    "name": "Impair Defenses",
                    "description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may span both native defenses as well as supplemental capabilities installed by users or mobile endpoint administrators.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1629",
                            "external_id": "T1629"
                        },
                        {
                            "source_name": "Samsung Knox Mobile Threat Defense",
                            "description": "Samsung Knox Partner Program. (n.d.). Knox for Mobile Threat Defense. Retrieved March 30, 2022.",
                            "url": "https://partner.samsungknox.com/mtd"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html",
                            "external_id": "APP-22"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products integrated with Samsung Knox for Mobile Threat Defense can monitor processes to see if security tools are killed or stop running. Application vetting can detect many techniques associated with impairing device defenses.(Citation: Samsung Knox Mobile Threat Defense)",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--acf8fd2a-dc98-43b4-8d37-64e10728e591",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 18:49:03.892000+00:00",
                    "modified": "2022-04-05 16:59:33.363000+00:00",
                    "name": "Device Lockout",
                    "description": "An adversary may seek to inhibit user interaction by locking the legitimate user out of the device. This is typically accomplished by requesting device administrator permissions and then locking the screen using `DevicePolicyManager.lockNow()`. Other novel techniques for locking the user out of the device have been observed, such as showing a persistent overlay, using carefully crafted \u201ccall\u201d notification screens, and locking HTML pages in the foreground. These techniques can be very difficult to get around, and typically require booting the device into safe mode to uninstall the malware.(Citation: Microsoft MalLockerB)(Citation: Talos GPlayed)(Citation: securelist rotexy 2018)\n\nPrior to Android 7, device administrators were able to reset the device lock passcode to prevent the user from unlocking the device. The release of Android 7 introduced updates that only allow device or profile owners (e.g. MDMs) to reset the device\u2019s passcode.(Citation: Android resetPassword)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1629/002",
                            "external_id": "T1629.002"
                        },
                        {
                            "source_name": "Microsoft MalLockerB",
                            "description": "D. Venkatesan. (2020, October 8). Sophisticated new Android malware marks the latest evolution of mobile ransomware . Retrieved October 29, 2020.",
                            "url": "https://www.microsoft.com/security/blog/2020/10/08/sophisticated-new-android-malware-marks-the-latest-evolution-of-mobile-ransomware/"
                        },
                        {
                            "source_name": "Android resetPassword",
                            "description": "Google. (n.d.). DevicePolicyManager. Retrieved October 1, 2019.",
                            "url": "https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html#resetPassword(java.lang.String,%20int)"
                        },
                        {
                            "source_name": "securelist rotexy 2018",
                            "description": "T. Shishkova, L. Pikman. (2018, November 22).  The Rotexy mobile Trojan \u2013 banker and ransomware. Retrieved September 23, 2019.",
                            "url": "https://securelist.com/the-rotexy-mobile-trojan-banker-and-ransomware/88893/"
                        },
                        {
                            "source_name": "Talos GPlayed",
                            "description": "V. Ventura. (2018, October 11).  GPlayed Trojan - .Net playing with Google Market . Retrieved November 24, 2020.",
                            "url": "https://blog.talosintelligence.com/2018/10/gplayedtrojan.html"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html",
                            "external_id": "APP-22"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can view a list of device administrators in device settings and revoke permission where appropriate. Applications that request device administrator permissions should be scrutinized further for malicious behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--2aa78dfd-cb6f-4c70-9408-137cfd96be49",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 18:51:13.963000+00:00",
                    "modified": "2022-04-05 16:59:57.851000+00:00",
                    "name": "Disable or Modify Tools",
                    "description": "Adversaries may disable security tools to avoid potential detection of their tools and activities. This can take the form of disabling security software, modifying SELinux configuration, or other methods to interfere with security tools scanning or reporting information. This is typically done by abusing device administrator permissions or using system exploits to gain root access to the device to modify protected system files.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1629/003",
                            "external_id": "T1629.003"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can view a list of active device administrators in the device settings.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--dc01774a-d1c1-45fb-b506-0a5d1d6593d9",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 18:44:32.808000+00:00",
                    "modified": "2022-04-05 16:59:01.549000+00:00",
                    "name": "Prevent Application Removal",
                    "description": "Adversaries may abuse the Android device administration API to prevent the user from uninstalling a target application. In earlier versions of Android, device administrator applications needed their administration capabilities explicitly deactivated by the user before the application could be uninstalled. This was later updated so the user could deactivate and uninstall the administrator application in one step.\n\nAdversaries may also abuse the device accessibility APIs to prevent removal. This set of APIs allows the application to perform certain actions on behalf of the user and programmatically determine what is being shown on the screen. The malicious application could monitor the device screen for certain modals (e.g., the confirmation modal to uninstall an application) and inject screen input or a back button tap to close the modal.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1629/001",
                            "external_id": "T1629.001"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html",
                            "external_id": "APP-22"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can view a list of device administrators and applications that have registered accessibility services in device settings. Users can typically visually see when an action happens that they did not initiate and can subsequently review installed applications for any out of place or unknown ones. Applications that register an accessibility service or request device administrator permissions should be scrutinized further for malicious behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--0d4e3bbb-7af5-4c88-a215-0c0906bc1e8d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 19:28:25.541000+00:00",
                    "modified": "2022-04-08 15:44:56.484000+00:00",
                    "name": "Indicator Removal on Host",
                    "description": "Adversaries may delete, alter, or hide generated artifacts on a device, including files, jailbreak status, or the malicious application itself. These actions may interfere with event collection, reporting, or other notifications used to detect intrusion activity. This may compromise the integrity of mobile security solutions by causing notable events or information to go unreported.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1630",
                            "external_id": "T1630"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-43.html",
                            "external_id": "APP-43"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can detect which applications can request device administrator permissions. Users can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing. Users can see a list of applications that can use accessibility services in the device settings. Application vetting services could look for use of APIs that could indicate the application is trying to hide activity.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "iOS",
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a91262d5-b9ff-463f-b8d2-12e4ea1eb3c9",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-08 16:29:30.087000+00:00",
                    "modified": "2022-04-11 15:46:23.223000+00:00",
                    "name": "Disguise Root/Jailbreak Indicators",
                    "description": "An adversary could use knowledge of the techniques used by security software to evade detection.(Citation: Brodie)(Citation: Tan) For example, some mobile security products perform compromised device detection by searching for particular artifacts such as an installed \"su\" binary, but that check could be evaded by naming the binary something else. Similarly, polymorphic code techniques could be used to evade signature-based detection.(Citation: Rastogi)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1630/003",
                            "external_id": "T1630.003"
                        },
                        {
                            "source_name": "Brodie",
                            "description": "Daniel Brodie. (2016). Practical Attacks against Mobile Device Management (MDM). Retrieved December 21, 2016.",
                            "url": "https://media.blackhat.com/eu-13/briefings/Brodie/bh-eu-13-lacoon-attacks-mdm-brodie-wp.pdf"
                        },
                        {
                            "source_name": "Rastogi",
                            "description": "Vaibhav Rastogi, Yan Chen, and Xuxian Jiang. (2013, May). DroidChameleon: Evaluating Android Anti-malware against Transformation Attacks. Retrieved December 9, 2016.",
                            "url": "http://pages.cs.wisc.edu/~vrastogi/static/papers/rcj13b.pdf"
                        },
                        {
                            "source_name": "Tan",
                            "description": "Vincent Tan. (2016, August). BAD FOR ENTERPRISE: ATTACKING BYOD ENTERPRISE MOBILE SECURITY SOLUTIONS. Retrieved February 4, 2017.",
                            "url": "http://www.blackhat.com/us-16/briefings.html#bad-for-enterprise-attacking-byod-enterprise-mobile-security-solutions"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-5.html",
                            "external_id": "EMM-5"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can use attestation to detect compromised devices.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ab7400b7-3476-4776-9545-ef3fa373de63",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 19:36:09.691000+00:00",
                    "modified": "2022-04-21 17:32:45.989000+00:00",
                    "name": "File Deletion",
                    "description": "Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location.(Citation: Android DevicePolicyManager 2019) \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1630/002",
                            "external_id": "T1630.002"
                        },
                        {
                            "source_name": "Android DevicePolicyManager 2019",
                            "description": "Android Developers. (n.d.). DevicePolicyManager. Retrieved September 22, 2019.",
                            "url": "https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can detect which applications can request device administrator permissions. Users can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing. Application vetting services could be extra scrutinous of applications that request device administrator permissions.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--0cdd66ad-26ac-4338-a764-4972a1e17ee3",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 19:31:31.855000+00:00",
                    "modified": "2022-04-21 17:33:44.504000+00:00",
                    "name": "Uninstall Malicious Application",
                    "description": "Adversaries may include functionality in malware that uninstalls the malicious application from the device. This can be achieved by: \n \n* Abusing device owner permissions to perform silent uninstallation using device owner API calls. \n* Abusing root permissions to delete files from the filesystem. \n* Abusing the accessibility service. This requires sending an intent to the system to request uninstallation, and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1630/001",
                            "external_id": "T1630.001"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-43.html",
                            "external_id": "APP-43"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can see a list of applications that can use accessibility services in the device settings. Application vetting services could look for use of the accessibility service or features that typically require root access.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--4c58b7c6-a839-4789-bda9-9de33e4d4512",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-05 19:48:31.195000+00:00",
                    "modified": "2022-04-05 19:48:31.195000+00:00",
                    "name": "GUI Input Capture",
                    "description": "Adversaries may mimic common operating system GUI components to prompt users for sensitive information with a seemingly legitimate prompt. The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Compared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this technique\u2019s use.(Citation: Felt-PhishingOnMobileDevices)\n\nThere are several approaches adversaries may use to mimic this functionality. Adversaries may impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and, when installed on the device, may prompt the user for sensitive information.(Citation: eset-finance) Adversaries may also send fake device notifications to the user that may trigger the display of an input prompt when clicked.(Citation: Group IB Gustuff Mar 2019) \n\nAdditionally, adversaries may display a prompt on top of a running, legitimate application to trick users into entering sensitive information into a malicious application rather than the legitimate application. Typically, adversaries need to know when the targeted application and the individual activity within the targeted application is running in the foreground to display the prompt at the proper time. Adversaries can abuse Android\u2019s accessibility features to determine which application is currently in the foreground.(Citation: ThreatFabric Cerberus) Two known approaches to displaying a prompt include:\n\n* Adversaries start a new activity on top of a running legitimate application.(Citation: Felt-PhishingOnMobileDevices)(Citation: Hassell-ExploitingAndroid) Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique.(Citation: Android Background)\n* Adversaries create an application overlay window on top of a running legitimate application. Applications must hold the `SYSTEM_ALERT_WINDOW` permission to create overlay windows. This permission is handled differently than typical Android permissions and, at least under certain conditions, is automatically granted to applications installed from the Google Play Store.(Citation: Cloak and Dagger)(Citation: NowSecure Android Overlay)(Citation: Skycure-Accessibility) The `SYSTEM_ALERT_WINDOW` permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.(Citation: XDA Bubbles)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1417/002",
                            "external_id": "T1417.002"
                        },
                        {
                            "source_name": "Felt-PhishingOnMobileDevices",
                            "description": "A.P. Felt and D. Wagner. (2011, May 26). Phishing on Mobile Devices. Retrieved August 25, 2016.",
                            "url": "http://w2spconf.com/2011/papers/felt-mobilephishing.pdf"
                        },
                        {
                            "source_name": "Android Background",
                            "description": "Android Developers. (n.d.). Restrictions on starting activities from the background. Retrieved September 18, 2019.",
                            "url": "https://developer.android.com/guide/components/activities/background-starts"
                        },
                        {
                            "source_name": "Cloak and Dagger",
                            "description": "Fratantonio, Y., et al.. (2017). Cloak & Dagger. Retrieved September 18, 2019.",
                            "url": "http://cloak-and-dagger.org/"
                        },
                        {
                            "source_name": "Group IB Gustuff Mar 2019",
                            "description": "Group-IB. (2019, March 28). Group-IB uncovers Android Trojan named \u00abGustuff\u00bb capable of targeting more than 100 global banking apps, cryptocurrency and marketplace applications. Retrieved September 3, 2019.",
                            "url": "https://www.group-ib.com/blog/gustuff"
                        },
                        {
                            "source_name": "eset-finance",
                            "description": "Luk\u00e1\u0161 \u0160tefanko. (2016, July 7). Fake finance apps on Google Play target users from around the world. Retrieved September 24, 2018.",
                            "url": "https://www.welivesecurity.com/2018/09/19/fake-finance-apps-google-play-target-around-world/"
                        },
                        {
                            "source_name": "Hassell-ExploitingAndroid",
                            "description": "R. Hassell. (2011, October 12-13). Exploiting Androids for Fun and Profit. Retrieved October 10, 2019.",
                            "url": "https://conference.hitb.org/hitbsecconf2011kul/materials/D1T1%20-%20Riley%20Hassell%20-%20Exploiting%20Androids%20for%20Fun%20and%20Profit.pdf"
                        },
                        {
                            "source_name": "XDA Bubbles",
                            "description": "Rahman, M.. (2019, May 8). Bubbles in Android Q will fully replace the overlay API in a future Android version. Retrieved September 18, 2019.",
                            "url": "https://www.xda-developers.com/android-q-system-alert-window-deprecate-bubbles/"
                        },
                        {
                            "source_name": "NowSecure Android Overlay",
                            "description": "Ramirez, T.. (2017, May 25). \u2018SAW\u2019-ing through the UI: Android overlay malware and the System Alert Window permission explained. Retrieved September 18, 2019.",
                            "url": "https://www.nowsecure.com/blog/2017/05/25/android-overlay-malware-system-alert-window-permission/"
                        },
                        {
                            "source_name": "ThreatFabric Cerberus",
                            "description": "ThreatFabric. (2019, August). Cerberus - A new banking Trojan from the underworld. Retrieved September 18, 2019.",
                            "url": "https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html"
                        },
                        {
                            "source_name": "Skycure-Accessibility",
                            "description": "Yair Amit. (2016, March 3). \u201cAccessibility Clickjacking\u201d \u2013 The Next Evolution in Android Malware that Impacts More Than 500 Million Devices. Retrieved December 21, 2016.",
                            "url": "https://www.skycure.com/blog/accessibility-clickjacking/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html",
                            "external_id": "APP-31"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Android users can view and manage which applications hold the `SYSTEM_ALERT_WINDOW` permission through the device settings in Apps & notifications -> Special app access -> Display over other apps (the exact menu location may vary between Android versions). \n\nApplication vetting services can look for applications requesting the `android.permission.SYSTEM_ALERT_WINDOW` permission in the list of permissions in the app manifest. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--b1c95426-2550-4621-8028-ceebf28b3a47",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-05 19:45:03+00:00",
                    "modified": "2022-04-19 19:37:19.862000+00:00",
                    "name": "Keylogging",
                    "description": "Adversaries may log user keystrokes to intercept credentials or other information from the user as the user types them.\n\nSome methods of keylogging include:\n\n* Masquerading as a legitimate third-party keyboard to record user keystrokes.(Citation: Zeltser-Keyboard) On both Android and iOS, users must explicitly authorize the use of third-party keyboard apps. Users should be advised to use extreme caution before granting this authorization when it is requested.\n* Abusing accessibility features. On Android, adversaries may abuse accessibility features to record keystrokes by registering an `AccessibilityService` class, overriding the `onAccessibilityEvent` method, and listening for the `AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED` event type. The event object passed into the function will contain the data that the user typed. \n*Additional methods of keylogging may be possible if root access is available. \n",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1417/001",
                            "external_id": "T1417.001"
                        },
                        {
                            "source_name": "Zeltser-Keyboard",
                            "description": "Lenny Zeltser. (2016, July 30). Security of Third-Party Keyboard Apps on Mobile Devices. Retrieved December 21, 2016.",
                            "url": "https://zeltser.com/third-party-keyboards-security/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-13.html",
                            "external_id": "AUT-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, users can view and manage which applications have third-party keyboard access through the device settings in System -> Languages & input -> Virtual keyboard. On iOS, users can view and manage which applications have third-party keyboard access through the device settings in General -> Keyboard. \n\nApplication vetting services can look for applications requesting the `android.permission.BIND_ACCESSIBILITY_SERVICE` permission in a service declaration. On Android, users can view and manage which applications can use accessibility services through the device settings in Accessibility. The exact device settings menu locations may vary between operating system versions.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--0f4fb01b-d57a-4375-b7a2-342c9d3248f7",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-05 19:49:58.938000+00:00",
                    "modified": "2022-04-11 19:10:05.885000+00:00",
                    "name": "Impersonate SS7 Nodes",
                    "description": "Adversaries may exploit the lack of authentication in signaling system network nodes to track the to track the location of mobile devices by impersonating a node.(Citation: Engel-SS7)(Citation: Engel-SS7-2008)(Citation: 3GPP-Security)(Citation: Positive-SS7)(Citation: CSRIC5-WG10-FinalReport) \n\n \n\nBy providing the victim\u2019s MSISDN (phone number) and impersonating network internal nodes to query subscriber information from other nodes, adversaries may use data collected from each hop to eventually determine the device\u2019s geographical cell area or nearest cell tower.(Citation: Engel-SS7)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1430/002",
                            "external_id": "T1430.002"
                        },
                        {
                            "source_name": "3GPP-Security",
                            "description": "3GPP. (2000, January). A Guide to 3rd Generation Security. Retrieved December 19, 2016.",
                            "url": "http://www.3gpp.org/ftp/tsg_sa/wg3_security/_specs/33900-120.pdf"
                        },
                        {
                            "source_name": "CSRIC5-WG10-FinalReport",
                            "description": "Communications Security, Reliability, Interoperability Council (CSRIC). (2017, March). Working Group 10 Legacy Systems Risk Reductions Final Report. Retrieved May 24, 2017.",
                            "url": "https://www.fcc.gov/files/csric5-wg10-finalreport031517pdf"
                        },
                        {
                            "source_name": "CSRIC-WG1-FinalReport",
                            "description": "CSRIC-WG1-FinalReport"
                        },
                        {
                            "source_name": "Positive-SS7",
                            "description": "Positive Technologies. (n.d.). SS7 Attack Discovery. Retrieved December 19, 2016.",
                            "url": "https://www.ptsecurity.com/upload/ptcom/PT-SS7-AD-Data-Sheet-eng.pdf"
                        },
                        {
                            "source_name": "Engel-SS7-2008",
                            "description": "Tobias Engel. (2008, December). Locating Mobile Phones using SS7. Retrieved December 19, 2016.",
                            "url": "https://www.youtube.com/watch?v=q0n5ySqbfdI"
                        },
                        {
                            "source_name": "Engel-SS7",
                            "description": "Tobias Engel. (2014, December). SS7: Locate. Track. Manipulate.. Retrieved December 19, 2016.",
                            "url": "https://berlin.ccc.de/~tobias/31c3-ss7-locate-track-manipulate.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-38.html",
                            "external_id": "CEL-38"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Network carriers may be able to use firewalls, Intrusion Detection Systems (IDS), or Intrusion Prevention Systems (IPS) to detect and/or block SS7 exploitation.(Citation: CSRIC-WG1-FinalReport) The CSRIC also suggests threat information sharing between telecommunications industry members.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--9ef05e3d-52db-4c12-be4f-519214bbe91f",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-05 19:37:15.984000+00:00",
                    "modified": "2022-04-19 19:58:48.039000+00:00",
                    "name": "Remote Device Management Services",
                    "description": "An adversary may use access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an enterprise mobility management (EMM)/mobile device management (MDM) server console to track the location of mobile devices managed by the service.(Citation: Krebs-Location) ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1430/001",
                            "external_id": "T1430.001"
                        },
                        {
                            "source_name": "Krebs-Location",
                            "description": "Brian Krebs. (2018, May 17). Tracking Firm LocationSmart Leaked Location Data for Customers of All Major U.S. Mobile Carriers Without Consent in Real Time Via Its Web Site. Retrieved November 8, 2018.",
                            "url": "https://krebsonsecurity.com/2018/05/tracking-firm-locationsmart-leaked-location-data-for-customers-of-all-major-u-s-mobile-carriers-in-real-time-via-its-web-site/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-5.html",
                            "external_id": "ECO-5"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-7.html",
                            "external_id": "EMM-7"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Google sends a notification to the device when Android Device Manager is used to locate it. Additionally, Google provides the ability for users to view their general account activity and alerts users when their credentials have been used on a new device. Apple iCloud also provides notifications to users of account activity such as when credentials have been used. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--51636761-2e35-44bf-9e56-e337adf97174",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 19:20:37.864000+00:00",
                    "modified": "2022-04-21 17:32:15.993000+00:00",
                    "name": "Software Packing",
                    "description": "Adversaries may perform software packing to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. \n\nUtilities used to perform software packing are called packers. An example packer is FTT. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1406/002",
                            "external_id": "T1406.002"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because as legitimate software may use packing techniques to reduce binary size or to protect proprietary code.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "iOS",
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fa801609-ca8e-415e-815e-65f3826ff4df",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 19:19:23.777000+00:00",
                    "modified": "2022-04-21 17:30:16.229000+00:00",
                    "name": "Steganography",
                    "description": "Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1406/001",
                            "external_id": "T1406.001"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Detection of steganography is difficult unless detectable artifacts with a known signature are left behind by the obfuscation process. Look for strings are other signatures left in system artifacts related to decoding steganography.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ec4c4baa-026f-43e8-8f56-58c36f3162dd",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 15:27:34.300000+00:00",
                    "modified": "2022-04-29 17:29:15.978000+00:00",
                    "name": "Out of Band Data",
                    "description": "Adversaries may communicate with compromised devices using out of band data streams. This could be done for a variety of reasons, including evading network traffic monitoring, as a backup method of command and control, or for data exfiltration if the device is not connected to any Internet-providing networks (i.e. cellular or Wi-Fi). Several out of band data streams exist, such as SMS messages, NFC, and Bluetooth. \n\n \n\nOn Android, applications can read push notifications to capture content from SMS messages, or other out of band data streams. This requires that the user manually grant notification access to the application via the settings menu. However, the application could launch an Intent to take the user directly there. \n\n \n\nOn iOS, there is no way to programmatically read push notifications. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1644",
                            "external_id": "T1644"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "If a user sees a notification with text they do not recognize, they should review their list of installed applications.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--b7c0e45f-0206-4f75-96e7-fe7edad3aaff",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 18:50:43.393000+00:00",
                    "modified": "2022-04-05 17:05:09.653000+00:00",
                    "name": "Process Injection",
                    "description": "Adversaries may inject code into processes in order to evade process-based defenses or even elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nBoth Android and iOS have no legitimate way to achieve process injection. The only way this is possible is by abusing existing root access or exploiting a vulnerability.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "privilege-escalation"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1631",
                            "external_id": "T1631"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for misuse of dynamic libraries.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--1ff89c1b-7615-4fe8-b9cb-63aaf52e6dee",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 19:05:17.048000+00:00",
                    "modified": "2022-04-05 17:05:37.431000+00:00",
                    "name": "Ptrace System Calls",
                    "description": "Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (e.g., by using `malloc`) then invoking that memory with `PTRACE_SETREGS` to set the register containing the next instruction to execute. Ptrace system call injection can also be done with `PTRACE_POKETEXT`/`PTRACE_POKEDATA`, which copy data to a specific address in the target process's memory (e.g., the current address of the next instruction).(Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018)  \n\nPtrace system call injection may not be possible when targeting processes with high-privileges, and on some systems those that are non-child processes.(Citation: BH Linux Inject)  \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "privilege-escalation"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1631/001",
                            "external_id": "T1631.001"
                        },
                        {
                            "source_name": "PTRACE man",
                            "description": "Kerrisk, M. (2020, February 9). PTRACE(2) - Linux Programmer's Manual. Retrieved February 21, 2020.",
                            "url": "http://man7.org/linux/man-pages/man2/ptrace.2.html"
                        },
                        {
                            "source_name": "Medium Ptrace JUL 2018",
                            "description": "Jain, S. (2018, July 25). Code injection in running process using ptrace. Retrieved February 21, 2020.",
                            "url": "https://medium.com/@jain.sm/code-injection-in-running-process-using-ptrace-d3ea7191a4be"
                        },
                        {
                            "source_name": "BH Linux Inject",
                            "description": "Colgan, T. (2015, August 15). Linux-Inject. Retrieved February 21, 2020.",
                            "url": "https://github.com/gaffe23/linux-inject/blob/master/slides_BHArsenal2015.pdf"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for misuse of dynamic libraries.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--11c2c2b7-1fd4-408f-bc2e-fe772ef9df5e",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 12:36:41.507000+00:00",
                    "modified": "2022-04-11 19:31:34.018000+00:00",
                    "name": "Protected User Data",
                    "description": "Adversaries may utilize standard operating system APIs to collect data from permission-backed data stores on a device, such as the calendar or contact list. These permissions need to be declared ahead of time. On Android, they must be included in the application\u2019s manifest. On iOS, they must be included in the application\u2019s `Info.plist` file.  \n\n \n\nIn almost all cases, the user is required to grant access to the data store that the application is trying to access. In recent OS versions, vendors have introduced additional privacy controls for users, such as the ability to grant permission to an application only while the application is being actively used by the user. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access [Protected User Data](https://attack.mitre.org/techniques/T1636) without the user\u2019s knowledge or approval. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1636",
                            "external_id": "T1636"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                            "external_id": "APP-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can view permissions granted to an application in device settings. Application vetting services typically flag permissions requested by an application, which can be reviewed by an administrator. Certain dangerous permissions, such as `RECEIVE_SMS`, could receive additional scrutiny.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a9fa0d30-a8ff-45bf-922e-7720da0b7922",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 12:48:27.021000+00:00",
                    "modified": "2022-04-11 19:33:41.984000+00:00",
                    "name": "Calendar Entries",
                    "description": "Adversaries may utilize standard operating system APIs to gather calendar entry data. On Android, this can be accomplished using the Calendar Content Provider. On iOS, this can be accomplished using the `EventKit` framework. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access [Calendar Entries](https://attack.mitre.org/techniques/T1636/001) without the user\u2019s knowledge or approval. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1636/001",
                            "external_id": "T1636.001"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                            "external_id": "APP-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On both Android and iOS, the user can manage which applications have permission to access calendar information through the device settings screen, revoke the permission if necessary. Application vetting services could look for `android.permission.READ_CALENDAR` or `android.permission.WRITE_CALENDAR` in an Android application\u2019s manifest, or `NSCalendarsUsageDescription` in an iOS application\u2019s `Info.plist` file. Most applications do not need calendar access, so extra scrutiny could be applied to those that request it. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--1d1b1558-c833-482e-aabb-d07ef6eae63d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 13:12:23.522000+00:00",
                    "modified": "2022-04-29 17:29:34.081000+00:00",
                    "name": "Call Log",
                    "description": "Adversaries may utilize standard operating system APIs to gather call log data. On Android, this can be accomplished using the Call Log Content Provider. iOS provides no standard API to access the call log. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access the [Call Log](https://attack.mitre.org/techniques/T1636/002) without the user\u2019s knowledge or approval. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1636/002",
                            "external_id": "T1636.002"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                            "external_id": "APP-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, the user can manage which applications have permission to access the call log through the device settings screen, revoking the permission if necessary. Application vetting services could look for `android.permission.READ_CALL_LOG` in an Android application\u2019s manifest. Most applications do not need call log access, so extra scrutiny could be applied to those that request it.  ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e0b9ecb8-a7d1-43c7-aa30-8e19c6a92c86",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 13:17:52.740000+00:00",
                    "modified": "2022-04-11 19:38:50.942000+00:00",
                    "name": "Contact List",
                    "description": "Adversaries may utilize standard operating system APIs to gather contact list data. On Android, this can be accomplished using the Contacts Content Provider. On iOS, this can be accomplished using the `Contacts` framework. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access the [Contact List](https://attack.mitre.org/techniques/T1636/003) without the user\u2019s knowledge or approval. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1636/003",
                            "external_id": "T1636.003"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                            "external_id": "APP-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On both Android and iOS, the user can manage which applications have permission to access the contact list through the device settings screen, revoking the permission if necessary. Application vetting services could look for `android.permission.READ_CONTACTS` in an Android application\u2019s manifest, or `NSContactsUsageDescription` in an iOS application\u2019s `Info.plist` file. Most applications do not need contact list access, so extra scrutiny could be applied to those that request it.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "iOS",
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c6421411-ae61-42bb-9098-73fddb315002",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 13:25:30.923000+00:00",
                    "modified": "2022-04-11 19:40:28.979000+00:00",
                    "name": "SMS Messages",
                    "description": "Adversaries may utilize standard operating system APIs to gather SMS messages. On Android, this can be accomplished using the SMS Content Provider. iOS provides no standard API to access SMS messages. \n\nIf the device has been jailbroken or rooted, an adversary may be able to access [SMS Messages](https://attack.mitre.org/techniques/T1636/004) without the user\u2019s knowledge or approval. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1636/004",
                            "external_id": "T1636.004"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                            "external_id": "APP-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, the user can manage which applications have permission to access SMS messages through the device settings screen, revoking the permission if necessary. Application vetting services could look for `android.permission.READ_SMS` in an Android application\u2019s manifest. Most applications do not need access to SMS messages, so extra scrutiny could be applied to those that request it. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--1d44f529-6fe6-489f-8a01-6261ac43f05e",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-31 19:50:45.752000+00:00",
                    "modified": "2022-04-11 19:17:09.165000+00:00",
                    "name": "Security Software Discovery",
                    "description": "Adversaries may attempt to get a listing of security applications and configurations that are installed on a device. This may include things such as mobile security products. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1418/001) during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempt specific actions. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1418/001",
                            "external_id": "T1418.001"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-12.html",
                            "external_id": "APP-12"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for the Android permission `android.permission.QUERY_ALL_PACKAGES`, and apply extra scrutiny to applications that request it. On iOS, application vetting services could look for usage of the private API `LSApplicationWorkspace` and apply extra scrutiny to applications that employ it.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--233fe2c0-cb41-4765-b454-e0087597fbce",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 15:12:50.740000+00:00",
                    "modified": "2022-04-05 17:11:24.641000+00:00",
                    "name": "Steal Application Access Token",
                    "description": "Adversaries can steal user application access tokens as a means of acquiring credentials to access remote systems and resources. This can occur through social engineering or URI hijacking and typically requires user action to grant access, such as through a system \u201cOpen With\u201d dialogue.  \n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework used to issue tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry through OAuth 2.0 using a variety of authorization protocols. An example of a commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested without requiring user credentials.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1635",
                            "external_id": "T1635"
                        },
                        {
                            "source_name": "Android-AppLinks",
                            "description": "Android. (n.d.). Handling App Links. Retrieved December 21, 2016.",
                            "url": "https://developer.android.com/training/app-links/index.html"
                        },
                        {
                            "source_name": "Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019",
                            "description": "Auth0. (n.d.). Why You Should Always Use Access Tokens to Secure APIs. Retrieved September 12, 2019.",
                            "url": "https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/"
                        },
                        {
                            "source_name": "Microsoft - OAuth Code Authorization flow - June 2019",
                            "description": "Microsoft. (n.d.). Microsoft identity platform and OAuth 2.0 authorization code flow. Retrieved September 12, 2019.",
                            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow"
                        },
                        {
                            "source_name": "Microsoft Identity Platform Protocols May 2019",
                            "description": "Microsoft. (n.d.). Retrieved September 12, 2019.",
                            "url": "https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols"
                        },
                        {
                            "source_name": "IETF-OAuthNativeApps",
                            "description": "W. Denniss and J. Bradley. (2017, October). IETF RFC 8252: OAuth 2.0 for Native Apps. Retrieved November 30, 2018.",
                            "url": "https://tools.ietf.org/html/rfc8252"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, users may be presented with a popup to select the appropriate application to open a URI in. If the user sees an application they do not recognize, they can remove it. When vetting applications for potential security weaknesses, the vetting process could look for insecure use of Intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or utilizing the App Links feature). For mobile applications using OAuth, encourage use of best practice.(Citation: IETF-OAuthNativeApps)(Citation: Android-AppLinks)",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--789ef15a-34d9-4b32-a779-8cbbc9eb32f5",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-01 15:15:35.640000+00:00",
                    "modified": "2022-04-06 12:44:03.799000+00:00",
                    "name": "URI Hijacking",
                    "description": "Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data. \n\nApplications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If an adversary were to register for a URI that was already in use by a genuine application, the adversary may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the adversary to gain access to protected resources.(Citation: Trend Micro iOS URL Hijacking)(Citation: IETF-PKCE) ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1635/001",
                            "external_id": "T1635.001"
                        },
                        {
                            "source_name": "Android-AppLinks",
                            "description": "Android. (n.d.). Handling App Links. Retrieved December 21, 2016.",
                            "url": "https://developer.android.com/training/app-links/index.html"
                        },
                        {
                            "source_name": "Trend Micro iOS URL Hijacking",
                            "description": "L. Wu, Y. Zhou, M. Li. (2019, July 12).  iOS URL Scheme Susceptible to Hijacking. Retrieved September 11, 2020.",
                            "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/ios-url-scheme-susceptible-to-hijacking/"
                        },
                        {
                            "source_name": "IETF-PKCE",
                            "description": "N. Sakimura, J. Bradley, and N. Agarwal. (2015, September). IETF RFC 7636: Proof Key for Code Exchange by OAuth Public Clients. Retrieved December 21, 2016.",
                            "url": "https://tools.ietf.org/html/rfc7636"
                        },
                        {
                            "source_name": "IETF-OAuthNativeApps",
                            "description": "W. Denniss and J. Bradley. (2017, October). IETF RFC 8252: OAuth 2.0 for Native Apps. Retrieved November 30, 2018.",
                            "url": "https://tools.ietf.org/html/rfc8252"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_contributors": [
                        "Leo Zhang, Trend Micro",
                        "Steven Du, Trend Micro"
                    ],
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, users may be presented with a popup to select the appropriate application to open the URI in. If the user sees an application they do not recognize, they can remove it. When vetting applications for potential security weaknesses, the vetting process could look for insecure use of Intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or utilizing the App Links feature). For mobile applications using OAuth, encourage use of best practice. (Citation: IETF-OAuthNativeApps)(Citation: Android-AppLinks)",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--79cb02f4-ac4e-4335-8b51-425c9573cce1",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 18:05:46.795000+00:00",
                    "modified": "2022-04-08 15:47:12.903000+00:00",
                    "name": "Subvert Trust Controls",
                    "description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted applications. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features include: an app being allowed to run because it is signed by a valid code signing certificate; an OS prompt alerting the user that an app came from an untrusted source; or getting an indication that you are about to connect to an untrusted site. The method adversaries use will depend on the specific mechanism they seek to subvert. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1632",
                            "external_id": "T1632"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-7.html",
                            "external_id": "STA-7"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, the user can use the device settings menu to view trusted CA certificates and look for unexpected or unknown certificates. A mobile security product could similarly examine the trusted CA certificate store for anomalies. Users can use the device settings menu to view which applications on the device are allowed to install unknown applications. \n\nOn iOS, the user can use the device settings menu to view installed Configuration Profiles and look for unexpected or unknown profiles. A Mobile Device Management (MDM) system could use the iOS MDM APIs to examine the list of installed Configuration Profiles for anomalies.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fcb11f06-ce0e-490b-bcc1-04a1623579f0",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 18:13:26.003000+00:00",
                    "modified": "2022-04-21 17:31:50.071000+00:00",
                    "name": "Code Signing Policy Modification",
                    "description": "Adversaries may modify code signing policies to enable execution of applications signed with unofficial or unknown keys. Code signing provides a level of authenticity on an app from a developer, guaranteeing that the program has not been tampered with and comes from an official source. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on a device. \n\nMobile devices generally enable these security controls by default, such as preventing the installation of unknown applications on Android. Adversaries may modify these policies in a number of ways, including [Input Injection](https://attack.mitre.org/techniques/T1516) or malicious configuration profiles.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1632/001",
                            "external_id": "T1632.001"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-7.html",
                            "external_id": "STA-7"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, the user can use the device settings menu to view trusted CA certificates and look for unexpected or unknown certificates. A mobile security product could similarly examine the trusted CA certificate store for anomalies. Users can use the device settings menu to view which applications on the device are allowed to install unknown applications.\n\nOn iOS, the user can use the device settings menu to view installed Configuration Profiles and look for unexpected or unknown profiles. A Mobile Device Management (MDM) system could use the iOS MDM APIs to examine the list of installed Configuration Profiles for anomalies.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c08366bb-8d11-4921-853f-f0a3b6a2a1da",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-28 19:30:15.556000+00:00",
                    "modified": "2022-04-05 16:40:45.961000+00:00",
                    "name": "Compromise Hardware Supply Chain",
                    "description": "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1474/002",
                            "external_id": "T1474.002"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-1.html",
                            "external_id": "SPC-1"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-2.html",
                            "external_id": "SPC-2"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-4.html",
                            "external_id": "SPC-4"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-5.html",
                            "external_id": "SPC-5"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-6.html",
                            "external_id": "SPC-6"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-7.html",
                            "external_id": "SPC-7"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-8.html",
                            "external_id": "SPC-8"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-13.html",
                            "external_id": "SPC-13"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-16.html",
                            "external_id": "SPC-16"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-17.html",
                            "external_id": "SPC-17"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-21.html",
                            "external_id": "SPC-21"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Integrity checking mechanisms can potentially detect unauthorized hardware modifications.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--7827ced0-95e7-4d05-bdcf-0d8f2d37a3d3",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-28 19:31:51.978000+00:00",
                    "modified": "2022-04-05 16:39:08.984000+00:00",
                    "name": "Compromise Software Dependencies and Development Tools",
                    "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Grace-Advertisement)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1474/001",
                            "external_id": "T1474.001"
                        },
                        {
                            "source_name": "Grace-Advertisement",
                            "description": "M. Grace et al. (2012, April 16-18). Unsafe exposure analysis of mobile in-app advertisements. Retrieved December 22, 2016.",
                            "url": "https://www.csc2.ncsu.edu/faculty/xjiang4/pubs/WISEC12_ADRISK.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-6.html",
                            "external_id": "APP-6"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-0.html",
                            "external_id": "SPC-0"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-3.html",
                            "external_id": "SPC-3"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-9.html",
                            "external_id": "SPC-9"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-10.html",
                            "external_id": "SPC-10"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-15.html",
                            "external_id": "SPC-15"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Usage of insecure or malicious third-party libraries could be detected by application vetting services. Malicious software development tools could be detected by enterprises that deploy endpoint protection software on computers that are used to develop mobile apps. Application vetting could detect the usage of insecure or malicious third-party libraries.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--9558a84e-2d5e-4872-918e-d847494a8ffc",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-28 19:25:17.596000+00:00",
                    "modified": "2022-04-05 16:43:41.342000+00:00",
                    "name": "Compromise Software Supply Chain",
                    "description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1474/003",
                            "external_id": "T1474.003"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-4.html",
                            "external_id": "SPC-4"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-11.html",
                            "external_id": "SPC-11"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-12.html",
                            "external_id": "SPC-12"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-18.html",
                            "external_id": "SPC-18"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-20.html",
                            "external_id": "SPC-20"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services can detect malicious code in applications. System partition integrity checking mechanisms can detect unauthorized or malicious code contained in the system partition.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--27d18e87-8f32-4be1-b456-39b90454360f",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 17:51:29.550000+00:00",
                    "modified": "2022-04-08 15:47:37.920000+00:00",
                    "name": "Virtualization/Sandbox Evasion",
                    "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors after checking for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware\u2019s behavior to disengage from the victim or conceal the core functions of the payload. They may also search for VME artifacts before dropping further payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1633) during automated discovery to shape follow-on behaviors. \n\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1633) such as checking for system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1633",
                            "external_id": "T1633"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for applications attempting to get `android.os.SystemProperties` or `getprop` with the runtime `exec()` commands. This could indicate some level of sandbox evasion, as Google recommends against using system properties within applications.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--6ffad4be-bfe0-424f-abde-4d9a84a800ad",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-03-30 17:53:35.582000+00:00",
                    "modified": "2022-04-21 17:34:12.113000+00:00",
                    "name": "System Checks",
                    "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behavior after checking for the presence of artifacts indicative of a virtual environment or sandbox. If the adversary detects a virtual environment, they may alter their malware\u2019s behavior to disengage from the victim or conceal the core functions of the implant. They may also search for virtualization artifacts before dropping secondary or additional payloads. \n\nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \n\nHardware checks, such as the presence of motion sensors, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1633/001",
                            "external_id": "T1633.001"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for applications attempting to get `android.os.SystemProperties` or `getprop` with the runtime `exec()` commands. This could indicate some level of sandbox evasion, as Google recommends against using system properties within applications.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--939808a7-121d-467a-b028-4441ee8b7cee",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 15:47:06.071000+00:00",
                    "modified": "2022-04-06 15:47:06.071000+00:00",
                    "name": "Bidirectional Communication",
                    "description": "Adversaries may use an existing, legitimate external Web service channel as a means for sending commands to and receiving output from a compromised system. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\n \n\nPopular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1481/002",
                            "external_id": "T1481.002"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--986f80f7-ff0e-4f48-87bd-0394814bbce5",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 15:41:03.914000+00:00",
                    "modified": "2022-04-06 15:41:03.914000+00:00",
                    "name": "Dead Drop Resolver",
                    "description": "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers. \n\n \n\nPopular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. \n\n \n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis, or enable operational resiliency (since this infrastructure may be dynamically changed). ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1481/001",
                            "external_id": "T1481.001"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d916f176-a1ca-4a78-9fdd-4058bc28162e",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2022-04-06 15:52:07.711000+00:00",
                    "modified": "2022-04-06 15:52:07.711000+00:00",
                    "name": "One-Way Communication",
                    "description": "Adversaries may use an existing, legitimate external Web service channel as a means for sending commands to a compromised system without receiving return output. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response. \n\n \n\nPopular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1481/003",
                            "external_id": "T1481.003"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": true,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0"
                }
            ],
            "major_version_changes": [
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e3b936a4-6321-4172-9114-038a866362ec",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-10-10 15:00:44.181000+00:00",
                    "modified": "2022-04-01 15:01:02.140000+00:00",
                    "name": "Archive Collected Data",
                    "description": "Adversaries may compress and/or encrypt data that is collected prior to exfiltration. Compressing data can help to obfuscate its contents and minimize use of network resources. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender. \n\n \n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, programming library, or custom algorithm.  ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1532",
                            "external_id": "T1532"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Many encryption mechanisms are built into standard application-accessible APIs and are therefore undetectable to the end user.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 15:01:02.140000+00:00\", \"old_value\": \"2019-10-10 15:00:44.181000+00:00\"}, \"root['name']\": {\"new_value\": \"Archive Collected Data\", \"old_value\": \"Data Encrypted\"}, \"root['description']\": {\"new_value\": \"Adversaries may compress and/or encrypt data that is collected prior to exfiltration. Compressing data can help to obfuscate its contents and minimize use of network resources. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender. \\n\\n \\n\\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, programming library, or custom algorithm.  \", \"old_value\": \"Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender. The encryption is performed by a utility, programming library, or custom algorithm on the data itself and is considered separate from any encryption performed by the command and control or file transfer protocol. Common file formats that can encrypt files are RAR and zip.\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,5 @@\\n-Data is encrypted before being exfiltrated in order to hide the information that is being exfiltrated from detection or to make the exfiltration less conspicuous upon inspection by a defender. The encryption is performed by a utility, programming library, or custom algorithm on the data itself and is considered separate from any encryption performed by the command and control or file transfer protocol. Common file formats that can encrypt files are RAR and zip.\\n+Adversaries may compress and/or encrypt data that is collected prior to exfiltration. Compressing data can help to obfuscate its contents and minimize use of network resources. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender. \\n+\\n+ \\n+\\n+Both compression and encryption are done prior to exfiltration, and can be performed using a utility, programming library, or custom algorithm.  \"}, \"root['kill_chain_phases'][0]['phase_name']\": {\"new_value\": \"collection\", \"old_value\": \"exfiltration\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Many encryption mechanisms are built into standard application-accessible APIs and are therefore undetectable to the end user.\", \"old_value\": \"Many encryption mechanisms are built into standard application-accessible APIs, and are therefore undetectable to the end user.\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to703__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to703__0\"><a href=\"#difflib_chg_to703__top\">t</a></td><td class=\"diff_header\" id=\"from703_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Data&nbsp;is&nbsp;encrypted&nbsp;before&nbsp;being&nbsp;exfiltrated&nbsp;in&nbsp;order&nbsp;to&nbsp;hide&nbsp;</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to703__top\">t</a></td><td class=\"diff_header\" id=\"to703_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;compress&nbsp;and/or&nbsp;encrypt&nbsp;data&nbsp;that&nbsp;is&nbsp;collect</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">the&nbsp;information&nbsp;that&nbsp;is&nbsp;being&nbsp;exfiltrated&nbsp;from&nbsp;detection&nbsp;or&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ed&nbsp;prior&nbsp;to&nbsp;exfiltration.&nbsp;Compressing&nbsp;data&nbsp;can&nbsp;help&nbsp;to&nbsp;obfus</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">to&nbsp;make&nbsp;the&nbsp;exfiltration&nbsp;less&nbsp;conspicuous&nbsp;upon&nbsp;inspection&nbsp;by</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cate&nbsp;its&nbsp;contents&nbsp;and&nbsp;minimize&nbsp;use&nbsp;of&nbsp;network&nbsp;resources.&nbsp;Enc</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;a&nbsp;defender.&nbsp;The&nbsp;encryption&nbsp;is&nbsp;performed&nbsp;by&nbsp;a&nbsp;utility,&nbsp;progr</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ryption&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;hide&nbsp;information&nbsp;that&nbsp;is&nbsp;being&nbsp;exfilt</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">amming&nbsp;library,&nbsp;or&nbsp;custom&nbsp;algorithm&nbsp;on&nbsp;the&nbsp;data&nbsp;itself&nbsp;and&nbsp;i</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">rated&nbsp;from&nbsp;detection&nbsp;or&nbsp;make&nbsp;exfiltration&nbsp;less&nbsp;conspicuous&nbsp;u</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">s&nbsp;considered&nbsp;separate&nbsp;from&nbsp;any&nbsp;encryption&nbsp;performed&nbsp;by&nbsp;the&nbsp;c</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">pon&nbsp;inspection&nbsp;by&nbsp;a&nbsp;defender.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Both&nbsp;compression&nbsp;and&nbsp;encr</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ommand&nbsp;and&nbsp;control&nbsp;or&nbsp;file&nbsp;transfer&nbsp;protocol.&nbsp;Common&nbsp;file&nbsp;fo</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">yption&nbsp;are&nbsp;done&nbsp;prior&nbsp;to&nbsp;exfiltration,&nbsp;and&nbsp;can&nbsp;be&nbsp;performed&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">rmats&nbsp;that&nbsp;can&nbsp;encrypt&nbsp;files&nbsp;are&nbsp;RAR&nbsp;and&nbsp;zip.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">using&nbsp;a&nbsp;utility,&nbsp;programming&nbsp;library,&nbsp;or&nbsp;custom&nbsp;algorithm.&nbsp;&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--6683aa0c-d98a-4f5b-ac57-ca7e9934a760",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:12.913000+00:00",
                    "modified": "2022-04-29 17:29:49.023000+00:00",
                    "name": "Audio Capture",
                    "description": "Adversaries may capture audio to collect information by leveraging standard operating system APIs of a mobile device. Examples of audio information adversaries may target include user conversations, surroundings, phone calls, or other sensitive information. \n\n \n\nAndroid and iOS, by default, require that applications request device microphone access from the user.  \n\n \n\nOn Android devices, applications must hold the `RECORD_AUDIO` permission to access the microphone or the `CAPTURE_AUDIO_OUTPUT` permission to access audio output. Because Android does not allow third-party applications to hold the `CAPTURE_AUDIO_OUTPUT` permission by default, only privileged applications, such as those distributed by Google or the device vendor, can access audio output.(Citation: Android Permissions) However, adversaries may be able to gain this access after successfully elevating their privileges. With the `CAPTURE_AUDIO_OUTPUT` permission, adversaries may pass the `MediaRecorder.AudioSource.VOICE_CALL` constant to `MediaRecorder.setAudioOutput`, allowing capture of both voice call uplink and downlink.(Citation: Manifest.permission) \n\n \n\nOn iOS devices, applications must include the `NSMicrophoneUsageDescription` key in their `Info.plist` file to access the microphone.(Citation: Requesting Auth-Media Capture)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1429",
                            "external_id": "T1429"
                        },
                        {
                            "source_name": "Manifest.permission",
                            "description": "Android Developers. (2022, March 17). Voice Call. Retrieved April 1, 2022.",
                            "url": "https://developer.android.com/reference/android/media/MediaRecorder.AudioSource#VOICE_CALL"
                        },
                        {
                            "source_name": "Requesting Auth-Media Capture",
                            "description": "Apple Developers. (n.d.). Requesting Authorization for Media Capture on iOS. Retrieved April 1, 2022.",
                            "url": "https://developer.apple.com/documentation/avfoundation/cameras_and_media_capture/requesting_authorization_for_media_capture_on_ios"
                        },
                        {
                            "source_name": "Android Permissions",
                            "description": "Google. (2021, August 11). Manifest.permission. Retrieved September 22, 2021.",
                            "url": "https://developer.android.com/reference/android/Manifest.permission"
                        },
                        {
                            "source_name": "Android Privacy Indicators",
                            "description": "Google. (n.d.). Privacy Indicators. Retrieved April 20, 2022.",
                            "url": "https://source.android.com/devices/tech/config/privacy-indicators"
                        },
                        {
                            "source_name": "iOS Mic Spyware",
                            "description": "ZecOps Research Team. (2021, November 4). How iOS Malware Can Spy on Users Silently. Retrieved April 1, 2022.",
                            "url": "https://blog.zecops.com/research/how-ios-malware-can-spy-on-users-silently/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-19.html",
                            "external_id": "APP-19"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "In iOS 14 and up, an orange dot (or orange square if the Differentiate Without Color setting is enabled) appears in the status bar when the microphone is being used by an application. However, there have been demonstrations indicating it may still be possible to access the microphone in the background without triggering this visual indicator by abusing features that natively access the microphone or camera but do not trigger the visual indicators.(Citation: iOS Mic Spyware)\n\n\nIn Android 12 and up, a green dot appears in the status bar when the microphone is being used by an application.(Citation: Android Privacy Indicators)\n \n\nAndroid applications using the `RECORD_AUDIO` permission and iOS applications using `RequestRecordPermission` should be carefully reviewed and monitored. If the `CAPTURE_AUDIO_OUTPUT` permission is found in a third-party Android application, the application should be heavily scrutinized. \n\n \n\nIn both Android (6.0 and up) and iOS, users can review which applications have the permission to access the microphone through the device settings screen and revoke permissions as necessary. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "3.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Android Developers. (2022, March 17). Voice Call. Retrieved April 1, 2022.\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1032\", \"root['external_references'][1]['external_id']\": \"APP-19\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-29 17:29:49.023000+00:00\", \"old_value\": \"2019-09-20 17:59:11.041000+00:00\"}, \"root['name']\": {\"new_value\": \"Audio Capture\", \"old_value\": \"Capture Audio\"}, \"root['description']\": {\"new_value\": \"Adversaries may capture audio to collect information by leveraging standard operating system APIs of a mobile device. Examples of audio information adversaries may target include user conversations, surroundings, phone calls, or other sensitive information. \\n\\n \\n\\nAndroid and iOS, by default, require that applications request device microphone access from the user.  \\n\\n \\n\\nOn Android devices, applications must hold the `RECORD_AUDIO` permission to access the microphone or the `CAPTURE_AUDIO_OUTPUT` permission to access audio output. Because Android does not allow third-party applications to hold the `CAPTURE_AUDIO_OUTPUT` permission by default, only privileged applications, such as those distributed by Google or the device vendor, can access audio output.(Citation: Android Permissions) However, adversaries may be able to gain this access after successfully elevating their privileges. With the `CAPTURE_AUDIO_OUTPUT` permission, adversaries may pass the `MediaRecorder.AudioSource.VOICE_CALL` constant to `MediaRecorder.setAudioOutput`, allowing capture of both voice call uplink and downlink.(Citation: Manifest.permission) \\n\\n \\n\\nOn iOS devices, applications must include the `NSMicrophoneUsageDescription` key in their `Info.plist` file to access the microphone.(Citation: Requesting Auth-Media Capture)\", \"old_value\": \"Adversaries may capture audio to collect information on a user of a mobile device using standard operating system APIs. Adversaries may target audio information such as user conversations, surroundings, phone calls, or other sensitive information.\\n\\nAndroid and iOS, by default, requires that an application request access to microphone devices from the user. In Android, applications must hold the <code>android.permission.RECORD_AUDIO</code> permission to access the microphone and the <code>android.permission.CAPTURE_AUDIO_OUTPUT</code> permission to access audio output such as speakers. Android does not allow third-party applications to hold <code>android.permission.CAPTURE_AUDIO_OUTPUT</code>, so audio output can only be obtained by privileged applications (distributed by Google or the device vendor) or after a successful privilege escalation attack. In iOS, applications must include the `NSMicrophoneUsageDescription` key in their `Info.plist` file.\", \"diff\": \"--- \\n+++ \\n@@ -1,3 +1,13 @@\\n-Adversaries may capture audio to collect information on a user of a mobile device using standard operating system APIs. Adversaries may target audio information such as user conversations, surroundings, phone calls, or other sensitive information.\\n+Adversaries may capture audio to collect information by leveraging standard operating system APIs of a mobile device. Examples of audio information adversaries may target include user conversations, surroundings, phone calls, or other sensitive information. \\n \\n-Android and iOS, by default, requires that an application request access to microphone devices from the user. In Android, applications must hold the <code>android.permission.RECORD_AUDIO</code> permission to access the microphone and the <code>android.permission.CAPTURE_AUDIO_OUTPUT</code> permission to access audio output such as speakers. Android does not allow third-party applications to hold <code>android.permission.CAPTURE_AUDIO_OUTPUT</code>, so audio output can only be obtained by privileged applications (distributed by Google or the device vendor) or after a successful privilege escalation attack. In iOS, applications must include the `NSMicrophoneUsageDescription` key in their `Info.plist` file.\\n+ \\n+\\n+Android and iOS, by default, require that applications request device microphone access from the user.  \\n+\\n+ \\n+\\n+On Android devices, applications must hold the `RECORD_AUDIO` permission to access the microphone or the `CAPTURE_AUDIO_OUTPUT` permission to access audio output. Because Android does not allow third-party applications to hold the `CAPTURE_AUDIO_OUTPUT` permission by default, only privileged applications, such as those distributed by Google or the device vendor, can access audio output.(Citation: Android Permissions) However, adversaries may be able to gain this access after successfully elevating their privileges. With the `CAPTURE_AUDIO_OUTPUT` permission, adversaries may pass the `MediaRecorder.AudioSource.VOICE_CALL` constant to `MediaRecorder.setAudioOutput`, allowing capture of both voice call uplink and downlink.(Citation: Manifest.permission) \\n+\\n+ \\n+\\n+On iOS devices, applications must include the `NSMicrophoneUsageDescription` key in their `Info.plist` file to access the microphone.(Citation: Requesting Auth-Media Capture)\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Manifest.permission\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://developer.android.com/reference/android/media/MediaRecorder.AudioSource#VOICE_CALL\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-19.html\"}, \"root['x_mitre_detection']\": {\"new_value\": \"In iOS 14 and up, an orange dot (or orange square if the Differentiate Without Color setting is enabled) appears in the status bar when the microphone is being used by an application. However, there have been demonstrations indicating it may still be possible to access the microphone in the background without triggering this visual indicator by abusing features that natively access the microphone or camera but do not trigger the visual indicators.(Citation: iOS Mic Spyware)\\n\\n\\nIn Android 12 and up, a green dot appears in the status bar when the microphone is being used by an application.(Citation: Android Privacy Indicators)\\n \\n\\nAndroid applications using the `RECORD_AUDIO` permission and iOS applications using `RequestRecordPermission` should be carefully reviewed and monitored. If the `CAPTURE_AUDIO_OUTPUT` permission is found in a third-party Android application, the application should be heavily scrutinized. \\n\\n \\n\\nIn both Android (6.0 and up) and iOS, users can review which applications have the permission to access the microphone through the device settings screen and revoke permissions as necessary. \", \"old_value\": \"On both Android (6.0 and up) and iOS, the user can view which applications have permission to use the microphone through the device settings screen, and the user can choose to revoke the permissions.\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,11 @@\\n-On both Android (6.0 and up) and iOS, the user can view which applications have permission to use the microphone through the device settings screen, and the user can choose to revoke the permissions.\\n+In iOS 14 and up, an orange dot (or orange square if the Differentiate Without Color setting is enabled) appears in the status bar when the microphone is being used by an application. However, there have been demonstrations indicating it may still be possible to access the microphone in the background without triggering this visual indicator by abusing features that natively access the microphone or camera but do not trigger the visual indicators.(Citation: iOS Mic Spyware)\\n+\\n+\\n+In Android 12 and up, a green dot appears in the status bar when the microphone is being used by an application.(Citation: Android Privacy Indicators)\\n+ \\n+\\n+Android applications using the `RECORD_AUDIO` permission and iOS applications using `RequestRecordPermission` should be carefully reviewed and monitored. If the `CAPTURE_AUDIO_OUTPUT` permission is found in a third-party Android application, the application should be heavily scrutinized. \\n+\\n+ \\n+\\n+In both Android (6.0 and up) and iOS, users can review which applications have the permission to access the microphone through the device settings screen and revoke permissions as necessary. \"}, \"root['x_mitre_version']\": {\"new_value\": \"3.0\", \"old_value\": \"2.0\"}}, \"iterable_item_added\": {\"root['external_references'][2]\": {\"source_name\": \"Requesting Auth-Media Capture\", \"description\": \"Apple Developers. (n.d.). Requesting Authorization for Media Capture on iOS. Retrieved April 1, 2022.\", \"url\": \"https://developer.apple.com/documentation/avfoundation/cameras_and_media_capture/requesting_authorization_for_media_capture_on_ios\"}, \"root['external_references'][3]\": {\"source_name\": \"Android Permissions\", \"description\": \"Google. (2021, August 11). Manifest.permission. Retrieved September 22, 2021.\", \"url\": \"https://developer.android.com/reference/android/Manifest.permission\"}, \"root['external_references'][4]\": {\"source_name\": \"Android Privacy Indicators\", \"description\": \"Google. (n.d.). Privacy Indicators. Retrieved April 20, 2022.\", \"url\": \"https://source.android.com/devices/tech/config/privacy-indicators\"}, \"root['external_references'][5]\": {\"source_name\": \"iOS Mic Spyware\", \"description\": \"ZecOps Research Team. (2021, November 4). How iOS Malware Can Spy on Users Silently. Retrieved April 1, 2022.\", \"url\": \"https://blog.zecops.com/research/how-ios-malware-can-spy-on-users-silently/\"}, \"root['external_references'][6]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-19.html\", \"external_id\": \"APP-19\"}}}",
                    "previous_version": "2.0",
                    "version_change": "2.0 \u2192 3.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to705__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to705__0\"><a href=\"#difflib_chg_to705__top\">t</a></td><td class=\"diff_header\" id=\"from705_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;capture&nbsp;audio&nbsp;to&nbsp;collect&nbsp;information&nbsp;on&nbsp;a&nbsp;us</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to705__top\">t</a></td><td class=\"diff_header\" id=\"to705_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;capture&nbsp;audio&nbsp;to&nbsp;collect&nbsp;information&nbsp;by&nbsp;leve</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">er&nbsp;of&nbsp;a&nbsp;mobile&nbsp;device&nbsp;using&nbsp;standard&nbsp;operating&nbsp;system&nbsp;APIs.&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">raging&nbsp;standard&nbsp;operating&nbsp;system&nbsp;APIs&nbsp;of&nbsp;a&nbsp;mobile&nbsp;device.&nbsp;Ex</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;target&nbsp;audio&nbsp;information&nbsp;such&nbsp;as&nbsp;user&nbsp;conver</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">amples&nbsp;of&nbsp;audio&nbsp;information&nbsp;adversaries&nbsp;may&nbsp;target&nbsp;include&nbsp;u</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">sations,&nbsp;surroundings,&nbsp;phone&nbsp;calls,&nbsp;or&nbsp;other&nbsp;sensitive&nbsp;infor</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ser&nbsp;conversations,&nbsp;surroundings,&nbsp;phone&nbsp;calls,&nbsp;or&nbsp;other&nbsp;sensi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">mation.&nbsp;&nbsp;Android&nbsp;and&nbsp;iOS,&nbsp;by&nbsp;default,&nbsp;requires&nbsp;that&nbsp;an&nbsp;appli</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tive&nbsp;information.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Android&nbsp;and&nbsp;iOS,&nbsp;by&nbsp;default,&nbsp;require&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">cation&nbsp;request&nbsp;access&nbsp;to&nbsp;microphone&nbsp;devices&nbsp;from&nbsp;the&nbsp;user.&nbsp;I</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">that&nbsp;applications&nbsp;request&nbsp;device&nbsp;microphone&nbsp;access&nbsp;from&nbsp;the&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">n&nbsp;Android,&nbsp;applications&nbsp;must&nbsp;hold&nbsp;the&nbsp;&lt;code&gt;android.permissi</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">user.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Android&nbsp;devices,&nbsp;applications&nbsp;must&nbsp;hold&nbsp;the&nbsp;`</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">on.RECORD_AUDIO&lt;/code&gt;&nbsp;permission&nbsp;to&nbsp;access&nbsp;the&nbsp;microphone&nbsp;a</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">RECORD_AUDIO`&nbsp;permission&nbsp;to&nbsp;access&nbsp;the&nbsp;microphone&nbsp;or&nbsp;the&nbsp;`CA</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">nd&nbsp;the&nbsp;&lt;code&gt;android.permission.CAPTURE_AUDIO_OUTPUT&lt;/code&gt;&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">PTURE_AUDIO_OUTPUT`&nbsp;permission&nbsp;to&nbsp;access&nbsp;audio&nbsp;output.&nbsp;Becau</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">permission&nbsp;to&nbsp;access&nbsp;audio&nbsp;output&nbsp;such&nbsp;as&nbsp;speakers.&nbsp;Android&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">se&nbsp;Android&nbsp;does&nbsp;not&nbsp;allow&nbsp;third-party&nbsp;applications&nbsp;to&nbsp;hold&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">does&nbsp;not&nbsp;allow&nbsp;third-party&nbsp;applications&nbsp;to&nbsp;hold&nbsp;&lt;code&gt;androi</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">he&nbsp;`CAPTURE_AUDIO_OUTPUT`&nbsp;permission&nbsp;by&nbsp;default,&nbsp;only&nbsp;privil</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">d.permission.CAPTURE_AUDIO_OUTPUT&lt;/code&gt;,&nbsp;so&nbsp;audio&nbsp;output&nbsp;ca</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">eged&nbsp;applications,&nbsp;such&nbsp;as&nbsp;those&nbsp;distributed&nbsp;by&nbsp;Google&nbsp;or&nbsp;th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">n&nbsp;only&nbsp;be&nbsp;obtained&nbsp;by&nbsp;privileged&nbsp;applications&nbsp;(distributed&nbsp;b</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;device&nbsp;vendor,&nbsp;can&nbsp;access&nbsp;audio&nbsp;output.(Citation:&nbsp;Android&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">y&nbsp;Google&nbsp;or&nbsp;the&nbsp;device&nbsp;vendor)&nbsp;or&nbsp;after&nbsp;a&nbsp;successful&nbsp;privile</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">Permissions)&nbsp;However,&nbsp;adversaries&nbsp;may&nbsp;be&nbsp;able&nbsp;to&nbsp;gain&nbsp;this&nbsp;a</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ge&nbsp;escalation&nbsp;attack.&nbsp;In&nbsp;iOS,&nbsp;applications&nbsp;must&nbsp;include&nbsp;the&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ccess&nbsp;after&nbsp;successfully&nbsp;elevating&nbsp;their&nbsp;privileges.&nbsp;With&nbsp;th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">`NSMicrophoneUsageDescription`&nbsp;key&nbsp;in&nbsp;their&nbsp;`Info.plist`&nbsp;fil</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;`CAPTURE_AUDIO_OUTPUT`&nbsp;permission,&nbsp;adversaries&nbsp;may&nbsp;pass&nbsp;th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">e.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;`MediaRecorder.AudioSource.VOICE_CALL`&nbsp;constant&nbsp;to&nbsp;`MediaR</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ecorder.setAudioOutput`,&nbsp;allowing&nbsp;capture&nbsp;of&nbsp;both&nbsp;voice&nbsp;call</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;uplink&nbsp;and&nbsp;downlink.(Citation:&nbsp;Manifest.permission)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;iOS&nbsp;devices,&nbsp;applications&nbsp;must&nbsp;include&nbsp;the&nbsp;`NSMicrophoneUsa</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">geDescription`&nbsp;key&nbsp;in&nbsp;their&nbsp;`Info.plist`&nbsp;file&nbsp;to&nbsp;access&nbsp;the&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">microphone.(Citation:&nbsp;Requesting&nbsp;Auth-Media&nbsp;Capture)</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1006: Use Recent OS Version"
                        ],
                        "new": [
                            "M1011: User Guidance"
                        ],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--46d818a5-67fa-4585-a7fc-ecf15376c8d5",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:31.294000+00:00",
                    "modified": "2022-04-11 14:33:11.096000+00:00",
                    "name": "Boot or Logon Initialization Scripts",
                    "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts are part of the underlying operating system and are not accessible to the user unless the device has been rooted or jailbroken. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1398",
                            "external_id": "T1398"
                        },
                        {
                            "source_name": "Android-VerifiedBoot",
                            "description": "Android. (n.d.). Verified Boot. Retrieved December 21, 2016.",
                            "url": "https://source.android.com/security/verifiedboot/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-26.html",
                            "external_id": "APP-26"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html",
                            "external_id": "APP-27"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, Verified Boot can detect unauthorized modifications to the system partition.(Citation: Android-VerifiedBoot) Android's SafetyNet API provides remote attestation capabilities, which could potentially be used to identify and respond to compromise devices. Samsung Knox provides a similar remote attestation capability on supported Samsung devices. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Android. (n.d.). Verified Boot. Retrieved December 21, 2016.\", \"root['external_references'][3]['external_id']\": \"APP-27\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1001\", \"root['external_references'][1]['external_id']\": \"APP-26\", \"root['external_references'][3]['description']\": \"Samsung. (n.d.). What is a Knox Warranty Bit and how is it triggered?. Retrieved December 21, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-11 14:33:11.096000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['name']\": {\"new_value\": \"Boot or Logon Initialization Scripts\", \"old_value\": \"Modify OS Kernel or Boot Partition\"}, \"root['description']\": {\"new_value\": \"Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts are part of the underlying operating system and are not accessible to the user unless the device has been rooted or jailbroken. \", \"old_value\": \"If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit as described under Detection), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.\\n\\nMany Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.\\n\\nIf the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code.\", \"diff\": \"--- \\n+++ \\n@@ -1,5 +1 @@\\n-If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device kernel or other boot partition components, where the code may evade detection, may persist after device resets, and may not be removable by the device user. In some cases (e.g., the Samsung Knox warranty bit as described under Detection), the attack may be detected but could result in the device being placed in a state that no longer allows certain functionality.\\n-\\n-Many Android devices provide the ability to unlock the bootloader for development purposes, but doing so introduces the potential ability for others to maliciously update the kernel or other boot partition code.\\n-\\n-If the bootloader is not unlocked, it may still be possible to exploit device vulnerabilities to update the code.\\n+Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence. Initialization scripts are part of the underlying operating system and are not accessible to the user unless the device has been rooted or jailbroken. \"}, \"root['kill_chain_phases'][0]['phase_name']\": {\"new_value\": \"persistence\", \"old_value\": \"defense-evasion\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Android-VerifiedBoot\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://source.android.com/security/verifiedboot/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-26.html\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-26.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html\"}, \"root['external_references'][2]['external_id']\": {\"new_value\": \"APP-26\", \"old_value\": \"APP-27\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Samsung-KnoxWarrantyBit\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html\", \"old_value\": \"https://www2.samsungknox.com/en/faq/what-knox-warranty-bit-and-how-it-triggered\"}, \"root['x_mitre_detection']\": {\"new_value\": \"On Android, Verified Boot can detect unauthorized modifications to the system partition.(Citation: Android-VerifiedBoot) Android's SafetyNet API provides remote attestation capabilities, which could potentially be used to identify and respond to compromise devices. Samsung Knox provides a similar remote attestation capability on supported Samsung devices. \", \"old_value\": \"The Android SafetyNet API's remote attestation capability could potentially be used to identify and respond to compromised devices. Samsung KNOX also provides a remote attestation capability on supported Samsung Android devices.\\n\\nSamsung KNOX devices include a non-reversible Knox warranty bit fuse that is triggered \\\"if a non-Knox kernel has been loaded on the device\\\" (Citation: Samsung-KnoxWarrantyBit). If triggered, enterprise Knox container services will no longer be available on the device.\\n\\nAs described in the iOS Security Guide (Citation: Apple-iOSSecurityGuide), iOS devices will fail to boot or fail to allow device activation if unauthorized modifications are detected.\\n\\nMany enterprise applications perform their own checks to detect and respond to compromised devices. These checks are not foolproof but can detect common signs of compromise.\", \"diff\": \"--- \\n+++ \\n@@ -1,7 +1 @@\\n-The Android SafetyNet API's remote attestation capability could potentially be used to identify and respond to compromised devices. Samsung KNOX also provides a remote attestation capability on supported Samsung Android devices.\\n-\\n-Samsung KNOX devices include a non-reversible Knox warranty bit fuse that is triggered \\\"if a non-Knox kernel has been loaded on the device\\\" (Citation: Samsung-KnoxWarrantyBit). If triggered, enterprise Knox container services will no longer be available on the device.\\n-\\n-As described in the iOS Security Guide (Citation: Apple-iOSSecurityGuide), iOS devices will fail to boot or fail to allow device activation if unauthorized modifications are detected.\\n-\\n-Many enterprise applications perform their own checks to detect and respond to compromised devices. These checks are not foolproof but can detect common signs of compromise.\\n+On Android, Verified Boot can detect unauthorized modifications to the system partition.(Citation: Android-VerifiedBoot) Android's SafetyNet API provides remote attestation capabilities, which could potentially be used to identify and respond to compromise devices. Samsung Knox provides a similar remote attestation capability on supported Samsung devices. \"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}, \"iterable_item_removed\": {\"root['kill_chain_phases'][1]\": {\"kill_chain_name\": \"mitre-mobile-attack\", \"phase_name\": \"persistence\"}, \"root['external_references'][4]\": {\"source_name\": \"Apple-iOSSecurityGuide\", \"description\": \"Apple. (2016, May). iOS Security. Retrieved December 21, 2016.\", \"url\": \"https://www.apple.com/business/docs/iOS_Security_Guide.pdf\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to720__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to720__0\"><a href=\"#difflib_chg_to720__top\">t</a></td><td class=\"diff_header\" id=\"from720_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">If&nbsp;an&nbsp;adversary&nbsp;can&nbsp;escalate&nbsp;privileges,&nbsp;he&nbsp;or&nbsp;she&nbsp;may&nbsp;be&nbsp;ab</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to720__top\">t</a></td><td class=\"diff_header\" id=\"to720_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;use&nbsp;scripts&nbsp;automatically&nbsp;executed&nbsp;at&nbsp;boot&nbsp;o</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">le&nbsp;to&nbsp;use&nbsp;those&nbsp;privileges&nbsp;to&nbsp;place&nbsp;malicious&nbsp;code&nbsp;in&nbsp;the&nbsp;de</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">r&nbsp;logon&nbsp;initialization&nbsp;to&nbsp;establish&nbsp;persistence.&nbsp;Initializat</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">vice&nbsp;kernel&nbsp;or&nbsp;other&nbsp;boot&nbsp;partition&nbsp;components,&nbsp;where&nbsp;the&nbsp;co</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ion&nbsp;scripts&nbsp;are&nbsp;part&nbsp;of&nbsp;the&nbsp;underlying&nbsp;operating&nbsp;system&nbsp;and&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">de&nbsp;may&nbsp;evade&nbsp;detection,&nbsp;may&nbsp;persist&nbsp;after&nbsp;device&nbsp;resets,&nbsp;and</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">are&nbsp;not&nbsp;accessible&nbsp;to&nbsp;the&nbsp;user&nbsp;unless&nbsp;the&nbsp;device&nbsp;has&nbsp;been&nbsp;ro</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;may&nbsp;not&nbsp;be&nbsp;removable&nbsp;by&nbsp;the&nbsp;device&nbsp;user.&nbsp;In&nbsp;some&nbsp;cases&nbsp;(e.g</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">oted&nbsp;or&nbsp;jailbroken.&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">.,&nbsp;the&nbsp;Samsung&nbsp;Knox&nbsp;warranty&nbsp;bit&nbsp;as&nbsp;described&nbsp;under&nbsp;Detectio</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">n),&nbsp;the&nbsp;attack&nbsp;may&nbsp;be&nbsp;detected&nbsp;but&nbsp;could&nbsp;result&nbsp;in&nbsp;the&nbsp;devic</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">e&nbsp;being&nbsp;placed&nbsp;in&nbsp;a&nbsp;state&nbsp;that&nbsp;no&nbsp;longer&nbsp;allows&nbsp;certain&nbsp;func</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">tionality.&nbsp;&nbsp;Many&nbsp;Android&nbsp;devices&nbsp;provide&nbsp;the&nbsp;ability&nbsp;to&nbsp;unlo</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ck&nbsp;the&nbsp;bootloader&nbsp;for&nbsp;development&nbsp;purposes,&nbsp;but&nbsp;doing&nbsp;so&nbsp;int</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">roduces&nbsp;the&nbsp;potential&nbsp;ability&nbsp;for&nbsp;others&nbsp;to&nbsp;maliciously&nbsp;upda</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">te&nbsp;the&nbsp;kernel&nbsp;or&nbsp;other&nbsp;boot&nbsp;partition&nbsp;code.&nbsp;&nbsp;If&nbsp;the&nbsp;bootload</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">er&nbsp;is&nbsp;not&nbsp;unlocked,&nbsp;it&nbsp;may&nbsp;still&nbsp;be&nbsp;possible&nbsp;to&nbsp;exploit&nbsp;devi</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ce&nbsp;vulnerabilities&nbsp;to&nbsp;update&nbsp;the&nbsp;code.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1001: Security Updates",
                            "M1002: Attestation",
                            "M1003: Lock Bootloader"
                        ],
                        "new": [
                            "M1004: System Partition Integrity"
                        ],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c4b96c0b-cb58-497a-a1c2-bb447d79d692",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:19.996000+00:00",
                    "modified": "2022-04-19 19:29:45.323000+00:00",
                    "name": "Clipboard Data",
                    "description": "Adversaries may abuse clipboard manager APIs to obtain sensitive information copied to the device clipboard. For example, passwords being copied and pasted from a password manager application could be captured by a malicious application installed on the device.(Citation: Fahl-Clipboard) \n\n \n\nOn Android, applications can use the `ClipboardManager.OnPrimaryClipChangedListener()` API to register as a listener and monitor the clipboard for changes. However, starting in Android 10, this can only be used if the application is in the foreground, or is set as the device\u2019s default input method editor (IME).(Citation: Github Capture Clipboard 2019)(Citation: Android 10 Privacy Changes) \n\n \n\nOn iOS, this can be accomplished by accessing the `UIPasteboard.general.string` field. However, starting in iOS 14, upon accessing the clipboard, the user will be shown a system notification if the accessed text originated in a different application. For example, if the user copies the text of an iMessage from the Messages application, the notification will read \u201capplication_name has pasted from Messages\u201d when the text was pasted in a different application.(Citation: UIPPasteboard)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1414",
                            "external_id": "T1414"
                        },
                        {
                            "source_name": "Android 10 Privacy Changes",
                            "description": "Android Developers. (n.d.). Privacy changes in Android 10. Retrieved September 11, 2019.",
                            "url": "https://developer.android.com/about/versions/10/privacy/changes#clipboard-data"
                        },
                        {
                            "source_name": "UIPPasteboard",
                            "description": "Apple Developer. (n.d.). UIPasteboard. Retrieved April 1, 2022.",
                            "url": "https://developer.apple.com/documentation/uikit/uipasteboard"
                        },
                        {
                            "source_name": "Fahl-Clipboard",
                            "description": "Fahl, S, et al.. (2013). Hey, You, Get Off of My Clipboard. Retrieved August 27, 2019.",
                            "url": "http://saschafahl.de/static/paper/pwmanagers2013.pdf"
                        },
                        {
                            "source_name": "Github Capture Clipboard 2019",
                            "description": "Pearce, G. (, January). Retrieved August 8, 2019.",
                            "url": "https://github.com/grepx/android-clipboard-security"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-35.html",
                            "external_id": "APP-35"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could detect usage of standard clipboard APIs.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "3.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Android Developers. (n.d.). Privacy changes in Android 10. Retrieved September 11, 2019.\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1017\", \"root['external_references'][1]['external_id']\": \"APP-35\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-19 19:29:45.323000+00:00\", \"old_value\": \"2019-09-13 20:46:26.223000+00:00\"}, \"root['name']\": {\"new_value\": \"Clipboard Data\", \"old_value\": \"Capture Clipboard Data\"}, \"root['description']\": {\"new_value\": \"Adversaries may abuse clipboard manager APIs to obtain sensitive information copied to the device clipboard. For example, passwords being copied and pasted from a password manager application could be captured by a malicious application installed on the device.(Citation: Fahl-Clipboard) \\n\\n \\n\\nOn Android, applications can use the `ClipboardManager.OnPrimaryClipChangedListener()` API to register as a listener and monitor the clipboard for changes. However, starting in Android 10, this can only be used if the application is in the foreground, or is set as the device\\u2019s default input method editor (IME).(Citation: Github Capture Clipboard 2019)(Citation: Android 10 Privacy Changes) \\n\\n \\n\\nOn iOS, this can be accomplished by accessing the `UIPasteboard.general.string` field. However, starting in iOS 14, upon accessing the clipboard, the user will be shown a system notification if the accessed text originated in a different application. For example, if the user copies the text of an iMessage from the Messages application, the notification will read \\u201capplication_name has pasted from Messages\\u201d when the text was pasted in a different application.(Citation: UIPPasteboard)\", \"old_value\": \"Adversaries may abuse Clipboard Manager APIs to obtain sensitive information copied to the global clipboard. For example, passwords being copy-and-pasted from a password manager app could be captured by another application installed on the device.(Citation: Fahl-Clipboard)\\n\\nOn Android, <code>ClipboardManager.OnPrimaryClipChangedListener</code> can be used by applications to register as a listener and monitor the clipboard for changes.(Citation: Github Capture Clipboard 2019)\\n\\nAndroid 10 mitigates this technique by preventing applications from accessing clipboard data unless the application is on the foreground or is set as the device\\u2019s default input method editor (IME).(Citation: Android 10 Privacy Changes)\", \"diff\": \"--- \\n+++ \\n@@ -1,5 +1,9 @@\\n-Adversaries may abuse Clipboard Manager APIs to obtain sensitive information copied to the global clipboard. For example, passwords being copy-and-pasted from a password manager app could be captured by another application installed on the device.(Citation: Fahl-Clipboard)\\n+Adversaries may abuse clipboard manager APIs to obtain sensitive information copied to the device clipboard. For example, passwords being copied and pasted from a password manager application could be captured by a malicious application installed on the device.(Citation: Fahl-Clipboard) \\n \\n-On Android, <code>ClipboardManager.OnPrimaryClipChangedListener</code> can be used by applications to register as a listener and monitor the clipboard for changes.(Citation: Github Capture Clipboard 2019)\\n+ \\n \\n-Android 10 mitigates this technique by preventing applications from accessing clipboard data unless the application is on the foreground or is set as the device\\u2019s default input method editor (IME).(Citation: Android 10 Privacy Changes)\\n+On Android, applications can use the `ClipboardManager.OnPrimaryClipChangedListener()` API to register as a listener and monitor the clipboard for changes. However, starting in Android 10, this can only be used if the application is in the foreground, or is set as the device\\u2019s default input method editor (IME).(Citation: Github Capture Clipboard 2019)(Citation: Android 10 Privacy Changes) \\n+\\n+ \\n+\\n+On iOS, this can be accomplished by accessing the `UIPasteboard.general.string` field. However, starting in iOS 14, upon accessing the clipboard, the user will be shown a system notification if the accessed text originated in a different application. For example, if the user copies the text of an iMessage from the Messages application, the notification will read \\u201capplication_name has pasted from Messages\\u201d when the text was pasted in a different application.(Citation: UIPPasteboard)\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Android 10 Privacy Changes\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://developer.android.com/about/versions/10/privacy/changes#clipboard-data\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-35.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"UIPPasteboard\", \"old_value\": \"Fahl-Clipboard\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Apple Developer. (n.d.). UIPasteboard. Retrieved April 1, 2022.\", \"old_value\": \"Fahl, S, et al.. (2013). Hey, You, Get Off of My Clipboard. Retrieved August 27, 2019.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://developer.apple.com/documentation/uikit/uipasteboard\", \"old_value\": \"http://saschafahl.de/static/paper/pwmanagers2013.pdf\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Fahl-Clipboard\", \"old_value\": \"Github Capture Clipboard 2019\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Fahl, S, et al.. (2013). Hey, You, Get Off of My Clipboard. Retrieved August 27, 2019.\", \"old_value\": \"Pearce, G. (, January). Retrieved August 8, 2019.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"http://saschafahl.de/static/paper/pwmanagers2013.pdf\", \"old_value\": \"https://github.com/grepx/android-clipboard-security\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Github Capture Clipboard 2019\", \"old_value\": \"Android 10 Privacy Changes\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"Pearce, G. (, January). Retrieved August 8, 2019.\", \"old_value\": \"Android Developers. (n.d.). Privacy changes in Android 10. Retrieved September 11, 2019.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://github.com/grepx/android-clipboard-security\", \"old_value\": \"https://developer.android.com/about/versions/10/privacy/changes#clipboard-data\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Application vetting services could detect usage of standard clipboard APIs.\", \"old_value\": \"Capturing clipboard content can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.\"}, \"root['x_mitre_version']\": {\"new_value\": \"3.0\", \"old_value\": \"2.0\"}}, \"iterable_item_added\": {\"root['external_references'][5]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-35.html\", \"external_id\": \"APP-35\"}}}",
                    "previous_version": "2.0",
                    "version_change": "2.0 \u2192 3.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to709__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to709__0\"><a href=\"#difflib_chg_to709__top\">t</a></td><td class=\"diff_header\" id=\"from709_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;abuse&nbsp;Clipboard&nbsp;Manager&nbsp;APIs&nbsp;to&nbsp;obtain&nbsp;sensi</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to709__top\">t</a></td><td class=\"diff_header\" id=\"to709_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;abuse&nbsp;clipboard&nbsp;manager&nbsp;APIs&nbsp;to&nbsp;obtain&nbsp;sensi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">tive&nbsp;information&nbsp;copied&nbsp;to&nbsp;the&nbsp;global&nbsp;clipboard.&nbsp;For&nbsp;example</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tive&nbsp;information&nbsp;copied&nbsp;to&nbsp;the&nbsp;device&nbsp;clipboard.&nbsp;For&nbsp;example</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">,&nbsp;passwords&nbsp;being&nbsp;copy-and-pasted&nbsp;from&nbsp;a&nbsp;password&nbsp;manager&nbsp;ap</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">,&nbsp;passwords&nbsp;being&nbsp;copied&nbsp;and&nbsp;pasted&nbsp;from&nbsp;a&nbsp;password&nbsp;manager&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">p&nbsp;could&nbsp;be&nbsp;captured&nbsp;by&nbsp;another&nbsp;application&nbsp;installed&nbsp;on&nbsp;the&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">application&nbsp;could&nbsp;be&nbsp;captured&nbsp;by&nbsp;a&nbsp;malicious&nbsp;application&nbsp;ins</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">device.(Citation:&nbsp;Fahl-Clipboard)&nbsp;&nbsp;On&nbsp;Android,&nbsp;&lt;code&gt;Clipboa</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">talled&nbsp;on&nbsp;the&nbsp;device.(Citation:&nbsp;Fahl-Clipboard)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Andr</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">rdManager.OnPrimaryClipChangedListener&lt;/code&gt;&nbsp;can&nbsp;be&nbsp;used&nbsp;by</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">oid,&nbsp;applications&nbsp;can&nbsp;use&nbsp;the&nbsp;`ClipboardManager.OnPrimaryCli</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;applications&nbsp;to&nbsp;register&nbsp;as&nbsp;a&nbsp;listener&nbsp;and&nbsp;monitor&nbsp;the&nbsp;clip</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">pChangedListener()`&nbsp;API&nbsp;to&nbsp;register&nbsp;as&nbsp;a&nbsp;listener&nbsp;and&nbsp;monito</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">board&nbsp;for&nbsp;changes.(Citation:&nbsp;Github&nbsp;Capture&nbsp;Clipboard&nbsp;2019)&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">r&nbsp;the&nbsp;clipboard&nbsp;for&nbsp;changes.&nbsp;However,&nbsp;starting&nbsp;in&nbsp;Android&nbsp;10</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;Android&nbsp;10&nbsp;mitigates&nbsp;this&nbsp;technique&nbsp;by&nbsp;preventing&nbsp;applicati</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">,&nbsp;this&nbsp;can&nbsp;only&nbsp;be&nbsp;used&nbsp;if&nbsp;the&nbsp;application&nbsp;is&nbsp;in&nbsp;the&nbsp;foregro</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ons&nbsp;from&nbsp;accessing&nbsp;clipboard&nbsp;data&nbsp;unless&nbsp;the&nbsp;application&nbsp;is&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">und,&nbsp;or&nbsp;is&nbsp;set&nbsp;as&nbsp;the&nbsp;device\u2019s&nbsp;default&nbsp;input&nbsp;method&nbsp;editor&nbsp;(</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">on&nbsp;the&nbsp;foreground&nbsp;or&nbsp;is&nbsp;set&nbsp;as&nbsp;the&nbsp;device\u2019s&nbsp;default&nbsp;input&nbsp;me</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">IME).(Citation:&nbsp;Github&nbsp;Capture&nbsp;Clipboard&nbsp;2019)(Citation:&nbsp;And</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">thod&nbsp;editor&nbsp;(IME).(Citation:&nbsp;Android&nbsp;10&nbsp;Privacy&nbsp;Changes)</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">roid&nbsp;10&nbsp;Privacy&nbsp;Changes)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;iOS,&nbsp;this&nbsp;can&nbsp;be&nbsp;accomplish</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ed&nbsp;by&nbsp;accessing&nbsp;the&nbsp;`UIPasteboard.general.string`&nbsp;field.&nbsp;How</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ever,&nbsp;starting&nbsp;in&nbsp;iOS&nbsp;14,&nbsp;upon&nbsp;accessing&nbsp;the&nbsp;clipboard,&nbsp;the&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">user&nbsp;will&nbsp;be&nbsp;shown&nbsp;a&nbsp;system&nbsp;notification&nbsp;if&nbsp;the&nbsp;accessed&nbsp;tex</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">t&nbsp;originated&nbsp;in&nbsp;a&nbsp;different&nbsp;application.&nbsp;For&nbsp;example,&nbsp;if&nbsp;the</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;user&nbsp;copies&nbsp;the&nbsp;text&nbsp;of&nbsp;an&nbsp;iMessage&nbsp;from&nbsp;the&nbsp;Messages&nbsp;appli</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cation,&nbsp;the&nbsp;notification&nbsp;will&nbsp;read&nbsp;\u201capplication_name&nbsp;has&nbsp;pas</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ted&nbsp;from&nbsp;Messages\u201d&nbsp;when&nbsp;the&nbsp;text&nbsp;was&nbsp;pasted&nbsp;in&nbsp;a&nbsp;different&nbsp;a</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">pplication.(Citation:&nbsp;UIPPasteboard)</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1006: Use Recent OS Version"
                        ],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fd339382-bfec-4bf0-8d47-1caedc9e7e57",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:06.822000+00:00",
                    "modified": "2022-04-19 15:32:30.837000+00:00",
                    "name": "Drive-By Compromise",
                    "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring an [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\n\nMultiple ways of delivering exploit code to a browser exist, including:\n\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\n* Malicious ads are paid for and served through legitimate ad providers.\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Lookout-StealthMango)\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1456",
                            "external_id": "T1456"
                        },
                        {
                            "source_name": "Lookout-StealthMango",
                            "description": "Lookout. (n.d.). Stealth Mango & Tangelo. Retrieved September 27, 2018.",
                            "url": "https://info.lookout.com/rs/051-ESQ-475/images/lookout-stealth-mango-srr-us.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-22.html",
                            "external_id": "CEL-22"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can often alert the user if their device is vulnerable to known exploits.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Mobile security products can often alert the user if their device is vulnerable to known exploits.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Lookout. (n.d.). Stealth Mango & Tangelo. Retrieved September 27, 2018.\", \"root['external_references'][2]['external_id']\": \"CEL-22\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1059\", \"root['external_references'][1]['external_id']\": \"CEL-22\", \"root['external_references'][2]['description']\": \"Zimperium. (2015, January 27). Experts Found a Unicorn in the Heart of Android. Retrieved December 23, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-19 15:32:30.837000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['name']\": {\"new_value\": \"Drive-By Compromise\", \"old_value\": \"Drive-by Compromise\"}, \"root['description']\": {\"new_value\": \"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring an [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\\n\\nMultiple ways of delivering exploit code to a browser exist, including:\\n\\n* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\\n* Malicious ads are paid for and served through legitimate ad providers.\\n* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\\n\\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Lookout-StealthMango)\\n\\nTypical drive-by compromise process:\\n\\n1. A user visits a website that is used to host the adversary controlled content.\\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \\n    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\\n4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\\n    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\", \"old_value\": \"As described by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), a drive-by compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is targeted for exploitation. For example, a website may contain malicious media content intended to exploit vulnerabilities in media parsers as demonstrated by the Android Stagefright vulnerability  (Citation: Zimperium-Stagefright).\\n\\n(This technique was formerly known as Malicious Web Content. It has been renamed to better align with ATT&CK for Enterprise.)\", \"diff\": \"--- \\n+++ \\n@@ -1,3 +1,18 @@\\n-As described by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), a drive-by compromise is when an adversary gains access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is targeted for exploitation. For example, a website may contain malicious media content intended to exploit vulnerabilities in media parsers as demonstrated by the Android Stagefright vulnerability  (Citation: Zimperium-Stagefright).\\n+Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. With this technique, the user's web browser is typically targeted for exploitation, but adversaries may also use compromised websites for non-exploitation behavior such as acquiring an [Application Access Token](https://attack.mitre.org/techniques/T1550/001).\\n \\n-(This technique was formerly known as Malicious Web Content. It has been renamed to better align with ATT&CK for Enterprise.)\\n+Multiple ways of delivering exploit code to a browser exist, including:\\n+\\n+* A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.\\n+* Malicious ads are paid for and served through legitimate ad providers.\\n+* Built-in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client (e.g. forum posts, comments, and other user controllable web content).\\n+\\n+Often the website used by an adversary is one visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted attack is referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Lookout-StealthMango)\\n+\\n+Typical drive-by compromise process:\\n+\\n+1. A user visits a website that is used to host the adversary controlled content.\\n+2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. \\n+    * The user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes.\\n+3. Upon finding a vulnerable version, exploit code is delivered to the browser.\\n+4. If exploitation is successful, then it will give the adversary code execution on the user's system unless other protections are in place.\\n+    * In some cases a second visit to the website after the initial scan is required before exploit code is delivered.\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Lookout-StealthMango\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://info.lookout.com/rs/051-ESQ-475/images/lookout-stealth-mango-srr-us.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-22.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Zimperium-Stagefright\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-22.html\", \"old_value\": \"https://blog.zimperium.com/experts-found-a-unicorn-in-the-heart-of-android/\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to696__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to696__0\"><a href=\"#difflib_chg_to696__top\">t</a></td><td class=\"diff_header\" id=\"from696_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">As&nbsp;described&nbsp;by&nbsp;[Drive-by&nbsp;Compromise](https://attack.mitre.o</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to696__top\">t</a></td><td class=\"diff_header\" id=\"to696_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;gain&nbsp;access&nbsp;to&nbsp;a&nbsp;system&nbsp;through&nbsp;a&nbsp;user&nbsp;visit</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">rg/techniques/T1189),&nbsp;a&nbsp;drive-by&nbsp;compromise&nbsp;is&nbsp;when&nbsp;an&nbsp;adver</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ing&nbsp;a&nbsp;website&nbsp;over&nbsp;the&nbsp;normal&nbsp;course&nbsp;of&nbsp;browsing.&nbsp;With&nbsp;this&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">sary&nbsp;gains&nbsp;access&nbsp;to&nbsp;a&nbsp;system&nbsp;through&nbsp;a&nbsp;user&nbsp;visiting&nbsp;a&nbsp;webs</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">technique,&nbsp;the&nbsp;user's&nbsp;web&nbsp;browser&nbsp;is&nbsp;typically&nbsp;targeted&nbsp;for&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ite&nbsp;over&nbsp;the&nbsp;normal&nbsp;course&nbsp;of&nbsp;browsing.&nbsp;With&nbsp;this&nbsp;technique,</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">exploitation,&nbsp;but&nbsp;adversaries&nbsp;may&nbsp;also&nbsp;use&nbsp;compromised&nbsp;websi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;the&nbsp;user's&nbsp;web&nbsp;browser&nbsp;is&nbsp;targeted&nbsp;for&nbsp;exploitation.&nbsp;For&nbsp;ex</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tes&nbsp;for&nbsp;non-exploitation&nbsp;behavior&nbsp;such&nbsp;as&nbsp;acquiring&nbsp;an&nbsp;[Appl</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ample,&nbsp;a&nbsp;website&nbsp;may&nbsp;contain&nbsp;malicious&nbsp;media&nbsp;content&nbsp;intende</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ication&nbsp;Access&nbsp;Token](https://attack.mitre.org/techniques/T1</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">d&nbsp;to&nbsp;exploit&nbsp;vulnerabilities&nbsp;in&nbsp;media&nbsp;parsers&nbsp;as&nbsp;demonstrate</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">550/001).&nbsp;&nbsp;Multiple&nbsp;ways&nbsp;of&nbsp;delivering&nbsp;exploit&nbsp;code&nbsp;to&nbsp;a&nbsp;bro</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">d&nbsp;by&nbsp;the&nbsp;Android&nbsp;Stagefright&nbsp;vulnerability&nbsp;&nbsp;(Citation:&nbsp;Zimpe</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">wser&nbsp;exist,&nbsp;including:&nbsp;&nbsp;*&nbsp;A&nbsp;legitimate&nbsp;website&nbsp;is&nbsp;compromise</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">rium-Stagefright).&nbsp;&nbsp;(This&nbsp;technique&nbsp;was&nbsp;formerly&nbsp;known&nbsp;as&nbsp;Ma</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">d&nbsp;where&nbsp;adversaries&nbsp;have&nbsp;injected&nbsp;some&nbsp;form&nbsp;of&nbsp;malicious&nbsp;cod</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">licious&nbsp;Web&nbsp;Content.&nbsp;It&nbsp;has&nbsp;been&nbsp;renamed&nbsp;to&nbsp;better&nbsp;align&nbsp;wit</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;such&nbsp;as&nbsp;JavaScript,&nbsp;iFrames,&nbsp;and&nbsp;cross-site&nbsp;scripting.&nbsp;*&nbsp;M</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">h&nbsp;ATT&amp;CK&nbsp;for&nbsp;Enterprise.)</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">alicious&nbsp;ads&nbsp;are&nbsp;paid&nbsp;for&nbsp;and&nbsp;served&nbsp;through&nbsp;legitimate&nbsp;ad&nbsp;p</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">roviders.&nbsp;*&nbsp;Built-in&nbsp;web&nbsp;application&nbsp;interfaces&nbsp;are&nbsp;leverage</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">d&nbsp;for&nbsp;the&nbsp;insertion&nbsp;of&nbsp;any&nbsp;other&nbsp;kind&nbsp;of&nbsp;object&nbsp;that&nbsp;can&nbsp;be&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">used&nbsp;to&nbsp;display&nbsp;web&nbsp;content&nbsp;or&nbsp;contain&nbsp;a&nbsp;script&nbsp;that&nbsp;execute</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s&nbsp;on&nbsp;the&nbsp;visiting&nbsp;client&nbsp;(e.g.&nbsp;forum&nbsp;posts,&nbsp;comments,&nbsp;and&nbsp;ot</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">her&nbsp;user&nbsp;controllable&nbsp;web&nbsp;content).&nbsp;&nbsp;Often&nbsp;the&nbsp;website&nbsp;used&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">by&nbsp;an&nbsp;adversary&nbsp;is&nbsp;one&nbsp;visited&nbsp;by&nbsp;a&nbsp;specific&nbsp;community,&nbsp;such</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;as&nbsp;government,&nbsp;a&nbsp;particular&nbsp;industry,&nbsp;or&nbsp;region,&nbsp;where&nbsp;the&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">goal&nbsp;is&nbsp;to&nbsp;compromise&nbsp;a&nbsp;specific&nbsp;user&nbsp;or&nbsp;set&nbsp;of&nbsp;users&nbsp;based&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">on&nbsp;a&nbsp;shared&nbsp;interest.&nbsp;This&nbsp;kind&nbsp;of&nbsp;targeted&nbsp;attack&nbsp;is&nbsp;referr</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ed&nbsp;to&nbsp;a&nbsp;strategic&nbsp;web&nbsp;compromise&nbsp;or&nbsp;watering&nbsp;hole&nbsp;attack.&nbsp;Th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ere&nbsp;are&nbsp;several&nbsp;known&nbsp;examples&nbsp;of&nbsp;this&nbsp;occurring.(Citation:&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">Lookout-StealthMango)&nbsp;&nbsp;Typical&nbsp;drive-by&nbsp;compromise&nbsp;process:&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;1.&nbsp;A&nbsp;user&nbsp;visits&nbsp;a&nbsp;website&nbsp;that&nbsp;is&nbsp;used&nbsp;to&nbsp;host&nbsp;the&nbsp;adversa</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ry&nbsp;controlled&nbsp;content.&nbsp;2.&nbsp;Scripts&nbsp;automatically&nbsp;execute,&nbsp;typ</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ically&nbsp;searching&nbsp;versions&nbsp;of&nbsp;the&nbsp;browser&nbsp;and&nbsp;plugins&nbsp;for&nbsp;a&nbsp;p</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">otentially&nbsp;vulnerable&nbsp;version.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;The&nbsp;user&nbsp;may&nbsp;be&nbsp;requir</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ed&nbsp;to&nbsp;assist&nbsp;in&nbsp;this&nbsp;process&nbsp;by&nbsp;enabling&nbsp;scripting&nbsp;or&nbsp;active</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;website&nbsp;components&nbsp;and&nbsp;ignoring&nbsp;warning&nbsp;dialog&nbsp;boxes.&nbsp;3.&nbsp;Up</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">on&nbsp;finding&nbsp;a&nbsp;vulnerable&nbsp;version,&nbsp;exploit&nbsp;code&nbsp;is&nbsp;delivered&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">o&nbsp;the&nbsp;browser.&nbsp;4.&nbsp;If&nbsp;exploitation&nbsp;is&nbsp;successful,&nbsp;then&nbsp;it&nbsp;wil</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">l&nbsp;give&nbsp;the&nbsp;adversary&nbsp;code&nbsp;execution&nbsp;on&nbsp;the&nbsp;user's&nbsp;system&nbsp;unl</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ess&nbsp;other&nbsp;protections&nbsp;are&nbsp;in&nbsp;place.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;In&nbsp;some&nbsp;cases&nbsp;a&nbsp;se</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cond&nbsp;visit&nbsp;to&nbsp;the&nbsp;website&nbsp;after&nbsp;the&nbsp;initial&nbsp;scan&nbsp;is&nbsp;required</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;before&nbsp;exploit&nbsp;code&nbsp;is&nbsp;delivered.</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1001: Security Updates"
                        ],
                        "new": [],
                        "dropped": [
                            "M1006: Use Recent OS Version"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ed2c05a1-4f81-4d97-9e1b-aff01c34ae84",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-10-01 14:18:47.762000+00:00",
                    "modified": "2022-04-05 20:11:35.852000+00:00",
                    "name": "Encrypted Channel",
                    "description": "Adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if necessary secret keys are encoded and/or generated within malware samples/configuration files.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1521",
                            "external_id": "T1521"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Since data encryption is a common practice in many legitimate applications and uses standard programming language-specific APIs, encrypting data for command and control communication is regarded as undetectable to the user.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-05 20:11:35.852000+00:00\", \"old_value\": \"2019-10-01 14:18:47.762000+00:00\"}, \"root['name']\": {\"new_value\": \"Encrypted Channel\", \"old_value\": \"Standard Cryptographic Protocol\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Since data encryption is a common practice in many legitimate applications and uses standard programming language-specific APIs, encrypting data for command and control communication is regarded as undetectable to the user.\", \"old_value\": \"Since data encryption is a common practice in many legitimate applications and uses standard programming language-specific APIs, encrypting data for command and control communication is undetectable to the user.\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--351c0927-2fc1-4a2c-ad84-cbbee7eb8172",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:29.405000+00:00",
                    "modified": "2022-03-30 15:51:08.258000+00:00",
                    "name": "Exploitation for Privilege Escalation",
                    "description": "Adversaries may exploit software vulnerabilities in order to to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in an application, service, within the operating system software, or kernel itself to execute adversary-controlled code. Security constructions, such as permission levels, will often hinder access to information and use of certain techniques. Adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions. \n\nWhen initially gaining access to a device, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and applications running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user- level permission to root permissions depending on the component that is vulnerable. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "privilege-escalation"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1404",
                            "external_id": "T1404"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-26.html",
                            "external_id": "APP-26"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can potentially utilize device APIs to determine if a device has been rooted or jailbroken.  Application vetting services could potentially determine if an application contains code designed to exploit vulnerabilities.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Mobile security products can potentially utilize device APIs to determine if a device has been rooted or jailbroken.  Application vetting services could potentially determine if an application contains code designed to exploit vulnerabilities.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1007\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 15:51:08.258000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['name']\": {\"new_value\": \"Exploitation for Privilege Escalation\", \"old_value\": \"Exploit OS Vulnerability\"}, \"root['description']\": {\"new_value\": \"Adversaries may exploit software vulnerabilities in order to to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in an application, service, within the operating system software, or kernel itself to execute adversary-controlled code. Security constructions, such as permission levels, will often hinder access to information and use of certain techniques. Adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions. \\n\\nWhen initially gaining access to a device, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and applications running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user- level permission to root permissions depending on the component that is vulnerable. \", \"old_value\": \"A malicious app can exploit unpatched vulnerabilities in the operating system to obtain escalated privileges.\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,3 @@\\n-A malicious app can exploit unpatched vulnerabilities in the operating system to obtain escalated privileges.\\n+Adversaries may exploit software vulnerabilities in order to to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in an application, service, within the operating system software, or kernel itself to execute adversary-controlled code. Security constructions, such as permission levels, will often hinder access to information and use of certain techniques. Adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions. \\n+\\n+When initially gaining access to a device, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and applications running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user- level permission to root permissions depending on the component that is vulnerable. \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to716__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to716__0\"><a href=\"#difflib_chg_to716__top\">t</a></td><td class=\"diff_header\" id=\"from716_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">A&nbsp;malicious&nbsp;app&nbsp;can&nbsp;exploit&nbsp;unpatched&nbsp;vulnerabilities&nbsp;in&nbsp;the</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to716__top\">t</a></td><td class=\"diff_header\" id=\"to716_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;exploit&nbsp;software&nbsp;vulnerabilities&nbsp;in&nbsp;order&nbsp;to</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;operating&nbsp;system&nbsp;to&nbsp;obtain&nbsp;escalated&nbsp;privileges.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;to&nbsp;elevate&nbsp;privileges.&nbsp;Exploitation&nbsp;of&nbsp;a&nbsp;software&nbsp;vulnerabi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">lity&nbsp;occurs&nbsp;when&nbsp;an&nbsp;adversary&nbsp;takes&nbsp;advantage&nbsp;of&nbsp;a&nbsp;programmi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ng&nbsp;error&nbsp;in&nbsp;an&nbsp;application,&nbsp;service,&nbsp;within&nbsp;the&nbsp;operating&nbsp;sy</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">stem&nbsp;software,&nbsp;or&nbsp;kernel&nbsp;itself&nbsp;to&nbsp;execute&nbsp;adversary-control</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">led&nbsp;code.&nbsp;Security&nbsp;constructions,&nbsp;such&nbsp;as&nbsp;permission&nbsp;levels,</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;will&nbsp;often&nbsp;hinder&nbsp;access&nbsp;to&nbsp;information&nbsp;and&nbsp;use&nbsp;of&nbsp;certain&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">techniques.&nbsp;Adversaries&nbsp;will&nbsp;likely&nbsp;need&nbsp;to&nbsp;perform&nbsp;privileg</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;escalation&nbsp;to&nbsp;include&nbsp;use&nbsp;of&nbsp;software&nbsp;exploitation&nbsp;to&nbsp;circ</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">umvent&nbsp;those&nbsp;restrictions.&nbsp;&nbsp;&nbsp;When&nbsp;initially&nbsp;gaining&nbsp;access&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">o&nbsp;a&nbsp;device,&nbsp;an&nbsp;adversary&nbsp;may&nbsp;be&nbsp;operating&nbsp;within&nbsp;a&nbsp;lower&nbsp;pri</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">vileged&nbsp;process&nbsp;which&nbsp;will&nbsp;prevent&nbsp;them&nbsp;from&nbsp;accessing&nbsp;certa</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">in&nbsp;resources&nbsp;on&nbsp;the&nbsp;system.&nbsp;Vulnerabilities&nbsp;may&nbsp;exist,&nbsp;usual</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ly&nbsp;in&nbsp;operating&nbsp;system&nbsp;components&nbsp;and&nbsp;applications&nbsp;running&nbsp;a</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">t&nbsp;higher&nbsp;permissions,&nbsp;that&nbsp;can&nbsp;be&nbsp;exploited&nbsp;to&nbsp;gain&nbsp;higher&nbsp;l</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">evels&nbsp;of&nbsp;access&nbsp;on&nbsp;the&nbsp;system.&nbsp;This&nbsp;could&nbsp;enable&nbsp;someone&nbsp;to&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">move&nbsp;from&nbsp;unprivileged&nbsp;or&nbsp;user-&nbsp;level&nbsp;permission&nbsp;to&nbsp;root&nbsp;per</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">missions&nbsp;depending&nbsp;on&nbsp;the&nbsp;component&nbsp;that&nbsp;is&nbsp;vulnerable.&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1001: Security Updates"
                        ],
                        "new": [
                            "M1002: Attestation",
                            "M1010: Deploy Compromised Device Detection Method"
                        ],
                        "dropped": [
                            "M1005: Application Vetting",
                            "M1006: Use Recent OS Version"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--648f8051-1a35-46d3-b1d8-3a3f5cf2cc8e",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-11-19 17:32:20.373000+00:00",
                    "modified": "2022-04-08 15:38:03.160000+00:00",
                    "name": "Foreground Persistence",
                    "description": "Adversaries may abuse Android's `startForeground()` API method to maintain continuous sensor access. Beginning in Android 9, idle applications running in the background no longer have access to device sensors, such as the camera, microphone, and gyroscope.(Citation: Android-SensorsOverview) Applications can retain sensor access by running in the foreground, using Android\u2019s `startForeground()` API method. This informs the system that the user is actively interacting with the application, and it should not be killed. The only requirement to start a foreground service is showing a persistent notification to the user.(Citation: Android-ForegroundServices)\n\nMalicious applications may abuse the `startForeground()` API method to continue running in the foreground, while presenting a notification to the user pretending to be a genuine application. This would allow unhindered access to the device\u2019s sensors, assuming permission has been previously granted.(Citation: BlackHat Sutter Android Foreground 2019)\n\nMalicious applications may also abuse the `startForeground()` API to inform the Android system that the user is actively interacting with the application, thus preventing it from being killed by the low memory killer.(Citation: TrendMicro-Yellow Camera)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1541",
                            "external_id": "T1541"
                        },
                        {
                            "source_name": "Android-SensorsOverview",
                            "description": "Google. (n.d.). Sensors Overview. Retrieved November 19, 2019.",
                            "url": "https://developer.android.com/guide/topics/sensors/sensors_overview#sensors-practices"
                        },
                        {
                            "source_name": "Android-ForegroundServices",
                            "description": "Google. (n.d.). Services overview. Retrieved November 19, 2019.",
                            "url": "https://developer.android.com/guide/components/services.html#Foreground"
                        },
                        {
                            "source_name": "TrendMicro-Yellow Camera",
                            "description": "Song Wang. (2019, October 18). Fake Photo Beautification Apps on Google Play can Read SMS Verification Code to Trigger Wireless Application Protocol (WAP)/Carrier Billing. Retrieved November 19, 2019.",
                            "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/fake-photo-beautification-apps-on-google-play-can-read-sms-verification-code-to-trigger-wireless-application-protocol-wap-carrier-billing/"
                        },
                        {
                            "source_name": "BlackHat Sutter Android Foreground 2019",
                            "description": "Thomas Sutter. (2019, December). Simple Spyware Androids Invisible Foreground Services and How to (Ab)use Them. Retrieved December 26, 2019.",
                            "url": "https://i.blackhat.com/eu-19/Thursday/eu-19-Sutter-Simple-Spyware-Androids-Invisible-Foreground-Services-And-How-To-Abuse-Them.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-19.html",
                            "external_id": "APP-19"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_contributors": [
                        "Lorin Wu, Trend Micro"
                    ],
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can see persistent notifications in their notification drawer and can subsequently uninstall applications that do not belong. Applications could be vetted for their use of the `startForeground()` API, and could be further scrutinized if usage is found.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Google. (n.d.). Sensors Overview. Retrieved November 19, 2019.\", \"root['external_references'][5]['external_id']\": \"APP-19\"}, \"dictionary_item_removed\": {\"root['external_references'][1]['external_id']\": \"APP-19\", \"root['external_references'][5]['description']\": \"Song Wang. (2019, October 18). Fake Photo Beautification Apps on Google Play can Read SMS Verification Code to Trigger Wireless Application Protocol (WAP)/Carrier Billing. Retrieved November 19, 2019.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-08 15:38:03.160000+00:00\", \"old_value\": \"2019-12-26 16:14:33.302000+00:00\"}, \"root['kill_chain_phases'][0]['phase_name']\": {\"new_value\": \"defense-evasion\", \"old_value\": \"collection\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Android-SensorsOverview\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://developer.android.com/guide/topics/sensors/sensors_overview#sensors-practices\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-19.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Android-ForegroundServices\", \"old_value\": \"Android-SensorsOverview\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Google. (n.d.). Services overview. Retrieved November 19, 2019.\", \"old_value\": \"Google. (n.d.). Sensors Overview. Retrieved November 19, 2019.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://developer.android.com/guide/components/services.html#Foreground\", \"old_value\": \"https://developer.android.com/guide/topics/sensors/sensors_overview#sensors-practices\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"TrendMicro-Yellow Camera\", \"old_value\": \"Android-ForegroundServices\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Song Wang. (2019, October 18). Fake Photo Beautification Apps on Google Play can Read SMS Verification Code to Trigger Wireless Application Protocol (WAP)/Carrier Billing. Retrieved November 19, 2019.\", \"old_value\": \"Google. (n.d.). Services overview. Retrieved November 19, 2019.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://blog.trendmicro.com/trendlabs-security-intelligence/fake-photo-beautification-apps-on-google-play-can-read-sms-verification-code-to-trigger-wireless-application-protocol-wap-carrier-billing/\", \"old_value\": \"https://developer.android.com/guide/components/services.html#Foreground\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"TrendMicro-Yellow Camera\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-19.html\", \"old_value\": \"https://blog.trendmicro.com/trendlabs-security-intelligence/fake-photo-beautification-apps-on-google-play-can-read-sms-verification-code-to-trigger-wireless-application-protocol-wap-carrier-billing/\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Users can see persistent notifications in their notification drawer and can subsequently uninstall applications that do not belong. Applications could be vetted for their use of the `startForeground()` API, and could be further scrutinized if usage is found.\", \"old_value\": \"Users can see persistent notifications in their notification drawer and can subsequently uninstall applications that do not belong.\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "changelog_mitigations": {
                        "shared": [
                            "M1011: User Guidance"
                        ],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--2bb20118-e6c0-41dc-a07c-283ea4dd0fb8",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2020-01-21 15:27:30.182000+00:00",
                    "modified": "2022-04-06 14:46:25.107000+00:00",
                    "name": "Ingress Tool Transfer",
                    "description": "Adversaries may transfer tools or other files from an external system onto a compromised device to facilitate follow-on actions. Files may be copied from an external adversary-controlled system through the command and control channel  or through alternate protocols with another tool such as FTP.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1544",
                            "external_id": "T1544"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for connections to unknown domains or IP addresses. Application vetting services may indicate precisely what content was requested during application execution.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 14:46:25.107000+00:00\", \"old_value\": \"2020-01-21 15:27:30.182000+00:00\"}, \"root['name']\": {\"new_value\": \"Ingress Tool Transfer\", \"old_value\": \"Remote File Copy\"}, \"root['description']\": {\"new_value\": \"Adversaries may transfer tools or other files from an external system onto a compromised device to facilitate follow-on actions. Files may be copied from an external adversary-controlled system through the command and control channel  or through alternate protocols with another tool such as FTP.\", \"old_value\": \"Files may be copied from one system to another to stage adversary tools or other files over the course of an operation. Files may be copied from an external adversary-controlled system through the Command and Control channel to bring tools into the victim network or onto the victim\\u2019s device.\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Application vetting services could look for connections to unknown domains or IP addresses. Application vetting services may indicate precisely what content was requested during application execution.\", \"old_value\": \"Downloading remote files is common application behavior and is therefore typically undetectable to the end user.\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to695__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to695__0\"><a href=\"#difflib_chg_to695__top\">t</a></td><td class=\"diff_header\" id=\"from695_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Files&nbsp;may&nbsp;be&nbsp;copied&nbsp;from&nbsp;one&nbsp;system&nbsp;to&nbsp;another&nbsp;to&nbsp;stage&nbsp;adve</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to695__top\">t</a></td><td class=\"diff_header\" id=\"to695_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;transfer&nbsp;tools&nbsp;or&nbsp;other&nbsp;files&nbsp;from&nbsp;an&nbsp;extern</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">rsary&nbsp;tools&nbsp;or&nbsp;other&nbsp;files&nbsp;over&nbsp;the&nbsp;course&nbsp;of&nbsp;an&nbsp;operation.&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">al&nbsp;system&nbsp;onto&nbsp;a&nbsp;compromised&nbsp;device&nbsp;to&nbsp;facilitate&nbsp;follow-on&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Files&nbsp;may&nbsp;be&nbsp;copied&nbsp;from&nbsp;an&nbsp;external&nbsp;adversary-controlled&nbsp;sy</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">actions.&nbsp;Files&nbsp;may&nbsp;be&nbsp;copied&nbsp;from&nbsp;an&nbsp;external&nbsp;adversary-cont</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">stem&nbsp;through&nbsp;the&nbsp;Command&nbsp;and&nbsp;Control&nbsp;channel&nbsp;to&nbsp;bring&nbsp;tools&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">rolled&nbsp;system&nbsp;through&nbsp;the&nbsp;command&nbsp;and&nbsp;control&nbsp;channel&nbsp;&nbsp;or&nbsp;th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">into&nbsp;the&nbsp;victim&nbsp;network&nbsp;or&nbsp;onto&nbsp;the&nbsp;victim\u2019s&nbsp;device.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">rough&nbsp;alternate&nbsp;protocols&nbsp;with&nbsp;another&nbsp;tool&nbsp;such&nbsp;as&nbsp;FTP.</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--52eff1c7-dd30-4121-b762-24ae6fa61bbb",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2020-04-28 14:35:37.309000+00:00",
                    "modified": "2022-04-08 15:46:24.495000+00:00",
                    "name": "Native API",
                    "description": "Adversaries may use Android\u2019s Native Development Kit (NDK) to write native functions that can achieve execution of binaries or functions. Like system calls on a traditional desktop operating system, native code achieves execution on a lower level than normal Android SDK calls.\n\nThe NDK allows developers to write native code in C or C++ that is compiled directly to machine code, avoiding all intermediate languages and steps in compilation that higher level languages, like Java, typically have. The Java Native Interface (JNI) is the component that allows Java functions in the Android app to call functions in a native library.(Citation: Google NDK Getting Started)\n\nAdversaries may also choose to use native functions to execute malicious code since native actions are typically much more difficult to analyze than standard, non-native behaviors.(Citation: MITRE App Vetting Effectiveness)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "execution"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1575",
                            "external_id": "T1575"
                        },
                        {
                            "source_name": "Google NDK Getting Started",
                            "description": "Google. (2019, December 27). Getting Started with the NDK. Retrieved April 28, 2020.",
                            "url": "https://developer.android.com/ndk/guides"
                        },
                        {
                            "source_name": "MITRE App Vetting Effectiveness",
                            "description": "M. Peck, C. Northern. (2016, August 22). Analyzing the Effectiveness of App Vetting Tools in the Enterprise. Retrieved April 28, 2020.",
                            "url": "https://www.mitre.org/sites/default/files/publications/pr-16-4772-analyzing-effectiveness-mobile-app-vetting-tools-report.pdf"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "This is abuse of standard OS-level APIs and are therefore typically undetectable to the end user.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-08 15:46:24.495000+00:00\", \"old_value\": \"2020-04-28 18:34:15.373000+00:00\"}, \"root['name']\": {\"new_value\": \"Native API\", \"old_value\": \"Native Code\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--948a447c-d783-4ba0-8516-a64140fcacd5",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-08-01 13:44:09.368000+00:00",
                    "modified": "2022-04-06 14:50:16.409000+00:00",
                    "name": "Non-Standard Port",
                    "description": "Adversaries may generate network traffic using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1509",
                            "external_id": "T1509"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting reports may show network communications performed by the application, including hosts, ports, protocols, and URLs. Further detection would most likely be at the enterprise level, through packet and/or netflow inspection. Many properly configured firewalls may also naturally block command and control traffic over non-standard ports.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 14:50:16.409000+00:00\", \"old_value\": \"2019-09-11 13:27:50.344000+00:00\"}, \"root['name']\": {\"new_value\": \"Non-Standard Port\", \"old_value\": \"Uncommonly Used Port\"}, \"root['description']\": {\"new_value\": \"Adversaries may generate network traffic using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\", \"old_value\": \"Adversaries may use non-standard ports to exfiltrate information.\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Application vetting reports may show network communications performed by the application, including hosts, ports, protocols, and URLs. Further detection would most likely be at the enterprise level, through packet and/or netflow inspection. Many properly configured firewalls may also naturally block command and control traffic over non-standard ports.\", \"old_value\": \"Detection would most likely be at the enterprise level, through packet and/or netflow inspection. Many properly configured firewalls may also naturally block command and control traffic over non-standard ports.\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to715__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to715__0\"><a href=\"#difflib_chg_to715__top\">t</a></td><td class=\"diff_header\" id=\"from715_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;use&nbsp;non-standard&nbsp;ports&nbsp;to&nbsp;exfiltrate&nbsp;informa</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to715__top\">t</a></td><td class=\"diff_header\" id=\"to715_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;generate&nbsp;network&nbsp;traffic&nbsp;using&nbsp;a&nbsp;protocol&nbsp;an</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">tion.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">d&nbsp;port&nbsp;paring&nbsp;that&nbsp;are&nbsp;typically&nbsp;not&nbsp;associated.&nbsp;For&nbsp;example</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">,&nbsp;HTTPS&nbsp;over&nbsp;port&nbsp;8088&nbsp;or&nbsp;port&nbsp;587&nbsp;as&nbsp;opposed&nbsp;to&nbsp;the&nbsp;traditi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">onal&nbsp;port&nbsp;443.&nbsp;Adversaries&nbsp;may&nbsp;make&nbsp;changes&nbsp;to&nbsp;the&nbsp;standard&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">port&nbsp;used&nbsp;by&nbsp;a&nbsp;protocol&nbsp;to&nbsp;bypass&nbsp;filtering&nbsp;or&nbsp;muddle&nbsp;analys</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">is/parsing&nbsp;of&nbsp;network&nbsp;data.</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d13fa042-8f26-44e1-a2a8-af0bf8e2ac9a",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:32.328000+00:00",
                    "modified": "2022-04-06 12:36:31.652000+00:00",
                    "name": "Obfuscated Files or Information",
                    "description": "Adversaries may attempt to make a payload or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the device or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Portions of files can also be encoded to hide the plaintext strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled.(Citation: Microsoft MalLockerB) ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1406",
                            "external_id": "T1406"
                        },
                        {
                            "source_name": "Microsoft MalLockerB",
                            "description": "D. Venkatesan. (2020, October 8). Sophisticated new Android malware marks the latest evolution of mobile ransomware . Retrieved October 29, 2020.",
                            "url": "https://www.microsoft.com/security/blog/2020/10/08/sophisticated-new-android-malware-marks-the-latest-evolution-of-mobile-ransomware/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-21.html",
                            "external_id": "APP-21"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Dynamic analysis, when used in application vetting, may in some cases be able to identify malicious code in obfuscated or encrypted form by detecting the code at execution time (after it is deobfuscated or decrypted). Some application vetting techniques apply reputation analysis of the application developer and can alert to potentially suspicious applications without actual examination of application code.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "3.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"D. Venkatesan. (2020, October 8). Sophisticated new Android malware marks the latest evolution of mobile ransomware . Retrieved October 29, 2020.\", \"root['external_references'][2]['external_id']\": \"APP-21\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1009\", \"root['external_references'][1]['external_id']\": \"APP-21\", \"root['external_references'][2]['description']\": \"Vaibhav Rastogi, Yan Chen, and Xuxian Jiang. (2013, May). DroidChameleon: Evaluating Android Anti-malware against Transformation Attacks. Retrieved December 9, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 12:36:31.652000+00:00\", \"old_value\": \"2019-09-23 13:26:01.263000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may attempt to make a payload or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the device or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n \\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Portions of files can also be encoded to hide the plaintext strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled.(Citation: Microsoft MalLockerB) \", \"old_value\": \"An app could contain malicious code in obfuscated or encrypted form, then deobfuscate or decrypt the code at runtime to evade many app vetting techniques.(Citation: Rastogi) (Citation: Zhou) (Citation: TrendMicro-Obad) (Citation: Xiao-iOS)\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,3 @@\\n-An app could contain malicious code in obfuscated or encrypted form, then deobfuscate or decrypt the code at runtime to evade many app vetting techniques.(Citation: Rastogi) (Citation: Zhou) (Citation: TrendMicro-Obad) (Citation: Xiao-iOS)\\n+Adversaries may attempt to make a payload or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the device or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \\n+ \\n+Payloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Portions of files can also be encoded to hide the plaintext strings that would otherwise help defenders with discovery. Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled.(Citation: Microsoft MalLockerB) \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Microsoft MalLockerB\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.microsoft.com/security/blog/2020/10/08/sophisticated-new-android-malware-marks-the-latest-evolution-of-mobile-ransomware/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-21.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Rastogi\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-21.html\", \"old_value\": \"http://pages.cs.wisc.edu/~vrastogi/static/papers/rcj13b.pdf\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Dynamic analysis, when used in application vetting, may in some cases be able to identify malicious code in obfuscated or encrypted form by detecting the code at execution time (after it is deobfuscated or decrypted). Some application vetting techniques apply reputation analysis of the application developer and can alert to potentially suspicious applications without actual examination of application code.\", \"old_value\": \"Malicious obfuscation of files or information can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversary behavior.\"}, \"root['x_mitre_version']\": {\"new_value\": \"3.0\", \"old_value\": \"2.0\"}}, \"iterable_item_removed\": {\"root['external_references'][3]\": {\"source_name\": \"Zhou\", \"description\": \"Yajin Zhou and Xuxian Jiang. (2012, May). Dissecting Android Malware: Characterization and Evolution. Retrieved December 9, 2016.\", \"url\": \"http://ieeexplore.ieee.org/document/6234407\"}, \"root['external_references'][4]\": {\"source_name\": \"TrendMicro-Obad\", \"description\": \"Veo Zhang. (2013, June 13). Cybercriminals Improve Android Malware Stealth Routines with OBAD. Retrieved December 9, 2016.\", \"url\": \"http://blog.trendmicro.com/trendlabs-security-intelligence/cybercriminals-improve-android-malware-stealth-routines-with-obad/\"}, \"root['external_references'][5]\": {\"source_name\": \"Xiao-iOS\", \"description\": \"Claud Xiao. (2016, July). Fruit vs Zombies: Defeat Non-jailbroken iOS Malware. Retrieved December 9, 2016.\", \"url\": \"http://www.slideshare.net/Shakacon/fruit-vs-zombies-defeat-nonjailbroken-ios-malware-by-claud-xiao\"}}}",
                    "previous_version": "2.0",
                    "version_change": "2.0 \u2192 3.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to719__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to719__0\"><a href=\"#difflib_chg_to719__top\">t</a></td><td class=\"diff_header\" id=\"from719_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">An&nbsp;app&nbsp;could&nbsp;contain&nbsp;malicious&nbsp;code&nbsp;in&nbsp;obfuscated&nbsp;or&nbsp;encrypt</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to719__top\">t</a></td><td class=\"diff_header\" id=\"to719_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;attempt&nbsp;to&nbsp;make&nbsp;a&nbsp;payload&nbsp;or&nbsp;file&nbsp;difficult&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ed&nbsp;form,&nbsp;then&nbsp;deobfuscate&nbsp;or&nbsp;decrypt&nbsp;the&nbsp;code&nbsp;at&nbsp;runtime&nbsp;to&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">to&nbsp;discover&nbsp;or&nbsp;analyze&nbsp;by&nbsp;encrypting,&nbsp;encoding,&nbsp;or&nbsp;otherwise</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">evade&nbsp;many&nbsp;app&nbsp;vetting&nbsp;techniques.(Citation:&nbsp;Rastogi)&nbsp;(Citat</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;obfuscating&nbsp;its&nbsp;contents&nbsp;on&nbsp;the&nbsp;device&nbsp;or&nbsp;in&nbsp;transit.&nbsp;This&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ion:&nbsp;Zhou)&nbsp;(Citation:&nbsp;TrendMicro-Obad)&nbsp;(Citation:&nbsp;Xiao-iOS)</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">is&nbsp;common&nbsp;behavior&nbsp;that&nbsp;can&nbsp;be&nbsp;used&nbsp;across&nbsp;different&nbsp;platfor</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ms&nbsp;and&nbsp;the&nbsp;network&nbsp;to&nbsp;evade&nbsp;defenses.&nbsp;&nbsp;&nbsp;&nbsp;Payloads&nbsp;may&nbsp;be&nbsp;com</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">pressed,&nbsp;archived,&nbsp;or&nbsp;encrypted&nbsp;in&nbsp;order&nbsp;to&nbsp;avoid&nbsp;detection.</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;These&nbsp;payloads&nbsp;may&nbsp;be&nbsp;used&nbsp;during&nbsp;Initial&nbsp;Access&nbsp;or&nbsp;later&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">o&nbsp;mitigate&nbsp;detection.&nbsp;Portions&nbsp;of&nbsp;files&nbsp;can&nbsp;also&nbsp;be&nbsp;encoded&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">to&nbsp;hide&nbsp;the&nbsp;plaintext&nbsp;strings&nbsp;that&nbsp;would&nbsp;otherwise&nbsp;help&nbsp;defe</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">nders&nbsp;with&nbsp;discovery.&nbsp;Payloads&nbsp;may&nbsp;also&nbsp;be&nbsp;split&nbsp;into&nbsp;separa</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">te,&nbsp;seemingly&nbsp;benign&nbsp;files&nbsp;that&nbsp;only&nbsp;reveal&nbsp;malicious&nbsp;functi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">onality&nbsp;when&nbsp;reassembled.(Citation:&nbsp;Microsoft&nbsp;MalLockerB)&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--1b51f5bc-b97a-498a-8dbd-bc6b1901bf19",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:33.926000+00:00",
                    "modified": "2022-03-30 20:32:19.942000+00:00",
                    "name": "Process Discovery",
                    "description": "Adversaries may attempt to get information about running processes on a device. Information obtained could be used to gain an understanding of common software/applications running on devices within a network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1424) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. \n\n \n\nRecent Android security enhancements have made it more difficult to obtain a list of running processes. On Android 7 and later, there is no way for an application to obtain the process list without abusing elevated privileges. This is due to the Android kernel utilizing the `hidepid` mount feature. Prior to Android 7, applications could utilize the `ps` command or examine the `/proc` directory on the device.(Citation: Android-SELinuxChanges) \n\n \n\nIn iOS, applications have previously been able to use the `sysctl` command to obtain a list of running processes. This functionality has been removed in later iOS versions. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1424",
                            "external_id": "T1424"
                        },
                        {
                            "source_name": "Android-SELinuxChanges",
                            "description": "Various. (2016, March 31). Overly restrictive SELinux filesystem permissions in Android N. Retrieved December 21, 2016.",
                            "url": "https://code.google.com/p/android/issues/detail?id=205565"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can typically detect rooted devices, which is an indication that Process Discovery is possible. Application vetting could potentially detect when applications attempt to abuse root access or root the system itself. Further, application vetting services could look for attempted usage of legacy process discovery mechanisms, such as the usage of `ps` or inspection of the `/proc` directory.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Mobile security products can typically detect rooted devices, which is an indication that Process Discovery is possible. Application vetting could potentially detect when applications attempt to abuse root access or root the system itself. Further, application vetting services could look for attempted usage of legacy process discovery mechanisms, such as the usage of `ps` or inspection of the `/proc` directory.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1027\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 20:32:19.942000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may attempt to get information about running processes on a device. Information obtained could be used to gain an understanding of common software/applications running on devices within a network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1424) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. \\n\\n \\n\\nRecent Android security enhancements have made it more difficult to obtain a list of running processes. On Android 7 and later, there is no way for an application to obtain the process list without abusing elevated privileges. This is due to the Android kernel utilizing the `hidepid` mount feature. Prior to Android 7, applications could utilize the `ps` command or examine the `/proc` directory on the device.(Citation: Android-SELinuxChanges) \\n\\n \\n\\nIn iOS, applications have previously been able to use the `sysctl` command to obtain a list of running processes. This functionality has been removed in later iOS versions. \", \"old_value\": \"On Android versions prior to 5, applications can observe information about other processes that are running through methods in the ActivityManager class. On Android versions prior to 7, applications can obtain this information by executing the <code>ps</code> command, or by examining the <code>/proc</code> directory. Starting in Android version 7, use of the Linux kernel's <code>hidepid</code> feature prevents applications (without escalated privileges) from accessing this information (Citation: Android-SELinuxChanges).\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,9 @@\\n-On Android versions prior to 5, applications can observe information about other processes that are running through methods in the ActivityManager class. On Android versions prior to 7, applications can obtain this information by executing the <code>ps</code> command, or by examining the <code>/proc</code> directory. Starting in Android version 7, use of the Linux kernel's <code>hidepid</code> feature prevents applications (without escalated privileges) from accessing this information (Citation: Android-SELinuxChanges).\\n+Adversaries may attempt to get information about running processes on a device. Information obtained could be used to gain an understanding of common software/applications running on devices within a network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1424) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions. \\n+\\n+ \\n+\\n+Recent Android security enhancements have made it more difficult to obtain a list of running processes. On Android 7 and later, there is no way for an application to obtain the process list without abusing elevated privileges. This is due to the Android kernel utilizing the `hidepid` mount feature. Prior to Android 7, applications could utilize the `ps` command or examine the `/proc` directory on the device.(Citation: Android-SELinuxChanges) \\n+\\n+ \\n+\\n+In iOS, applications have previously been able to use the `sysctl` command to obtain a list of running processes. This functionality has been removed in later iOS versions. \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}, \"iterable_item_added\": {\"root['x_mitre_platforms'][1]\": \"iOS\"}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to717__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to717__0\"><a href=\"#difflib_chg_to717__top\">t</a></td><td class=\"diff_header\" id=\"from717_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">On&nbsp;Android&nbsp;versions&nbsp;prior&nbsp;to&nbsp;5,&nbsp;applications&nbsp;can&nbsp;observe&nbsp;inf</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to717__top\">t</a></td><td class=\"diff_header\" id=\"to717_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;attempt&nbsp;to&nbsp;get&nbsp;information&nbsp;about&nbsp;running&nbsp;pro</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ormation&nbsp;about&nbsp;other&nbsp;processes&nbsp;that&nbsp;are&nbsp;running&nbsp;through&nbsp;meth</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cesses&nbsp;on&nbsp;a&nbsp;device.&nbsp;Information&nbsp;obtained&nbsp;could&nbsp;be&nbsp;used&nbsp;to&nbsp;ga</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ods&nbsp;in&nbsp;the&nbsp;ActivityManager&nbsp;class.&nbsp;On&nbsp;Android&nbsp;versions&nbsp;prior&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">in&nbsp;an&nbsp;understanding&nbsp;of&nbsp;common&nbsp;software/applications&nbsp;running&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">to&nbsp;7,&nbsp;applications&nbsp;can&nbsp;obtain&nbsp;this&nbsp;information&nbsp;by&nbsp;executing&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">on&nbsp;devices&nbsp;within&nbsp;a&nbsp;network.&nbsp;Adversaries&nbsp;may&nbsp;use&nbsp;the&nbsp;informa</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">the&nbsp;&lt;code&gt;ps&lt;/code&gt;&nbsp;command,&nbsp;or&nbsp;by&nbsp;examining&nbsp;the&nbsp;&lt;code&gt;/proc</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tion&nbsp;from&nbsp;[Process&nbsp;Discovery](https://attack.mitre.org/techn</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&lt;/code&gt;&nbsp;directory.&nbsp;Starting&nbsp;in&nbsp;Android&nbsp;version&nbsp;7,&nbsp;use&nbsp;of&nbsp;the</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">iques/T1424)&nbsp;during&nbsp;automated&nbsp;discovery&nbsp;to&nbsp;shape&nbsp;follow-on&nbsp;b</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;Linux&nbsp;kernel's&nbsp;&lt;code&gt;hidepid&lt;/code&gt;&nbsp;feature&nbsp;prevents&nbsp;applic</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ehaviors,&nbsp;including&nbsp;whether&nbsp;or&nbsp;not&nbsp;the&nbsp;adversary&nbsp;fully&nbsp;infec</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ations&nbsp;(without&nbsp;escalated&nbsp;privileges)&nbsp;from&nbsp;accessing&nbsp;this&nbsp;in</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ts&nbsp;the&nbsp;target&nbsp;and/or&nbsp;attempts&nbsp;specific&nbsp;actions.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Recent&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">formation&nbsp;(Citation:&nbsp;Android-SELinuxChanges).</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">Android&nbsp;security&nbsp;enhancements&nbsp;have&nbsp;made&nbsp;it&nbsp;more&nbsp;difficult&nbsp;to</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;obtain&nbsp;a&nbsp;list&nbsp;of&nbsp;running&nbsp;processes.&nbsp;On&nbsp;Android&nbsp;7&nbsp;and&nbsp;later,</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;there&nbsp;is&nbsp;no&nbsp;way&nbsp;for&nbsp;an&nbsp;application&nbsp;to&nbsp;obtain&nbsp;the&nbsp;process&nbsp;li</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">st&nbsp;without&nbsp;abusing&nbsp;elevated&nbsp;privileges.&nbsp;This&nbsp;is&nbsp;due&nbsp;to&nbsp;the&nbsp;A</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ndroid&nbsp;kernel&nbsp;utilizing&nbsp;the&nbsp;`hidepid`&nbsp;mount&nbsp;feature.&nbsp;Prior&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">o&nbsp;Android&nbsp;7,&nbsp;applications&nbsp;could&nbsp;utilize&nbsp;the&nbsp;`ps`&nbsp;command&nbsp;or&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">examine&nbsp;the&nbsp;`/proc`&nbsp;directory&nbsp;on&nbsp;the&nbsp;device.(Citation:&nbsp;Andro</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">id-SELinuxChanges)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;iOS,&nbsp;applications&nbsp;have&nbsp;previously</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;been&nbsp;able&nbsp;to&nbsp;use&nbsp;the&nbsp;`sysctl`&nbsp;command&nbsp;to&nbsp;obtain&nbsp;a&nbsp;list&nbsp;of&nbsp;r</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">unning&nbsp;processes.&nbsp;This&nbsp;functionality&nbsp;has&nbsp;been&nbsp;removed&nbsp;in&nbsp;lat</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">er&nbsp;iOS&nbsp;versions.&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1006: Use Recent OS Version"
                        ],
                        "new": [
                            "M1002: Attestation"
                        ],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--667e5707-3843-4da8-bd34-88b922526f0d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:23.233000+00:00",
                    "modified": "2022-04-08 15:53:11.864000+00:00",
                    "name": "Replication Through Removable Media",
                    "description": "Adversaries may move onto devices by exploiting or copying malware to devices connected via USB. In the case of Lateral Movement, adversaries may utilize the physical connection of a device to a compromised or malicious charging station or PC to bypass application store requirements and install malicious applications directly.(Citation: Lau-Mactans) In the case of Initial Access, adversaries may attempt to exploit the device via the connection to gain access to data stored on the device.(Citation: Krebs-JuiceJacking) Examples of this include: \n \n* Exploiting insecure bootloaders in a Nexus 6 or 6P device over USB and gaining the ability to perform actions including intercepting phone calls, intercepting network traffic, and obtaining the device physical location.(Citation: IBM-NexusUSB) \n* Exploiting weakly-enforced security boundaries in Android devices such as the Google Pixel 2 over USB.(Citation: GoogleProjectZero-OATmeal) \n* Products from Cellebrite and Grayshift purportedly that can exploit some iOS devices using physical access to the data port to unlock the passcode.(Citation: Computerworld-iPhoneCracking) ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "lateral-movement"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1458",
                            "external_id": "T1458"
                        },
                        {
                            "source_name": "Krebs-JuiceJacking",
                            "description": "Brian Krebs. (2011, August 17). Beware of Juice-Jacking. Retrieved December 23, 2016.",
                            "url": "http://krebsonsecurity.com/2011/08/beware-of-juice-jacking/"
                        },
                        {
                            "source_name": "GoogleProjectZero-OATmeal",
                            "description": "Jann Horn. (2018, September 10). OATmeal on the Universal Cereal Bus: Exploiting Android phones over USB. Retrieved September 18, 2018.",
                            "url": "https://googleprojectzero.blogspot.com/2018/09/oatmeal-on-universal-cereal-bus.html"
                        },
                        {
                            "source_name": "Lau-Mactans",
                            "description": "Lau et al.. (2013). Mactans: Injecting Malware Into iOS Devices Via Malicious Chargers. Retrieved December 23, 2016.",
                            "url": "https://media.blackhat.com/us-13/US-13-Lau-Mactans-Injecting-Malware-into-iOS-Devices-via-Malicious-Chargers-WP.pdf"
                        },
                        {
                            "source_name": "Computerworld-iPhoneCracking",
                            "description": "Lucas Mearian. (2018, May 9). Two vendors now sell iPhone cracking technology \u2013 and police are buying. Retrieved September 21, 2018.",
                            "url": "https://www.computerworld.com/article/3268729/apple-ios/two-vendors-now-sell-iphone-cracking-technology-and-police-are-buying.html"
                        },
                        {
                            "source_name": "IBM-NexusUSB",
                            "description": "Roee Hay. (2017, January 5). Android Vulnerabilities: Attacking Nexus 6 and 6P Custom Boot Modes. Retrieved January 11, 2017.",
                            "url": "https://securityintelligence.com/android-vulnerabilities-attacking-nexus-6-and-6p-custom-boot-modes/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/physical-threats/PHY-1.html",
                            "external_id": "PHY-1"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/physical-threats/PHY-2.html",
                            "external_id": "PHY-2"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-6.html",
                            "external_id": "STA-6"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Brian Krebs. (2011, August 17). Beware of Juice-Jacking. Retrieved December 23, 2016.\", \"root['external_references'][6]['external_id']\": \"PHY-1\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1061\", \"root['external_references'][1]['external_id']\": \"PHY-1\", \"root['external_references'][6]['description']\": \"Lucas Mearian. (2018, May 9). Two vendors now sell iPhone cracking technology \\u2013 and police are buying. Retrieved September 21, 2018.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-08 15:53:11.864000+00:00\", \"old_value\": \"2019-02-03 15:10:41.460000+00:00\"}, \"root['name']\": {\"new_value\": \"Replication Through Removable Media\", \"old_value\": \"Exploit via Charging Station or PC\"}, \"root['description']\": {\"new_value\": \"Adversaries may move onto devices by exploiting or copying malware to devices connected via USB. In the case of Lateral Movement, adversaries may utilize the physical connection of a device to a compromised or malicious charging station or PC to bypass application store requirements and install malicious applications directly.(Citation: Lau-Mactans) In the case of Initial Access, adversaries may attempt to exploit the device via the connection to gain access to data stored on the device.(Citation: Krebs-JuiceJacking) Examples of this include: \\n \\n* Exploiting insecure bootloaders in a Nexus 6 or 6P device over USB and gaining the ability to perform actions including intercepting phone calls, intercepting network traffic, and obtaining the device physical location.(Citation: IBM-NexusUSB) \\n* Exploiting weakly-enforced security boundaries in Android devices such as the Google Pixel 2 over USB.(Citation: GoogleProjectZero-OATmeal) \\n* Products from Cellebrite and Grayshift purportedly that can exploit some iOS devices using physical access to the data port to unlock the passcode.(Citation: Computerworld-iPhoneCracking) \", \"old_value\": \"If the mobile device is connected (typically via USB) to a charging station or a PC, for example to charge the device's battery, then a compromised or malicious charging station or PC could attempt to exploit the mobile device via the connection(Citation: Krebs-JuiceJacking).\\n\\nPrevious demonstrations have included:\\n\\n* Injecting malicious applications into iOS devices(Citation: Lau-Mactans).\\n* Exploiting a Nexus 6 or 6P device over USB and gaining the ability to perform actions including intercepting phone calls, intercepting network traffic, and obtaining the device physical location(Citation: IBM-NexusUSB).\\n* Exploiting Android devices such as the Google Pixel 2 over USB(Citation: GoogleProjectZero-OATmeal).\\n\\nProducts from Cellebrite and Grayshift purportedly can use physical access to the data port to unlock the passcode on some iOS devices(Citation: Computerworld-iPhoneCracking).\", \"diff\": \"--- \\n+++ \\n@@ -1,9 +1,5 @@\\n-If the mobile device is connected (typically via USB) to a charging station or a PC, for example to charge the device's battery, then a compromised or malicious charging station or PC could attempt to exploit the mobile device via the connection(Citation: Krebs-JuiceJacking).\\n-\\n-Previous demonstrations have included:\\n-\\n-* Injecting malicious applications into iOS devices(Citation: Lau-Mactans).\\n-* Exploiting a Nexus 6 or 6P device over USB and gaining the ability to perform actions including intercepting phone calls, intercepting network traffic, and obtaining the device physical location(Citation: IBM-NexusUSB).\\n-* Exploiting Android devices such as the Google Pixel 2 over USB(Citation: GoogleProjectZero-OATmeal).\\n-\\n-Products from Cellebrite and Grayshift purportedly can use physical access to the data port to unlock the passcode on some iOS devices(Citation: Computerworld-iPhoneCracking).\\n+Adversaries may move onto devices by exploiting or copying malware to devices connected via USB. In the case of Lateral Movement, adversaries may utilize the physical connection of a device to a compromised or malicious charging station or PC to bypass application store requirements and install malicious applications directly.(Citation: Lau-Mactans) In the case of Initial Access, adversaries may attempt to exploit the device via the connection to gain access to data stored on the device.(Citation: Krebs-JuiceJacking) Examples of this include: \\n+ \\n+* Exploiting insecure bootloaders in a Nexus 6 or 6P device over USB and gaining the ability to perform actions including intercepting phone calls, intercepting network traffic, and obtaining the device physical location.(Citation: IBM-NexusUSB) \\n+* Exploiting weakly-enforced security boundaries in Android devices such as the Google Pixel 2 over USB.(Citation: GoogleProjectZero-OATmeal) \\n+* Products from Cellebrite and Grayshift purportedly that can exploit some iOS devices using physical access to the data port to unlock the passcode.(Citation: Computerworld-iPhoneCracking) \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Krebs-JuiceJacking\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://krebsonsecurity.com/2011/08/beware-of-juice-jacking/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/physical-threats/PHY-1.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"GoogleProjectZero-OATmeal\", \"old_value\": \"Krebs-JuiceJacking\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Jann Horn. (2018, September 10). OATmeal on the Universal Cereal Bus: Exploiting Android phones over USB. Retrieved September 18, 2018.\", \"old_value\": \"Brian Krebs. (2011, August 17). Beware of Juice-Jacking. Retrieved December 23, 2016.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://googleprojectzero.blogspot.com/2018/09/oatmeal-on-universal-cereal-bus.html\", \"old_value\": \"http://krebsonsecurity.com/2011/08/beware-of-juice-jacking/\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Computerworld-iPhoneCracking\", \"old_value\": \"IBM-NexusUSB\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"Lucas Mearian. (2018, May 9). Two vendors now sell iPhone cracking technology \\u2013 and police are buying. Retrieved September 21, 2018.\", \"old_value\": \"Roee Hay. (2017, January 5). Android Vulnerabilities: Attacking Nexus 6 and 6P Custom Boot Modes. Retrieved January 11, 2017.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://www.computerworld.com/article/3268729/apple-ios/two-vendors-now-sell-iphone-cracking-technology-and-police-are-buying.html\", \"old_value\": \"https://securityintelligence.com/android-vulnerabilities-attacking-nexus-6-and-6p-custom-boot-modes/\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"IBM-NexusUSB\", \"old_value\": \"GoogleProjectZero-OATmeal\"}, \"root['external_references'][5]['description']\": {\"new_value\": \"Roee Hay. (2017, January 5). Android Vulnerabilities: Attacking Nexus 6 and 6P Custom Boot Modes. Retrieved January 11, 2017.\", \"old_value\": \"Jann Horn. (2018, September 10). OATmeal on the Universal Cereal Bus: Exploiting Android phones over USB. Retrieved September 18, 2018.\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://securityintelligence.com/android-vulnerabilities-attacking-nexus-6-and-6p-custom-boot-modes/\", \"old_value\": \"https://googleprojectzero.blogspot.com/2018/09/oatmeal-on-universal-cereal-bus.html\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Computerworld-iPhoneCracking\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/physical-threats/PHY-1.html\", \"old_value\": \"https://www.computerworld.com/article/3268729/apple-ios/two-vendors-now-sell-iphone-cracking-technology-and-police-are-buying.html\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.1\"}}, \"iterable_item_added\": {\"root['kill_chain_phases'][1]\": {\"kill_chain_name\": \"mitre-mobile-attack\", \"phase_name\": \"lateral-movement\"}, \"root['external_references'][7]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/physical-threats/PHY-2.html\", \"external_id\": \"PHY-2\"}, \"root['external_references'][8]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-6.html\", \"external_id\": \"STA-6\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to714__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to714__0\"><a href=\"#difflib_chg_to714__top\">t</a></td><td class=\"diff_header\" id=\"from714_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">If&nbsp;the&nbsp;mobile&nbsp;device&nbsp;is&nbsp;connected&nbsp;(typically&nbsp;via&nbsp;USB)&nbsp;to&nbsp;a&nbsp;c</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to714__top\">t</a></td><td class=\"diff_header\" id=\"to714_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;move&nbsp;onto&nbsp;devices&nbsp;by&nbsp;exploiting&nbsp;or&nbsp;copying&nbsp;m</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">harging&nbsp;station&nbsp;or&nbsp;a&nbsp;PC,&nbsp;for&nbsp;example&nbsp;to&nbsp;charge&nbsp;the&nbsp;device's&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">alware&nbsp;to&nbsp;devices&nbsp;connected&nbsp;via&nbsp;USB.&nbsp;In&nbsp;the&nbsp;case&nbsp;of&nbsp;Lateral&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">battery,&nbsp;then&nbsp;a&nbsp;compromised&nbsp;or&nbsp;malicious&nbsp;charging&nbsp;station&nbsp;or</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">Movement,&nbsp;adversaries&nbsp;may&nbsp;utilize&nbsp;the&nbsp;physical&nbsp;connection&nbsp;of</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;PC&nbsp;could&nbsp;attempt&nbsp;to&nbsp;exploit&nbsp;the&nbsp;mobile&nbsp;device&nbsp;via&nbsp;the&nbsp;conne</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;a&nbsp;device&nbsp;to&nbsp;a&nbsp;compromised&nbsp;or&nbsp;malicious&nbsp;charging&nbsp;station&nbsp;or&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ction(Citation:&nbsp;Krebs-JuiceJacking).&nbsp;&nbsp;Previous&nbsp;demonstration</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">PC&nbsp;to&nbsp;bypass&nbsp;application&nbsp;store&nbsp;requirements&nbsp;and&nbsp;install&nbsp;mali</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">s&nbsp;have&nbsp;included:&nbsp;&nbsp;*&nbsp;Injecting&nbsp;malicious&nbsp;applications&nbsp;into&nbsp;iO</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cious&nbsp;applications&nbsp;directly.(Citation:&nbsp;Lau-Mactans)&nbsp;In&nbsp;the&nbsp;c</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">S&nbsp;devices(Citation:&nbsp;Lau-Mactans).&nbsp;*&nbsp;Exploiting&nbsp;a&nbsp;Nexus&nbsp;6&nbsp;or&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ase&nbsp;of&nbsp;Initial&nbsp;Access,&nbsp;adversaries&nbsp;may&nbsp;attempt&nbsp;to&nbsp;exploit&nbsp;th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">6P&nbsp;device&nbsp;over&nbsp;USB&nbsp;and&nbsp;gaining&nbsp;the&nbsp;ability&nbsp;to&nbsp;perform&nbsp;action</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;device&nbsp;via&nbsp;the&nbsp;connection&nbsp;to&nbsp;gain&nbsp;access&nbsp;to&nbsp;data&nbsp;stored&nbsp;on</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">s&nbsp;including&nbsp;intercepting&nbsp;phone&nbsp;calls,&nbsp;intercepting&nbsp;network&nbsp;t</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;the&nbsp;device.(Citation:&nbsp;Krebs-JuiceJacking)&nbsp;Examples&nbsp;of&nbsp;this&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">raffic,&nbsp;and&nbsp;obtaining&nbsp;the&nbsp;device&nbsp;physical&nbsp;location(Citation:</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">include:&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Exploiting&nbsp;insecure&nbsp;bootloaders&nbsp;in&nbsp;a&nbsp;Nexus&nbsp;6&nbsp;o</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;IBM-NexusUSB).&nbsp;*&nbsp;Exploiting&nbsp;Android&nbsp;devices&nbsp;such&nbsp;as&nbsp;the&nbsp;Goo</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">r&nbsp;6P&nbsp;device&nbsp;over&nbsp;USB&nbsp;and&nbsp;gaining&nbsp;the&nbsp;ability&nbsp;to&nbsp;perform&nbsp;acti</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">gle&nbsp;Pixel&nbsp;2&nbsp;over&nbsp;USB(Citation:&nbsp;GoogleProjectZero-OATmeal).&nbsp;&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ons&nbsp;including&nbsp;intercepting&nbsp;phone&nbsp;calls,&nbsp;intercepting&nbsp;network</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Products&nbsp;from&nbsp;Cellebrite&nbsp;and&nbsp;Grayshift&nbsp;purportedly&nbsp;can&nbsp;use&nbsp;p</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;traffic,&nbsp;and&nbsp;obtaining&nbsp;the&nbsp;device&nbsp;physical&nbsp;location.(Citati</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">hysical&nbsp;access&nbsp;to&nbsp;the&nbsp;data&nbsp;port&nbsp;to&nbsp;unlock&nbsp;the&nbsp;passcode&nbsp;on&nbsp;so</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">on:&nbsp;IBM-NexusUSB)&nbsp;&nbsp;*&nbsp;Exploiting&nbsp;weakly-enforced&nbsp;security&nbsp;bou</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">me&nbsp;iOS&nbsp;devices(Citation:&nbsp;Computerworld-iPhoneCracking).</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ndaries&nbsp;in&nbsp;Android&nbsp;devices&nbsp;such&nbsp;as&nbsp;the&nbsp;Google&nbsp;Pixel&nbsp;2&nbsp;over&nbsp;U</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">SB.(Citation:&nbsp;GoogleProjectZero-OATmeal)&nbsp;&nbsp;*&nbsp;Products&nbsp;from&nbsp;Ce</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">llebrite&nbsp;and&nbsp;Grayshift&nbsp;purportedly&nbsp;that&nbsp;can&nbsp;exploit&nbsp;some&nbsp;iOS</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;devices&nbsp;using&nbsp;physical&nbsp;access&nbsp;to&nbsp;the&nbsp;data&nbsp;port&nbsp;to&nbsp;unlock&nbsp;th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;passcode.(Citation:&nbsp;Computerworld-iPhoneCracking)&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1001: Security Updates",
                            "M1003: Lock Bootloader",
                            "M1006: Use Recent OS Version",
                            "M1011: User Guidance",
                            "M1012: Enterprise Policy"
                        ],
                        "new": [],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--198ce408-1470-45ee-b47f-7056050d4fc2",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:28.067000+00:00",
                    "modified": "2022-03-30 20:41:40.719000+00:00",
                    "name": "Software Discovery",
                    "description": "Adversaries may attempt to get a listing of applications that are installed on a device. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1418) during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempts specific actions. \n\n \n\nAdversaries may attempt to enumerate applications for a variety of reasons, such as figuring out what security measures are present or to identify the presence of target applications. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1418",
                            "external_id": "T1418"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-12.html",
                            "external_id": "APP-12"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for the Android permission `android.permission.QUERY_ALL_PACKAGES`, and apply extra scrutiny to applications that request it. On iOS, application vetting services could look for usage of the private API `LSApplicationWorkspace` and apply extra scrutiny to applications that employ it.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Application vetting services could look for the Android permission `android.permission.QUERY_ALL_PACKAGES`, and apply extra scrutiny to applications that request it. On iOS, application vetting services could look for usage of the private API `LSApplicationWorkspace` and apply extra scrutiny to applications that employ it.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['external_id']\": \"APP-12\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1021\", \"root['external_references'][1]['description']\": \"Android. (n.d.). PackageManager. Retrieved December 21, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 20:41:40.719000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['name']\": {\"new_value\": \"Software Discovery\", \"old_value\": \"Application Discovery\"}, \"root['description']\": {\"new_value\": \"Adversaries may attempt to get a listing of applications that are installed on a device. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1418) during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempts specific actions. \\n\\n \\n\\nAdversaries may attempt to enumerate applications for a variety of reasons, such as figuring out what security measures are present or to identify the presence of target applications. \", \"old_value\": \"Adversaries may seek to identify all applications installed on the device. One use case for doing so is to identify the presence of endpoint security applications that may increase the adversary's risk of detection. Another use case is to identify the presence of applications that the adversary may wish to target.\\n\\nOn Android, applications can use methods in the PackageManager class (Citation: Android-PackageManager) to enumerate other apps installed on device, or an entity with shell access can use the pm command line tool.\\n\\nOn iOS, apps can use private API calls to obtain a list of other apps installed on the device. (Citation: Kurtz-MaliciousiOSApps) However, use of private API calls will likely prevent the application from being distributed through Apple's App Store.\", \"diff\": \"--- \\n+++ \\n@@ -1,5 +1,5 @@\\n-Adversaries may seek to identify all applications installed on the device. One use case for doing so is to identify the presence of endpoint security applications that may increase the adversary's risk of detection. Another use case is to identify the presence of applications that the adversary may wish to target.\\n+Adversaries may attempt to get a listing of applications that are installed on a device. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1418) during automated discovery to shape follow-on behaviors, including whether or not to fully infect the target and/or attempts specific actions. \\n \\n-On Android, applications can use methods in the PackageManager class (Citation: Android-PackageManager) to enumerate other apps installed on device, or an entity with shell access can use the pm command line tool.\\n+ \\n \\n-On iOS, apps can use private API calls to obtain a list of other apps installed on the device. (Citation: Kurtz-MaliciousiOSApps) However, use of private API calls will likely prevent the application from being distributed through Apple's App Store.\\n+Adversaries may attempt to enumerate applications for a variety of reasons, such as figuring out what security measures are present or to identify the presence of target applications. \"}, \"root['kill_chain_phases'][0]['phase_name']\": {\"new_value\": \"discovery\", \"old_value\": \"defense-evasion\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Android-PackageManager\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-12.html\", \"old_value\": \"https://developer.android.com/reference/android/content/pm/PackageManager.html\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}, \"iterable_item_removed\": {\"root['kill_chain_phases'][1]\": {\"kill_chain_name\": \"mitre-mobile-attack\", \"phase_name\": \"discovery\"}, \"root['external_references'][2]\": {\"source_name\": \"Kurtz-MaliciousiOSApps\", \"description\": \"Andreas Kurtz. (2014, September 18). Malicious iOS Apps. Retrieved December 21, 2016.\", \"url\": \"https://andreas-kurtz.de/2014/09/malicious-ios-apps/\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to712__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to712__0\"><a href=\"#difflib_chg_to712__top\">t</a></td><td class=\"diff_header\" id=\"from712_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;seek&nbsp;to&nbsp;identify&nbsp;all&nbsp;applications&nbsp;installed&nbsp;</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to712__top\">t</a></td><td class=\"diff_header\" id=\"to712_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;attempt&nbsp;to&nbsp;get&nbsp;a&nbsp;listing&nbsp;of&nbsp;applications&nbsp;tha</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">on&nbsp;the&nbsp;device.&nbsp;One&nbsp;use&nbsp;case&nbsp;for&nbsp;doing&nbsp;so&nbsp;is&nbsp;to&nbsp;identify&nbsp;the&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">t&nbsp;are&nbsp;installed&nbsp;on&nbsp;a&nbsp;device.&nbsp;Adversaries&nbsp;may&nbsp;use&nbsp;the&nbsp;informa</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">presence&nbsp;of&nbsp;endpoint&nbsp;security&nbsp;applications&nbsp;that&nbsp;may&nbsp;increase</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tion&nbsp;from&nbsp;[Software&nbsp;Discovery](https://attack.mitre.org/tech</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;the&nbsp;adversary's&nbsp;risk&nbsp;of&nbsp;detection.&nbsp;Another&nbsp;use&nbsp;case&nbsp;is&nbsp;to&nbsp;i</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">niques/T1418)&nbsp;during&nbsp;automated&nbsp;discovery&nbsp;to&nbsp;shape&nbsp;follow-on&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">dentify&nbsp;the&nbsp;presence&nbsp;of&nbsp;applications&nbsp;that&nbsp;the&nbsp;adversary&nbsp;may&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">behaviors,&nbsp;including&nbsp;whether&nbsp;or&nbsp;not&nbsp;to&nbsp;fully&nbsp;infect&nbsp;the&nbsp;targ</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">wish&nbsp;to&nbsp;target.&nbsp;&nbsp;On&nbsp;Android,&nbsp;applications&nbsp;can&nbsp;use&nbsp;methods&nbsp;in</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">et&nbsp;and/or&nbsp;attempts&nbsp;specific&nbsp;actions.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adversaries&nbsp;may&nbsp;at</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;the&nbsp;PackageManager&nbsp;class&nbsp;(Citation:&nbsp;Android-PackageManager)</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tempt&nbsp;to&nbsp;enumerate&nbsp;applications&nbsp;for&nbsp;a&nbsp;variety&nbsp;of&nbsp;reasons,&nbsp;su</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;to&nbsp;enumerate&nbsp;other&nbsp;apps&nbsp;installed&nbsp;on&nbsp;device,&nbsp;or&nbsp;an&nbsp;entity&nbsp;w</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ch&nbsp;as&nbsp;figuring&nbsp;out&nbsp;what&nbsp;security&nbsp;measures&nbsp;are&nbsp;present&nbsp;or&nbsp;to&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ith&nbsp;shell&nbsp;access&nbsp;can&nbsp;use&nbsp;the&nbsp;pm&nbsp;command&nbsp;line&nbsp;tool.&nbsp;&nbsp;On&nbsp;iOS,&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">identify&nbsp;the&nbsp;presence&nbsp;of&nbsp;target&nbsp;applications.&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">apps&nbsp;can&nbsp;use&nbsp;private&nbsp;API&nbsp;calls&nbsp;to&nbsp;obtain&nbsp;a&nbsp;list&nbsp;of&nbsp;other&nbsp;app</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">s&nbsp;installed&nbsp;on&nbsp;the&nbsp;device.&nbsp;(Citation:&nbsp;Kurtz-MaliciousiOSApps</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">)&nbsp;However,&nbsp;use&nbsp;of&nbsp;private&nbsp;API&nbsp;calls&nbsp;will&nbsp;likely&nbsp;prevent&nbsp;the&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">application&nbsp;from&nbsp;being&nbsp;distributed&nbsp;through&nbsp;Apple's&nbsp;App&nbsp;Store</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [
                            "M1006: Use Recent OS Version",
                            "M1011: User Guidance"
                        ],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--702055ac-4e54-4ae9-9527-e23a38e0b160",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:15.402000+00:00",
                    "modified": "2022-04-11 19:41:54.022000+00:00",
                    "name": "Stored Application Data",
                    "description": "Adversaries may try to access and collect application data resident on the device. Adversaries often target popular applications, such as Facebook, WeChat, and Gmail.(Citation: SWB Exodus March 2019) \n\n \n\nDue to mobile OS sandboxing, this technique is only possible in three scenarios: \n\n \n\n* An application stores files in unprotected external storage \n* An application stores files in its internal storage directory with insecure permissions (e.g. 777) \n* The adversary gains root permissions on the device ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1409",
                            "external_id": "T1409"
                        },
                        {
                            "source_name": "SWB Exodus March 2019",
                            "description": "Security Without Borders. (2019, March 29). Exodus: New Android Spyware Made in Italy. Retrieved September 3, 2019.",
                            "url": "https://securitywithoutborders.org/blog/2019/03/29/exodus.html"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-0.html",
                            "external_id": "AUT-0"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could detect when applications store data insecurely, for example, in unprotected external storage.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "3.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Security Without Borders. (2019, March 29). Exodus: New Android Spyware Made in Italy. Retrieved September 3, 2019.\", \"root['external_references'][2]['external_id']\": \"AUT-0\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1012\", \"root['external_references'][1]['external_id']\": \"AUT-0\", \"root['external_references'][2]['description']\": \"Security Without Borders. (2019, March 29). Exodus: New Android Spyware Made in Italy. Retrieved September 3, 2019.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-11 19:41:54.022000+00:00\", \"old_value\": \"2019-10-10 14:17:48.920000+00:00\"}, \"root['name']\": {\"new_value\": \"Stored Application Data\", \"old_value\": \"Access Stored Application Data\"}, \"root['description']\": {\"new_value\": \"Adversaries may try to access and collect application data resident on the device. Adversaries often target popular applications, such as Facebook, WeChat, and Gmail.(Citation: SWB Exodus March 2019) \\n\\n \\n\\nDue to mobile OS sandboxing, this technique is only possible in three scenarios: \\n\\n \\n\\n* An application stores files in unprotected external storage \\n* An application stores files in its internal storage directory with insecure permissions (e.g. 777) \\n* The adversary gains root permissions on the device \", \"old_value\": \"Adversaries may access and collect application data resident on the device. Adversaries often target popular applications such as Facebook, WeChat, and Gmail.(Citation: SWB Exodus March 2019)\\n\\nThis technique requires either escalated privileges or for the targeted app to have stored the data in an insecure manner (e.g., with insecure file permissions or in an insecure location such as an external storage directory).\", \"diff\": \"--- \\n+++ \\n@@ -1,3 +1,11 @@\\n-Adversaries may access and collect application data resident on the device. Adversaries often target popular applications such as Facebook, WeChat, and Gmail.(Citation: SWB Exodus March 2019)\\n+Adversaries may try to access and collect application data resident on the device. Adversaries often target popular applications, such as Facebook, WeChat, and Gmail.(Citation: SWB Exodus March 2019) \\n \\n-This technique requires either escalated privileges or for the targeted app to have stored the data in an insecure manner (e.g., with insecure file permissions or in an insecure location such as an external storage directory).\\n+ \\n+\\n+Due to mobile OS sandboxing, this technique is only possible in three scenarios: \\n+\\n+ \\n+\\n+* An application stores files in unprotected external storage \\n+* An application stores files in its internal storage directory with insecure permissions (e.g. 777) \\n+* The adversary gains root permissions on the device \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"SWB Exodus March 2019\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://securitywithoutborders.org/blog/2019/03/29/exodus.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-0.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"SWB Exodus March 2019\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-0.html\", \"old_value\": \"https://securitywithoutborders.org/blog/2019/03/29/exodus.html\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Application vetting services could detect when applications store data insecurely, for example, in unprotected external storage.\", \"old_value\": \"Accessing stored application data can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.\"}, \"root['x_mitre_version']\": {\"new_value\": \"3.0\", \"old_value\": \"2.0\"}}, \"iterable_item_removed\": {\"root['kill_chain_phases'][1]\": {\"kill_chain_name\": \"mitre-mobile-attack\", \"phase_name\": \"credential-access\"}}}",
                    "previous_version": "2.0",
                    "version_change": "2.0 \u2192 3.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to704__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to704__0\"><a href=\"#difflib_chg_to704__top\">t</a></td><td class=\"diff_header\" id=\"from704_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;access&nbsp;and&nbsp;collect&nbsp;application&nbsp;data&nbsp;resident</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to704__top\">t</a></td><td class=\"diff_header\" id=\"to704_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;try&nbsp;to&nbsp;access&nbsp;and&nbsp;collect&nbsp;application&nbsp;data&nbsp;r</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;on&nbsp;the&nbsp;device.&nbsp;Adversaries&nbsp;often&nbsp;target&nbsp;popular&nbsp;application</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">esident&nbsp;on&nbsp;the&nbsp;device.&nbsp;Adversaries&nbsp;often&nbsp;target&nbsp;popular&nbsp;appl</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">s&nbsp;such&nbsp;as&nbsp;Facebook,&nbsp;WeChat,&nbsp;and&nbsp;Gmail.(Citation:&nbsp;SWB&nbsp;Exodus&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ications,&nbsp;such&nbsp;as&nbsp;Facebook,&nbsp;WeChat,&nbsp;and&nbsp;Gmail.(Citation:&nbsp;SWB</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">March&nbsp;2019)&nbsp;&nbsp;This&nbsp;technique&nbsp;requires&nbsp;either&nbsp;escalated&nbsp;privil</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;Exodus&nbsp;March&nbsp;2019)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Due&nbsp;to&nbsp;mobile&nbsp;OS&nbsp;sandboxing,&nbsp;this&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">eges&nbsp;or&nbsp;for&nbsp;the&nbsp;targeted&nbsp;app&nbsp;to&nbsp;have&nbsp;stored&nbsp;the&nbsp;data&nbsp;in&nbsp;an&nbsp;i</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">echnique&nbsp;is&nbsp;only&nbsp;possible&nbsp;in&nbsp;three&nbsp;scenarios:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;An&nbsp;appl</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">nsecure&nbsp;manner&nbsp;(e.g.,&nbsp;with&nbsp;insecure&nbsp;file&nbsp;permissions&nbsp;or&nbsp;in&nbsp;a</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ication&nbsp;stores&nbsp;files&nbsp;in&nbsp;unprotected&nbsp;external&nbsp;storage&nbsp;&nbsp;*&nbsp;An&nbsp;a</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">n&nbsp;insecure&nbsp;location&nbsp;such&nbsp;as&nbsp;an&nbsp;external&nbsp;storage&nbsp;directory).</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">pplication&nbsp;stores&nbsp;files&nbsp;in&nbsp;its&nbsp;internal&nbsp;storage&nbsp;directory&nbsp;wi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">th&nbsp;insecure&nbsp;permissions&nbsp;(e.g.&nbsp;777)&nbsp;&nbsp;*&nbsp;The&nbsp;adversary&nbsp;gains&nbsp;ro</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ot&nbsp;permissions&nbsp;on&nbsp;the&nbsp;device&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1006: Use Recent OS Version"
                        ],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--0d95940f-9583-4e0f-824c-a42c1be47fad",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2018-10-17 00:14:20.652000+00:00",
                    "modified": "2022-03-28 19:41:56.018000+00:00",
                    "name": "Supply Chain Compromise",
                    "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images\n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels. Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.  Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency, specifically with the widespread usage of third-party advertising libraries.(Citation: Grace-Advertisement)(Citation: NowSecure-RemoteCode)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1474",
                            "external_id": "T1474"
                        },
                        {
                            "source_name": "Grace-Advertisement",
                            "description": "M. Grace et al. (2012, April 16-18). Unsafe exposure analysis of mobile in-app advertisements. Retrieved December 22, 2016.",
                            "url": "https://www.csc2.ncsu.edu/faculty/xjiang4/pubs/WISEC12_ADRISK.pdf"
                        },
                        {
                            "source_name": "NowSecure-RemoteCode",
                            "description": "Ryan Welton. (2015, June 15). A Pattern for Remote Code Execution using Arbitrary File Writes and MultiDex Applications. Retrieved December 22, 2016.",
                            "url": "https://www.nowsecure.com/blog/2015/06/15/a-pattern-for-remote-code-execution-using-arbitrary-file-writes-and-multidex-applications/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-6.html",
                            "external_id": "APP-6"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-0.html",
                            "external_id": "SPC-0"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-1.html",
                            "external_id": "SPC-1"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-2.html",
                            "external_id": "SPC-2"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-3.html",
                            "external_id": "SPC-3"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-4.html",
                            "external_id": "SPC-4"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-5.html",
                            "external_id": "SPC-5"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-6.html",
                            "external_id": "SPC-6"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-7.html",
                            "external_id": "SPC-7"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-8.html",
                            "external_id": "SPC-8"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-9.html",
                            "external_id": "SPC-9"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-10.html",
                            "external_id": "SPC-10"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-11.html",
                            "external_id": "SPC-11"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-12.html",
                            "external_id": "SPC-12"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-13.html",
                            "external_id": "SPC-13"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-14.html",
                            "external_id": "SPC-14"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-15.html",
                            "external_id": "SPC-15"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-16.html",
                            "external_id": "SPC-16"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-17.html",
                            "external_id": "SPC-17"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-18.html",
                            "external_id": "SPC-18"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-19.html",
                            "external_id": "SPC-19"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-20.html",
                            "external_id": "SPC-20"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-21.html",
                            "external_id": "SPC-21"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Usage of insecure or malicious third-party libraries could be detected by application vetting services. Malicious software development tools could be detected by enterprises that deploy endpoint protection software on computers that are used to develop mobile apps. Application vetting could detect the usage of insecure or malicious third-party libraries.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"M. Grace et al. (2012, April 16-18). Unsafe exposure analysis of mobile in-app advertisements. Retrieved December 22, 2016.\", \"root['external_references'][3]['external_id']\": \"APP-6\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1077\", \"root['external_references'][1]['external_id']\": \"APP-6\", \"root['external_references'][3]['description']\": \"M. Grace et al. (2012, April 16-18). Unsafe exposure analysis of mobile in-app advertisements. Retrieved December 22, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-28 19:41:56.018000+00:00\", \"old_value\": \"2021-03-10 21:06:37.536000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\\n\\nSupply chain compromise can take place at any stage of the supply chain including:\\n\\n* Manipulation of development tools\\n* Manipulation of a development environment\\n* Manipulation of source code repositories (public or private)\\n* Manipulation of source code in open-source dependencies\\n* Manipulation of software update/distribution mechanisms\\n* Compromised/infected system images\\n* Replacement of legitimate software with modified versions\\n* Sales of modified/counterfeit products to legitimate distributors\\n* Shipment interdiction\\n\\nWhile supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels. Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.  Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency, specifically with the widespread usage of third-party advertising libraries.(Citation: Grace-Advertisement)(Citation: NowSecure-RemoteCode)\", \"old_value\": \"As further described in [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), supply chain compromise is the manipulation of products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. Somewhat related, adversaries could also identify and exploit inadvertently present vulnerabilities. In many cases, it may be difficult to be certain whether exploitable functionality is due to malicious intent or simply inadvertent mistake.\\n\\nThird-party libraries incorporated into mobile apps could contain malicious behavior, privacy-invasive behavior, or exploitable vulnerabilities. An adversary could deliberately insert malicious behavior or could exploit inadvertent vulnerabilities. For example, security issues have previously been identified in third-party advertising libraries incorporated into apps.(Citation: NowSecure-RemoteCode)(Citation: Grace-Advertisement).\", \"diff\": \"--- \\n+++ \\n@@ -1,3 +1,15 @@\\n-As further described in [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), supply chain compromise is the manipulation of products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise. Somewhat related, adversaries could also identify and exploit inadvertently present vulnerabilities. In many cases, it may be difficult to be certain whether exploitable functionality is due to malicious intent or simply inadvertent mistake.\\n+Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\\n \\n-Third-party libraries incorporated into mobile apps could contain malicious behavior, privacy-invasive behavior, or exploitable vulnerabilities. An adversary could deliberately insert malicious behavior or could exploit inadvertent vulnerabilities. For example, security issues have previously been identified in third-party advertising libraries incorporated into apps.(Citation: NowSecure-RemoteCode)(Citation: Grace-Advertisement).\\n+Supply chain compromise can take place at any stage of the supply chain including:\\n+\\n+* Manipulation of development tools\\n+* Manipulation of a development environment\\n+* Manipulation of source code repositories (public or private)\\n+* Manipulation of source code in open-source dependencies\\n+* Manipulation of software update/distribution mechanisms\\n+* Compromised/infected system images\\n+* Replacement of legitimate software with modified versions\\n+* Sales of modified/counterfeit products to legitimate distributors\\n+* Shipment interdiction\\n+\\n+While supply chain compromise can impact any component of hardware or software, attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels. Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.  Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency, specifically with the widespread usage of third-party advertising libraries.(Citation: Grace-Advertisement)(Citation: NowSecure-RemoteCode)\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Grace-Advertisement\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.csc2.ncsu.edu/faculty/xjiang4/pubs/WISEC12_ADRISK.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-6.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Grace-Advertisement\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-6.html\", \"old_value\": \"https://www.csc2.ncsu.edu/faculty/xjiang4/pubs/WISEC12_ADRISK.pdf\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Usage of insecure or malicious third-party libraries could be detected by application vetting services. Malicious software development tools could be detected by enterprises that deploy endpoint protection software on computers that are used to develop mobile apps. Application vetting could detect the usage of insecure or malicious third-party libraries.\", \"old_value\": \"* Insecure third-party libraries could be detected by application vetting techniques. For example, Google's [App Security Improvement Program](https://developer.android.com/google/play/asi) detects the use of third-party libraries with known vulnerabilities within Android apps submitted to the Google Play Store.\\n* Malicious software development tools could be detected by enterprises deploying integrity checking software to the computers that they use to develop code to detect presence of unauthorized, modified software development tools.\", \"diff\": \"--- \\n+++ \\n@@ -1,2 +1 @@\\n-* Insecure third-party libraries could be detected by application vetting techniques. For example, Google's [App Security Improvement Program](https://developer.android.com/google/play/asi) detects the use of third-party libraries with known vulnerabilities within Android apps submitted to the Google Play Store.\\n-* Malicious software development tools could be detected by enterprises deploying integrity checking software to the computers that they use to develop code to detect presence of unauthorized, modified software development tools.\\n+Usage of insecure or malicious third-party libraries could be detected by application vetting services. Malicious software development tools could be detected by enterprises that deploy endpoint protection software on computers that are used to develop mobile apps. Application vetting could detect the usage of insecure or malicious third-party libraries.\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.1\"}}, \"iterable_item_added\": {\"root['external_references'][4]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-0.html\", \"external_id\": \"SPC-0\"}, \"root['external_references'][5]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-1.html\", \"external_id\": \"SPC-1\"}, \"root['external_references'][6]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-2.html\", \"external_id\": \"SPC-2\"}, \"root['external_references'][7]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-3.html\", \"external_id\": \"SPC-3\"}, \"root['external_references'][8]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-4.html\", \"external_id\": \"SPC-4\"}, \"root['external_references'][9]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-5.html\", \"external_id\": \"SPC-5\"}, \"root['external_references'][10]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-6.html\", \"external_id\": \"SPC-6\"}, \"root['external_references'][11]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-7.html\", \"external_id\": \"SPC-7\"}, \"root['external_references'][12]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-8.html\", \"external_id\": \"SPC-8\"}, \"root['external_references'][13]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-9.html\", \"external_id\": \"SPC-9\"}, \"root['external_references'][14]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-10.html\", \"external_id\": \"SPC-10\"}, \"root['external_references'][15]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-11.html\", \"external_id\": \"SPC-11\"}, \"root['external_references'][16]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-12.html\", \"external_id\": \"SPC-12\"}, \"root['external_references'][17]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-13.html\", \"external_id\": \"SPC-13\"}, \"root['external_references'][18]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-14.html\", \"external_id\": \"SPC-14\"}, \"root['external_references'][19]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-15.html\", \"external_id\": \"SPC-15\"}, \"root['external_references'][20]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-16.html\", \"external_id\": \"SPC-16\"}, \"root['external_references'][21]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-17.html\", \"external_id\": \"SPC-17\"}, \"root['external_references'][22]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-18.html\", \"external_id\": \"SPC-18\"}, \"root['external_references'][23]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-19.html\", \"external_id\": \"SPC-19\"}, \"root['external_references'][24]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-20.html\", \"external_id\": \"SPC-20\"}, \"root['external_references'][25]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/supply-chain-threats/SPC-21.html\", \"external_id\": \"SPC-21\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to724__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to724__0\"><a href=\"#difflib_chg_to724__top\">t</a></td><td class=\"diff_header\" id=\"from724_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">As&nbsp;further&nbsp;described&nbsp;in&nbsp;[Supply&nbsp;Chain&nbsp;Compromise](https://at</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to724__top\">t</a></td><td class=\"diff_header\" id=\"to724_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;manipulate&nbsp;products&nbsp;or&nbsp;product&nbsp;delivery&nbsp;mech</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">tack.mitre.org/techniques/T1195),&nbsp;supply&nbsp;chain&nbsp;compromise&nbsp;is</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">anisms&nbsp;prior&nbsp;to&nbsp;receipt&nbsp;by&nbsp;a&nbsp;final&nbsp;consumer&nbsp;for&nbsp;the&nbsp;purpose&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;the&nbsp;manipulation&nbsp;of&nbsp;products&nbsp;or&nbsp;product&nbsp;delivery&nbsp;mechanisms</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">of&nbsp;data&nbsp;or&nbsp;system&nbsp;compromise.&nbsp;&nbsp;Supply&nbsp;chain&nbsp;compromise&nbsp;can&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;prior&nbsp;to&nbsp;receipt&nbsp;by&nbsp;a&nbsp;final&nbsp;consumer&nbsp;for&nbsp;the&nbsp;purpose&nbsp;of&nbsp;dat</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ake&nbsp;place&nbsp;at&nbsp;any&nbsp;stage&nbsp;of&nbsp;the&nbsp;supply&nbsp;chain&nbsp;including:&nbsp;&nbsp;*&nbsp;Man</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">a&nbsp;or&nbsp;system&nbsp;compromise.&nbsp;Somewhat&nbsp;related,&nbsp;adversaries&nbsp;could&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ipulation&nbsp;of&nbsp;development&nbsp;tools&nbsp;*&nbsp;Manipulation&nbsp;of&nbsp;a&nbsp;developme</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">also&nbsp;identify&nbsp;and&nbsp;exploit&nbsp;inadvertently&nbsp;present&nbsp;vulnerabilit</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">nt&nbsp;environment&nbsp;*&nbsp;Manipulation&nbsp;of&nbsp;source&nbsp;code&nbsp;repositories&nbsp;(p</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ies.&nbsp;In&nbsp;many&nbsp;cases,&nbsp;it&nbsp;may&nbsp;be&nbsp;difficult&nbsp;to&nbsp;be&nbsp;certain&nbsp;whethe</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ublic&nbsp;or&nbsp;private)&nbsp;*&nbsp;Manipulation&nbsp;of&nbsp;source&nbsp;code&nbsp;in&nbsp;open-sour</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">r&nbsp;exploitable&nbsp;functionality&nbsp;is&nbsp;due&nbsp;to&nbsp;malicious&nbsp;intent&nbsp;or&nbsp;si</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ce&nbsp;dependencies&nbsp;*&nbsp;Manipulation&nbsp;of&nbsp;software&nbsp;update/distributi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">mply&nbsp;inadvertent&nbsp;mistake.&nbsp;&nbsp;Third-party&nbsp;libraries&nbsp;incorporate</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">on&nbsp;mechanisms&nbsp;*&nbsp;Compromised/infected&nbsp;system&nbsp;images&nbsp;*&nbsp;Replace</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">d&nbsp;into&nbsp;mobile&nbsp;apps&nbsp;could&nbsp;contain&nbsp;malicious&nbsp;behavior,&nbsp;privacy</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ment&nbsp;of&nbsp;legitimate&nbsp;software&nbsp;with&nbsp;modified&nbsp;versions&nbsp;*&nbsp;Sales&nbsp;o</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">-invasive&nbsp;behavior,&nbsp;or&nbsp;exploitable&nbsp;vulnerabilities.&nbsp;An&nbsp;adver</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">f&nbsp;modified/counterfeit&nbsp;products&nbsp;to&nbsp;legitimate&nbsp;distributors&nbsp;*</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">sary&nbsp;could&nbsp;deliberately&nbsp;insert&nbsp;malicious&nbsp;behavior&nbsp;or&nbsp;could&nbsp;e</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;Shipment&nbsp;interdiction&nbsp;&nbsp;While&nbsp;supply&nbsp;chain&nbsp;compromise&nbsp;can&nbsp;im</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">xploit&nbsp;inadvertent&nbsp;vulnerabilities.&nbsp;For&nbsp;example,&nbsp;security&nbsp;is</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">pact&nbsp;any&nbsp;component&nbsp;of&nbsp;hardware&nbsp;or&nbsp;software,&nbsp;attackers&nbsp;lookin</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">sues&nbsp;have&nbsp;previously&nbsp;been&nbsp;identified&nbsp;in&nbsp;third-party&nbsp;advertis</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">g&nbsp;to&nbsp;gain&nbsp;execution&nbsp;have&nbsp;often&nbsp;focused&nbsp;on&nbsp;malicious&nbsp;addition</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ing&nbsp;libraries&nbsp;incorporated&nbsp;into&nbsp;apps.(Citation:&nbsp;NowSecure-Re</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s&nbsp;to&nbsp;legitimate&nbsp;software&nbsp;in&nbsp;software&nbsp;distribution&nbsp;or&nbsp;update&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">moteCode)(Citation:&nbsp;Grace-Advertisement).</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">channels.&nbsp;Targeting&nbsp;may&nbsp;be&nbsp;specific&nbsp;to&nbsp;a&nbsp;desired&nbsp;victim&nbsp;set&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">or&nbsp;malicious&nbsp;software&nbsp;may&nbsp;be&nbsp;distributed&nbsp;to&nbsp;a&nbsp;broad&nbsp;set&nbsp;of&nbsp;c</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">onsumers&nbsp;but&nbsp;only&nbsp;move&nbsp;on&nbsp;to&nbsp;additional&nbsp;tactics&nbsp;on&nbsp;specific&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">victims.&nbsp;&nbsp;Popular&nbsp;open&nbsp;source&nbsp;projects&nbsp;that&nbsp;are&nbsp;used&nbsp;as&nbsp;depe</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ndencies&nbsp;in&nbsp;many&nbsp;applications&nbsp;may&nbsp;also&nbsp;be&nbsp;targeted&nbsp;as&nbsp;a&nbsp;mean</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s&nbsp;to&nbsp;add&nbsp;malicious&nbsp;code&nbsp;to&nbsp;users&nbsp;of&nbsp;the&nbsp;dependency,&nbsp;specific</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ally&nbsp;with&nbsp;the&nbsp;widespread&nbsp;usage&nbsp;of&nbsp;third-party&nbsp;advertising&nbsp;li</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">braries.(Citation:&nbsp;Grace-Advertisement)(Citation:&nbsp;NowSecure-</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">RemoteCode)</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [
                            "M1001: Security Updates",
                            "M1013: Application Developer Guidance"
                        ],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d8940e76-f9c1-4912-bea6-e21c251370b6",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-08-09 16:14:58.254000+00:00",
                    "modified": "2022-04-08 15:58:43.813000+00:00",
                    "name": "Video Capture",
                    "description": "An adversary can leverage a device\u2019s cameras to gather information by capturing video recordings. Images may also be captured, potentially in specified intervals, in lieu of video files.  \n\n \n\nMalware or scripts may interact with the device cameras through an available API provided by the operating system. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1513) due to use of the device\u2019s cameras for video recording rather than capturing the victim\u2019s screen. \n\n \n\nIn Android, an application must hold the `android.permission.CAMERA` permission to access the cameras. In iOS, applications must include the `NSCameraUsageDescription` key in the `Info.plist` file. In both cases, the user must grant permission to the requesting application to use the camera. If the device has been rooted or jailbroken, an adversary may be able to access the camera without knowledge of the user.  ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1512",
                            "external_id": "T1512"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-19.html",
                            "external_id": "APP-19"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "The user can view which applications have permission to use the camera through the device settings screen, where the user can then choose to revoke the permissions. During the vetting process, applications using the Android permission `android.permission.CAMERA`, or the iOS `NSCameraUsageDescription` plist entry could be given closer scrutiny. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-08 15:58:43.813000+00:00\", \"old_value\": \"2019-09-12 18:33:15.023000+00:00\"}, \"root['name']\": {\"new_value\": \"Video Capture\", \"old_value\": \"Capture Camera\"}, \"root['description']\": {\"new_value\": \"An adversary can leverage a device\\u2019s cameras to gather information by capturing video recordings. Images may also be captured, potentially in specified intervals, in lieu of video files.  \\n\\n \\n\\nMalware or scripts may interact with the device cameras through an available API provided by the operating system. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1513) due to use of the device\\u2019s cameras for video recording rather than capturing the victim\\u2019s screen. \\n\\n \\n\\nIn Android, an application must hold the `android.permission.CAMERA` permission to access the cameras. In iOS, applications must include the `NSCameraUsageDescription` key in the `Info.plist` file. In both cases, the user must grant permission to the requesting application to use the camera. If the device has been rooted or jailbroken, an adversary may be able to access the camera without knowledge of the user.  \", \"old_value\": \"Adversaries may utilize the camera to capture information about the user, their surroundings, or other physical identifiers. Adversaries may use the physical camera devices on a mobile device to capture images or video. By default, in Android and iOS, an application must request permission to access a camera device which is granted by the user through a request prompt. In Android, applications must hold the `android.permission.CAMERA` permission to access the camera. In iOS, applications must include the `NSCameraUsageDescription` key in the `Info.plist` file, and must request access to the camera at runtime.\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,9 @@\\n-Adversaries may utilize the camera to capture information about the user, their surroundings, or other physical identifiers. Adversaries may use the physical camera devices on a mobile device to capture images or video. By default, in Android and iOS, an application must request permission to access a camera device which is granted by the user through a request prompt. In Android, applications must hold the `android.permission.CAMERA` permission to access the camera. In iOS, applications must include the `NSCameraUsageDescription` key in the `Info.plist` file, and must request access to the camera at runtime.\\n+An adversary can leverage a device\\u2019s cameras to gather information by capturing video recordings. Images may also be captured, potentially in specified intervals, in lieu of video files.  \\n+\\n+ \\n+\\n+Malware or scripts may interact with the device cameras through an available API provided by the operating system. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1513) due to use of the device\\u2019s cameras for video recording rather than capturing the victim\\u2019s screen. \\n+\\n+ \\n+\\n+In Android, an application must hold the `android.permission.CAMERA` permission to access the cameras. In iOS, applications must include the `NSCameraUsageDescription` key in the `Info.plist` file. In both cases, the user must grant permission to the requesting application to use the camera. If the device has been rooted or jailbroken, an adversary may be able to access the camera without knowledge of the user.  \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_detection']\": {\"new_value\": \"The user can view which applications have permission to use the camera through the device settings screen, where the user can then choose to revoke the permissions. During the vetting process, applications using the Android permission `android.permission.CAMERA`, or the iOS `NSCameraUsageDescription` plist entry could be given closer scrutiny. \", \"old_value\": \"On Android and iOS, the user can view which applications have permission to use the camera through the device settings screen, and the user can choose to revoke the permissions.\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 2.0",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to718__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to718__0\"><a href=\"#difflib_chg_to718__top\">t</a></td><td class=\"diff_header\" id=\"from718_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;utilize&nbsp;the&nbsp;camera&nbsp;to&nbsp;capture&nbsp;information&nbsp;ab</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to718__top\">t</a></td><td class=\"diff_header\" id=\"to718_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">An&nbsp;adversary&nbsp;can&nbsp;leverage&nbsp;a&nbsp;device\u2019s&nbsp;cameras&nbsp;to&nbsp;gather&nbsp;infor</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">out&nbsp;the&nbsp;user,&nbsp;their&nbsp;surroundings,&nbsp;or&nbsp;other&nbsp;physical&nbsp;identifi</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">mation&nbsp;by&nbsp;capturing&nbsp;video&nbsp;recordings.&nbsp;Images&nbsp;may&nbsp;also&nbsp;be&nbsp;cap</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ers.&nbsp;Adversaries&nbsp;may&nbsp;use&nbsp;the&nbsp;physical&nbsp;camera&nbsp;devices&nbsp;on&nbsp;a&nbsp;mo</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tured,&nbsp;potentially&nbsp;in&nbsp;specified&nbsp;intervals,&nbsp;in&nbsp;lieu&nbsp;of&nbsp;video&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">bile&nbsp;device&nbsp;to&nbsp;capture&nbsp;images&nbsp;or&nbsp;video.&nbsp;By&nbsp;default,&nbsp;in&nbsp;Andro</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">files.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Malware&nbsp;or&nbsp;scripts&nbsp;may&nbsp;interact&nbsp;with&nbsp;the&nbsp;device</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">id&nbsp;and&nbsp;iOS,&nbsp;an&nbsp;application&nbsp;must&nbsp;request&nbsp;permission&nbsp;to&nbsp;access</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;cameras&nbsp;through&nbsp;an&nbsp;available&nbsp;API&nbsp;provided&nbsp;by&nbsp;the&nbsp;operating&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;a&nbsp;camera&nbsp;device&nbsp;which&nbsp;is&nbsp;granted&nbsp;by&nbsp;the&nbsp;user&nbsp;through&nbsp;a&nbsp;requ</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">system.&nbsp;Video&nbsp;or&nbsp;image&nbsp;files&nbsp;may&nbsp;be&nbsp;written&nbsp;to&nbsp;disk&nbsp;and&nbsp;exfi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">est&nbsp;prompt.&nbsp;In&nbsp;Android,&nbsp;applications&nbsp;must&nbsp;hold&nbsp;the&nbsp;`android.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ltrated&nbsp;later.&nbsp;This&nbsp;technique&nbsp;differs&nbsp;from&nbsp;[Screen&nbsp;Capture](</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">permission.CAMERA`&nbsp;permission&nbsp;to&nbsp;access&nbsp;the&nbsp;camera.&nbsp;In&nbsp;iOS,&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">https://attack.mitre.org/techniques/T1513)&nbsp;due&nbsp;to&nbsp;use&nbsp;of&nbsp;the</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">applications&nbsp;must&nbsp;include&nbsp;the&nbsp;`NSCameraUsageDescription`&nbsp;key</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;device\u2019s&nbsp;cameras&nbsp;for&nbsp;video&nbsp;recording&nbsp;rather&nbsp;than&nbsp;capturing&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;in&nbsp;the&nbsp;`Info.plist`&nbsp;file,&nbsp;and&nbsp;must&nbsp;request&nbsp;access&nbsp;to&nbsp;the&nbsp;ca</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">the&nbsp;victim\u2019s&nbsp;screen.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;In&nbsp;Android,&nbsp;an&nbsp;application&nbsp;must&nbsp;ho</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">mera&nbsp;at&nbsp;runtime.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ld&nbsp;the&nbsp;`android.permission.CAMERA`&nbsp;permission&nbsp;to&nbsp;access&nbsp;the&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cameras.&nbsp;In&nbsp;iOS,&nbsp;applications&nbsp;must&nbsp;include&nbsp;the&nbsp;`NSCameraUsag</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">eDescription`&nbsp;key&nbsp;in&nbsp;the&nbsp;`Info.plist`&nbsp;file.&nbsp;In&nbsp;both&nbsp;cases,&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">he&nbsp;user&nbsp;must&nbsp;grant&nbsp;permission&nbsp;to&nbsp;the&nbsp;requesting&nbsp;application&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">to&nbsp;use&nbsp;the&nbsp;camera.&nbsp;If&nbsp;the&nbsp;device&nbsp;has&nbsp;been&nbsp;rooted&nbsp;or&nbsp;jailbrok</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">en,&nbsp;an&nbsp;adversary&nbsp;may&nbsp;be&nbsp;able&nbsp;to&nbsp;access&nbsp;the&nbsp;camera&nbsp;without&nbsp;kn</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">owledge&nbsp;of&nbsp;the&nbsp;user.&nbsp;&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1006: Use Recent OS Version"
                        ],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                }
            ],
            "minor_version_changes": [
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--39dd7871-f59b-495f-a9a5-3cb8cc50c9b2",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-09-15 15:26:08.183000+00:00",
                    "modified": "2022-04-11 15:54:08.965000+00:00",
                    "name": "Access Notifications",
                    "description": "Adversaries may collect data within notifications sent by the operating system or other applications. Notifications may contain sensitive data such as one-time authentication codes sent over SMS, email, or other mediums. In the case of Credential Access, adversaries may attempt to intercept one-time code sent to the device. Adversaries can also dismiss notifications to prevent the user from noticing that the notification has arrived and can trigger action buttons contained within notifications.(Citation: ESET 2FA Bypass) ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1517",
                            "external_id": "T1517"
                        },
                        {
                            "source_name": "ESET 2FA Bypass",
                            "description": "Luk\u00e1\u0161 \u0160tefanko. (2019, June 17). Malware sidesteps Google permissions policy with new 2FA bypass technique. Retrieved September 15, 2019.",
                            "url": "https://www.welivesecurity.com/2019/06/17/malware-google-permissions-2fa-bypass/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services can look for applications requesting the `BIND_NOTIFICATION_LISTENER_SERVICE` permission in a service declaration. Users can also inspect and modify the list of applications that have notification access through the device settings (e.g. Apps & notification -> Special app access -> Notification access). ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_contributors']\": [\"Luk\\u00e1\\u0161 \\u0160tefanko, ESET\"]}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-11 15:54:08.965000+00:00\", \"old_value\": \"2020-07-09 14:07:02.217000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may collect data within notifications sent by the operating system or other applications. Notifications may contain sensitive data such as one-time authentication codes sent over SMS, email, or other mediums. In the case of Credential Access, adversaries may attempt to intercept one-time code sent to the device. Adversaries can also dismiss notifications to prevent the user from noticing that the notification has arrived and can trigger action buttons contained within notifications.(Citation: ESET 2FA Bypass) \", \"old_value\": \"A malicious application can read notifications sent by the operating system or other applications, which may contain sensitive data such as one-time authentication codes sent over SMS, email, or other mediums. A malicious application can also dismiss notifications to prevent the user from noticing that the notifications arrived and can trigger action buttons contained within notifications.(Citation: ESET 2FA Bypass)\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Application vetting services can look for applications requesting the `BIND_NOTIFICATION_LISTENER_SERVICE` permission in a service declaration. Users can also inspect and modify the list of applications that have notification access through the device settings (e.g. Apps & notification -> Special app access -> Notification access). \", \"old_value\": \"The user can inspect (and modify) the list of applications that have notification access through the device settings (e.g. Apps & notification -> Special app access -> Notification access).\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.1\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 1.1",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to723__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to723__0\"><a href=\"#difflib_chg_to723__top\">t</a></td><td class=\"diff_header\" id=\"from723_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">A&nbsp;malicious&nbsp;application&nbsp;can&nbsp;read&nbsp;notifications&nbsp;sent&nbsp;by&nbsp;the&nbsp;o</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to723__top\">t</a></td><td class=\"diff_header\" id=\"to723_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;collect&nbsp;data&nbsp;within&nbsp;notifications&nbsp;sent&nbsp;by&nbsp;th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">perating&nbsp;system&nbsp;or&nbsp;other&nbsp;applications,&nbsp;which&nbsp;may&nbsp;contain&nbsp;sen</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;operating&nbsp;system&nbsp;or&nbsp;other&nbsp;applications.&nbsp;Notifications&nbsp;may&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">sitive&nbsp;data&nbsp;such&nbsp;as&nbsp;one-time&nbsp;authentication&nbsp;codes&nbsp;sent&nbsp;over&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">contain&nbsp;sensitive&nbsp;data&nbsp;such&nbsp;as&nbsp;one-time&nbsp;authentication&nbsp;codes</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">SMS,&nbsp;email,&nbsp;or&nbsp;other&nbsp;mediums.&nbsp;A&nbsp;malicious&nbsp;application&nbsp;can&nbsp;al</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;sent&nbsp;over&nbsp;SMS,&nbsp;email,&nbsp;or&nbsp;other&nbsp;mediums.&nbsp;In&nbsp;the&nbsp;case&nbsp;of&nbsp;Cred</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">so&nbsp;dismiss&nbsp;notifications&nbsp;to&nbsp;prevent&nbsp;the&nbsp;user&nbsp;from&nbsp;noticing&nbsp;t</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ential&nbsp;Access,&nbsp;adversaries&nbsp;may&nbsp;attempt&nbsp;to&nbsp;intercept&nbsp;one-time</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">hat&nbsp;the&nbsp;notifications&nbsp;arrived&nbsp;and&nbsp;can&nbsp;trigger&nbsp;action&nbsp;buttons</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;code&nbsp;sent&nbsp;to&nbsp;the&nbsp;device.&nbsp;Adversaries&nbsp;can&nbsp;also&nbsp;dismiss&nbsp;notif</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;contained&nbsp;within&nbsp;notifications.(Citation:&nbsp;ESET&nbsp;2FA&nbsp;Bypass)</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ications&nbsp;to&nbsp;prevent&nbsp;the&nbsp;user&nbsp;from&nbsp;noticing&nbsp;that&nbsp;the&nbsp;notifica</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tion&nbsp;has&nbsp;arrived&nbsp;and&nbsp;can&nbsp;trigger&nbsp;action&nbsp;buttons&nbsp;contained&nbsp;wi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">thin&nbsp;notifications.(Citation:&nbsp;ESET&nbsp;2FA&nbsp;Bypass)&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1012: Enterprise Policy",
                            "M1013: Application Developer Guidance"
                        ],
                        "new": [
                            "M1011: User Guidance"
                        ],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--6a3f6490-9c44-40de-b059-e5940f246673",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:33.158000+00:00",
                    "modified": "2022-04-19 20:03:51.831000+00:00",
                    "name": "Application Layer Protocol",
                    "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the mobile device, and often the results of those commands, will be embedded within the protocol traffic between the mobile device and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1437",
                            "external_id": "T1437"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-29.html",
                            "external_id": "APP-29"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Abuse of standard application protocols can be difficult to detect as many legitimate mobile applications leverage such protocols for language-specific APIs. Enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Abuse of standard application protocols can be difficult to detect as many legitimate mobile applications leverage such protocols for language-specific APIs. Enterprises may be better served focusing on detection at other stages of adversarial behavior.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1040\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-19 20:03:51.831000+00:00\", \"old_value\": \"2019-02-03 14:52:45.266000+00:00\"}, \"root['name']\": {\"new_value\": \"Application Layer Protocol\", \"old_value\": \"Standard Application Layer Protocol\"}, \"root['description']\": {\"new_value\": \"Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the mobile device, and often the results of those commands, will be embedded within the protocol traffic between the mobile device and server. \\n\\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS.\", \"old_value\": \"Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic.\\n\\nIn the mobile environment, the Google Cloud Messaging (GCM; two-way) and Apple Push Notification Service (APNS; one-way server-to-device) are commonly used protocols on Android and iOS respectively that would blend in with routine device traffic and are difficult for enterprises to inspect. Google reportedly responds to reports of abuse by blocking access to GCM.(Citation: Kaspersky-MobileMalware)\", \"diff\": \"--- \\n+++ \\n@@ -1,3 +1,3 @@\\n-Adversaries may communicate using a common, standardized application layer protocol such as HTTP, HTTPS, SMTP, or DNS to avoid detection by blending in with existing traffic.\\n+Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the mobile device, and often the results of those commands, will be embedded within the protocol traffic between the mobile device and server. \\n \\n-In the mobile environment, the Google Cloud Messaging (GCM; two-way) and Apple Push Notification Service (APNS; one-way server-to-device) are commonly used protocols on Android and iOS respectively that would blend in with routine device traffic and are difficult for enterprises to inspect. Google reportedly responds to reports of abuse by blocking access to GCM.(Citation: Kaspersky-MobileMalware)\\n+Adversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS.\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.2\", \"old_value\": \"1.1\"}}, \"iterable_item_removed\": {\"root['kill_chain_phases'][1]\": {\"kill_chain_name\": \"mitre-mobile-attack\", \"phase_name\": \"exfiltration\"}, \"root['external_references'][2]\": {\"source_name\": \"Kaspersky-MobileMalware\", \"description\": \"Roman Unuchek and Victor Chebyshev. (2014, February 24). Mobile Malware Evolution: 2013. Retrieved December 22, 2016.\", \"url\": \"https://securelist.com/mobile-malware-evolution-2013/58335/\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.2",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to700__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to700__0\"><a href=\"#difflib_chg_to700__top\">t</a></td><td class=\"diff_header\" id=\"from700_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;communicate&nbsp;using&nbsp;a&nbsp;common,&nbsp;standardized&nbsp;app</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to700__top\">t</a></td><td class=\"diff_header\" id=\"to700_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;communicate&nbsp;using&nbsp;application&nbsp;layer&nbsp;protocol</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">lication&nbsp;layer&nbsp;protocol&nbsp;such&nbsp;as&nbsp;HTTP,&nbsp;HTTPS,&nbsp;SMTP,&nbsp;or&nbsp;DNS&nbsp;to</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s&nbsp;to&nbsp;avoid&nbsp;detection/network&nbsp;filtering&nbsp;by&nbsp;blending&nbsp;in&nbsp;with&nbsp;e</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;avoid&nbsp;detection&nbsp;by&nbsp;blending&nbsp;in&nbsp;with&nbsp;existing&nbsp;traffic.&nbsp;&nbsp;In&nbsp;t</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">xisting&nbsp;traffic.&nbsp;Commands&nbsp;to&nbsp;the&nbsp;mobile&nbsp;device,&nbsp;and&nbsp;often&nbsp;th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">he&nbsp;mobile&nbsp;environment,&nbsp;the&nbsp;Google&nbsp;Cloud&nbsp;Messaging&nbsp;(GCM;&nbsp;two-</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;results&nbsp;of&nbsp;those&nbsp;commands,&nbsp;will&nbsp;be&nbsp;embedded&nbsp;within&nbsp;the&nbsp;pro</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">way)&nbsp;and&nbsp;Apple&nbsp;Push&nbsp;Notification&nbsp;Service&nbsp;(APNS;&nbsp;one-way&nbsp;serv</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tocol&nbsp;traffic&nbsp;between&nbsp;the&nbsp;mobile&nbsp;device&nbsp;and&nbsp;server.&nbsp;&nbsp;&nbsp;Advers</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">er-to-device)&nbsp;are&nbsp;commonly&nbsp;used&nbsp;protocols&nbsp;on&nbsp;Android&nbsp;and&nbsp;iOS</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">aries&nbsp;may&nbsp;utilize&nbsp;many&nbsp;different&nbsp;protocols,&nbsp;including&nbsp;those&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;respectively&nbsp;that&nbsp;would&nbsp;blend&nbsp;in&nbsp;with&nbsp;routine&nbsp;device&nbsp;traffi</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">used&nbsp;for&nbsp;web&nbsp;browsing,&nbsp;transferring&nbsp;files,&nbsp;electronic&nbsp;mail,&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">c&nbsp;and&nbsp;are&nbsp;difficult&nbsp;for&nbsp;enterprises&nbsp;to&nbsp;inspect.&nbsp;Google&nbsp;repor</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">or&nbsp;DNS.</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">tedly&nbsp;responds&nbsp;to&nbsp;reports&nbsp;of&nbsp;abuse&nbsp;by&nbsp;blocking&nbsp;access&nbsp;to&nbsp;GCM</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">.(Citation:&nbsp;Kaspersky-MobileMalware)</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d9e88203-2b5d-405f-a406-2933b1e3d7e4",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:10.285000+00:00",
                    "modified": "2022-04-06 13:31:22.485000+00:00",
                    "name": "Data Encrypted for Impact",
                    "description": "An adversary may encrypt files stored on a mobile device to prevent the user from accessing them. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1471",
                            "external_id": "T1471"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-28.html",
                            "external_id": "APP-28"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services may be able to detect if an application attempts to encrypt files, although this may be benign behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "3.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Application vetting services may be able to detect if an application attempts to encrypt files, although this may be benign behavior.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1074\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 13:31:22.485000+00:00\", \"old_value\": \"2019-10-01 13:51:22.001000+00:00\"}, \"root['description']\": {\"new_value\": \"An adversary may encrypt files stored on a mobile device to prevent the user from accessing them. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.\", \"old_value\": \"An adversary may encrypt files stored on the mobile device to prevent the user from accessing them, for example with the intent of only unlocking access to the files after a ransom is paid. Without escalated privileges, the adversary is generally limited to only encrypting files in external/shared storage locations. This technique has been demonstrated on Android. We are unaware of any demonstrated use on iOS.\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"3.1\", \"old_value\": \"3.0\"}}}",
                    "previous_version": "3.0",
                    "version_change": "3.0 \u2192 3.1",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to694__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to694__0\"><a href=\"#difflib_chg_to694__top\">t</a></td><td class=\"diff_header\" id=\"from694_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">An&nbsp;adversary&nbsp;may&nbsp;encrypt&nbsp;files&nbsp;stored&nbsp;on&nbsp;the&nbsp;mobile&nbsp;device&nbsp;t</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to694__top\">t</a></td><td class=\"diff_header\" id=\"to694_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">An&nbsp;adversary&nbsp;may&nbsp;encrypt&nbsp;files&nbsp;stored&nbsp;on&nbsp;a&nbsp;mobile&nbsp;device&nbsp;to&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">o&nbsp;prevent&nbsp;the&nbsp;user&nbsp;from&nbsp;accessing&nbsp;them,&nbsp;for&nbsp;example&nbsp;with&nbsp;the</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">prevent&nbsp;the&nbsp;user&nbsp;from&nbsp;accessing&nbsp;them.&nbsp;This&nbsp;may&nbsp;be&nbsp;done&nbsp;in&nbsp;or</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;intent&nbsp;of&nbsp;only&nbsp;unlocking&nbsp;access&nbsp;to&nbsp;the&nbsp;files&nbsp;after&nbsp;a&nbsp;ransom</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">der&nbsp;to&nbsp;extract&nbsp;monetary&nbsp;compensation&nbsp;from&nbsp;a&nbsp;victim&nbsp;in&nbsp;exchan</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;is&nbsp;paid.&nbsp;Without&nbsp;escalated&nbsp;privileges,&nbsp;the&nbsp;adversary&nbsp;is&nbsp;gen</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ge&nbsp;for&nbsp;decryption&nbsp;or&nbsp;a&nbsp;decryption&nbsp;key&nbsp;(ransomware)&nbsp;or&nbsp;to&nbsp;ren</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">erally&nbsp;limited&nbsp;to&nbsp;only&nbsp;encrypting&nbsp;files&nbsp;in&nbsp;external/shared&nbsp;s</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">der&nbsp;data&nbsp;permanently&nbsp;inaccessible&nbsp;in&nbsp;cases&nbsp;where&nbsp;the&nbsp;key&nbsp;is&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">torage&nbsp;locations.&nbsp;This&nbsp;technique&nbsp;has&nbsp;been&nbsp;demonstrated&nbsp;on&nbsp;An</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">not&nbsp;saved&nbsp;or&nbsp;transmitted.</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">droid.&nbsp;We&nbsp;are&nbsp;unaware&nbsp;of&nbsp;any&nbsp;demonstrated&nbsp;use&nbsp;on&nbsp;iOS.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e1c912a9-e305-434b-9172-8a6ce3ec9c4a",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-10-10 15:12:42.790000+00:00",
                    "modified": "2022-04-01 16:53:27.576000+00:00",
                    "name": "Data from Local System",
                    "description": "Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to exfiltration.  \n\n \n\nAccess to local system data, which includes information stored by the operating system, often requires escalated privileges. Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos. On Android, adversaries may also attempt to access files from external storage which may require additional storage-related permissions. \n\n ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1533",
                            "external_id": "T1533"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-41.html",
                            "external_id": "STA-41"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Accessing data from the local system can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 16:53:27.576000+00:00\", \"old_value\": \"2019-10-11 14:53:38.987000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to exfiltration.  \\n\\n \\n\\nAccess to local system data, which includes information stored by the operating system, often requires escalated privileges. Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos. On Android, adversaries may also attempt to access files from external storage which may require additional storage-related permissions. \\n\\n \", \"old_value\": \"Sensitive data can be collected from local system sources, such as the file system or databases of information residing on the system.\\n\\nLocal system data includes information stored by the operating system. Access to local system data often requires escalated privileges (e.g. root access). Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos.\", \"diff\": \"--- \\n+++ \\n@@ -1,3 +1,7 @@\\n-Sensitive data can be collected from local system sources, such as the file system or databases of information residing on the system.\\n+Adversaries may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to exfiltration.  \\n \\n-Local system data includes information stored by the operating system. Access to local system data often requires escalated privileges (e.g. root access). Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos.\\n+ \\n+\\n+Access to local system data, which includes information stored by the operating system, often requires escalated privileges. Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos. On Android, adversaries may also attempt to access files from external storage which may require additional storage-related permissions. \\n+\\n+ \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.1\", \"old_value\": \"1.0\"}}, \"iterable_item_added\": {\"root['external_references'][1]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-41.html\", \"external_id\": \"STA-41\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 1.1",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to699__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to699__0\"><a href=\"#difflib_chg_to699__top\">t</a></td><td class=\"diff_header\" id=\"from699_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Sensitive&nbsp;data&nbsp;can&nbsp;be&nbsp;collected&nbsp;from&nbsp;local&nbsp;system&nbsp;sources,&nbsp;s</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to699__top\">t</a></td><td class=\"diff_header\" id=\"to699_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;search&nbsp;local&nbsp;system&nbsp;sources,&nbsp;such&nbsp;as&nbsp;file&nbsp;sy</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">uch&nbsp;as&nbsp;the&nbsp;file&nbsp;system&nbsp;or&nbsp;databases&nbsp;of&nbsp;information&nbsp;residing&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">stems&nbsp;or&nbsp;local&nbsp;databases,&nbsp;to&nbsp;find&nbsp;files&nbsp;of&nbsp;interest&nbsp;and&nbsp;sens</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">on&nbsp;the&nbsp;system.&nbsp;&nbsp;Local&nbsp;system&nbsp;data&nbsp;includes&nbsp;information&nbsp;store</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">itive&nbsp;data&nbsp;prior&nbsp;to&nbsp;exfiltration.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Access&nbsp;to&nbsp;local&nbsp;syst</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">d&nbsp;by&nbsp;the&nbsp;operating&nbsp;system.&nbsp;Access&nbsp;to&nbsp;local&nbsp;system&nbsp;data&nbsp;often</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">em&nbsp;data,&nbsp;which&nbsp;includes&nbsp;information&nbsp;stored&nbsp;by&nbsp;the&nbsp;operating&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;requires&nbsp;escalated&nbsp;privileges&nbsp;(e.g.&nbsp;root&nbsp;access).&nbsp;Examples&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">system,&nbsp;often&nbsp;requires&nbsp;escalated&nbsp;privileges.&nbsp;Examples&nbsp;of&nbsp;loc</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">of&nbsp;local&nbsp;system&nbsp;data&nbsp;include&nbsp;authentication&nbsp;tokens,&nbsp;the&nbsp;devi</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">al&nbsp;system&nbsp;data&nbsp;include&nbsp;authentication&nbsp;tokens,&nbsp;the&nbsp;device&nbsp;key</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ce&nbsp;keyboard&nbsp;cache,&nbsp;Wi-Fi&nbsp;passwords,&nbsp;and&nbsp;photos.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">board&nbsp;cache,&nbsp;Wi-Fi&nbsp;passwords,&nbsp;and&nbsp;photos.&nbsp;On&nbsp;Android,&nbsp;advers</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">aries&nbsp;may&nbsp;also&nbsp;attempt&nbsp;to&nbsp;access&nbsp;files&nbsp;from&nbsp;external&nbsp;storage</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;which&nbsp;may&nbsp;require&nbsp;additional&nbsp;storage-related&nbsp;permissions.&nbsp;&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--6c49d50f-494d-4150-b774-a655022d20a6",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:14.460000+00:00",
                    "modified": "2022-04-06 12:26:31.735000+00:00",
                    "name": "Download New Code at Runtime",
                    "description": "Adversaries may download and execute dynamic code not included in the original application package after installation. This technique is primarily used to evade static analysis checks and pre-publication scans in official app stores. In some cases, more advanced dynamic or behavioral analysis techniques could detect this behavior. However, in conjunction with [Execution Guardrails](https://attack.mitre.org/techniques/T1627) techniques, detecting malicious code downloaded after installation could be difficult.\n\nOn Android, dynamic code could include native code, Dalvik code, or JavaScript code that utilizes Android WebView\u2019s `JavascriptInterface` capability. \n\nOn iOS, dynamic code could be downloaded and executed through 3rd party libraries such as JSPatch. (Citation: FireEye-JSPatch) ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1407",
                            "external_id": "T1407"
                        },
                        {
                            "source_name": "FireEye-JSPatch",
                            "description": "Jing Xie, Zhaofeng Chen, Jimmy Su. (2016, January 27). HOT OR NOT? THE BENEFITS AND RISKS OF IOS REMOTE HOT PATCHING. Retrieved December 9, 2016.",
                            "url": "https://www.fireeye.com/blog/threat-research/2016/01/hot_or_not_the_bene.html"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-20.html",
                            "external_id": "APP-20"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Existing network infrastructure may detect network calls to known malicious domains or the transfer of malicious payloads over the network. Mobile security products may provide URL inspection services that could determine if a domain being visited is malicious. Application vetting services could look for indications that the application downloads and executes new code at runtime (e.g., on Android, use of `DexClassLoader`, `System.load`, or the WebView `JavaScriptInterface` capability; on iOS, use of JSPatch or similar capabilities). Unfortunately, this is only a partial mitigation, as additional scrutiny would still need to be applied to applications that use these techniques. These techniques are often used without malicious intent, and  applications may employ other techniques to hide their use of these techniques.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.3",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Jing Xie, Zhaofeng Chen, Jimmy Su. (2016, January 27). HOT OR NOT? THE BENEFITS AND RISKS OF IOS REMOTE HOT PATCHING. Retrieved December 9, 2016.\", \"root['external_references'][2]['external_id']\": \"APP-20\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1010\", \"root['external_references'][1]['external_id']\": \"APP-20\", \"root['external_references'][2]['description']\": \"Sebastian Poeplau, Yanick Fratantonio, Antonio Bianchi, Christopher Kruegel, Giovanni Vigna. (2014, February). Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications. Retrieved December 21, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 12:26:31.735000+00:00\", \"old_value\": \"2019-10-09 19:40:52.090000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may download and execute dynamic code not included in the original application package after installation. This technique is primarily used to evade static analysis checks and pre-publication scans in official app stores. In some cases, more advanced dynamic or behavioral analysis techniques could detect this behavior. However, in conjunction with [Execution Guardrails](https://attack.mitre.org/techniques/T1627) techniques, detecting malicious code downloaded after installation could be difficult.\\n\\nOn Android, dynamic code could include native code, Dalvik code, or JavaScript code that utilizes Android WebView\\u2019s `JavascriptInterface` capability. \\n\\nOn iOS, dynamic code could be downloaded and executed through 3rd party libraries such as JSPatch. (Citation: FireEye-JSPatch) \", \"old_value\": \"An app could download and execute dynamic code (not included in the original application package) after installation to evade static analysis techniques (and potentially dynamic analysis techniques) used for application vetting or application store review.(Citation: Poeplau-ExecuteThis)\\n\\nOn Android, dynamic code could include native code, Dalvik code, or JavaScript code that uses the Android WebView's JavascriptInterface capability.(Citation: Bromium-AndroidRCE)\\n\\nOn iOS, techniques also exist for executing dynamic code downloaded after application installation.(Citation: FireEye-JSPatch)(Citation: Wang)\", \"diff\": \"--- \\n+++ \\n@@ -1,5 +1,5 @@\\n-An app could download and execute dynamic code (not included in the original application package) after installation to evade static analysis techniques (and potentially dynamic analysis techniques) used for application vetting or application store review.(Citation: Poeplau-ExecuteThis)\\n+Adversaries may download and execute dynamic code not included in the original application package after installation. This technique is primarily used to evade static analysis checks and pre-publication scans in official app stores. In some cases, more advanced dynamic or behavioral analysis techniques could detect this behavior. However, in conjunction with [Execution Guardrails](https://attack.mitre.org/techniques/T1627) techniques, detecting malicious code downloaded after installation could be difficult.\\n \\n-On Android, dynamic code could include native code, Dalvik code, or JavaScript code that uses the Android WebView's JavascriptInterface capability.(Citation: Bromium-AndroidRCE)\\n+On Android, dynamic code could include native code, Dalvik code, or JavaScript code that utilizes Android WebView\\u2019s `JavascriptInterface` capability. \\n \\n-On iOS, techniques also exist for executing dynamic code downloaded after application installation.(Citation: FireEye-JSPatch)(Citation: Wang)\\n+On iOS, dynamic code could be downloaded and executed through 3rd party libraries such as JSPatch. (Citation: FireEye-JSPatch) \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"FireEye-JSPatch\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.fireeye.com/blog/threat-research/2016/01/hot_or_not_the_bene.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-20.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Poeplau-ExecuteThis\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-20.html\", \"old_value\": \"https://www.internetsociety.org/sites/default/files/10_5_0.pdf\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Existing network infrastructure may detect network calls to known malicious domains or the transfer of malicious payloads over the network. Mobile security products may provide URL inspection services that could determine if a domain being visited is malicious. Application vetting services could look for indications that the application downloads and executes new code at runtime (e.g., on Android, use of `DexClassLoader`, `System.load`, or the WebView `JavaScriptInterface` capability; on iOS, use of JSPatch or similar capabilities). Unfortunately, this is only a partial mitigation, as additional scrutiny would still need to be applied to applications that use these techniques. These techniques are often used without malicious intent, and  applications may employ other techniques to hide their use of these techniques.\", \"old_value\": \"Downloading new code at runtime can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversary behavior.\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.3\", \"old_value\": \"1.2\"}}, \"iterable_item_removed\": {\"root['external_references'][3]\": {\"source_name\": \"Bromium-AndroidRCE\", \"description\": \"Tom Sutcliffe. (2014, July 31). Remote code execution on Android devices. Retrieved December 9, 2016.\", \"url\": \"https://labs.bromium.com/2014/07/31/remote-code-execution-on-android-devices/\"}, \"root['external_references'][4]\": {\"source_name\": \"FireEye-JSPatch\", \"description\": \"Jing Xie, Zhaofeng Chen, Jimmy Su. (2016, January 27). HOT OR NOT? THE BENEFITS AND RISKS OF IOS REMOTE HOT PATCHING. Retrieved December 9, 2016.\", \"url\": \"https://www.fireeye.com/blog/threat-research/2016/01/hot_or_not_the_bene.html\"}, \"root['external_references'][5]\": {\"source_name\": \"Wang\", \"description\": \"Tielei Wang, Kangjie Lu, Long Lu, Simon Chung, and Wenke Lee. (2013, August). Jekyll on iOS: When Benign Apps Become Evil. Retrieved December 9, 2016.\", \"url\": \"https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/wang_tielei\"}}}",
                    "previous_version": "1.2",
                    "version_change": "1.2 \u2192 1.3",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to721__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to721__0\"><a href=\"#difflib_chg_to721__top\">t</a></td><td class=\"diff_header\" id=\"from721_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">An&nbsp;app&nbsp;could&nbsp;download&nbsp;and&nbsp;execute&nbsp;dynamic&nbsp;code&nbsp;(not&nbsp;included</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to721__top\">t</a></td><td class=\"diff_header\" id=\"to721_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;download&nbsp;and&nbsp;execute&nbsp;dynamic&nbsp;code&nbsp;not&nbsp;includ</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;in&nbsp;the&nbsp;original&nbsp;application&nbsp;package)&nbsp;after&nbsp;installation&nbsp;to&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ed&nbsp;in&nbsp;the&nbsp;original&nbsp;application&nbsp;package&nbsp;after&nbsp;installation.&nbsp;T</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">evade&nbsp;static&nbsp;analysis&nbsp;techniques&nbsp;(and&nbsp;potentially&nbsp;dynamic&nbsp;an</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">his&nbsp;technique&nbsp;is&nbsp;primarily&nbsp;used&nbsp;to&nbsp;evade&nbsp;static&nbsp;analysis&nbsp;che</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">alysis&nbsp;techniques)&nbsp;used&nbsp;for&nbsp;application&nbsp;vetting&nbsp;or&nbsp;applicati</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cks&nbsp;and&nbsp;pre-publication&nbsp;scans&nbsp;in&nbsp;official&nbsp;app&nbsp;stores.&nbsp;In&nbsp;som</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">on&nbsp;store&nbsp;review.(Citation:&nbsp;Poeplau-ExecuteThis)&nbsp;&nbsp;On&nbsp;Android,</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;cases,&nbsp;more&nbsp;advanced&nbsp;dynamic&nbsp;or&nbsp;behavioral&nbsp;analysis&nbsp;techni</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;dynamic&nbsp;code&nbsp;could&nbsp;include&nbsp;native&nbsp;code,&nbsp;Dalvik&nbsp;code,&nbsp;or&nbsp;Jav</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ques&nbsp;could&nbsp;detect&nbsp;this&nbsp;behavior.&nbsp;However,&nbsp;in&nbsp;conjunction&nbsp;wit</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">aScript&nbsp;code&nbsp;that&nbsp;uses&nbsp;the&nbsp;Android&nbsp;WebView's&nbsp;JavascriptInter</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">h&nbsp;[Execution&nbsp;Guardrails](https://attack.mitre.org/techniques</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">face&nbsp;capability.(Citation:&nbsp;Bromium-AndroidRCE)&nbsp;&nbsp;On&nbsp;iOS,&nbsp;tech</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">/T1627)&nbsp;techniques,&nbsp;detecting&nbsp;malicious&nbsp;code&nbsp;downloaded&nbsp;afte</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">niques&nbsp;also&nbsp;exist&nbsp;for&nbsp;executing&nbsp;dynamic&nbsp;code&nbsp;downloaded&nbsp;afte</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">r&nbsp;installation&nbsp;could&nbsp;be&nbsp;difficult.&nbsp;&nbsp;On&nbsp;Android,&nbsp;dynamic&nbsp;code</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">r&nbsp;application&nbsp;installation.(Citation:&nbsp;FireEye-JSPatch)(Citat</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;could&nbsp;include&nbsp;native&nbsp;code,&nbsp;Dalvik&nbsp;code,&nbsp;or&nbsp;JavaScript&nbsp;code&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ion:&nbsp;Wang)</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">that&nbsp;utilizes&nbsp;Android&nbsp;WebView\u2019s&nbsp;`JavascriptInterface`&nbsp;capabi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">lity.&nbsp;&nbsp;&nbsp;On&nbsp;iOS,&nbsp;dynamic&nbsp;code&nbsp;could&nbsp;be&nbsp;downloaded&nbsp;and&nbsp;execute</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">d&nbsp;through&nbsp;3rd&nbsp;party&nbsp;libraries&nbsp;such&nbsp;as&nbsp;JSPatch.&nbsp;(Citation:&nbsp;Fi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">reEye-JSPatch)&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1006: Use Recent OS Version"
                        ],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--22379609-a99f-4a01-bd7e-70f3e105859d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:13.259000+00:00",
                    "modified": "2022-04-06 12:45:44.023000+00:00",
                    "name": "Exploitation of Remote Services",
                    "description": "Adversaries may exploit remote services of enterprise servers, workstations, or other resources to gain unauthorized access to internal systems once inside of a network. Adversaries may exploit remote services by taking advantage of a mobile device\u2019s access to an internal enterprise network through local connectivity or through a Virtual Private Network (VPN). Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system. \n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Scanning](https://attack.mitre.org/techniques/T1423) or other Discovery methods. These look for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nDepending on the permissions level of the vulnerable remote service, an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1404) as a result of lateral movement exploitation as well. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "lateral-movement"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1428",
                            "external_id": "T1428"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-32.html",
                            "external_id": "APP-32"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Detecting software exploitation initiated by a mobile device may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.\n\nNetwork traffic analysis could reveal patterns of compromise if devices attempt to access unusual targets or resources. \n\nApplication vetting may be able to identify applications that perform Discovery or utilize existing connectivity to remotely access hosts within an internal enterprise network. ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Detecting software exploitation initiated by a mobile device may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.\\n\\nNetwork traffic analysis could reveal patterns of compromise if devices attempt to access unusual targets or resources. \\n\\nApplication vetting may be able to identify applications that perform Discovery or utilize existing connectivity to remotely access hosts within an internal enterprise network. \", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1031\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 12:45:44.023000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['name']\": {\"new_value\": \"Exploitation of Remote Services\", \"old_value\": \"Exploit Enterprise Resources\"}, \"root['description']\": {\"new_value\": \"Adversaries may exploit remote services of enterprise servers, workstations, or other resources to gain unauthorized access to internal systems once inside of a network. Adversaries may exploit remote services by taking advantage of a mobile device\\u2019s access to an internal enterprise network through local connectivity or through a Virtual Private Network (VPN). Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system. \\n\\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Scanning](https://attack.mitre.org/techniques/T1423) or other Discovery methods. These look for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\\n\\nDepending on the permissions level of the vulnerable remote service, an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1404) as a result of lateral movement exploitation as well. \", \"old_value\": \"Adversaries may attempt to exploit enterprise servers, workstations, or other resources over the network. This technique may take advantage of the mobile device's access to an internal enterprise network either through local connectivity or through a Virtual Private Network (VPN).\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,5 @@\\n-Adversaries may attempt to exploit enterprise servers, workstations, or other resources over the network. This technique may take advantage of the mobile device's access to an internal enterprise network either through local connectivity or through a Virtual Private Network (VPN).\\n+Adversaries may exploit remote services of enterprise servers, workstations, or other resources to gain unauthorized access to internal systems once inside of a network. Adversaries may exploit remote services by taking advantage of a mobile device\\u2019s access to an internal enterprise network through local connectivity or through a Virtual Private Network (VPN). Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system. \\n+\\n+An adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Scanning](https://attack.mitre.org/techniques/T1423) or other Discovery methods. These look for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities, or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\\n+\\n+Depending on the permissions level of the vulnerable remote service, an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1404) as a result of lateral movement exploitation as well. \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.1\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 1.1",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to701__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to701__0\"><a href=\"#difflib_chg_to701__top\">t</a></td><td class=\"diff_header\" id=\"from701_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;attempt&nbsp;to&nbsp;exploit&nbsp;enterprise&nbsp;servers,&nbsp;works</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to701__top\">t</a></td><td class=\"diff_header\" id=\"to701_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;exploit&nbsp;remote&nbsp;services&nbsp;of&nbsp;enterprise&nbsp;server</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">tations,&nbsp;or&nbsp;other&nbsp;resources&nbsp;over&nbsp;the&nbsp;network.&nbsp;This&nbsp;technique</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s,&nbsp;workstations,&nbsp;or&nbsp;other&nbsp;resources&nbsp;to&nbsp;gain&nbsp;unauthorized&nbsp;acc</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;may&nbsp;take&nbsp;advantage&nbsp;of&nbsp;the&nbsp;mobile&nbsp;device's&nbsp;access&nbsp;to&nbsp;an&nbsp;inte</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ess&nbsp;to&nbsp;internal&nbsp;systems&nbsp;once&nbsp;inside&nbsp;of&nbsp;a&nbsp;network.&nbsp;Adversarie</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">rnal&nbsp;enterprise&nbsp;network&nbsp;either&nbsp;through&nbsp;local&nbsp;connectivity&nbsp;or</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s&nbsp;may&nbsp;exploit&nbsp;remote&nbsp;services&nbsp;by&nbsp;taking&nbsp;advantage&nbsp;of&nbsp;a&nbsp;mobil</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;through&nbsp;a&nbsp;Virtual&nbsp;Private&nbsp;Network&nbsp;(VPN).</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;device\u2019s&nbsp;access&nbsp;to&nbsp;an&nbsp;internal&nbsp;enterprise&nbsp;network&nbsp;through&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">local&nbsp;connectivity&nbsp;or&nbsp;through&nbsp;a&nbsp;Virtual&nbsp;Private&nbsp;Network&nbsp;(VPN</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">).&nbsp;Exploitation&nbsp;of&nbsp;a&nbsp;software&nbsp;vulnerability&nbsp;occurs&nbsp;when&nbsp;an&nbsp;a</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">dversary&nbsp;takes&nbsp;advantage&nbsp;of&nbsp;a&nbsp;programming&nbsp;error&nbsp;in&nbsp;a&nbsp;program</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">,&nbsp;service,&nbsp;or&nbsp;within&nbsp;the&nbsp;operating&nbsp;system&nbsp;software&nbsp;or&nbsp;kernel</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;itself&nbsp;to&nbsp;execute&nbsp;adversary-controlled&nbsp;code.&nbsp;A&nbsp;common&nbsp;goal&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">for&nbsp;post-compromise&nbsp;exploitation&nbsp;of&nbsp;remote&nbsp;services&nbsp;is&nbsp;for&nbsp;l</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ateral&nbsp;movement&nbsp;to&nbsp;enable&nbsp;access&nbsp;to&nbsp;a&nbsp;remote&nbsp;system.&nbsp;&nbsp;&nbsp;An&nbsp;ad</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">versary&nbsp;may&nbsp;need&nbsp;to&nbsp;determine&nbsp;if&nbsp;the&nbsp;remote&nbsp;system&nbsp;is&nbsp;in&nbsp;a&nbsp;v</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ulnerable&nbsp;state,&nbsp;which&nbsp;may&nbsp;be&nbsp;done&nbsp;through&nbsp;[Network&nbsp;Service&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">Scanning](https://attack.mitre.org/techniques/T1423)&nbsp;or&nbsp;othe</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">r&nbsp;Discovery&nbsp;methods.&nbsp;These&nbsp;look&nbsp;for&nbsp;common,&nbsp;vulnerable&nbsp;softw</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">are&nbsp;that&nbsp;may&nbsp;be&nbsp;deployed&nbsp;in&nbsp;the&nbsp;network,&nbsp;the&nbsp;lack&nbsp;of&nbsp;certain</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;patches&nbsp;that&nbsp;may&nbsp;indicate&nbsp;vulnerabilities,&nbsp;or&nbsp;security&nbsp;soft</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ware&nbsp;that&nbsp;may&nbsp;be&nbsp;used&nbsp;to&nbsp;detect&nbsp;or&nbsp;contain&nbsp;remote&nbsp;exploitati</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">on.&nbsp;Servers&nbsp;are&nbsp;likely&nbsp;a&nbsp;high&nbsp;value&nbsp;target&nbsp;for&nbsp;lateral&nbsp;movem</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ent&nbsp;exploitation,&nbsp;but&nbsp;endpoint&nbsp;systems&nbsp;may&nbsp;also&nbsp;be&nbsp;at&nbsp;risk&nbsp;i</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">f&nbsp;they&nbsp;provide&nbsp;an&nbsp;advantage&nbsp;or&nbsp;access&nbsp;to&nbsp;additional&nbsp;resource</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s.&nbsp;&nbsp;Depending&nbsp;on&nbsp;the&nbsp;permissions&nbsp;level&nbsp;of&nbsp;the&nbsp;vulnerable&nbsp;rem</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ote&nbsp;service,&nbsp;an&nbsp;adversary&nbsp;may&nbsp;achieve&nbsp;[Exploitation&nbsp;for&nbsp;Priv</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ilege&nbsp;Escalation](https://attack.mitre.org/techniques/T1404)</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;as&nbsp;a&nbsp;result&nbsp;of&nbsp;lateral&nbsp;movement&nbsp;exploitation&nbsp;as&nbsp;well.&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [
                            "M1012: Enterprise Policy"
                        ],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--cf28ca46-1fd3-46b4-b1f6-ec0b72361848",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:21.965000+00:00",
                    "modified": "2022-04-19 19:52:12.345000+00:00",
                    "name": "File and Directory Discovery",
                    "description": "Adversaries may enumerate files and directories or search in specific device locations for desired information within a filesystem. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1420) during automated discovery to shape follow-on behaviors, including deciding if the adversary should fully infect the target and/or attempt specific actions. \n\nOn Android, Linux file permissions and SELinux policies typically stringently restrict what can be accessed by apps without taking advantage of a privilege escalation exploit. The contents of the external storage directory are generally visible, which could present concerns if sensitive data is inappropriately stored there. iOS's security architecture generally restricts the ability to perform any type of [File and Directory Discovery](https://attack.mitre.org/techniques/T1420) without use of escalated privileges. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1420",
                            "external_id": "T1420"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-41.html",
                            "external_id": "STA-41"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, users are presented with a permissions popup when an application requests access to external device storage.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"On Android, users are presented with a permissions popup when an application requests access to external device storage.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1023\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-19 19:52:12.345000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may enumerate files and directories or search in specific device locations for desired information within a filesystem. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1420) during automated discovery to shape follow-on behaviors, including deciding if the adversary should fully infect the target and/or attempt specific actions. \\n\\nOn Android, Linux file permissions and SELinux policies typically stringently restrict what can be accessed by apps without taking advantage of a privilege escalation exploit. The contents of the external storage directory are generally visible, which could present concerns if sensitive data is inappropriately stored there. iOS's security architecture generally restricts the ability to perform any type of [File and Directory Discovery](https://attack.mitre.org/techniques/T1420) without use of escalated privileges. \", \"old_value\": \"On Android, command line tools or the Java file APIs can be used to enumerate file system contents. However, Linux file permissions and SELinux policies generally strongly restrict what can be accessed by apps (without taking advantage of a privilege escalation exploit). The contents of the external storage directory are generally visible, which could present concern if sensitive data is inappropriately stored there.\\n\\niOS's security architecture generally restricts the ability to perform file and directory discovery without use of escalated privileges.\", \"diff\": \"--- \\n+++ \\n@@ -1,3 +1,3 @@\\n-On Android, command line tools or the Java file APIs can be used to enumerate file system contents. However, Linux file permissions and SELinux policies generally strongly restrict what can be accessed by apps (without taking advantage of a privilege escalation exploit). The contents of the external storage directory are generally visible, which could present concern if sensitive data is inappropriately stored there.\\n+Adversaries may enumerate files and directories or search in specific device locations for desired information within a filesystem. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1420) during automated discovery to shape follow-on behaviors, including deciding if the adversary should fully infect the target and/or attempt specific actions. \\n \\n-iOS's security architecture generally restricts the ability to perform file and directory discovery without use of escalated privileges.\\n+On Android, Linux file permissions and SELinux policies typically stringently restrict what can be accessed by apps without taking advantage of a privilege escalation exploit. The contents of the external storage directory are generally visible, which could present concerns if sensitive data is inappropriately stored there. iOS's security architecture generally restricts the ability to perform any type of [File and Directory Discovery](https://attack.mitre.org/techniques/T1420) without use of escalated privileges. \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.1\", \"old_value\": \"1.0\"}}, \"iterable_item_added\": {\"root['external_references'][1]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-41.html\", \"external_id\": \"STA-41\"}, \"root['x_mitre_platforms'][1]\": \"iOS\"}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 1.1",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to722__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to722__0\"><a href=\"#difflib_chg_to722__top\">t</a></td><td class=\"diff_header\" id=\"from722_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">On&nbsp;Android,&nbsp;command&nbsp;line&nbsp;tools&nbsp;or&nbsp;the&nbsp;Java&nbsp;file&nbsp;APIs&nbsp;can&nbsp;be&nbsp;</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to722__top\">t</a></td><td class=\"diff_header\" id=\"to722_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;enumerate&nbsp;files&nbsp;and&nbsp;directories&nbsp;or&nbsp;search&nbsp;in</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">used&nbsp;to&nbsp;enumerate&nbsp;file&nbsp;system&nbsp;contents.&nbsp;However,&nbsp;Linux&nbsp;file&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;specific&nbsp;device&nbsp;locations&nbsp;for&nbsp;desired&nbsp;information&nbsp;within&nbsp;a&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">permissions&nbsp;and&nbsp;SELinux&nbsp;policies&nbsp;generally&nbsp;strongly&nbsp;restrict</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">filesystem.&nbsp;Adversaries&nbsp;may&nbsp;use&nbsp;the&nbsp;information&nbsp;from&nbsp;[File&nbsp;a</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;what&nbsp;can&nbsp;be&nbsp;accessed&nbsp;by&nbsp;apps&nbsp;(without&nbsp;taking&nbsp;advantage&nbsp;of&nbsp;a</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">nd&nbsp;Directory&nbsp;Discovery](https://attack.mitre.org/techniques/</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;privilege&nbsp;escalation&nbsp;exploit).&nbsp;The&nbsp;contents&nbsp;of&nbsp;the&nbsp;external</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">T1420)&nbsp;during&nbsp;automated&nbsp;discovery&nbsp;to&nbsp;shape&nbsp;follow-on&nbsp;behavio</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;storage&nbsp;directory&nbsp;are&nbsp;generally&nbsp;visible,&nbsp;which&nbsp;could&nbsp;presen</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">rs,&nbsp;including&nbsp;deciding&nbsp;if&nbsp;the&nbsp;adversary&nbsp;should&nbsp;fully&nbsp;infect&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">t&nbsp;concern&nbsp;if&nbsp;sensitive&nbsp;data&nbsp;is&nbsp;inappropriately&nbsp;stored&nbsp;there.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">the&nbsp;target&nbsp;and/or&nbsp;attempt&nbsp;specific&nbsp;actions.&nbsp;&nbsp;&nbsp;On&nbsp;Android,&nbsp;Li</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;&nbsp;iOS's&nbsp;security&nbsp;architecture&nbsp;generally&nbsp;restricts&nbsp;the&nbsp;abilit</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">nux&nbsp;file&nbsp;permissions&nbsp;and&nbsp;SELinux&nbsp;policies&nbsp;typically&nbsp;stringen</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">y&nbsp;to&nbsp;perform&nbsp;file&nbsp;and&nbsp;directory&nbsp;discovery&nbsp;without&nbsp;use&nbsp;of&nbsp;esc</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tly&nbsp;restrict&nbsp;what&nbsp;can&nbsp;be&nbsp;accessed&nbsp;by&nbsp;apps&nbsp;without&nbsp;taking&nbsp;adv</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">alated&nbsp;privileges.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">antage&nbsp;of&nbsp;a&nbsp;privilege&nbsp;escalation&nbsp;exploit.&nbsp;The&nbsp;contents&nbsp;of&nbsp;th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;external&nbsp;storage&nbsp;directory&nbsp;are&nbsp;generally&nbsp;visible,&nbsp;which&nbsp;co</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">uld&nbsp;present&nbsp;concerns&nbsp;if&nbsp;sensitive&nbsp;data&nbsp;is&nbsp;inappropriately&nbsp;st</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ored&nbsp;there.&nbsp;iOS's&nbsp;security&nbsp;architecture&nbsp;generally&nbsp;restricts&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">the&nbsp;ability&nbsp;to&nbsp;perform&nbsp;any&nbsp;type&nbsp;of&nbsp;[File&nbsp;and&nbsp;Directory&nbsp;Disco</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">very](https://attack.mitre.org/techniques/T1420)&nbsp;without&nbsp;use</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;of&nbsp;escalated&nbsp;privileges.&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1006: Use Recent OS Version"
                        ],
                        "new": [],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a8c31121-852b-46bd-9ba4-674ae5afe7ad",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:27.660000+00:00",
                    "modified": "2022-04-11 18:48:26.111000+00:00",
                    "name": "Input Capture",
                    "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal device usage, users often provide credentials to various locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Keylogging](https://attack.mitre.org/techniques/T1417/001)) or rely on deceiving the user into providing input into what they believe to be a genuine application prompt (e.g. [GUI Input Capture](https://attack.mitre.org/techniques/T1417/002)).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1417",
                            "external_id": "T1417"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html",
                            "external_id": "APP-31"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-13.html",
                            "external_id": "AUT-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services can look for applications requesting the permissions granting access to accessibility services or application overlay. Users can view and manage installed third-party keyboards.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['external_id']\": \"APP-31\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1020\", \"root['external_references'][1]['description']\": \"Lenny Zeltser. (2016, July 30). Security of Third-Party Keyboard Apps on Mobile Devices. Retrieved December 21, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-11 18:48:26.111000+00:00\", \"old_value\": \"2020-06-24 15:09:12.483000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal device usage, users often provide credentials to various locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Keylogging](https://attack.mitre.org/techniques/T1417/001)) or rely on deceiving the user into providing input into what they believe to be a genuine application prompt (e.g. [GUI Input Capture](https://attack.mitre.org/techniques/T1417/002)).\", \"old_value\": \"Adversaries may capture user input to obtain credentials or other information from the user through various methods.\\n\\nMalware may masquerade as a legitimate third-party keyboard to record user keystrokes.(Citation: Zeltser-Keyboard) On both Android and iOS, users must explicitly authorize the use of third-party keyboard apps. Users should be advised to use extreme caution before granting this authorization when it is requested.\\n\\nOn Android, malware may abuse accessibility features to record keystrokes by registering an `AccessibilityService` class, overriding the `onAccessibilityEvent` method, and listening for the `AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED` event type. The event object passed into the function will contain the data that the user typed.\\n\\nAdditional methods of keylogging may be possible if root access is available.\", \"diff\": \"--- \\n+++ \\n@@ -1,7 +1 @@\\n-Adversaries may capture user input to obtain credentials or other information from the user through various methods.\\n-\\n-Malware may masquerade as a legitimate third-party keyboard to record user keystrokes.(Citation: Zeltser-Keyboard) On both Android and iOS, users must explicitly authorize the use of third-party keyboard apps. Users should be advised to use extreme caution before granting this authorization when it is requested.\\n-\\n-On Android, malware may abuse accessibility features to record keystrokes by registering an `AccessibilityService` class, overriding the `onAccessibilityEvent` method, and listening for the `AccessibilityEvent.TYPE_VIEW_TEXT_CHANGED` event type. The event object passed into the function will contain the data that the user typed.\\n-\\n-Additional methods of keylogging may be possible if root access is available.\\n+Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal device usage, users often provide credentials to various locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Keylogging](https://attack.mitre.org/techniques/T1417/001)) or rely on deceiving the user into providing input into what they believe to be a genuine application prompt (e.g. [GUI Input Capture](https://attack.mitre.org/techniques/T1417/002)).\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Zeltser-Keyboard\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html\", \"old_value\": \"https://zeltser.com/third-party-keyboards-security/\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Application vetting services can look for applications requesting the permissions granting access to accessibility services or application overlay. Users can view and manage installed third-party keyboards.\", \"old_value\": \"On Android, users can view and manage which applications have third-party keyboard access through the device settings in System -> Languages & input -> Virtual keyboard. On iOS, users can view and manage which applications have third-party keyboard access through the device settings in General -> Keyboard. On Android, users can view and manage which applications can use accessibility services through the device settings in Accessibility. The exact device settings menu locations may vary between operating system versions.\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.2\", \"old_value\": \"2.1\"}}, \"iterable_item_added\": {\"root['external_references'][2]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-13.html\", \"external_id\": \"AUT-13\"}}}",
                    "previous_version": "2.1",
                    "version_change": "2.1 \u2192 2.2",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to711__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to711__0\"><a href=\"#difflib_chg_to711__top\">t</a></td><td class=\"diff_header\" id=\"from711_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;capture&nbsp;user&nbsp;input&nbsp;to&nbsp;obtain&nbsp;credentials&nbsp;or&nbsp;</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to711__top\">t</a></td><td class=\"diff_header\" id=\"to711_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;use&nbsp;methods&nbsp;of&nbsp;capturing&nbsp;user&nbsp;input&nbsp;to&nbsp;obtai</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">other&nbsp;information&nbsp;from&nbsp;the&nbsp;user&nbsp;through&nbsp;various&nbsp;methods.&nbsp;&nbsp;Ma</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">n&nbsp;credentials&nbsp;or&nbsp;collect&nbsp;information.&nbsp;During&nbsp;normal&nbsp;device&nbsp;u</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">lware&nbsp;may&nbsp;masquerade&nbsp;as&nbsp;a&nbsp;legitimate&nbsp;third-party&nbsp;keyboard&nbsp;to</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">sage,&nbsp;users&nbsp;often&nbsp;provide&nbsp;credentials&nbsp;to&nbsp;various&nbsp;locations,&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;record&nbsp;user&nbsp;keystrokes.(Citation:&nbsp;Zeltser-Keyboard)&nbsp;On&nbsp;both</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">such&nbsp;as&nbsp;login&nbsp;pages/portals&nbsp;or&nbsp;system&nbsp;dialog&nbsp;boxes.&nbsp;Input&nbsp;ca</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;Android&nbsp;and&nbsp;iOS,&nbsp;users&nbsp;must&nbsp;explicitly&nbsp;authorize&nbsp;the&nbsp;use&nbsp;of</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">pture&nbsp;mechanisms&nbsp;may&nbsp;be&nbsp;transparent&nbsp;to&nbsp;the&nbsp;user&nbsp;(e.g.&nbsp;[Keylo</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;third-party&nbsp;keyboard&nbsp;apps.&nbsp;Users&nbsp;should&nbsp;be&nbsp;advised&nbsp;to&nbsp;use&nbsp;e</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">gging](https://attack.mitre.org/techniques/T1417/001))&nbsp;or&nbsp;re</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">xtreme&nbsp;caution&nbsp;before&nbsp;granting&nbsp;this&nbsp;authorization&nbsp;when&nbsp;it&nbsp;is</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ly&nbsp;on&nbsp;deceiving&nbsp;the&nbsp;user&nbsp;into&nbsp;providing&nbsp;input&nbsp;into&nbsp;what&nbsp;they</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;requested.&nbsp;&nbsp;On&nbsp;Android,&nbsp;malware&nbsp;may&nbsp;abuse&nbsp;accessibility&nbsp;fea</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;believe&nbsp;to&nbsp;be&nbsp;a&nbsp;genuine&nbsp;application&nbsp;prompt&nbsp;(e.g.&nbsp;[GUI&nbsp;Input</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">tures&nbsp;to&nbsp;record&nbsp;keystrokes&nbsp;by&nbsp;registering&nbsp;an&nbsp;`AccessibilityS</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;Capture](https://attack.mitre.org/techniques/T1417/002)).</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ervice`&nbsp;class,&nbsp;overriding&nbsp;the&nbsp;`onAccessibilityEvent`&nbsp;method,</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;and&nbsp;listening&nbsp;for&nbsp;the&nbsp;`AccessibilityEvent.TYPE_VIEW_TEXT_CH</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ANGED`&nbsp;event&nbsp;type.&nbsp;The&nbsp;event&nbsp;object&nbsp;passed&nbsp;into&nbsp;the&nbsp;function</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;will&nbsp;contain&nbsp;the&nbsp;data&nbsp;that&nbsp;the&nbsp;user&nbsp;typed.&nbsp;&nbsp;Additional&nbsp;meth</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ods&nbsp;of&nbsp;keylogging&nbsp;may&nbsp;be&nbsp;possible&nbsp;if&nbsp;root&nbsp;access&nbsp;is&nbsp;availabl</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">e.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1011: User Guidance",
                            "M1012: Enterprise Policy"
                        ],
                        "new": [
                            "M1006: Use Recent OS Version"
                        ],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--99e6295e-741b-4857-b6e5-64989eb039b4",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:12.267000+00:00",
                    "modified": "2022-04-01 17:05:16.493000+00:00",
                    "name": "Location Tracking",
                    "description": "Adversaries may track a device\u2019s physical location through use of standard operating system APIs via malicious or exploited applications on the compromised device. \n\n \n\nOn Android, applications holding the `ACCESS_COAURSE_LOCATION` or `ACCESS_FINE_LOCATION` permissions provide access to the device\u2019s physical location. On Android 10 and up, declaration of the `ACCESS_BACKGROUND_LOCATION` permission in an application\u2019s manifest will allow applications to request location access even when the application is running in the background.(Citation: Android Request Location Permissions) Some adversaries have utilized integration of Baidu map services to retrieve geographical location once the location access permissions had been obtained.(Citation: PaloAlto-SpyDealer)(Citation: Palo Alto HenBox) \n\n \n\nOn iOS, applications must include the `NSLocationWhenInUseUsageDescription`, `NSLocationAlwaysAndWhenInUseUsageDescription`, and/or `NSLocationAlwaysUsageDescription` keys in their `Info.plist` file depending on the extent of requested access to location information.(Citation: Apple Requesting Authorization for Location Services) On iOS 8.0 and up, applications call `requestWhenInUseAuthorization()` to request access to location information when the application is in use or `requestAlwaysAuthorization()` to request access to location information regardless of whether the application is in use. With elevated privileges, an adversary may be able to access location data without explicit user consent with the `com.apple.locationd.preauthorized` entitlement key.(Citation: Google Project Zero Insomnia)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1430",
                            "external_id": "T1430"
                        },
                        {
                            "source_name": "Palo Alto HenBox",
                            "description": "A. Hinchliffe, M. Harbison, J. Miller-Osborn, et al. (2018, March 13). HenBox: The Chickens Come Home to Roost. Retrieved September 9, 2019.",
                            "url": "https://unit42.paloaltonetworks.com/unit42-henbox-chickens-come-home-roost/"
                        },
                        {
                            "source_name": "Android Request Location Permissions",
                            "description": "Android Developers. (2022, March 24). Request Location Permissions. Retrieved April 1, 2022.",
                            "url": "https://developer.android.com/training/location/permissions"
                        },
                        {
                            "source_name": "Apple Requesting Authorization for Location Services",
                            "description": "Apple Developers. (n.d.). Requesting Authorization for Location Services. Retrieved April 1, 2022.",
                            "url": "https://developer.apple.com/documentation/corelocation/requesting_authorization_for_location_services"
                        },
                        {
                            "source_name": "Google Project Zero Insomnia",
                            "description": "I. Beer. (2019, August 29). Implant Teardown. Retrieved June 2, 2020.",
                            "url": "https://googleprojectzero.blogspot.com/2019/08/implant-teardown.html"
                        },
                        {
                            "source_name": "PaloAlto-SpyDealer",
                            "description": "Wenjun Hu, Cong Zheng and Zhi Xu. (2017, July 6). SpyDealer: Android Trojan Spying on More Than 40 Apps. Retrieved September 18, 2018.",
                            "url": "https://researchcenter.paloaltonetworks.com/2017/07/unit42-spydealer-android-trojan-spying-40-apps/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-24.html",
                            "external_id": "APP-24"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Android applications requesting the `ACCESS_COARSE_LOCATION`, `ACCESS_FINE_LOCATION`, or `ACCESS_BACKGROUND_LOCATION` permissions and iOS applications including the `NSLocationWhenInUseUsageDescription`, `NSLocationAlwaysAndWhenInUseUsageDescription`, and/or `NSLocationAlwaysUsageDescription` keys in their `Info.plist` file could be scrutinized during the application vetting process. \n\n \n\nIn both Android (6.0 and up) and iOS, users can view which applications have the permission to access the device location through the device settings screen and revoke permissions as necessary.  ",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"A. Hinchliffe, M. Harbison, J. Miller-Osborn, et al. (2018, March 13). HenBox: The Chickens Come Home to Roost. Retrieved September 9, 2019.\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1033\", \"root['external_references'][1]['external_id']\": \"APP-24\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 17:05:16.493000+00:00\", \"old_value\": \"2019-10-15 20:01:06.186000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may track a device\\u2019s physical location through use of standard operating system APIs via malicious or exploited applications on the compromised device. \\n\\n \\n\\nOn Android, applications holding the `ACCESS_COAURSE_LOCATION` or `ACCESS_FINE_LOCATION` permissions provide access to the device\\u2019s physical location. On Android 10 and up, declaration of the `ACCESS_BACKGROUND_LOCATION` permission in an application\\u2019s manifest will allow applications to request location access even when the application is running in the background.(Citation: Android Request Location Permissions) Some adversaries have utilized integration of Baidu map services to retrieve geographical location once the location access permissions had been obtained.(Citation: PaloAlto-SpyDealer)(Citation: Palo Alto HenBox) \\n\\n \\n\\nOn iOS, applications must include the `NSLocationWhenInUseUsageDescription`, `NSLocationAlwaysAndWhenInUseUsageDescription`, and/or `NSLocationAlwaysUsageDescription` keys in their `Info.plist` file depending on the extent of requested access to location information.(Citation: Apple Requesting Authorization for Location Services) On iOS 8.0 and up, applications call `requestWhenInUseAuthorization()` to request access to location information when the application is in use or `requestAlwaysAuthorization()` to request access to location information regardless of whether the application is in use. With elevated privileges, an adversary may be able to access location data without explicit user consent with the `com.apple.locationd.preauthorized` entitlement key.(Citation: Google Project Zero Insomnia)\", \"old_value\": \"An adversary could use a malicious or exploited application to surreptitiously track the device's physical location through use of standard operating system APIs.\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,9 @@\\n-An adversary could use a malicious or exploited application to surreptitiously track the device's physical location through use of standard operating system APIs.\\n+Adversaries may track a device\\u2019s physical location through use of standard operating system APIs via malicious or exploited applications on the compromised device. \\n+\\n+ \\n+\\n+On Android, applications holding the `ACCESS_COAURSE_LOCATION` or `ACCESS_FINE_LOCATION` permissions provide access to the device\\u2019s physical location. On Android 10 and up, declaration of the `ACCESS_BACKGROUND_LOCATION` permission in an application\\u2019s manifest will allow applications to request location access even when the application is running in the background.(Citation: Android Request Location Permissions) Some adversaries have utilized integration of Baidu map services to retrieve geographical location once the location access permissions had been obtained.(Citation: PaloAlto-SpyDealer)(Citation: Palo Alto HenBox) \\n+\\n+ \\n+\\n+On iOS, applications must include the `NSLocationWhenInUseUsageDescription`, `NSLocationAlwaysAndWhenInUseUsageDescription`, and/or `NSLocationAlwaysUsageDescription` keys in their `Info.plist` file depending on the extent of requested access to location information.(Citation: Apple Requesting Authorization for Location Services) On iOS 8.0 and up, applications call `requestWhenInUseAuthorization()` to request access to location information when the application is in use or `requestAlwaysAuthorization()` to request access to location information regardless of whether the application is in use. With elevated privileges, an adversary may be able to access location data without explicit user consent with the `com.apple.locationd.preauthorized` entitlement key.(Citation: Google Project Zero Insomnia)\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Palo Alto HenBox\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://unit42.paloaltonetworks.com/unit42-henbox-chickens-come-home-roost/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-24.html\"}, \"root['x_mitre_detection']\": {\"new_value\": \"Android applications requesting the `ACCESS_COARSE_LOCATION`, `ACCESS_FINE_LOCATION`, or `ACCESS_BACKGROUND_LOCATION` permissions and iOS applications including the `NSLocationWhenInUseUsageDescription`, `NSLocationAlwaysAndWhenInUseUsageDescription`, and/or `NSLocationAlwaysUsageDescription` keys in their `Info.plist` file could be scrutinized during the application vetting process. \\n\\n \\n\\nIn both Android (6.0 and up) and iOS, users can view which applications have the permission to access the device location through the device settings screen and revoke permissions as necessary.  \", \"old_value\": \"On both Android (6.0 and up) and iOS, the user can view which applications have permission to access device location through the device settings screen, and the user can choose to revoke the permissions.\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,5 @@\\n-On both Android (6.0 and up) and iOS, the user can view which applications have permission to access device location through the device settings screen, and the user can choose to revoke the permissions.\\n+Android applications requesting the `ACCESS_COARSE_LOCATION`, `ACCESS_FINE_LOCATION`, or `ACCESS_BACKGROUND_LOCATION` permissions and iOS applications including the `NSLocationWhenInUseUsageDescription`, `NSLocationAlwaysAndWhenInUseUsageDescription`, and/or `NSLocationAlwaysUsageDescription` keys in their `Info.plist` file could be scrutinized during the application vetting process. \\n+\\n+ \\n+\\n+In both Android (6.0 and up) and iOS, users can view which applications have the permission to access the device location through the device settings screen and revoke permissions as necessary.  \"}, \"root['x_mitre_version']\": {\"new_value\": \"1.1\", \"old_value\": \"1.0\"}}, \"iterable_item_added\": {\"root['external_references'][2]\": {\"source_name\": \"Android Request Location Permissions\", \"description\": \"Android Developers. (2022, March 24). Request Location Permissions. Retrieved April 1, 2022.\", \"url\": \"https://developer.android.com/training/location/permissions\"}, \"root['external_references'][3]\": {\"source_name\": \"Apple Requesting Authorization for Location Services\", \"description\": \"Apple Developers. (n.d.). Requesting Authorization for Location Services. Retrieved April 1, 2022.\", \"url\": \"https://developer.apple.com/documentation/corelocation/requesting_authorization_for_location_services\"}, \"root['external_references'][4]\": {\"source_name\": \"Google Project Zero Insomnia\", \"description\": \"I. Beer. (2019, August 29). Implant Teardown. Retrieved June 2, 2020.\", \"url\": \"https://googleprojectzero.blogspot.com/2019/08/implant-teardown.html\"}, \"root['external_references'][5]\": {\"source_name\": \"PaloAlto-SpyDealer\", \"description\": \"Wenjun Hu, Cong Zheng and Zhi Xu. (2017, July 6). SpyDealer: Android Trojan Spying on More Than 40 Apps. Retrieved September 18, 2018.\", \"url\": \"https://researchcenter.paloaltonetworks.com/2017/07/unit42-spydealer-android-trojan-spying-40-apps/\"}, \"root['external_references'][6]\": {\"source_name\": \"NIST Mobile Threat Catalogue\", \"url\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-24.html\", \"external_id\": \"APP-24\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 1.1",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to713__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to713__0\"><a href=\"#difflib_chg_to713__top\">t</a></td><td class=\"diff_header\" id=\"from713_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">An&nbsp;adversary&nbsp;could&nbsp;use&nbsp;a&nbsp;malicious&nbsp;or&nbsp;exploited&nbsp;application&nbsp;</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to713__top\">t</a></td><td class=\"diff_header\" id=\"to713_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;track&nbsp;a&nbsp;device\u2019s&nbsp;physical&nbsp;location&nbsp;through&nbsp;u</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">to&nbsp;surreptitiously&nbsp;track&nbsp;the&nbsp;device's&nbsp;physical&nbsp;location&nbsp;thro</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">se&nbsp;of&nbsp;standard&nbsp;operating&nbsp;system&nbsp;APIs&nbsp;via&nbsp;malicious&nbsp;or&nbsp;exploi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ugh&nbsp;use&nbsp;of&nbsp;standard&nbsp;operating&nbsp;system&nbsp;APIs.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ted&nbsp;applications&nbsp;on&nbsp;the&nbsp;compromised&nbsp;device.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Android,</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;applications&nbsp;holding&nbsp;the&nbsp;`ACCESS_COAURSE_LOCATION`&nbsp;or&nbsp;`ACCE</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">SS_FINE_LOCATION`&nbsp;permissions&nbsp;provide&nbsp;access&nbsp;to&nbsp;the&nbsp;device\u2019s</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;physical&nbsp;location.&nbsp;On&nbsp;Android&nbsp;10&nbsp;and&nbsp;up,&nbsp;declaration&nbsp;of&nbsp;the</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;`ACCESS_BACKGROUND_LOCATION`&nbsp;permission&nbsp;in&nbsp;an&nbsp;application\u2019s</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;manifest&nbsp;will&nbsp;allow&nbsp;applications&nbsp;to&nbsp;request&nbsp;location&nbsp;access</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;even&nbsp;when&nbsp;the&nbsp;application&nbsp;is&nbsp;running&nbsp;in&nbsp;the&nbsp;background.(Cit</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ation:&nbsp;Android&nbsp;Request&nbsp;Location&nbsp;Permissions)&nbsp;Some&nbsp;adversarie</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s&nbsp;have&nbsp;utilized&nbsp;integration&nbsp;of&nbsp;Baidu&nbsp;map&nbsp;services&nbsp;to&nbsp;retriev</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;geographical&nbsp;location&nbsp;once&nbsp;the&nbsp;location&nbsp;access&nbsp;permissions</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;had&nbsp;been&nbsp;obtained.(Citation:&nbsp;PaloAlto-SpyDealer)(Citation:&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">Palo&nbsp;Alto&nbsp;HenBox)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;iOS,&nbsp;applications&nbsp;must&nbsp;include&nbsp;the</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;`NSLocationWhenInUseUsageDescription`,&nbsp;`NSLocationAlwaysAnd</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">WhenInUseUsageDescription`,&nbsp;and/or&nbsp;`NSLocationAlwaysUsageDes</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cription`&nbsp;keys&nbsp;in&nbsp;their&nbsp;`Info.plist`&nbsp;file&nbsp;depending&nbsp;on&nbsp;the&nbsp;e</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">xtent&nbsp;of&nbsp;requested&nbsp;access&nbsp;to&nbsp;location&nbsp;information.(Citation:</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;Apple&nbsp;Requesting&nbsp;Authorization&nbsp;for&nbsp;Location&nbsp;Services)&nbsp;On&nbsp;iO</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">S&nbsp;8.0&nbsp;and&nbsp;up,&nbsp;applications&nbsp;call&nbsp;`requestWhenInUseAuthorizati</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">on()`&nbsp;to&nbsp;request&nbsp;access&nbsp;to&nbsp;location&nbsp;information&nbsp;when&nbsp;the&nbsp;app</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">lication&nbsp;is&nbsp;in&nbsp;use&nbsp;or&nbsp;`requestAlwaysAuthorization()`&nbsp;to&nbsp;requ</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">est&nbsp;access&nbsp;to&nbsp;location&nbsp;information&nbsp;regardless&nbsp;of&nbsp;whether&nbsp;the</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;application&nbsp;is&nbsp;in&nbsp;use.&nbsp;With&nbsp;elevated&nbsp;privileges,&nbsp;an&nbsp;adversa</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ry&nbsp;may&nbsp;be&nbsp;able&nbsp;to&nbsp;access&nbsp;location&nbsp;data&nbsp;without&nbsp;explicit&nbsp;user</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;consent&nbsp;with&nbsp;the&nbsp;`com.apple.locationd.preauthorized`&nbsp;entitl</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ement&nbsp;key.(Citation:&nbsp;Google&nbsp;Project&nbsp;Zero&nbsp;Insomnia)</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [
                            "M1006: Use Recent OS Version",
                            "M1011: User Guidance",
                            "M1012: Enterprise Policy",
                            "M1014: Interconnection Filtering"
                        ],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--dfe29258-ce59-421c-9dee-e85cb9fa90cd",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:24.488000+00:00",
                    "modified": "2022-04-19 15:36:12.312000+00:00",
                    "name": "Lockscreen Bypass",
                    "description": "An adversary with physical access to a mobile device may seek to bypass the device\u2019s lockscreen. Several methods exist to accomplish this, including:\n\n* Biometric spoofing: If biometric authentication is used, an adversary could attempt to spoof a mobile device\u2019s biometric authentication mechanism. Both iOS and Android partly mitigate this attack by requiring the device\u2019s passcode rather than biometrics to unlock the device after every device restart, and after a set or random amount of time.(Citation: SRLabs-Fingerprint)(Citation: TheSun-FaceID)\n* Unlock code bypass: An adversaries could attempt to brute-force or otherwise guess the lockscreen passcode (typically a PIN or password), including physically observing (\u201cshoulder surfing\u201d) the device owner\u2019s use of the lockscreen passcode. Mobile OS vendors partly mitigate this by implementing incremental backoff timers after a set number of failed unlock attempts, as well as a configurable full device wipe after several failed unlock attempts.\n* Vulnerability exploit: Techniques have been periodically demonstrated that exploit mobile devices to bypass the lockscreen. The vulnerabilities are generally patched by the device or OS vendor once disclosed.(Citation: Wired-AndroidBypass)(Citation: Kaspersky-iOSBypass)\n",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1461",
                            "external_id": "T1461"
                        },
                        {
                            "source_name": "Wired-AndroidBypass",
                            "description": "Andy Greenberg. (2015, September 15). Hack Brief: Emergency Number Hack Bypasses Android Lock Screens. Retrieved December 23, 2016.",
                            "url": "https://www.wired.com/2015/09/hack-brief-new-emergency-number-hack-easily-bypasses-android-lock-screens/"
                        },
                        {
                            "source_name": "Kaspersky-iOSBypass",
                            "description": "Chris Brook. (2016, November 17). iOS 10 Passcode Bypass Can Access Photos, Contacts. Retrieved December 23, 2016.",
                            "url": "https://threatpost.com/ios-10-passcode-bypass-can-access-photos-contacts/122033/"
                        },
                        {
                            "source_name": "TheSun-FaceID",
                            "description": "Sean Keach. (2018, February 15). Brit mates BREAK Apple\u2019s face unlock and vow to never buy iPhone again. Retrieved September 18, 2018.",
                            "url": "https://www.thesun.co.uk/tech/5584082/iphone-x-face-unlock-tricked-broken/"
                        },
                        {
                            "source_name": "SRLabs-Fingerprint",
                            "description": "SRLabs. (n.d.). Fingerprints are not fit for secure device unlocking. Retrieved December 23, 2016.",
                            "url": "https://srlabs.de/bites/spoofing-fingerprints/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can see if someone is watching them type in their device passcode.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Users can see if someone is watching them type in their device passcode.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1064\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-19 15:36:12.312000+00:00\", \"old_value\": \"2019-02-03 17:08:07.111000+00:00\"}, \"root['description']\": {\"new_value\": \"An adversary with physical access to a mobile device may seek to bypass the device\\u2019s lockscreen. Several methods exist to accomplish this, including:\\n\\n* Biometric spoofing: If biometric authentication is used, an adversary could attempt to spoof a mobile device\\u2019s biometric authentication mechanism. Both iOS and Android partly mitigate this attack by requiring the device\\u2019s passcode rather than biometrics to unlock the device after every device restart, and after a set or random amount of time.(Citation: SRLabs-Fingerprint)(Citation: TheSun-FaceID)\\n* Unlock code bypass: An adversaries could attempt to brute-force or otherwise guess the lockscreen passcode (typically a PIN or password), including physically observing (\\u201cshoulder surfing\\u201d) the device owner\\u2019s use of the lockscreen passcode. Mobile OS vendors partly mitigate this by implementing incremental backoff timers after a set number of failed unlock attempts, as well as a configurable full device wipe after several failed unlock attempts.\\n* Vulnerability exploit: Techniques have been periodically demonstrated that exploit mobile devices to bypass the lockscreen. The vulnerabilities are generally patched by the device or OS vendor once disclosed.(Citation: Wired-AndroidBypass)(Citation: Kaspersky-iOSBypass)\\n\", \"old_value\": \"An adversary with physical access to a mobile device may seek to bypass the device's lockscreen.\\n\\n### Biometric Spoofing\\nIf biometric authentication is used, an adversary could attempt to spoof a mobile device's biometric authentication mechanism(Citation: SRLabs-Fingerprint)(Citation: SecureIDNews-Spoof)(Citation: TheSun-FaceID).\\n\\niOS partly mitigates this attack by requiring the device passcode rather than a fingerprint to unlock the device after every device restart and after 48 hours since the device was last unlocked (Citation: Apple-TouchID). Android has similar mitigations.\\n\\n### Device Unlock Code Guessing or Brute Force\\nAn adversary could attempt to brute-force or otherwise guess the lockscreen passcode (typically a PIN or password), including physically observing (\\\"shoulder surfing\\\") the device owner's use of the lockscreen passcode. \\n\\n### Exploit Other Device Lockscreen Vulnerabilities\\nTechniques have periodically been demonstrated that exploit vulnerabilities on Android (Citation: Wired-AndroidBypass), iOS (Citation: Kaspersky-iOSBypass), or other mobile devices to bypass the device lockscreen. The vulnerabilities are generally patched by the device/operating system vendor once they become aware of their existence.\", \"diff\": \"--- \\n+++ \\n@@ -1,12 +1,5 @@\\n-An adversary with physical access to a mobile device may seek to bypass the device's lockscreen.\\n+An adversary with physical access to a mobile device may seek to bypass the device\\u2019s lockscreen. Several methods exist to accomplish this, including:\\n \\n-### Biometric Spoofing\\n-If biometric authentication is used, an adversary could attempt to spoof a mobile device's biometric authentication mechanism(Citation: SRLabs-Fingerprint)(Citation: SecureIDNews-Spoof)(Citation: TheSun-FaceID).\\n-\\n-iOS partly mitigates this attack by requiring the device passcode rather than a fingerprint to unlock the device after every device restart and after 48 hours since the device was last unlocked (Citation: Apple-TouchID). Android has similar mitigations.\\n-\\n-### Device Unlock Code Guessing or Brute Force\\n-An adversary could attempt to brute-force or otherwise guess the lockscreen passcode (typically a PIN or password), including physically observing (\\\"shoulder surfing\\\") the device owner's use of the lockscreen passcode. \\n-\\n-### Exploit Other Device Lockscreen Vulnerabilities\\n-Techniques have periodically been demonstrated that exploit vulnerabilities on Android (Citation: Wired-AndroidBypass), iOS (Citation: Kaspersky-iOSBypass), or other mobile devices to bypass the device lockscreen. The vulnerabilities are generally patched by the device/operating system vendor once they become aware of their existence.\\n+* Biometric spoofing: If biometric authentication is used, an adversary could attempt to spoof a mobile device\\u2019s biometric authentication mechanism. Both iOS and Android partly mitigate this attack by requiring the device\\u2019s passcode rather than biometrics to unlock the device after every device restart, and after a set or random amount of time.(Citation: SRLabs-Fingerprint)(Citation: TheSun-FaceID)\\n+* Unlock code bypass: An adversaries could attempt to brute-force or otherwise guess the lockscreen passcode (typically a PIN or password), including physically observing (\\u201cshoulder surfing\\u201d) the device owner\\u2019s use of the lockscreen passcode. Mobile OS vendors partly mitigate this by implementing incremental backoff timers after a set number of failed unlock attempts, as well as a configurable full device wipe after several failed unlock attempts.\\n+* Vulnerability exploit: Techniques have been periodically demonstrated that exploit mobile devices to bypass the lockscreen. The vulnerabilities are generally patched by the device or OS vendor once disclosed.(Citation: Wired-AndroidBypass)(Citation: Kaspersky-iOSBypass)\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Wired-AndroidBypass\", \"old_value\": \"SRLabs-Fingerprint\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"Andy Greenberg. (2015, September 15). Hack Brief: Emergency Number Hack Bypasses Android Lock Screens. Retrieved December 23, 2016.\", \"old_value\": \"SRLabs. (n.d.). Fingerprints are not fit for secure device unlocking. Retrieved December 23, 2016.\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.wired.com/2015/09/hack-brief-new-emergency-number-hack-easily-bypasses-android-lock-screens/\", \"old_value\": \"https://srlabs.de/bites/spoofing-fingerprints/\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Kaspersky-iOSBypass\", \"old_value\": \"SecureIDNews-Spoof\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Chris Brook. (2016, November 17). iOS 10 Passcode Bypass Can Access Photos, Contacts. Retrieved December 23, 2016.\", \"old_value\": \"Zack Martin. (2016, March 11). Another spoof of mobile biometrics. Retrieved September 18, 2018.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://threatpost.com/ios-10-passcode-bypass-can-access-photos-contacts/122033/\", \"old_value\": \"https://thehackernews.com/2016/05/android-kernal-exploit.htmlhttps://www.secureidnews.com/news-item/another-spoof-of-mobile-biometrics/\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"SRLabs-Fingerprint\", \"old_value\": \"Apple-TouchID\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"SRLabs. (n.d.). Fingerprints are not fit for secure device unlocking. Retrieved December 23, 2016.\", \"old_value\": \"Apple. (2015, November 3). About Touch ID security on iPhone and iPad. Retrieved December 23, 2016.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://srlabs.de/bites/spoofing-fingerprints/\", \"old_value\": \"https://support.apple.com/en-us/HT204587\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.2\", \"old_value\": \"1.1\"}}, \"iterable_item_removed\": {\"root['external_references'][5]\": {\"source_name\": \"Wired-AndroidBypass\", \"description\": \"Andy Greenberg. (2015, September 15). Hack Brief: Emergency Number Hack Bypasses Android Lock Screens. Retrieved December 23, 2016.\", \"url\": \"https://www.wired.com/2015/09/hack-brief-new-emergency-number-hack-easily-bypasses-android-lock-screens/\"}, \"root['external_references'][6]\": {\"source_name\": \"Kaspersky-iOSBypass\", \"description\": \"Chris Brook. (2016, November 17). iOS 10 Passcode Bypass Can Access Photos, Contacts. Retrieved December 23, 2016.\", \"url\": \"https://threatpost.com/ios-10-passcode-bypass-can-access-photos-contacts/122033/\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.2",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to708__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to708__0\"><a href=\"#difflib_chg_to708__top\">t</a></td><td class=\"diff_header\" id=\"from708_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">An&nbsp;adversary&nbsp;with&nbsp;physical&nbsp;access&nbsp;to&nbsp;a&nbsp;mobile&nbsp;device&nbsp;may&nbsp;see</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to708__top\">t</a></td><td class=\"diff_header\" id=\"to708_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">An&nbsp;adversary&nbsp;with&nbsp;physical&nbsp;access&nbsp;to&nbsp;a&nbsp;mobile&nbsp;device&nbsp;may&nbsp;see</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">k&nbsp;to&nbsp;bypass&nbsp;the&nbsp;device's&nbsp;lockscreen.&nbsp;&nbsp;###&nbsp;Biometric&nbsp;Spoofing</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">k&nbsp;to&nbsp;bypass&nbsp;the&nbsp;device\u2019s&nbsp;lockscreen.&nbsp;Several&nbsp;methods&nbsp;exist&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;If&nbsp;biometric&nbsp;authentication&nbsp;is&nbsp;used,&nbsp;an&nbsp;adversary&nbsp;could&nbsp;att</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">o&nbsp;accomplish&nbsp;this,&nbsp;including:&nbsp;&nbsp;*&nbsp;Biometric&nbsp;spoofing:&nbsp;If&nbsp;biom</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">empt&nbsp;to&nbsp;spoof&nbsp;a&nbsp;mobile&nbsp;device's&nbsp;biometric&nbsp;authentication&nbsp;mec</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">etric&nbsp;authentication&nbsp;is&nbsp;used,&nbsp;an&nbsp;adversary&nbsp;could&nbsp;attempt&nbsp;to&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">hanism(Citation:&nbsp;SRLabs-Fingerprint)(Citation:&nbsp;SecureIDNews-</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">spoof&nbsp;a&nbsp;mobile&nbsp;device\u2019s&nbsp;biometric&nbsp;authentication&nbsp;mechanism.&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Spoof)(Citation:&nbsp;TheSun-FaceID).&nbsp;&nbsp;iOS&nbsp;partly&nbsp;mitigates&nbsp;this&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">Both&nbsp;iOS&nbsp;and&nbsp;Android&nbsp;partly&nbsp;mitigate&nbsp;this&nbsp;attack&nbsp;by&nbsp;requirin</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">attack&nbsp;by&nbsp;requiring&nbsp;the&nbsp;device&nbsp;passcode&nbsp;rather&nbsp;than&nbsp;a&nbsp;finger</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">g&nbsp;the&nbsp;device\u2019s&nbsp;passcode&nbsp;rather&nbsp;than&nbsp;biometrics&nbsp;to&nbsp;unlock&nbsp;the</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">print&nbsp;to&nbsp;unlock&nbsp;the&nbsp;device&nbsp;after&nbsp;every&nbsp;device&nbsp;restart&nbsp;and&nbsp;af</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;device&nbsp;after&nbsp;every&nbsp;device&nbsp;restart,&nbsp;and&nbsp;after&nbsp;a&nbsp;set&nbsp;or&nbsp;rando</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ter&nbsp;48&nbsp;hours&nbsp;since&nbsp;the&nbsp;device&nbsp;was&nbsp;last&nbsp;unlocked&nbsp;(Citation:&nbsp;A</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">m&nbsp;amount&nbsp;of&nbsp;time.(Citation:&nbsp;SRLabs-Fingerprint)(Citation:&nbsp;Th</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">pple-TouchID).&nbsp;Android&nbsp;has&nbsp;similar&nbsp;mitigations.&nbsp;&nbsp;###&nbsp;Device&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">eSun-FaceID)&nbsp;*&nbsp;Unlock&nbsp;code&nbsp;bypass:&nbsp;An&nbsp;adversaries&nbsp;could&nbsp;atte</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Unlock&nbsp;Code&nbsp;Guessing&nbsp;or&nbsp;Brute&nbsp;Force&nbsp;An&nbsp;adversary&nbsp;could&nbsp;attem</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">mpt&nbsp;to&nbsp;brute-force&nbsp;or&nbsp;otherwise&nbsp;guess&nbsp;the&nbsp;lockscreen&nbsp;passcod</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">pt&nbsp;to&nbsp;brute-force&nbsp;or&nbsp;otherwise&nbsp;guess&nbsp;the&nbsp;lockscreen&nbsp;passcode</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;(typically&nbsp;a&nbsp;PIN&nbsp;or&nbsp;password),&nbsp;including&nbsp;physically&nbsp;observ</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;(typically&nbsp;a&nbsp;PIN&nbsp;or&nbsp;password),&nbsp;including&nbsp;physically&nbsp;observi</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ing&nbsp;(\u201cshoulder&nbsp;surfing\u201d)&nbsp;the&nbsp;device&nbsp;owner\u2019s&nbsp;use&nbsp;of&nbsp;the&nbsp;locks</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ng&nbsp;(\"shoulder&nbsp;surfing\")&nbsp;the&nbsp;device&nbsp;owner's&nbsp;use&nbsp;of&nbsp;the&nbsp;locksc</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">creen&nbsp;passcode.&nbsp;Mobile&nbsp;OS&nbsp;vendors&nbsp;partly&nbsp;mitigate&nbsp;this&nbsp;by&nbsp;im</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">reen&nbsp;passcode.&nbsp;&nbsp;&nbsp;###&nbsp;Exploit&nbsp;Other&nbsp;Device&nbsp;Lockscreen&nbsp;Vulnera</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">plementing&nbsp;incremental&nbsp;backoff&nbsp;timers&nbsp;after&nbsp;a&nbsp;set&nbsp;number&nbsp;of&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">bilities&nbsp;Techniques&nbsp;have&nbsp;periodically&nbsp;been&nbsp;demonstrated&nbsp;that</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">failed&nbsp;unlock&nbsp;attempts,&nbsp;as&nbsp;well&nbsp;as&nbsp;a&nbsp;configurable&nbsp;full&nbsp;devic</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;exploit&nbsp;vulnerabilities&nbsp;on&nbsp;Android&nbsp;(Citation:&nbsp;Wired-Android</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;wipe&nbsp;after&nbsp;several&nbsp;failed&nbsp;unlock&nbsp;attempts.&nbsp;*&nbsp;Vulnerability</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Bypass),&nbsp;iOS&nbsp;(Citation:&nbsp;Kaspersky-iOSBypass),&nbsp;or&nbsp;other&nbsp;mobil</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;exploit:&nbsp;Techniques&nbsp;have&nbsp;been&nbsp;periodically&nbsp;demonstrated&nbsp;tha</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">e&nbsp;devices&nbsp;to&nbsp;bypass&nbsp;the&nbsp;device&nbsp;lockscreen.&nbsp;The&nbsp;vulnerabiliti</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">t&nbsp;exploit&nbsp;mobile&nbsp;devices&nbsp;to&nbsp;bypass&nbsp;the&nbsp;lockscreen.&nbsp;The&nbsp;vulne</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">es&nbsp;are&nbsp;generally&nbsp;patched&nbsp;by&nbsp;the&nbsp;device/operating&nbsp;system&nbsp;vend</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">rabilities&nbsp;are&nbsp;generally&nbsp;patched&nbsp;by&nbsp;the&nbsp;device&nbsp;or&nbsp;OS&nbsp;vendor&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">or&nbsp;once&nbsp;they&nbsp;become&nbsp;aware&nbsp;of&nbsp;their&nbsp;existence.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">once&nbsp;disclosed.(Citation:&nbsp;Wired-AndroidBypass)(Citation:&nbsp;Kas</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">persky-iOSBypass)&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1001: Security Updates",
                            "M1012: Enterprise Policy"
                        ],
                        "new": [],
                        "dropped": [
                            "M1006: Use Recent OS Version"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d2e112dc-f6d4-488d-b8df-ecbfb57a0a2d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:25.740000+00:00",
                    "modified": "2022-04-06 13:26:42.303000+00:00",
                    "name": "Network Denial of Service",
                    "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth that services rely on, or by jamming the signal going to or coming from devices. \n\nA Network DoS will occur when an adversary is able to jam radio signals (e.g. Wi-Fi, cellular, GPS) around a device to prevent it from communicating. For example, to jam cellular signal, an adversary may use a handheld signal jammer, which jam devices within the jammer\u2019s operational range.(Citation: NIST-SP800187) \n\nUsage of cellular jamming has been documented in several arrests reported in the news.(Citation: CNET-Celljammer)(Citation: NYTimes-Celljam)(Citation: Digitaltrends-Celljam)(Citation: Arstechnica-Celljam)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1464",
                            "external_id": "T1464"
                        },
                        {
                            "source_name": "CNET-Celljammer",
                            "description": "Chris Matyszczyk. (2014, May 1). FCC: Man used device to jam drivers' cell phone calls. Retrieved November 8, 2018.",
                            "url": "https://www.cnet.com/news/man-put-cell-phone-jammer-in-car-to-stop-driver-calls-fcc-says/"
                        },
                        {
                            "source_name": "Arstechnica-Celljam",
                            "description": "David Kravets. (2016, March 10). Man accused of jamming passengers\u2019 cell phones on Chicago subway. Retrieved November 8, 2018.",
                            "url": "https://arstechnica.com/tech-policy/2016/03/man-accused-of-jamming-passengers-cell-phones-on-chicago-subway/"
                        },
                        {
                            "source_name": "NIST-SP800187",
                            "description": "Jeffrey Cichonski, Joshua M Franklin, Michael Bartock. (2017, December). Guide to LTE Security. Retrieved January 20, 2017.",
                            "url": "http://csrc.nist.gov/publications/drafts/800-187/sp800_187_draft.pdf"
                        },
                        {
                            "source_name": "NYTimes-Celljam",
                            "description": "Matt Richtel. (2007, November 4). Devices Enforce Silence of Cellphones, Illegally. Retrieved November 8, 2018.",
                            "url": "https://www.nytimes.com/2007/11/04/technology/04jammer.html"
                        },
                        {
                            "source_name": "Digitaltrends-Celljam",
                            "description": "Trevor Mogg. (2015, June 5). Florida teacher punished after signal-jamming his students\u2019 cell phones. Retrieved November 8, 2018.",
                            "url": "https://www.digitaltrends.com/mobile/florida-teacher-punished-after-signal-jamming-his-students-cell-phones/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-7.html",
                            "external_id": "CEL-7"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-8.html",
                            "external_id": "CEL-8"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/lan-pan-threats/LPN-5.html",
                            "external_id": "LPN-5"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/gps-threats/GPS-0.html",
                            "external_id": "GPS-0"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Unexpected loss of radio signal could indicate that a device is being actively jammed.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Unexpected loss of radio signal could indicate that a device is being actively jammed.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Chris Matyszczyk. (2014, May 1). FCC: Man used device to jam drivers' cell phone calls. Retrieved November 8, 2018.\", \"root['external_references'][2]['description']\": \"David Kravets. (2016, March 10). Man accused of jamming passengers\\u2019 cell phones on Chicago subway. Retrieved November 8, 2018.\", \"root['external_references'][3]['description']\": \"Jeffrey Cichonski, Joshua M Franklin, Michael Bartock. (2017, December). Guide to LTE Security. Retrieved January 20, 2017.\", \"root['external_references'][4]['description']\": \"Matt Richtel. (2007, November 4). Devices Enforce Silence of Cellphones, Illegally. Retrieved November 8, 2018.\", \"root['external_references'][6]['external_id']\": \"CEL-7\", \"root['external_references'][7]['external_id']\": \"CEL-8\", \"root['external_references'][8]['external_id']\": \"LPN-5\", \"root['external_references'][9]['external_id']\": \"GPS-0\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1067\", \"root['external_references'][1]['external_id']\": \"CEL-7\", \"root['external_references'][2]['external_id']\": \"CEL-8\", \"root['external_references'][3]['external_id']\": \"LPN-5\", \"root['external_references'][4]['external_id']\": \"GPS-0\", \"root['external_references'][6]['description']\": \"Chris Matyszczyk. (2014, May 1). FCC: Man used device to jam drivers' cell phone calls. Retrieved November 8, 2018.\", \"root['external_references'][7]['description']\": \"Matt Richtel. (2007, November 4). Devices Enforce Silence of Cellphones, Illegally. Retrieved November 8, 2018.\", \"root['external_references'][8]['description']\": \"Trevor Mogg. (2015, June 5). Florida teacher punished after signal-jamming his students\\u2019 cell phones. Retrieved November 8, 2018.\", \"root['external_references'][9]['description']\": \"David Kravets. (2016, March 10). Man accused of jamming passengers\\u2019 cell phones on Chicago subway. Retrieved November 8, 2018.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 13:26:42.303000+00:00\", \"old_value\": \"2019-02-03 14:15:21.946000+00:00\"}, \"root['name']\": {\"new_value\": \"Network Denial of Service\", \"old_value\": \"Jamming or Denial of Service\"}, \"root['description']\": {\"new_value\": \"Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth that services rely on, or by jamming the signal going to or coming from devices. \\n\\nA Network DoS will occur when an adversary is able to jam radio signals (e.g. Wi-Fi, cellular, GPS) around a device to prevent it from communicating. For example, to jam cellular signal, an adversary may use a handheld signal jammer, which jam devices within the jammer\\u2019s operational range.(Citation: NIST-SP800187) \\n\\nUsage of cellular jamming has been documented in several arrests reported in the news.(Citation: CNET-Celljammer)(Citation: NYTimes-Celljam)(Citation: Digitaltrends-Celljam)(Citation: Arstechnica-Celljam)\", \"old_value\": \"An attacker could jam radio signals (e.g. Wi-Fi, cellular, GPS) to prevent the mobile device from communicating. (Citation: NIST-SP800187)(Citation: CNET-Celljammer)(Citation: NYTimes-Celljam)(Citation: Digitaltrends-Celljam)(Citation: Arstechnica-Celljam)\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,5 @@\\n-An attacker could jam radio signals (e.g. Wi-Fi, cellular, GPS) to prevent the mobile device from communicating. (Citation: NIST-SP800187)(Citation: CNET-Celljammer)(Citation: NYTimes-Celljam)(Citation: Digitaltrends-Celljam)(Citation: Arstechnica-Celljam)\\n+Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth that services rely on, or by jamming the signal going to or coming from devices. \\n+\\n+A Network DoS will occur when an adversary is able to jam radio signals (e.g. Wi-Fi, cellular, GPS) around a device to prevent it from communicating. For example, to jam cellular signal, an adversary may use a handheld signal jammer, which jam devices within the jammer\\u2019s operational range.(Citation: NIST-SP800187) \\n+\\n+Usage of cellular jamming has been documented in several arrests reported in the news.(Citation: CNET-Celljammer)(Citation: NYTimes-Celljam)(Citation: Digitaltrends-Celljam)(Citation: Arstechnica-Celljam)\"}, \"root['kill_chain_phases'][0]['phase_name']\": {\"new_value\": \"impact\", \"old_value\": \"network-effects\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"CNET-Celljammer\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.cnet.com/news/man-put-cell-phone-jammer-in-car-to-stop-driver-calls-fcc-says/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-7.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Arstechnica-Celljam\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://arstechnica.com/tech-policy/2016/03/man-accused-of-jamming-passengers-cell-phones-on-chicago-subway/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-8.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST-SP800187\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"http://csrc.nist.gov/publications/drafts/800-187/sp800_187_draft.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/lan-pan-threats/LPN-5.html\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"NYTimes-Celljam\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://www.nytimes.com/2007/11/04/technology/04jammer.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/gps-threats/GPS-0.html\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"Digitaltrends-Celljam\", \"old_value\": \"NIST-SP800187\"}, \"root['external_references'][5]['description']\": {\"new_value\": \"Trevor Mogg. (2015, June 5). Florida teacher punished after signal-jamming his students\\u2019 cell phones. Retrieved November 8, 2018.\", \"old_value\": \"Jeffrey Cichonski, Joshua M Franklin, Michael Bartock. (2017, December). Guide to LTE Security. Retrieved January 20, 2017.\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://www.digitaltrends.com/mobile/florida-teacher-punished-after-signal-jamming-his-students-cell-phones/\", \"old_value\": \"http://csrc.nist.gov/publications/drafts/800-187/sp800_187_draft.pdf\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"CNET-Celljammer\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-7.html\", \"old_value\": \"https://www.cnet.com/news/man-put-cell-phone-jammer-in-car-to-stop-driver-calls-fcc-says/\"}, \"root['external_references'][7]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"NYTimes-Celljam\"}, \"root['external_references'][7]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-8.html\", \"old_value\": \"https://www.nytimes.com/2007/11/04/technology/04jammer.html\"}, \"root['external_references'][8]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Digitaltrends-Celljam\"}, \"root['external_references'][8]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/lan-pan-threats/LPN-5.html\", \"old_value\": \"https://www.digitaltrends.com/mobile/florida-teacher-punished-after-signal-jamming-his-students-cell-phones/\"}, \"root['external_references'][9]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Arstechnica-Celljam\"}, \"root['external_references'][9]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/gps-threats/GPS-0.html\", \"old_value\": \"https://arstechnica.com/tech-policy/2016/03/man-accused-of-jamming-passengers-cell-phones-on-chicago-subway/\"}, \"root['x_mitre_tactic_type'][0]\": {\"new_value\": \"Post-Adversary Device Access\", \"old_value\": \"Without Adversary Device Access\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.2\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.2",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to697__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to697__0\"><a href=\"#difflib_chg_to697__top\">t</a></td><td class=\"diff_header\" id=\"from697_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">An&nbsp;attacker&nbsp;could&nbsp;jam&nbsp;radio&nbsp;signals&nbsp;(e.g.&nbsp;Wi-Fi,&nbsp;cellular,&nbsp;G</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to697__top\">t</a></td><td class=\"diff_header\" id=\"to697_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;perform&nbsp;Network&nbsp;Denial&nbsp;of&nbsp;Service&nbsp;(DoS)&nbsp;atta</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">PS)&nbsp;to&nbsp;prevent&nbsp;the&nbsp;mobile&nbsp;device&nbsp;from&nbsp;communicating.&nbsp;(Citati</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cks&nbsp;to&nbsp;degrade&nbsp;or&nbsp;block&nbsp;the&nbsp;availability&nbsp;of&nbsp;targeted&nbsp;resourc</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">on:&nbsp;NIST-SP800187)(Citation:&nbsp;CNET-Celljammer)(Citation:&nbsp;NYTi</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">es&nbsp;to&nbsp;users.&nbsp;Network&nbsp;DoS&nbsp;can&nbsp;be&nbsp;performed&nbsp;by&nbsp;exhausting&nbsp;the&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">mes-Celljam)(Citation:&nbsp;Digitaltrends-Celljam)(Citation:&nbsp;Arst</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">network&nbsp;bandwidth&nbsp;that&nbsp;services&nbsp;rely&nbsp;on,&nbsp;or&nbsp;by&nbsp;jamming&nbsp;the&nbsp;s</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">echnica-Celljam)</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ignal&nbsp;going&nbsp;to&nbsp;or&nbsp;coming&nbsp;from&nbsp;devices.&nbsp;&nbsp;&nbsp;A&nbsp;Network&nbsp;DoS&nbsp;will&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">occur&nbsp;when&nbsp;an&nbsp;adversary&nbsp;is&nbsp;able&nbsp;to&nbsp;jam&nbsp;radio&nbsp;signals&nbsp;(e.g.&nbsp;W</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">i-Fi,&nbsp;cellular,&nbsp;GPS)&nbsp;around&nbsp;a&nbsp;device&nbsp;to&nbsp;prevent&nbsp;it&nbsp;from&nbsp;comm</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">unicating.&nbsp;For&nbsp;example,&nbsp;to&nbsp;jam&nbsp;cellular&nbsp;signal,&nbsp;an&nbsp;adversary</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;may&nbsp;use&nbsp;a&nbsp;handheld&nbsp;signal&nbsp;jammer,&nbsp;which&nbsp;jam&nbsp;devices&nbsp;within&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">the&nbsp;jammer\u2019s&nbsp;operational&nbsp;range.(Citation:&nbsp;NIST-SP800187)&nbsp;&nbsp;&nbsp;U</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">sage&nbsp;of&nbsp;cellular&nbsp;jamming&nbsp;has&nbsp;been&nbsp;documented&nbsp;in&nbsp;several&nbsp;arre</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">sts&nbsp;reported&nbsp;in&nbsp;the&nbsp;news.(Citation:&nbsp;CNET-Celljammer)(Citatio</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">n:&nbsp;NYTimes-Celljam)(Citation:&nbsp;Digitaltrends-Celljam)(Citatio</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">n:&nbsp;Arstechnica-Celljam)</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--2de38279-043e-47e8-aaad-1b07af6d0790",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:26.890000+00:00",
                    "modified": "2022-04-11 19:12:38.451000+00:00",
                    "name": "Network Service Scanning",
                    "description": "Adversaries may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation. Methods to acquire this information include port scans and vulnerability scans from the mobile device. This technique may take advantage of the mobile device's access to an internal enterprise network either through local connectivity or through a Virtual Private Network (VPN).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1423",
                            "external_id": "T1423"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Network service scanning can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Network service scanning can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1026\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-11 19:12:38.451000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.1\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 1.1",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--73c26732-6422-4081-8b63-6d0ae93d449e",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-08-08 18:34:14.178000+00:00",
                    "modified": "2022-04-01 13:31:00.559000+00:00",
                    "name": "Screen Capture",
                    "description": "Adversaries may use screen capture to collect additional information about a target device, such as applications running in the foreground, user data, credentials, or other sensitive information. Applications running in the background can capture screenshots or videos of another application running in the foreground by using the Android `MediaProjectionManager` (generally requires the device user to grant consent).(Citation: Fortinet screencap July 2019)(Citation: Android ScreenCap1 2019) Background applications can also use Android accessibility services to capture screen contents being displayed by a foreground application.(Citation: Lookout-Monokle) An adversary with root access or Android Debug Bridge (adb) access could call the Android `screencap` or `screenrecord` commands.(Citation: Android ScreenCap2 2019)(Citation: Trend Micro ScreenCap July 2015) ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1513",
                            "external_id": "T1513"
                        },
                        {
                            "source_name": "Android ScreenCap2 2019",
                            "description": "Android Developers. (n.d.). Android Debug Bridge (adb). Retrieved August 8, 2019.",
                            "url": "https://developer.android.com/studio/command-line/adb"
                        },
                        {
                            "source_name": "Android ScreenCap1 2019",
                            "description": "Android Developers. (n.d.). Android MediaProjectionManager. Retrieved August 8, 2019.",
                            "url": "https://developer.android.com/reference/android/media/projection/MediaProjectionManager"
                        },
                        {
                            "source_name": "Lookout-Monokle",
                            "description": "Bauer A., Kumar A., Hebeisen C., et al. (2019, July). Monokle: The Mobile Surveillance Tooling of the Special Technology Center. Retrieved September 4, 2019.",
                            "url": "https://www.lookout.com/documents/threat-reports/lookout-discovers-monokle-threat-report.pdf"
                        },
                        {
                            "source_name": "Fortinet screencap July 2019",
                            "description": "Dario Durando. (2019, July 3). BianLian: A New Wave Emerges. Retrieved September 4, 2019.",
                            "url": "https://www.fortinet.com/blog/threat-research/new-wave-bianlian-malware.html"
                        },
                        {
                            "source_name": "Trend Micro ScreenCap July 2015",
                            "description": "Zhang, V. (2015, July 21). Hacking Team RCSAndroid Spying Tool Listens to Calls; Roots Devices to Get In. Retrieved August 8, 2019.",
                            "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/hacking-team-rcsandroid-spying-tool-listens-to-calls-roots-devices-to-get-in/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-40.html",
                            "external_id": "APP-40"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "The user can view a list of apps with accessibility service privileges in the device settings. Application vetting services can look for the use of the Android `MediaProjectionManager` class, applying extra scrutiny to applications that use the class.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Android Developers. (n.d.). Android Debug Bridge (adb). Retrieved August 8, 2019.\", \"root['external_references'][6]['external_id']\": \"APP-40\"}, \"dictionary_item_removed\": {\"root['external_references'][1]['external_id']\": \"APP-40\", \"root['external_references'][6]['description']\": \"Zhang, V. (2015, July 21). Hacking Team RCSAndroid Spying Tool Listens to Calls; Roots Devices to Get In. Retrieved August 8, 2019.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 13:31:00.559000+00:00\", \"old_value\": \"2020-06-24 15:03:25.857000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may use screen capture to collect additional information about a target device, such as applications running in the foreground, user data, credentials, or other sensitive information. Applications running in the background can capture screenshots or videos of another application running in the foreground by using the Android `MediaProjectionManager` (generally requires the device user to grant consent).(Citation: Fortinet screencap July 2019)(Citation: Android ScreenCap1 2019) Background applications can also use Android accessibility services to capture screen contents being displayed by a foreground application.(Citation: Lookout-Monokle) An adversary with root access or Android Debug Bridge (adb) access could call the Android `screencap` or `screenrecord` commands.(Citation: Android ScreenCap2 2019)(Citation: Trend Micro ScreenCap July 2015) \", \"old_value\": \"Adversaries may use screen captures to collect information about applications running in the foreground, capture user data, credentials, or other sensitive information. Applications running in the background can capture screenshots or videos of another application running in the foreground by using the Android `MediaProjectionManager` (generally requires the device user to grant consent).(Citation: Fortinet screencap July 2019)(Citation: Android ScreenCap1 2019) Background applications can also use Android accessibility services to capture screen contents being displayed by a foreground application.(Citation: Lookout-Monokle) An adversary with root access or Android Debug Bridge (adb) access could call the Android `screencap` or `screenrecord` commands.(Citation: Android ScreenCap2 2019)(Citation: Trend Micro ScreenCap July 2015)\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Android ScreenCap2 2019\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://developer.android.com/studio/command-line/adb\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-40.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Android ScreenCap1 2019\", \"old_value\": \"Fortinet screencap July 2019\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Android Developers. (n.d.). Android MediaProjectionManager. Retrieved August 8, 2019.\", \"old_value\": \"Dario Durando. (2019, July 3). BianLian: A New Wave Emerges. Retrieved September 4, 2019.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://developer.android.com/reference/android/media/projection/MediaProjectionManager\", \"old_value\": \"https://www.fortinet.com/blog/threat-research/new-wave-bianlian-malware.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Lookout-Monokle\", \"old_value\": \"Android ScreenCap1 2019\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Bauer A., Kumar A., Hebeisen C., et al. (2019, July). Monokle: The Mobile Surveillance Tooling of the Special Technology Center. Retrieved September 4, 2019.\", \"old_value\": \"Android Developers. (n.d.). Android MediaProjectionManager. Retrieved August 8, 2019.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://www.lookout.com/documents/threat-reports/lookout-discovers-monokle-threat-report.pdf\", \"old_value\": \"https://developer.android.com/reference/android/media/projection/MediaProjectionManager\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Fortinet screencap July 2019\", \"old_value\": \"Lookout-Monokle\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"Dario Durando. (2019, July 3). BianLian: A New Wave Emerges. Retrieved September 4, 2019.\", \"old_value\": \"Bauer A., Kumar A., Hebeisen C., et al. (2019, July). Monokle: The Mobile Surveillance Tooling of the Special Technology Center. Retrieved September 4, 2019.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://www.fortinet.com/blog/threat-research/new-wave-bianlian-malware.html\", \"old_value\": \"https://www.lookout.com/documents/threat-reports/lookout-discovers-monokle-threat-report.pdf\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"Trend Micro ScreenCap July 2015\", \"old_value\": \"Android ScreenCap2 2019\"}, \"root['external_references'][5]['description']\": {\"new_value\": \"Zhang, V. (2015, July 21). Hacking Team RCSAndroid Spying Tool Listens to Calls; Roots Devices to Get In. Retrieved August 8, 2019.\", \"old_value\": \"Android Developers. (n.d.). Android Debug Bridge (adb). Retrieved August 8, 2019.\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://blog.trendmicro.com/trendlabs-security-intelligence/hacking-team-rcsandroid-spying-tool-listens-to-calls-roots-devices-to-get-in/\", \"old_value\": \"https://developer.android.com/studio/command-line/adb\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Trend Micro ScreenCap July 2015\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-40.html\", \"old_value\": \"https://blog.trendmicro.com/trendlabs-security-intelligence/hacking-team-rcsandroid-spying-tool-listens-to-calls-roots-devices-to-get-in/\"}, \"root['x_mitre_detection']\": {\"new_value\": \"The user can view a list of apps with accessibility service privileges in the device settings. Application vetting services can look for the use of the Android `MediaProjectionManager` class, applying extra scrutiny to applications that use the class.\", \"old_value\": \"The user can view a list of apps with accessibility service privileges in the device settings.\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.2\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.2",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to702__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to702__0\"><a href=\"#difflib_chg_to702__top\">t</a></td><td class=\"diff_header\" id=\"from702_1\">1</td><td nowrap=\"nowrap\">Adversaries&nbsp;may&nbsp;use&nbsp;screen&nbsp;capture<span class=\"diff_chg\">s&nbsp;to&nbsp;collect</span>&nbsp;information&nbsp;a</td><td class=\"diff_next\"><a href=\"#difflib_chg_to702__top\">t</a></td><td class=\"diff_header\" id=\"to702_1\">1</td><td nowrap=\"nowrap\">Adversaries&nbsp;may&nbsp;use&nbsp;screen&nbsp;capture<span class=\"diff_chg\">&nbsp;to&nbsp;collect&nbsp;additional</span>&nbsp;inf</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">bout&nbsp;a<span class=\"diff_chg\">pplications&nbsp;running&nbsp;in&nbsp;the</span>&nbsp;foreground,&nbsp;<span class=\"diff_chg\">capture&nbsp;user</span>&nbsp;da</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">ormation&nbsp;about&nbsp;a<span class=\"diff_chg\">&nbsp;target&nbsp;device,&nbsp;such&nbsp;as&nbsp;applications&nbsp;running</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">ta,&nbsp;credentials,&nbsp;or&nbsp;other&nbsp;sensitive&nbsp;information.&nbsp;Application</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_chg\">&nbsp;in&nbsp;the</span>&nbsp;foreground,&nbsp;<span class=\"diff_chg\">user</span>&nbsp;data,&nbsp;credentials,&nbsp;or&nbsp;other&nbsp;sensiti</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">s&nbsp;running&nbsp;in&nbsp;the&nbsp;background&nbsp;can&nbsp;capture&nbsp;screenshots&nbsp;or&nbsp;video</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">ve&nbsp;information.&nbsp;Applications&nbsp;running&nbsp;in&nbsp;the&nbsp;background&nbsp;can&nbsp;c</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">s&nbsp;of&nbsp;another&nbsp;application&nbsp;running&nbsp;in&nbsp;the&nbsp;foreground&nbsp;by&nbsp;using&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">apture&nbsp;screenshots&nbsp;or&nbsp;videos&nbsp;of&nbsp;another&nbsp;application&nbsp;running&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">the&nbsp;Android&nbsp;`MediaProjectionManager`&nbsp;(generally&nbsp;requires&nbsp;the</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">in&nbsp;the&nbsp;foreground&nbsp;by&nbsp;using&nbsp;the&nbsp;Android&nbsp;`MediaProjectionManag</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">&nbsp;device&nbsp;user&nbsp;to&nbsp;grant&nbsp;consent).(Citation:&nbsp;Fortinet&nbsp;screencap</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">er`&nbsp;(generally&nbsp;requires&nbsp;the&nbsp;device&nbsp;user&nbsp;to&nbsp;grant&nbsp;consent).(C</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">&nbsp;July&nbsp;2019)(Citation:&nbsp;Android&nbsp;ScreenCap1&nbsp;2019)&nbsp;Background&nbsp;ap</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">itation:&nbsp;Fortinet&nbsp;screencap&nbsp;July&nbsp;2019)(Citation:&nbsp;Android&nbsp;Scr</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">plications&nbsp;can&nbsp;also&nbsp;use&nbsp;Android&nbsp;accessibility&nbsp;services&nbsp;to&nbsp;ca</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">eenCap1&nbsp;2019)&nbsp;Background&nbsp;applications&nbsp;can&nbsp;also&nbsp;use&nbsp;Android&nbsp;a</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">pture&nbsp;screen&nbsp;contents&nbsp;being&nbsp;displayed&nbsp;by&nbsp;a&nbsp;foreground&nbsp;applic</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">ccessibility&nbsp;services&nbsp;to&nbsp;capture&nbsp;screen&nbsp;contents&nbsp;being&nbsp;displ</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">ation.(Citation:&nbsp;Lookout-Monokle)&nbsp;An&nbsp;adversary&nbsp;with&nbsp;root&nbsp;acc</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">ayed&nbsp;by&nbsp;a&nbsp;foreground&nbsp;application.(Citation:&nbsp;Lookout-Monokle)</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">ess&nbsp;or&nbsp;Android&nbsp;Debug&nbsp;Bridge&nbsp;(adb)&nbsp;access&nbsp;could&nbsp;call&nbsp;the&nbsp;Andr</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">&nbsp;An&nbsp;adversary&nbsp;with&nbsp;root&nbsp;access&nbsp;or&nbsp;Android&nbsp;Debug&nbsp;Bridge&nbsp;(adb)</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">oid&nbsp;`screencap`&nbsp;or&nbsp;`screenrecord`&nbsp;commands.(Citation:&nbsp;Androi</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">&nbsp;access&nbsp;could&nbsp;call&nbsp;the&nbsp;Android&nbsp;`screencap`&nbsp;or&nbsp;`screenrecord`</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">d&nbsp;ScreenCap2&nbsp;2019)(Citation:&nbsp;Trend&nbsp;Micro&nbsp;ScreenCap&nbsp;July&nbsp;2015</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">&nbsp;commands.(Citation:&nbsp;Android&nbsp;ScreenCap2&nbsp;2019)(Citation:&nbsp;Tren</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">)</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\">d&nbsp;Micro&nbsp;ScreenCap&nbsp;July&nbsp;2015)<span class=\"diff_add\">&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1011: User Guidance",
                            "M1012: Enterprise Policy",
                            "M1013: Application Developer Guidance"
                        ],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e2ea7f6b-8d4f-49c3-819d-660530d12b77",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:19.265000+00:00",
                    "modified": "2022-04-11 19:21:34.776000+00:00",
                    "name": "System Information Discovery",
                    "description": "Adversaries may attempt to get detailed information about a device\u2019s operating system and hardware, including versions, patches, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1426) during automated discovery to shape follow-on behaviors, including whether or not to fully infects the target and/or attempts specific actions. \n\n \n\nOn Android, much of this information is programmatically accessible to applications through the `android.os.Build` class. (Citation: Android-Build) iOS is much more restrictive with what information is visible to applications. Typically, applications will only be able to query the device model and which version of iOS it is running. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1426",
                            "external_id": "T1426"
                        },
                        {
                            "source_name": "Android-Build",
                            "description": "Android. (n.d.). Build. Retrieved December 21, 2016.",
                            "url": "https://developer.android.com/reference/android/os/Build"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-12.html",
                            "external_id": "APP-12"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "System information discovery can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"System information discovery can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][2]['external_id']\": \"APP-12\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1029\", \"root['external_references'][2]['description']\": \"Stack Overflow. (n.d.). How can we programmatically detect which iOS version is device running on?. Retrieved December 21, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-11 19:21:34.776000+00:00\", \"old_value\": \"2019-11-20 19:56:49.109000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may attempt to get detailed information about a device\\u2019s operating system and hardware, including versions, patches, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1426) during automated discovery to shape follow-on behaviors, including whether or not to fully infects the target and/or attempts specific actions. \\n\\n \\n\\nOn Android, much of this information is programmatically accessible to applications through the `android.os.Build` class. (Citation: Android-Build) iOS is much more restrictive with what information is visible to applications. Typically, applications will only be able to query the device model and which version of iOS it is running. \", \"old_value\": \"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, and architecture.\\n\\nOn Android, much of this information is programmatically accessible to applications through the android.os.Build class.(Citation: Android-Build)\\n\\nOn iOS, techniques exist for applications to programmatically access this information.(Citation: StackOverflow-iOSVersion)\", \"diff\": \"--- \\n+++ \\n@@ -1,5 +1,5 @@\\n-An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, and architecture.\\n+Adversaries may attempt to get detailed information about a device\\u2019s operating system and hardware, including versions, patches, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1426) during automated discovery to shape follow-on behaviors, including whether or not to fully infects the target and/or attempts specific actions. \\n \\n-On Android, much of this information is programmatically accessible to applications through the android.os.Build class.(Citation: Android-Build)\\n+ \\n \\n-On iOS, techniques exist for applications to programmatically access this information.(Citation: StackOverflow-iOSVersion)\\n+On Android, much of this information is programmatically accessible to applications through the `android.os.Build` class. (Citation: Android-Build) iOS is much more restrictive with what information is visible to applications. Typically, applications will only be able to query the device model and which version of iOS it is running. \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"StackOverflow-iOSVersion\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-12.html\", \"old_value\": \"http://stackoverflow.com/questions/7848766/how-can-we-programmatically-detect-which-ios-version-is-device-running-on\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.2\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.2",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to710__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to710__0\"><a href=\"#difflib_chg_to710__top\">t</a></td><td class=\"diff_header\" id=\"from710_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">An&nbsp;adversary&nbsp;may&nbsp;attempt&nbsp;to&nbsp;get&nbsp;detailed&nbsp;information&nbsp;about&nbsp;t</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to710__top\">t</a></td><td class=\"diff_header\" id=\"to710_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;attempt&nbsp;to&nbsp;get&nbsp;detailed&nbsp;information&nbsp;about&nbsp;a&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">he&nbsp;operating&nbsp;system&nbsp;and&nbsp;hardware,&nbsp;including&nbsp;version,&nbsp;patches</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">device\u2019s&nbsp;operating&nbsp;system&nbsp;and&nbsp;hardware,&nbsp;including&nbsp;versions,&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">,&nbsp;and&nbsp;architecture.&nbsp;&nbsp;On&nbsp;Android,&nbsp;much&nbsp;of&nbsp;this&nbsp;information&nbsp;is</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">patches,&nbsp;and&nbsp;architecture.&nbsp;Adversaries&nbsp;may&nbsp;use&nbsp;the&nbsp;informati</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;programmatically&nbsp;accessible&nbsp;to&nbsp;applications&nbsp;through&nbsp;the&nbsp;and</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">on&nbsp;from&nbsp;[System&nbsp;Information&nbsp;Discovery](https://attack.mitre.</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">roid.os.Build&nbsp;class.(Citation:&nbsp;Android-Build)&nbsp;&nbsp;On&nbsp;iOS,&nbsp;techn</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">org/techniques/T1426)&nbsp;during&nbsp;automated&nbsp;discovery&nbsp;to&nbsp;shape&nbsp;fo</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">iques&nbsp;exist&nbsp;for&nbsp;applications&nbsp;to&nbsp;programmatically&nbsp;access&nbsp;this</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">llow-on&nbsp;behaviors,&nbsp;including&nbsp;whether&nbsp;or&nbsp;not&nbsp;to&nbsp;fully&nbsp;infects</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;information.(Citation:&nbsp;StackOverflow-iOSVersion)</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;the&nbsp;target&nbsp;and/or&nbsp;attempts&nbsp;specific&nbsp;actions.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Androi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">d,&nbsp;much&nbsp;of&nbsp;this&nbsp;information&nbsp;is&nbsp;programmatically&nbsp;accessible&nbsp;t</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">o&nbsp;applications&nbsp;through&nbsp;the&nbsp;`android.os.Build`&nbsp;class.&nbsp;(Citati</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">on:&nbsp;Android-Build)&nbsp;iOS&nbsp;is&nbsp;much&nbsp;more&nbsp;restrictive&nbsp;with&nbsp;what&nbsp;in</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">formation&nbsp;is&nbsp;visible&nbsp;to&nbsp;applications.&nbsp;Typically,&nbsp;application</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s&nbsp;will&nbsp;only&nbsp;be&nbsp;able&nbsp;to&nbsp;query&nbsp;the&nbsp;device&nbsp;model&nbsp;and&nbsp;which&nbsp;vers</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ion&nbsp;of&nbsp;iOS&nbsp;it&nbsp;is&nbsp;running.&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d4536441-1bcc-49fa-80ae-a596ed3f7ffd",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:32.740000+00:00",
                    "modified": "2022-03-30 21:04:12.723000+00:00",
                    "name": "System Network Configuration Discovery",
                    "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of operating systems they access or through information discovery of remote systems. \n\n \n\nOn Android, details of onboard network interfaces are accessible to apps through the `java.net.NetworkInterface` class.(Citation: NetworkInterface) Previously, the Android `TelephonyManager` class could be used to gather telephony-related device identifiers, information such as the IMSI, IMEI, and phone number. However, starting with Android 10, only preloaded, carrier, the default SMS, or device and profile owner applications can access the telephony-related device identifiers.(Citation: TelephonyManager) \n\n \n\nOn iOS, gathering network configuration information is not possible without root access. \n\n \n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1422) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1422",
                            "external_id": "T1422"
                        },
                        {
                            "source_name": "NetworkInterface",
                            "description": "Android. (n.d.). NetworkInterface. Retrieved December 21, 2016.",
                            "url": "https://developer.android.com/reference/java/net/NetworkInterface.html"
                        },
                        {
                            "source_name": "TelephonyManager",
                            "description": "Android. (n.d.). TelephonyManager. Retrieved December 21, 2016.",
                            "url": "https://developer.android.com/reference/android/telephony/TelephonyManager.html"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services could look for usage of the `READ_PRIVILEGED_PHONE_STATE` Android permission. This could indicate that non-system apps are attempting to access information that they do not have access to.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Application vetting services could look for usage of the `READ_PRIVILEGED_PHONE_STATE` Android permission. This could indicate that non-system apps are attempting to access information that they do not have access to.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1025\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 21:04:12.723000+00:00\", \"old_value\": \"2020-06-02 14:35:01.479000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of operating systems they access or through information discovery of remote systems. \\n\\n \\n\\nOn Android, details of onboard network interfaces are accessible to apps through the `java.net.NetworkInterface` class.(Citation: NetworkInterface) Previously, the Android `TelephonyManager` class could be used to gather telephony-related device identifiers, information such as the IMSI, IMEI, and phone number. However, starting with Android 10, only preloaded, carrier, the default SMS, or device and profile owner applications can access the telephony-related device identifiers.(Citation: TelephonyManager) \\n\\n \\n\\nOn iOS, gathering network configuration information is not possible without root access. \\n\\n \\n\\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1422) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. \", \"old_value\": \"On Android, details of onboard network interfaces are accessible to apps through the `java.net.NetworkInterface` class.(Citation: NetworkInterface) The Android `TelephonyManager` class can be used to gather related information such as the IMSI, IMEI, and phone number.(Citation: TelephonyManager)\\n\\nOn iOS, gathering network configuration information is not possible without root access.\", \"diff\": \"--- \\n+++ \\n@@ -1,3 +1,13 @@\\n-On Android, details of onboard network interfaces are accessible to apps through the `java.net.NetworkInterface` class.(Citation: NetworkInterface) The Android `TelephonyManager` class can be used to gather related information such as the IMSI, IMEI, and phone number.(Citation: TelephonyManager)\\n+Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of operating systems they access or through information discovery of remote systems. \\n \\n-On iOS, gathering network configuration information is not possible without root access.\\n+ \\n+\\n+On Android, details of onboard network interfaces are accessible to apps through the `java.net.NetworkInterface` class.(Citation: NetworkInterface) Previously, the Android `TelephonyManager` class could be used to gather telephony-related device identifiers, information such as the IMSI, IMEI, and phone number. However, starting with Android 10, only preloaded, carrier, the default SMS, or device and profile owner applications can access the telephony-related device identifiers.(Citation: TelephonyManager) \\n+\\n+ \\n+\\n+On iOS, gathering network configuration information is not possible without root access. \\n+\\n+ \\n+\\n+Adversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1422) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.2\", \"old_value\": \"2.1\"}}}",
                    "previous_version": "2.1",
                    "version_change": "2.1 \u2192 2.2",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to706__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to706__0\"><a href=\"#difflib_chg_to706__top\">t</a></td><td class=\"diff_header\" id=\"from706_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">On&nbsp;Android,&nbsp;details&nbsp;of&nbsp;onboard&nbsp;network&nbsp;interfaces&nbsp;are&nbsp;access</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to706__top\">t</a></td><td class=\"diff_header\" id=\"to706_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;look&nbsp;for&nbsp;details&nbsp;about&nbsp;the&nbsp;network&nbsp;configura</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ible&nbsp;to&nbsp;apps&nbsp;through&nbsp;the&nbsp;`java.net.NetworkInterface`&nbsp;class.(</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tion&nbsp;and&nbsp;settings,&nbsp;such&nbsp;as&nbsp;IP&nbsp;and/or&nbsp;MAC&nbsp;addresses,&nbsp;of&nbsp;opera</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Citation:&nbsp;NetworkInterface)&nbsp;The&nbsp;Android&nbsp;`TelephonyManager`&nbsp;c</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ting&nbsp;systems&nbsp;they&nbsp;access&nbsp;or&nbsp;through&nbsp;information&nbsp;discovery&nbsp;of</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">lass&nbsp;can&nbsp;be&nbsp;used&nbsp;to&nbsp;gather&nbsp;related&nbsp;information&nbsp;such&nbsp;as&nbsp;the&nbsp;I</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;remote&nbsp;systems.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;On&nbsp;Android,&nbsp;details&nbsp;of&nbsp;onboard&nbsp;network</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">MSI,&nbsp;IMEI,&nbsp;and&nbsp;phone&nbsp;number.(Citation:&nbsp;TelephonyManager)&nbsp;&nbsp;On</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;interfaces&nbsp;are&nbsp;accessible&nbsp;to&nbsp;apps&nbsp;through&nbsp;the&nbsp;`java.net.Net</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;iOS,&nbsp;gathering&nbsp;network&nbsp;configuration&nbsp;information&nbsp;is&nbsp;not&nbsp;pos</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">workInterface`&nbsp;class.(Citation:&nbsp;NetworkInterface)&nbsp;Previously</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">sible&nbsp;without&nbsp;root&nbsp;access.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">,&nbsp;the&nbsp;Android&nbsp;`TelephonyManager`&nbsp;class&nbsp;could&nbsp;be&nbsp;used&nbsp;to&nbsp;gath</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">er&nbsp;telephony-related&nbsp;device&nbsp;identifiers,&nbsp;information&nbsp;such&nbsp;as</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;the&nbsp;IMSI,&nbsp;IMEI,&nbsp;and&nbsp;phone&nbsp;number.&nbsp;However,&nbsp;starting&nbsp;with&nbsp;An</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">droid&nbsp;10,&nbsp;only&nbsp;preloaded,&nbsp;carrier,&nbsp;the&nbsp;default&nbsp;SMS,&nbsp;or&nbsp;devic</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">e&nbsp;and&nbsp;profile&nbsp;owner&nbsp;applications&nbsp;can&nbsp;access&nbsp;the&nbsp;telephony-re</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">lated&nbsp;device&nbsp;identifiers.(Citation:&nbsp;TelephonyManager)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;O</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">n&nbsp;iOS,&nbsp;gathering&nbsp;network&nbsp;configuration&nbsp;information&nbsp;is&nbsp;not&nbsp;po</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ssible&nbsp;without&nbsp;root&nbsp;access.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adversaries&nbsp;may&nbsp;use&nbsp;the&nbsp;inf</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ormation&nbsp;from&nbsp;[System&nbsp;Network&nbsp;Configuration&nbsp;Discovery](https</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">://attack.mitre.org/techniques/T1422)&nbsp;during&nbsp;automated&nbsp;disco</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">very&nbsp;to&nbsp;shape&nbsp;follow-on&nbsp;behaviors,&nbsp;including&nbsp;determining&nbsp;cer</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">tain&nbsp;access&nbsp;within&nbsp;the&nbsp;target&nbsp;network&nbsp;and&nbsp;what&nbsp;actions&nbsp;to&nbsp;do</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;next.&nbsp;</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [
                            "M1006: Use Recent OS Version"
                        ],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--dd818ea5-adf5-41c7-93b5-f3b839a219fb",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:33.574000+00:00",
                    "modified": "2022-03-31 16:31:12.821000+00:00",
                    "name": "System Network Connections Discovery",
                    "description": "Adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network. \n\n \n\nThis is typically accomplished by utilizing device APIs to collect information about nearby networks, such as Wi-Fi, Bluetooth, and cellular tower connections. On Android, this can be done by querying the respective APIs: \n\n \n\n* `WifiInfo` for information about the current Wi-Fi connection, as well as nearby Wi-Fi networks. Querying the `WiFiInfo` API requires the application to hold the `ACCESS_FINE_LOCATION` permission. \n\n* `BluetoothAdapter` for information about Bluetooth devices, which also requires the application to hold several permissions granted by the user at runtime. \n\n* For Android versions prior to Q, applications can use the `TelephonyManager.getNeighboringCellInfo()` method. For Q and later, applications can use the `TelephonyManager.getAllCellInfo()` method. Both methods require the application hold the `ACCESS_FINE_LOCATION` permission.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1421",
                            "external_id": "T1421"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "System Network Connections Discovery can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"System Network Connections Discovery can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1024\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-31 16:31:12.821000+00:00\", \"old_value\": \"2019-02-01 19:34:17.460000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network. \\n\\n \\n\\nThis is typically accomplished by utilizing device APIs to collect information about nearby networks, such as Wi-Fi, Bluetooth, and cellular tower connections. On Android, this can be done by querying the respective APIs: \\n\\n \\n\\n* `WifiInfo` for information about the current Wi-Fi connection, as well as nearby Wi-Fi networks. Querying the `WiFiInfo` API requires the application to hold the `ACCESS_FINE_LOCATION` permission. \\n\\n* `BluetoothAdapter` for information about Bluetooth devices, which also requires the application to hold several permissions granted by the user at runtime. \\n\\n* For Android versions prior to Q, applications can use the `TelephonyManager.getNeighboringCellInfo()` method. For Q and later, applications can use the `TelephonyManager.getAllCellInfo()` method. Both methods require the application hold the `ACCESS_FINE_LOCATION` permission.\", \"old_value\": \"On Android, applications can use standard APIs to gather a list of network connections to and from the device. For example, the Network Connections app available in the Google Play Store (Citation: ConnMonitor) advertises this functionality.\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,13 @@\\n-On Android, applications can use standard APIs to gather a list of network connections to and from the device. For example, the Network Connections app available in the Google Play Store (Citation: ConnMonitor) advertises this functionality.\\n+Adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network. \\n+\\n+ \\n+\\n+This is typically accomplished by utilizing device APIs to collect information about nearby networks, such as Wi-Fi, Bluetooth, and cellular tower connections. On Android, this can be done by querying the respective APIs: \\n+\\n+ \\n+\\n+* `WifiInfo` for information about the current Wi-Fi connection, as well as nearby Wi-Fi networks. Querying the `WiFiInfo` API requires the application to hold the `ACCESS_FINE_LOCATION` permission. \\n+\\n+* `BluetoothAdapter` for information about Bluetooth devices, which also requires the application to hold several permissions granted by the user at runtime. \\n+\\n+* For Android versions prior to Q, applications can use the `TelephonyManager.getNeighboringCellInfo()` method. For Q and later, applications can use the `TelephonyManager.getAllCellInfo()` method. Both methods require the application hold the `ACCESS_FINE_LOCATION` permission.\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.1\", \"old_value\": \"2.0\"}}, \"iterable_item_removed\": {\"root['external_references'][1]\": {\"source_name\": \"ConnMonitor\", \"description\": \"Anti Spy Mobile. (2016, March 14). Network Connections. Retrieved December 21, 2016.\", \"url\": \"https://play.google.com/store/apps/details?id=com.antispycell.connmonitor&hl=en\"}}}",
                    "previous_version": "2.0",
                    "version_change": "2.0 \u2192 2.1",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to698__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to698__0\"><a href=\"#difflib_chg_to698__top\">t</a></td><td class=\"diff_header\" id=\"from698_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">On&nbsp;Android,&nbsp;applications&nbsp;can&nbsp;use&nbsp;standard&nbsp;APIs&nbsp;to&nbsp;gather&nbsp;a&nbsp;l</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to698__top\">t</a></td><td class=\"diff_header\" id=\"to698_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;attempt&nbsp;to&nbsp;get&nbsp;a&nbsp;listing&nbsp;of&nbsp;network&nbsp;connecti</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ist&nbsp;of&nbsp;network&nbsp;connections&nbsp;to&nbsp;and&nbsp;from&nbsp;the&nbsp;device.&nbsp;For&nbsp;examp</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ons&nbsp;to&nbsp;or&nbsp;from&nbsp;the&nbsp;compromised&nbsp;device&nbsp;they&nbsp;are&nbsp;currently&nbsp;acc</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">le,&nbsp;the&nbsp;Network&nbsp;Connections&nbsp;app&nbsp;available&nbsp;in&nbsp;the&nbsp;Google&nbsp;Play</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">essing&nbsp;or&nbsp;from&nbsp;remote&nbsp;systems&nbsp;by&nbsp;querying&nbsp;for&nbsp;information&nbsp;ov</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;Store&nbsp;(Citation:&nbsp;ConnMonitor)&nbsp;advertises&nbsp;this&nbsp;functionality</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">er&nbsp;the&nbsp;network.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;typically&nbsp;accomplished&nbsp;by&nbsp;utili</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">zing&nbsp;device&nbsp;APIs&nbsp;to&nbsp;collect&nbsp;information&nbsp;about&nbsp;nearby&nbsp;network</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s,&nbsp;such&nbsp;as&nbsp;Wi-Fi,&nbsp;Bluetooth,&nbsp;and&nbsp;cellular&nbsp;tower&nbsp;connections.</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;On&nbsp;Android,&nbsp;this&nbsp;can&nbsp;be&nbsp;done&nbsp;by&nbsp;querying&nbsp;the&nbsp;respective&nbsp;API</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;`WifiInfo`&nbsp;for&nbsp;information&nbsp;about&nbsp;the&nbsp;current&nbsp;Wi-Fi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;connection,&nbsp;as&nbsp;well&nbsp;as&nbsp;nearby&nbsp;Wi-Fi&nbsp;networks.&nbsp;Querying&nbsp;the&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">`WiFiInfo`&nbsp;API&nbsp;requires&nbsp;the&nbsp;application&nbsp;to&nbsp;hold&nbsp;the&nbsp;`ACCESS_</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">FINE_LOCATION`&nbsp;permission.&nbsp;&nbsp;&nbsp;*&nbsp;`BluetoothAdapter`&nbsp;for&nbsp;inform</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ation&nbsp;about&nbsp;Bluetooth&nbsp;devices,&nbsp;which&nbsp;also&nbsp;requires&nbsp;the&nbsp;appli</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cation&nbsp;to&nbsp;hold&nbsp;several&nbsp;permissions&nbsp;granted&nbsp;by&nbsp;the&nbsp;user&nbsp;at&nbsp;ru</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ntime.&nbsp;&nbsp;&nbsp;*&nbsp;For&nbsp;Android&nbsp;versions&nbsp;prior&nbsp;to&nbsp;Q,&nbsp;applications&nbsp;can</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;use&nbsp;the&nbsp;`TelephonyManager.getNeighboringCellInfo()`&nbsp;method.</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;For&nbsp;Q&nbsp;and&nbsp;later,&nbsp;applications&nbsp;can&nbsp;use&nbsp;the&nbsp;`TelephonyManager</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">.getAllCellInfo()`&nbsp;method.&nbsp;Both&nbsp;methods&nbsp;require&nbsp;the&nbsp;applicat</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ion&nbsp;hold&nbsp;the&nbsp;`ACCESS_FINE_LOCATION`&nbsp;permission.</span></td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": [
                            "M1005: Application Vetting"
                        ]
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c6a146ae-9c63-4606-97ff-e261e76e8380",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-02-01 17:29:43.503000+00:00",
                    "modified": "2022-04-06 15:35:05.775000+00:00",
                    "name": "Web Service",
                    "description": "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. \n\n \n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis, or enable operational resiliency (since this infrastructure may be dynamically changed). \n\n ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1481",
                            "external_id": "T1481"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Application vetting services may provide a list of connections made or received by an application, or a list of domains contacted by the application.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:35:05.775000+00:00\", \"old_value\": \"2019-02-01 17:29:43.503000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. \\n\\n \\n\\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis, or enable operational resiliency (since this infrastructure may be dynamically changed). \\n\\n \", \"old_value\": \"Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system.\\n\\nThese commands may also include pointers to command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\\n\\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\\n\\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).\", \"diff\": \"--- \\n+++ \\n@@ -1,7 +1,7 @@\\n-Adversaries may use an existing, legitimate external Web service as a means for relaying commands to a compromised system.\\n+Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites and social media, acting as a mechanism for C2, may give a significant amount of cover. This is due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. \\n \\n-These commands may also include pointers to command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\\n+ \\n \\n-Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\\n+Use of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis, or enable operational resiliency (since this infrastructure may be dynamically changed). \\n \\n-Use of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).\\n+ \"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.1\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 1.1",
                    "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to707__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to707__0\"><a href=\"#difflib_chg_to707__top\">t</a></td><td class=\"diff_header\" id=\"from707_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">Adversaries&nbsp;may&nbsp;use&nbsp;an&nbsp;existing,&nbsp;legitimate&nbsp;external&nbsp;Web&nbsp;ser</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to707__top\">t</a></td><td class=\"diff_header\" id=\"to707_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;use&nbsp;an&nbsp;existing,&nbsp;legitimate&nbsp;external&nbsp;Web&nbsp;ser</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">vice&nbsp;as&nbsp;a&nbsp;means&nbsp;for&nbsp;relaying&nbsp;commands&nbsp;to&nbsp;a&nbsp;compromised&nbsp;syste</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">vice&nbsp;as&nbsp;a&nbsp;means&nbsp;for&nbsp;relaying&nbsp;data&nbsp;to/from&nbsp;a&nbsp;compromised&nbsp;syst</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">m.&nbsp;&nbsp;These&nbsp;commands&nbsp;may&nbsp;also&nbsp;include&nbsp;pointers&nbsp;to&nbsp;command&nbsp;and&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">em.&nbsp;Popular&nbsp;websites&nbsp;and&nbsp;social&nbsp;media,&nbsp;acting&nbsp;as&nbsp;a&nbsp;mechanism</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">control&nbsp;(C2)&nbsp;infrastructure.&nbsp;Adversaries&nbsp;may&nbsp;post&nbsp;content,&nbsp;k</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;for&nbsp;C2,&nbsp;may&nbsp;give&nbsp;a&nbsp;significant&nbsp;amount&nbsp;of&nbsp;cover.&nbsp;This&nbsp;is&nbsp;due</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">nown&nbsp;as&nbsp;a&nbsp;dead&nbsp;drop&nbsp;resolver,&nbsp;on&nbsp;Web&nbsp;services&nbsp;with&nbsp;embedded&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;to&nbsp;the&nbsp;likelihood&nbsp;that&nbsp;hosts&nbsp;within&nbsp;a&nbsp;network&nbsp;are&nbsp;already&nbsp;c</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">(and&nbsp;often&nbsp;obfuscated/encoded)&nbsp;domains&nbsp;or&nbsp;IP&nbsp;addresses.&nbsp;Once</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ommunicating&nbsp;with&nbsp;them&nbsp;prior&nbsp;to&nbsp;a&nbsp;compromise.&nbsp;Using&nbsp;common&nbsp;s</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;infected,&nbsp;victims&nbsp;will&nbsp;reach&nbsp;out&nbsp;to&nbsp;and&nbsp;be&nbsp;redirected&nbsp;by&nbsp;th</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ervices,&nbsp;such&nbsp;as&nbsp;those&nbsp;offered&nbsp;by&nbsp;Google&nbsp;or&nbsp;Twitter,&nbsp;makes&nbsp;i</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ese&nbsp;resolvers.&nbsp;&nbsp;Popular&nbsp;websites&nbsp;and&nbsp;social&nbsp;media&nbsp;acting&nbsp;as&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">t&nbsp;easier&nbsp;for&nbsp;adversaries&nbsp;to&nbsp;hide&nbsp;in&nbsp;expected&nbsp;noise.&nbsp;Web&nbsp;serv</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">a&nbsp;mechanism&nbsp;for&nbsp;C2&nbsp;may&nbsp;give&nbsp;a&nbsp;significant&nbsp;amount&nbsp;of&nbsp;cover&nbsp;du</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ice&nbsp;providers&nbsp;commonly&nbsp;use&nbsp;SSL/TLS&nbsp;encryption,&nbsp;giving&nbsp;advers</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">e&nbsp;to&nbsp;the&nbsp;likelihood&nbsp;that&nbsp;hosts&nbsp;within&nbsp;a&nbsp;network&nbsp;are&nbsp;already&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">aries&nbsp;an&nbsp;added&nbsp;level&nbsp;of&nbsp;protection.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Use&nbsp;of&nbsp;Web&nbsp;services</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">communicating&nbsp;with&nbsp;them&nbsp;prior&nbsp;to&nbsp;a&nbsp;compromise.&nbsp;Using&nbsp;common&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;may&nbsp;also&nbsp;protect&nbsp;back-end&nbsp;C2&nbsp;infrastructure&nbsp;from&nbsp;discovery&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">services,&nbsp;such&nbsp;as&nbsp;those&nbsp;offered&nbsp;by&nbsp;Google&nbsp;or&nbsp;Twitter,&nbsp;makes&nbsp;</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">through&nbsp;malware&nbsp;binary&nbsp;analysis,&nbsp;or&nbsp;enable&nbsp;operational&nbsp;resil</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">it&nbsp;easier&nbsp;for&nbsp;adversaries&nbsp;to&nbsp;hide&nbsp;in&nbsp;expected&nbsp;noise.&nbsp;Web&nbsp;ser</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">iency&nbsp;(since&nbsp;this&nbsp;infrastructure&nbsp;may&nbsp;be&nbsp;dynamically&nbsp;changed)</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">vice&nbsp;providers&nbsp;commonly&nbsp;use&nbsp;SSL/TLS&nbsp;encryption,&nbsp;giving&nbsp;adver</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">.&nbsp;&nbsp;&nbsp;&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">saries&nbsp;an&nbsp;added&nbsp;level&nbsp;of&nbsp;protection.&nbsp;&nbsp;Use&nbsp;of&nbsp;Web&nbsp;services&nbsp;ma</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">y&nbsp;also&nbsp;protect&nbsp;back-end&nbsp;C2&nbsp;infrastructure&nbsp;from&nbsp;discovery&nbsp;thr</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ough&nbsp;malware&nbsp;binary&nbsp;analysis&nbsp;while&nbsp;also&nbsp;enabling&nbsp;operational</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;resiliency&nbsp;(since&nbsp;this&nbsp;infrastructure&nbsp;may&nbsp;be&nbsp;dynamically&nbsp;ch</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">anged).</span></td><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td></tr>\n        </tbody>\n    </table>",
                    "changelog_mitigations": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    },
                    "changelog_detections": {
                        "shared": [],
                        "new": [],
                        "dropped": []
                    }
                }
            ],
            "other_version_changes": [],
            "patches": [],
            "revocations": [
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--62adb627-f647-498e-b4cc-41499361bacb",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:20.727000+00:00",
                    "modified": "2022-04-01 12:50:48.453000+00:00",
                    "name": "Access Calendar Entries",
                    "description": "An adversary could call standard operating system APIs from a malicious application to gather calendar entry data, or with escalated privileges could directly access files containing calendar data.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1435",
                            "external_id": "T1435"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                            "external_id": "APP-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On both Android (6.0 and up) and iOS, the user can view which applications have permission to access calendar information through the device settings screen, and the user can choose to revoke the permissions.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1038\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 12:50:48.453000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--a9fa0d30-a8ff-45bf-922e-7720da0b7922",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-01 12:48:27.021000+00:00",
                        "modified": "2022-04-11 19:33:41.984000+00:00",
                        "name": "Calendar Entries",
                        "description": "Adversaries may utilize standard operating system APIs to gather calendar entry data. On Android, this can be accomplished using the Calendar Content Provider. On iOS, this can be accomplished using the `EventKit` framework. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access [Calendar Entries](https://attack.mitre.org/techniques/T1636/001) without the user\u2019s knowledge or approval. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1636/001",
                                "external_id": "T1636.001"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                                "external_id": "APP-13"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "On both Android and iOS, the user can manage which applications have permission to access calendar information through the device settings screen, revoke the permission if necessary. Application vetting services could look for `android.permission.READ_CALENDAR` or `android.permission.WRITE_CALENDAR` in an Android application\u2019s manifest, or `NSCalendarsUsageDescription` in an iOS application\u2019s `Info.plist` file. Most applications do not need calendar access, so extra scrutiny could be applied to those that request it. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--79eec66a-9bd0-4a3f-ac82-19159e94bd44",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:11.116000+00:00",
                    "modified": "2022-04-01 13:14:43.174000+00:00",
                    "name": "Access Call Log",
                    "description": "On Android, an adversary could call standard operating system APIs from a malicious application to gather call log data, or with escalated privileges could directly access files containing call log data.\n\nOn iOS, applications do not have access to the call log, so privilege escalation would be required in order to access the data.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1433",
                            "external_id": "T1433"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                            "external_id": "APP-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android 6.0 and up, the user can view which applications have permission to access call log information through the device settings screen, and the user can choose to revoke the permissions.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1036\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 13:14:43.174000+00:00\", \"old_value\": \"2019-09-18 18:17:43.466000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--1d1b1558-c833-482e-aabb-d07ef6eae63d",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-01 13:12:23.522000+00:00",
                        "modified": "2022-04-29 17:29:34.081000+00:00",
                        "name": "Call Log",
                        "description": "Adversaries may utilize standard operating system APIs to gather call log data. On Android, this can be accomplished using the Call Log Content Provider. iOS provides no standard API to access the call log. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access the [Call Log](https://attack.mitre.org/techniques/T1636/002) without the user\u2019s knowledge or approval. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1636/002",
                                "external_id": "T1636.002"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                                "external_id": "APP-13"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "On Android, the user can manage which applications have permission to access the call log through the device settings screen, revoking the permission if necessary. Application vetting services could look for `android.permission.READ_CALL_LOG` in an Android application\u2019s manifest. Most applications do not need call log access, so extra scrutiny could be applied to those that request it.  ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--4e6620ac-c30c-4f6d-918e-fa20cae7c1ce",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:11.535000+00:00",
                    "modified": "2022-04-01 13:19:41.180000+00:00",
                    "name": "Access Contact List",
                    "description": "An adversary could call standard operating system APIs from a malicious application to gather contact list (i.e., address book) data, or with escalated privileges could directly access files containing contact list data.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1432",
                            "external_id": "T1432"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                            "external_id": "APP-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On both Android (6.0 and up) and iOS, the user can view which applications have permission to access contact list information through the device settings screen, and the user can choose to revoke the permissions.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1035\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 13:19:41.180000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--e0b9ecb8-a7d1-43c7-aa30-8e19c6a92c86",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-01 13:17:52.740000+00:00",
                        "modified": "2022-04-11 19:38:50.942000+00:00",
                        "name": "Contact List",
                        "description": "Adversaries may utilize standard operating system APIs to gather contact list data. On Android, this can be accomplished using the Contacts Content Provider. On iOS, this can be accomplished using the `Contacts` framework. \n\n \n\nIf the device has been jailbroken or rooted, an adversary may be able to access the [Contact List](https://attack.mitre.org/techniques/T1636/003) without the user\u2019s knowledge or approval. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1636/003",
                                "external_id": "T1636.003"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                                "external_id": "APP-13"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "On both Android and iOS, the user can manage which applications have permission to access the contact list through the device settings screen, revoking the permission if necessary. Application vetting services could look for `android.permission.READ_CONTACTS` in an Android application\u2019s manifest, or `NSContactsUsageDescription` in an iOS application\u2019s `Info.plist` file. Most applications do not need contact list access, so extra scrutiny could be applied to those that request it.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "iOS",
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--bd4d32f5-eed4-4018-a649-40b229dd1d69",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:30.127000+00:00",
                    "modified": "2022-03-30 14:43:46.019000+00:00",
                    "name": "Broadcast Receivers",
                    "description": "An intent is a message passed between Android application or system components. Applications can register to receive broadcast intents at runtime, which are system-wide intents delivered to each app when certain events happen on the device, such as network changes or the user unlocking the screen. Malicious applications can then trigger certain actions within the app based on which broadcast intent was received.\n\nFurther, malicious applications can register for intents broadcasted by other applications in addition to the Android system itself. This allows the malware to respond based on actions in other applications. This behavior typically indicates a more intimate knowledge, or potentially the targeting of specific devices, users, or applications.\n\nIn Android 8 (API level 26), broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest. In most cases, applications that register through the manifest will no longer receive the broadcasts. Now, applications must register context-specific broadcast receivers while the user is actively using the app.(Citation: Android Changes to System Broadcasts)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "execution"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1402",
                            "external_id": "T1402"
                        },
                        {
                            "source_name": "Android Changes to System Broadcasts",
                            "description": "Google. (2019, December 27). Broadcasts Overview. Retrieved January 27, 2020.",
                            "url": "https://developer.android.com/guide/components/broadcasts#changes-system-broadcasts"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Broadcast intent receivers are part of standard OS-level APIs and are therefore typically undetectable to the end user.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_contributors']\": [\"Alex Hinchliffe, Palo Alto Networks\"], \"root['x_mitre_old_attack_id']\": \"MOB-T1005\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 14:43:46.019000+00:00\", \"old_value\": \"2020-03-27 15:28:03.858000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--3775a580-a1d1-46c4-8147-c614a715f2e9",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 14:41:00.672000+00:00",
                        "modified": "2022-04-19 16:49:10.650000+00:00",
                        "name": "Broadcast Receivers",
                        "description": "Adversaries may establish persistence using system mechanisms that trigger execution based on specific events. Mobile operating systems have means to subscribe to events such as receiving an SMS message, device boot completion, or other device activities. \n\nAn intent is a message passed between Android applications or system components. Applications can register to receive broadcast intents at runtime, which are system-wide intents delivered to each app when certain events happen on the device, such as network changes or the user unlocking the screen. Malicious applications can then trigger certain actions within the app based on which broadcast intent was received. \n\nIn addition to Android system intents, malicious applications can register for intents broadcasted by other applications. This allows the malware to respond based on actions in other applications. This behavior typically indicates a more intimate knowledge, or potentially the targeting of specific devices, users, or applications. \n\nIn Android 8 (API level 26), broadcast intent behavior was changed, limiting the implicit intents that applications can register for in the manifest. In most cases, applications that register through the manifest will no longer receive the broadcasts. Now, applications must register context-specific broadcast receivers while the user is actively using the app.(Citation: Android Changes to System Broadcasts) ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "persistence"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1624/001",
                                "external_id": "T1624.001"
                            },
                            {
                                "source_name": "Android Changes to System Broadcasts",
                                "description": "Google. (2019, December 27). Broadcasts Overview. Retrieved January 27, 2020.",
                                "url": "https://developer.android.com/guide/components/broadcasts#changes-system-broadcasts"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_contributors": [
                            "Alex Hinchliffe, Palo Alto Networks"
                        ],
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Application vetting services can detect which broadcast intents an application registers for and which permissions it requests. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e8b4e1ec-8e3b-484c-9038-4459b1ed8060",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:15.920000+00:00",
                    "modified": "2022-04-01 13:27:29.880000+00:00",
                    "name": "Capture SMS Messages",
                    "description": "A malicious application could capture sensitive data sent via SMS, including authentication credentials. SMS is frequently used to transmit codes used for multi-factor authentication.\n\nOn Android, a malicious application must request and obtain permission (either at app install time or run time) in order to receive SMS messages. Alternatively, a malicious application could attempt to perform an operating system privilege escalation attack to bypass the permission requirement.\n\nOn iOS, applications cannot access SMS messages in normal operation, so an adversary would need to attempt to perform an operating system privilege escalation attack to potentially be able to access SMS messages.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1412",
                            "external_id": "T1412"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, the user can view which applications have permission to access SMS messages through the device settings, and the user can choose to revoke the permission.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1015\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 13:27:29.880000+00:00\", \"old_value\": \"2019-09-18 18:28:50.898000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--c6421411-ae61-42bb-9098-73fddb315002",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-01 13:25:30.923000+00:00",
                        "modified": "2022-04-11 19:40:28.979000+00:00",
                        "name": "SMS Messages",
                        "description": "Adversaries may utilize standard operating system APIs to gather SMS messages. On Android, this can be accomplished using the SMS Content Provider. iOS provides no standard API to access SMS messages. \n\nIf the device has been jailbroken or rooted, an adversary may be able to access [SMS Messages](https://attack.mitre.org/techniques/T1636/004) without the user\u2019s knowledge or approval. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1636/004",
                                "external_id": "T1636.004"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                                "external_id": "APP-13"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "On Android, the user can manage which applications have permission to access SMS messages through the device settings screen, revoking the permission if necessary. Application vetting services could look for `android.permission.READ_SMS` in an Android application\u2019s manifest. Most applications do not need access to SMS messages, so extra scrutiny could be applied to those that request it. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--8f0e39c6-82c9-41ec-9f93-5696c0f2e274",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:09.082000+00:00",
                    "modified": "2022-04-06 13:57:38.841000+00:00",
                    "name": "Carrier Billing Fraud",
                    "description": "A malicious app may trigger fraudulent charges on a victim\u2019s carrier billing statement in several different ways, including SMS toll fraud and SMS shortcodes that make purchases.\n\nPerforming SMS fraud relies heavily upon the fact that, when making SMS purchases, the carriers perform device verification but not user verification. This allows adversaries to make purchases on behalf of the user, with little or no user interaction.(Citation: Google Bread)\n\nMalicious applications may also perform toll billing, which occurs when carriers provide payment endpoints over a web page. The application connects to the web page over cellular data so the carrier can directly verify the number, or the application must retrieve a code sent via SMS and enter it into the web page.(Citation: Google Bread)\n\nOn iOS, apps cannot send SMS messages.\n\nOn Android, apps must hold the `SEND_SMS` permission to send SMS messages. Additionally, Android version 4.2 and above has mitigations against this threat by requiring user consent before allowing SMS messages to be sent to premium numbers (Citation: AndroidSecurity2014).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1448",
                            "external_id": "T1448"
                        },
                        {
                            "source_name": "Google Bread",
                            "description": "A. Guertin, V. Kotov, Android Security & Privacy Team. (2020, January 9). PHA Family Highlights: Bread (and Friends) . Retrieved April 27, 2020.",
                            "url": "https://security.googleblog.com/2020/01/pha-family-highlights-bread-and-friends.html"
                        },
                        {
                            "source_name": "AndroidSecurity2014",
                            "description": "Google. (2014). Android Security 2014 Year in Review. Retrieved December 12, 2016.",
                            "url": "https://static.googleusercontent.com/media/source.android.com/en//security/reports/Google_Android_Security_2014_Report_Final.pdf"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Starting with Android 4.2 the user is prompted and must provide consent before applications can send SMS messages to premium numbers.(Citation: AndroidSecurity2014)\n\nOn Android 6.0 and up, the user can view which applications have permission to send SMS messages through the device settings screen, and the user can choose to revoke the permissions.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1051\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 13:57:38.841000+00:00\", \"old_value\": \"2020-05-04 15:40:20.943000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--a8e971b8-8dc7-4514-8249-ae95427ec467",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-06 13:55:14.390000+00:00",
                        "modified": "2022-04-06 13:55:14.390000+00:00",
                        "name": "Generate Traffic from Victim",
                        "description": "Adversaries may generate outbound traffic from devices. This is typically performed to manipulate external outcomes, such as to achieve carrier billing fraud or to manipulate app store rankings or ratings. Outbound traffic is typically generated as SMS messages or general web traffic, but may take other forms as well.\n\nIf done via SMS messages, Android apps must hold the `SEND_SMS` permission. Additionally, sending an SMS message requires user consent if the recipient is a premium number. Applications cannot send SMS messages on iOS",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "impact"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1643",
                                "external_id": "T1643"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-16.html",
                                "external_id": "APP-16"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "On Android, users can review which applications can use premium SMS features in the \u201cSpecial access\u201d page within application settings. Application vetting services can detect when applications request the `SEND_SMS` permission, which should be infrequently used.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e399430e-30b7-48c5-b70a-f44dc8c175cb",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-07-26 14:15:31.451000+00:00",
                    "modified": "2022-04-06 13:41:17.512000+00:00",
                    "name": "Clipboard Modification",
                    "description": "Adversaries may abuse clipboard functionality to intercept and replace information in the Android device clipboard.(Citation: ESET Clipboard Modification February 2019)(Citation: Welivesecurity Clipboard Modification February 2019)(Citation: Syracuse Clipboard Modification 2014) Malicious applications may monitor the clipboard activity through the <code>ClipboardManager.OnPrimaryClipChangedListener</code> interface on Android to determine when the clipboard contents have changed.(Citation: Dr.Webb Clipboard Modification origin2 August 2018)(Citation: Dr.Webb Clipboard Modification origin August 2018) Listening to clipboard activity, reading the clipboard contents, and modifying the clipboard contents requires no explicit application permissions and can be performed by applications running in the background, however, this behavior has changed with the release of Android 10.(Citation: Android 10 Privacy Changes)\n\nAdversaries may use [Clipboard Modification](https://attack.mitre.org/techniques/T1510) to replace text prior to being pasted, for example, replacing a copied Bitcoin wallet address with a wallet address that is under adversarial control.\n\n[Clipboard Modification](https://attack.mitre.org/techniques/T1510) had been seen within the Android/Clipper.C trojan. This sample had been detected by ESET in an application distributed through the Google Play Store targeting cryptocurrency wallet numbers.(Citation: ESET Clipboard Modification February 2019)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1510",
                            "external_id": "T1510"
                        },
                        {
                            "source_name": "Android 10 Privacy Changes",
                            "description": "Android Developers. (n.d.). Privacy changes in Android 10. Retrieved September 11, 2019.",
                            "url": "https://developer.android.com/about/versions/10/privacy/changes#clipboard-data"
                        },
                        {
                            "source_name": "Dr.Webb Clipboard Modification origin August 2018",
                            "description": "Dr.Webb. (2018, August 8). Android.Clipper.1.origin. Retrieved July 26, 2019.",
                            "url": "https://vms.drweb.com/virus/?i=17517750"
                        },
                        {
                            "source_name": "Dr.Webb Clipboard Modification origin2 August 2018",
                            "description": "Dr.Webb. (2018, August 8). Android.Clipper.2.origin. Retrieved July 26, 2019.",
                            "url": "https://vms.drweb.com/virus/?i=17517761"
                        },
                        {
                            "source_name": "ESET Clipboard Modification February 2019",
                            "description": "ESET. (2019, February 11). First clipper malware discovered on Google Play.. Retrieved July 26, 2019.",
                            "url": "https://www.eset.com/uk/about/newsroom/press-releases/first-clipper-malware-discovered-on-google-play-1/"
                        },
                        {
                            "source_name": "Welivesecurity Clipboard Modification February 2019",
                            "description": "Luk\u00e1\u0161 \u0160tefanko. (2019, February 8). First clipper malware discovered on Google Play. Retrieved July 26, 2019.",
                            "url": "https://www.welivesecurity.com/2019/02/08/first-clipper-malware-google-play/"
                        },
                        {
                            "source_name": "Syracuse Clipboard Modification 2014",
                            "description": "Zhang, X; Du, W. (2014, January). Attacks on Android Clipboard. Retrieved July 26, 2019.",
                            "url": "http://www.cis.syr.edu/~wedu/Research/paper/clipboard_attack_dimva2014.pdf"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Modifying clipboard content can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 13:41:17.512000+00:00\", \"old_value\": \"2019-10-28 18:36:26.261000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Android 10 Privacy Changes\", \"old_value\": \"ESET Clipboard Modification February 2019\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"Android Developers. (n.d.). Privacy changes in Android 10. Retrieved September 11, 2019.\", \"old_value\": \"ESET. (2019, February 11). First clipper malware discovered on Google Play.. Retrieved July 26, 2019.\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://developer.android.com/about/versions/10/privacy/changes#clipboard-data\", \"old_value\": \"https://www.eset.com/uk/about/newsroom/press-releases/first-clipper-malware-discovered-on-google-play-1/\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Dr.Webb Clipboard Modification origin August 2018\", \"old_value\": \"Welivesecurity Clipboard Modification February 2019\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Dr.Webb. (2018, August 8). Android.Clipper.1.origin. Retrieved July 26, 2019.\", \"old_value\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2019, February 8). First clipper malware discovered on Google Play. Retrieved July 26, 2019.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://vms.drweb.com/virus/?i=17517750\", \"old_value\": \"https://www.welivesecurity.com/2019/02/08/first-clipper-malware-google-play/\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Dr.Webb Clipboard Modification origin2 August 2018\", \"old_value\": \"Syracuse Clipboard Modification 2014\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Dr.Webb. (2018, August 8). Android.Clipper.2.origin. Retrieved July 26, 2019.\", \"old_value\": \"Zhang, X; Du, W. (2014, January). Attacks on Android Clipboard. Retrieved July 26, 2019.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://vms.drweb.com/virus/?i=17517761\", \"old_value\": \"http://www.cis.syr.edu/~wedu/Research/paper/clipboard_attack_dimva2014.pdf\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"ESET Clipboard Modification February 2019\", \"old_value\": \"Dr.Webb Clipboard Modification origin2 August 2018\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"ESET. (2019, February 11). First clipper malware discovered on Google Play.. Retrieved July 26, 2019.\", \"old_value\": \"Dr.Webb. (2018, August 8). Android.Clipper.2.origin. Retrieved July 26, 2019.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://www.eset.com/uk/about/newsroom/press-releases/first-clipper-malware-discovered-on-google-play-1/\", \"old_value\": \"https://vms.drweb.com/virus/?i=17517761\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"Welivesecurity Clipboard Modification February 2019\", \"old_value\": \"Dr.Webb Clipboard Modification origin August 2018\"}, \"root['external_references'][5]['description']\": {\"new_value\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2019, February 8). First clipper malware discovered on Google Play. Retrieved July 26, 2019.\", \"old_value\": \"Dr.Webb. (2018, August 8). Android.Clipper.1.origin. Retrieved July 26, 2019.\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://www.welivesecurity.com/2019/02/08/first-clipper-malware-google-play/\", \"old_value\": \"https://vms.drweb.com/virus/?i=17517750\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"Syracuse Clipboard Modification 2014\", \"old_value\": \"Android 10 Privacy Changes\"}, \"root['external_references'][6]['description']\": {\"new_value\": \"Zhang, X; Du, W. (2014, January). Attacks on Android Clipboard. Retrieved July 26, 2019.\", \"old_value\": \"Android Developers. (n.d.). Privacy changes in Android 10. Retrieved September 11, 2019.\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"http://www.cis.syr.edu/~wedu/Research/paper/clipboard_attack_dimva2014.pdf\", \"old_value\": \"https://developer.android.com/about/versions/10/privacy/changes#clipboard-data\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--74e6003f-c7f4-4047-983b-708cc19b96b6",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-06 13:39:39.779000+00:00",
                        "modified": "2022-04-21 17:34:52.311000+00:00",
                        "name": "Transmitted Data Manipulation",
                        "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity. By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity to deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system, typically gained through a prolonged information gathering campaign, in order to have the desired impact.\n\nOne method to achieve [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1641/001) is by modifying the contents of the device clipboard. Malicious applications may monitor clipboard activity through the `ClipboardManager.OnPrimaryClipChangedListener` interface on Android to determine when clipboard contents have changed. Listening to clipboard activity, reading clipboard contents, and modifying clipboard contents requires no explicit application permissions and can be performed by applications running in the background. However, this behavior has changed with the release of Android 10.\n\nAdversaries may use [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1641/001) to replace text prior to being pasted. For example, replacing a copied Bitcoin wallet address with a wallet address that is under adversarial control.\n\n[Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1641/001) was seen within the Android/Clipper.C trojan. This sample was detected by ESET in an application distributed through the Google Play Store targeting cryptocurrency wallet numbers.(Citation: ESET Clipboard Modification February 2019)",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "impact"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1641/001",
                                "external_id": "T1641.001"
                            },
                            {
                                "source_name": "ESET Clipboard Modification February 2019",
                                "description": "ESET. (2019, February 11). First clipper malware discovered on Google Play.. Retrieved July 26, 2019.",
                                "url": "https://www.eset.com/uk/about/newsroom/press-releases/first-clipper-malware-discovered-on-google-play-1/"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Applications could be vetted for their use of the clipboard manager APIs with extra scrutiny given to application that make use of them.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--039bc59c-ecc7-4997-b2b4-4ab728bd91aa",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-10-30 15:37:55.029000+00:00",
                    "modified": "2022-03-30 19:14:20.369000+00:00",
                    "name": "Code Injection",
                    "description": "Adversaries may use code injection attacks to implant arbitrary code into the address space of a running application. Code is then executed or interpreted by that application. Adversaries utilizing this technique may exploit capabilities to load code in at runtime through dynamic libraries.\n\nWith root access, `ptrace` can be used to target specific applications and load shared libraries into its process memory.(Citation: Shunix Code Injection Mar 2016)(Citation: Fadeev Code Injection Aug 2018) By injecting code, an adversary may be able to gain access to higher permissions held by the targeted application by executing as the targeted application. In addition, the adversary may be able to evade detection or enable persistent access to a system under the guise of the application\u2019s process.(Citation: Google Triada June 2019)\n",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "privilege-escalation"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1540",
                            "external_id": "T1540"
                        },
                        {
                            "source_name": "Fadeev Code Injection Aug 2018",
                            "description": "Alexandr Fadeev. (2018, August 26). Shared Library Injection on Android 8.0. Retrieved October 30, 2019.",
                            "url": "https://fadeevab.com/shared-library-injection-on-android-8/"
                        },
                        {
                            "source_name": "Google Triada June 2019",
                            "description": "Lukasz Siewierski. (2019, June 6). PHA Family Highlights: Triada. Retrieved July 16, 2019.",
                            "url": "https://security.googleblog.com/2019/06/pha-family-highlights-triada.html"
                        },
                        {
                            "source_name": "Shunix Code Injection Mar 2016",
                            "description": "Shunix . (2016, March 22). Shared Library Injection in Android. Retrieved October 30, 2019.",
                            "url": "https://shunix.com/shared-library-injection-in-android/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Code injection can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 19:14:20.369000+00:00\", \"old_value\": \"2020-03-29 04:07:06.663000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Fadeev Code Injection Aug 2018\", \"old_value\": \"Shunix Code Injection Mar 2016\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"Alexandr Fadeev. (2018, August 26). Shared Library Injection on Android 8.0. Retrieved October 30, 2019.\", \"old_value\": \"Shunix . (2016, March 22). Shared Library Injection in Android. Retrieved October 30, 2019.\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://fadeevab.com/shared-library-injection-on-android-8/\", \"old_value\": \"https://shunix.com/shared-library-injection-in-android/\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Google Triada June 2019\", \"old_value\": \"Fadeev Code Injection Aug 2018\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Lukasz Siewierski. (2019, June 6). PHA Family Highlights: Triada. Retrieved July 16, 2019.\", \"old_value\": \"Alexandr Fadeev. (2018, August 26). Shared Library Injection on Android 8.0. Retrieved October 30, 2019.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://security.googleblog.com/2019/06/pha-family-highlights-triada.html\", \"old_value\": \"https://fadeevab.com/shared-library-injection-on-android-8/\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Shunix Code Injection Mar 2016\", \"old_value\": \"Google Triada June 2019\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Shunix . (2016, March 22). Shared Library Injection in Android. Retrieved October 30, 2019.\", \"old_value\": \"Lukasz Siewierski. (2019, June 6). PHA Family Highlights: Triada. Retrieved July 16, 2019.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://shunix.com/shared-library-injection-in-android/\", \"old_value\": \"https://security.googleblog.com/2019/06/pha-family-highlights-triada.html\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--1ff89c1b-7615-4fe8-b9cb-63aaf52e6dee",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 19:05:17.048000+00:00",
                        "modified": "2022-04-05 17:05:37.431000+00:00",
                        "name": "Ptrace System Calls",
                        "description": "Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (e.g., by using `malloc`) then invoking that memory with `PTRACE_SETREGS` to set the register containing the next instruction to execute. Ptrace system call injection can also be done with `PTRACE_POKETEXT`/`PTRACE_POKEDATA`, which copy data to a specific address in the target process's memory (e.g., the current address of the next instruction).(Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018)  \n\nPtrace system call injection may not be possible when targeting processes with high-privileges, and on some systems those that are non-child processes.(Citation: BH Linux Inject)  \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            },
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "privilege-escalation"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1631/001",
                                "external_id": "T1631.001"
                            },
                            {
                                "source_name": "PTRACE man",
                                "description": "Kerrisk, M. (2020, February 9). PTRACE(2) - Linux Programmer's Manual. Retrieved February 21, 2020.",
                                "url": "http://man7.org/linux/man-pages/man2/ptrace.2.html"
                            },
                            {
                                "source_name": "Medium Ptrace JUL 2018",
                                "description": "Jain, S. (2018, July 25). Code injection in running process using ptrace. Retrieved February 21, 2020.",
                                "url": "https://medium.com/@jain.sm/code-injection-in-running-process-using-ptrace-d3ea7191a4be"
                            },
                            {
                                "source_name": "BH Linux Inject",
                                "description": "Colgan, T. (2015, August 15). Linux-Inject. Retrieved February 21, 2020.",
                                "url": "https://github.com/gaffe23/linux-inject/blob/master/slides_BHArsenal2015.pdf"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Application vetting services could look for misuse of dynamic libraries.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e083305c-49e7-4c87-aae8-9689213bffbe",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2020-12-16 20:16:07.673000+00:00",
                    "modified": "2022-03-30 14:00:45.099000+00:00",
                    "name": "Command-Line Interface",
                    "description": "Adversaries may use built-in command-line interfaces to interact with the device and execute commands. Android provides a bash shell that can be interacted with over the Android Debug Bridge (ADB) or programmatically using Java\u2019s `Runtime` package. On iOS, adversaries can interact with the underlying runtime shell if the device has been jailbroken.\n\nIf the device has been rooted or jailbroken, adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user. This dangerous level of permissions allows the adversary to run special commands and modify protected system files.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "execution"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1605",
                            "external_id": "T1605"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Command-Line Interface execution can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 14:00:45.099000+00:00\", \"old_value\": \"2020-12-17 17:31:52.802000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--693cdbff-ea73-49c6-ac3f-91e7285c31d1",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 13:59:50.479000+00:00",
                        "modified": "2022-04-05 16:45:47.619000+00:00",
                        "name": "Unix Shell",
                        "description": "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the underlying command prompts on Android and iOS devices. Unix shells can control every aspect of a system, with certain commands requiring elevated privileges that are only accessible if the device has been rooted or jailbroken. \n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems. \n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with SSH. Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence. \n\nIf the device has been rooted or jailbroken, adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user. This dangerous level of permissions allows the adversary to run special commands and modify protected system files.  ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "execution"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1623/001",
                                "external_id": "T1623.001"
                            },
                            {
                                "source_name": "Samsung Knox Mobile Threat Defense",
                                "description": "Samsung Knox Partner Program. (n.d.). Knox for Mobile Threat Defense. Retrieved March 30, 2022.",
                                "url": "https://partner.samsungknox.com/mtd"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Command-line activities can potentially be detected through Mobile Threat Defense integrations with lower-level OS APIs. This could grant the MTD agents access to running processes and their parameters, potentially detecting unwanted or malicious shells.\n\nApplication vetting services could detect the invocations of methods that could be used to execute shell commands.(Citation: Samsung Knox Mobile Threat Defense)",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--8e27551a-5080-4148-a584-c64348212e4f",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:31.694000+00:00",
                    "modified": "2022-03-30 19:50:37.727000+00:00",
                    "name": "Delete Device Data",
                    "description": "Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location. (Citation: Android DevicePolicyManager 2019)\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1447",
                            "external_id": "T1447"
                        },
                        {
                            "source_name": "Android DevicePolicyManager 2019",
                            "description": "Android Developers. (n.d.). DevicePolicyManager. Retrieved September 22, 2019.",
                            "url": "https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can detect which applications can request device administrator permissions. Users can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1050\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 19:50:37.727000+00:00\", \"old_value\": \"2020-10-01 12:52:58.150000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--ab7400b7-3476-4776-9545-ef3fa373de63",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 19:36:09.691000+00:00",
                        "modified": "2022-04-21 17:32:45.989000+00:00",
                        "name": "File Deletion",
                        "description": "Adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity. An application must have administrator access to fully wipe the device, while individual files may not require special permissions to delete depending on their storage location.(Citation: Android DevicePolicyManager 2019) \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary, but can include deleting update files to evade detection or deleting attacker-specified files for impact.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1630/002",
                                "external_id": "T1630.002"
                            },
                            {
                                "source_name": "Android DevicePolicyManager 2019",
                                "description": "Android Developers. (n.d.). DevicePolicyManager. Retrieved September 22, 2019.",
                                "url": "https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Mobile security products can detect which applications can request device administrator permissions. Users can view applications with administrator access through the device settings, and may also notice if user data is inexplicably missing. Application vetting services could be extra scrutinous of applications that request device administrator permissions.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--82f04b1e-5371-4a6f-be06-411f0f43b483",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:29.774000+00:00",
                    "modified": "2022-04-01 16:52:36.965000+00:00",
                    "name": "Device Administrator Permissions",
                    "description": "Adversaries may request device administrator permissions to perform malicious actions.\n\nBy abusing the device administration API, adversaries can perform several nefarious actions, such as resetting the device\u2019s password for [Device Lockout](https://attack.mitre.org/techniques/T1446), factory resetting the device to [Delete Device Data](https://attack.mitre.org/techniques/T1447) and any traces of the malware, disabling all of the device\u2019s cameras, or make it more difficult to uninstall the app.(Citation: Android DeviceAdminInfo)\n\nDevice administrators must be approved by the user at runtime, with a system popup showing which of the actions have been requested by the app. In conjunction with other techniques, such as [Input Injection](https://attack.mitre.org/techniques/T1516), an app can programmatically grant itself administrator permissions without any user input.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "privilege-escalation"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1401",
                            "external_id": "T1401"
                        },
                        {
                            "source_name": "Android DeviceAdminInfo",
                            "description": "Google. (n.d.). DeviceAdminInfo. Retrieved November 20, 2020.",
                            "url": "https://developer.android.com/reference/android/app/admin/DeviceAdminInfo"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html",
                            "external_id": "APP-22"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can see when an app requests device administrator permissions. Users can also view which apps have device administrator permissions in the settings menu.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Google. (n.d.). DeviceAdminInfo. Retrieved November 20, 2020.\", \"root['external_references'][2]['external_id']\": \"APP-22\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1004\", \"root['external_references'][1]['external_id']\": \"APP-22\", \"root['external_references'][2]['description']\": \"Google. (n.d.). DeviceAdminInfo. Retrieved November 20, 2020.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 16:52:36.965000+00:00\", \"old_value\": \"2020-11-24 13:40:08.343000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Android DeviceAdminInfo\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://developer.android.com/reference/android/app/admin/DeviceAdminInfo\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Android DeviceAdminInfo\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html\", \"old_value\": \"https://developer.android.com/reference/android/app/admin/DeviceAdminInfo\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--9c049d7b-c92a-4733-9381-27e2bd2ccadc",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-01 15:59:05.830000+00:00",
                        "modified": "2022-04-06 14:19:17.679000+00:00",
                        "name": "Device Administrator Permissions",
                        "description": "Adversaries may abuse Android\u2019s device administration API to obtain a higher degree of control over the device. By abusing the API, adversaries can perform several nefarious actions, such as resetting the device\u2019s password for [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642), factory resetting the device for [File Deletion](https://attack.mitre.org/techniques/T1630/002) and to delete any traces of the malware, disabling all the device\u2019s cameras, or to make it more difficult to uninstall the app.\n\nDevice administrators must be approved by the user at runtime, with a system popup showing which actions have been requested by the app. In conjunction with other techniques, such as [Input Injection](https://attack.mitre.org/techniques/T1516), an app can programmatically grant itself administrator permissions without any user input.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "privilege-escalation"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1626/001",
                                "external_id": "T1626.001"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html",
                                "external_id": "APP-22"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Users are prompted for approval when an application requests device administrator permissions. Users can see which applications are registered as device administrators in the device settings. Application vetting services can check for the string `BIND_DEVICE_ADMIN` in the application\u2019s manifest. This indicates it can prompt the user for device administrator permissions.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--9d7c32f4-ab39-49dc-8055-8106bc2294a1",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:17.886000+00:00",
                    "modified": "2022-04-01 18:49:51.039000+00:00",
                    "name": "Device Lockout",
                    "description": "An adversary may seek to lock the legitimate user out of the device, for example to inhibit user interaction or to obtain a ransom payment.\n\nOn Android versions prior to 7, apps can abuse Device Administrator access to reset the device lock passcode to prevent the user from unlocking the device. After Android 7, only device or profile owners (e.g. MDMs) can reset the device\u2019s passcode.(Citation: Android resetPassword)\n\nOn iOS devices, this technique does not work because mobile device management servers can only remove the screen lock passcode, they cannot set a new passcode. However, on jailbroken devices, malware has been discovered that can lock the user out of the device.(Citation: Xiao-KeyRaider)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1446",
                            "external_id": "T1446"
                        },
                        {
                            "source_name": "Xiao-KeyRaider",
                            "description": "Claud Xiao. (2015, August 30). KeyRaider: iOS Malware Steals Over 225,000 Apple Accounts to Create Free App Utopia. Retrieved December 12, 2016.",
                            "url": "http://researchcenter.paloaltonetworks.com/2015/08/keyraider-ios-malware-steals-over-225000-apple-accounts-to-create-free-app-utopia/"
                        },
                        {
                            "source_name": "Android resetPassword",
                            "description": "Google. (n.d.). DevicePolicyManager. Retrieved October 1, 2019.",
                            "url": "https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html#resetPassword(java.lang.String,%20int)"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-28.html",
                            "external_id": "APP-28"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, users can review which applications have device administrator access in the device settings, and revoke permission where appropriate.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Claud Xiao. (2015, August 30). KeyRaider: iOS Malware Steals Over 225,000 Apple Accounts to Create Free App Utopia. Retrieved December 12, 2016.\", \"root['external_references'][3]['external_id']\": \"APP-28\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1049\", \"root['external_references'][1]['external_id']\": \"APP-28\", \"root['external_references'][3]['description']\": \"Claud Xiao. (2015, August 30). KeyRaider: iOS Malware Steals Over 225,000 Apple Accounts to Create Free App Utopia. Retrieved December 12, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 18:49:51.039000+00:00\", \"old_value\": \"2019-10-09 14:39:38.930000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Xiao-KeyRaider\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://researchcenter.paloaltonetworks.com/2015/08/keyraider-ios-malware-steals-over-225000-apple-accounts-to-create-free-app-utopia/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-28.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Xiao-KeyRaider\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-28.html\", \"old_value\": \"http://researchcenter.paloaltonetworks.com/2015/08/keyraider-ios-malware-steals-over-225000-apple-accounts-to-create-free-app-utopia/\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--acf8fd2a-dc98-43b4-8d37-64e10728e591",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-01 18:49:03.892000+00:00",
                        "modified": "2022-04-05 16:59:33.363000+00:00",
                        "name": "Device Lockout",
                        "description": "An adversary may seek to inhibit user interaction by locking the legitimate user out of the device. This is typically accomplished by requesting device administrator permissions and then locking the screen using `DevicePolicyManager.lockNow()`. Other novel techniques for locking the user out of the device have been observed, such as showing a persistent overlay, using carefully crafted \u201ccall\u201d notification screens, and locking HTML pages in the foreground. These techniques can be very difficult to get around, and typically require booting the device into safe mode to uninstall the malware.(Citation: Microsoft MalLockerB)(Citation: Talos GPlayed)(Citation: securelist rotexy 2018)\n\nPrior to Android 7, device administrators were able to reset the device lock passcode to prevent the user from unlocking the device. The release of Android 7 introduced updates that only allow device or profile owners (e.g. MDMs) to reset the device\u2019s passcode.(Citation: Android resetPassword)",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1629/002",
                                "external_id": "T1629.002"
                            },
                            {
                                "source_name": "Microsoft MalLockerB",
                                "description": "D. Venkatesan. (2020, October 8). Sophisticated new Android malware marks the latest evolution of mobile ransomware . Retrieved October 29, 2020.",
                                "url": "https://www.microsoft.com/security/blog/2020/10/08/sophisticated-new-android-malware-marks-the-latest-evolution-of-mobile-ransomware/"
                            },
                            {
                                "source_name": "Android resetPassword",
                                "description": "Google. (n.d.). DevicePolicyManager. Retrieved October 1, 2019.",
                                "url": "https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html#resetPassword(java.lang.String,%20int)"
                            },
                            {
                                "source_name": "securelist rotexy 2018",
                                "description": "T. Shishkova, L. Pikman. (2018, November 22).  The Rotexy mobile Trojan \u2013 banker and ransomware. Retrieved September 23, 2019.",
                                "url": "https://securelist.com/the-rotexy-mobile-trojan-banker-and-ransomware/88893/"
                            },
                            {
                                "source_name": "Talos GPlayed",
                                "description": "V. Ventura. (2018, October 11).  GPlayed Trojan - .Net playing with Google Market . Retrieved November 24, 2020.",
                                "url": "https://blog.talosintelligence.com/2018/10/gplayedtrojan.html"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-22.html",
                                "external_id": "APP-22"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Users can view a list of device administrators in device settings and revoke permission where appropriate. Applications that request device administrator permissions should be scrutinized further for malicious behavior.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--b332a960-3c04-495a-827f-f17a5daed3a6",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:14.003000+00:00",
                    "modified": "2022-04-08 16:29:55.321000+00:00",
                    "name": "Disguise Root/Jailbreak Indicators",
                    "description": "An adversary could use knowledge of the techniques used by security software to evade detection(Citation: Brodie)(Citation: Tan). For example, some mobile security products perform compromised device detection by searching for particular artifacts such as an installed \"su\" binary, but that check could be evaded by naming the binary something else. Similarly, polymorphic code techniques could be used to evade signature-based detection(Citation: Rastogi).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1408",
                            "external_id": "T1408"
                        },
                        {
                            "source_name": "Brodie",
                            "description": "Daniel Brodie. (2016). Practical Attacks against Mobile Device Management (MDM). Retrieved December 21, 2016.",
                            "url": "https://media.blackhat.com/eu-13/briefings/Brodie/bh-eu-13-lacoon-attacks-mdm-brodie-wp.pdf"
                        },
                        {
                            "source_name": "Rastogi",
                            "description": "Vaibhav Rastogi, Yan Chen, and Xuxian Jiang. (2013, May). DroidChameleon: Evaluating Android Anti-malware against Transformation Attacks. Retrieved December 9, 2016.",
                            "url": "http://pages.cs.wisc.edu/~vrastogi/static/papers/rcj13b.pdf"
                        },
                        {
                            "source_name": "Tan",
                            "description": "Vincent Tan. (2016, August). BAD FOR ENTERPRISE: ATTACKING BYOD ENTERPRISE MOBILE SECURITY SOLUTIONS. Retrieved February 4, 2017.",
                            "url": "http://www.blackhat.com/us-16/briefings.html#bad-for-enterprise-attacking-byod-enterprise-mobile-security-solutions"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-5.html",
                            "external_id": "EMM-5"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Daniel Brodie. (2016). Practical Attacks against Mobile Device Management (MDM). Retrieved December 21, 2016.\", \"root['external_references'][4]['external_id']\": \"EMM-5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1011\", \"root['external_references'][1]['external_id']\": \"EMM-5\", \"root['external_references'][4]['description']\": \"Vaibhav Rastogi, Yan Chen, and Xuxian Jiang. (2013, May). DroidChameleon: Evaluating Android Anti-malware against Transformation Attacks. Retrieved December 9, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-08 16:29:55.321000+00:00\", \"old_value\": \"2019-02-03 14:34:59.071000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Brodie\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://media.blackhat.com/eu-13/briefings/Brodie/bh-eu-13-lacoon-attacks-mdm-brodie-wp.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-5.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Rastogi\", \"old_value\": \"Brodie\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Vaibhav Rastogi, Yan Chen, and Xuxian Jiang. (2013, May). DroidChameleon: Evaluating Android Anti-malware against Transformation Attacks. Retrieved December 9, 2016.\", \"old_value\": \"Daniel Brodie. (2016). Practical Attacks against Mobile Device Management (MDM). Retrieved December 21, 2016.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"http://pages.cs.wisc.edu/~vrastogi/static/papers/rcj13b.pdf\", \"old_value\": \"https://media.blackhat.com/eu-13/briefings/Brodie/bh-eu-13-lacoon-attacks-mdm-brodie-wp.pdf\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Rastogi\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-5.html\", \"old_value\": \"http://pages.cs.wisc.edu/~vrastogi/static/papers/rcj13b.pdf\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--a91262d5-b9ff-463f-b8d2-12e4ea1eb3c9",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-08 16:29:30.087000+00:00",
                        "modified": "2022-04-11 15:46:23.223000+00:00",
                        "name": "Disguise Root/Jailbreak Indicators",
                        "description": "An adversary could use knowledge of the techniques used by security software to evade detection.(Citation: Brodie)(Citation: Tan) For example, some mobile security products perform compromised device detection by searching for particular artifacts such as an installed \"su\" binary, but that check could be evaded by naming the binary something else. Similarly, polymorphic code techniques could be used to evade signature-based detection.(Citation: Rastogi)",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1630/003",
                                "external_id": "T1630.003"
                            },
                            {
                                "source_name": "Brodie",
                                "description": "Daniel Brodie. (2016). Practical Attacks against Mobile Device Management (MDM). Retrieved December 21, 2016.",
                                "url": "https://media.blackhat.com/eu-13/briefings/Brodie/bh-eu-13-lacoon-attacks-mdm-brodie-wp.pdf"
                            },
                            {
                                "source_name": "Rastogi",
                                "description": "Vaibhav Rastogi, Yan Chen, and Xuxian Jiang. (2013, May). DroidChameleon: Evaluating Android Anti-malware against Transformation Attacks. Retrieved December 9, 2016.",
                                "url": "http://pages.cs.wisc.edu/~vrastogi/static/papers/rcj13b.pdf"
                            },
                            {
                                "source_name": "Tan",
                                "description": "Vincent Tan. (2016, August). BAD FOR ENTERPRISE: ATTACKING BYOD ENTERPRISE MOBILE SECURITY SOLUTIONS. Retrieved February 4, 2017.",
                                "url": "http://www.blackhat.com/us-16/briefings.html#bad-for-enterprise-attacking-byod-enterprise-mobile-security-solutions"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-5.html",
                                "external_id": "EMM-5"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Mobile security products can use attestation to detect compromised devices.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--60623164-ccd8-4508-a141-b5a34820b3de",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-09-23 13:11:43.694000+00:00",
                    "modified": "2022-04-05 20:03:46.788000+00:00",
                    "name": "Domain Generation Algorithms",
                    "description": "Adversaries may use [Domain Generation Algorithms](https://attack.mitre.org/techniques/T1520) (DGAs) to procedurally generate domain names for command and control communication, and other uses such as malicious application distribution.(Citation: securelist rotexy 2018)\n\nDGAs increase the difficulty for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1520",
                            "external_id": "T1520"
                        },
                        {
                            "source_name": "Data Driven Security DGA",
                            "description": "Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.",
                            "url": "https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/"
                        },
                        {
                            "source_name": "securelist rotexy 2018",
                            "description": "T. Shishkova, L. Pikman. (2018, November 22).  The Rotexy mobile Trojan \u2013 banker and ransomware. Retrieved September 23, 2019.",
                            "url": "https://securelist.com/the-rotexy-mobile-trojan-banker-and-ransomware/88893/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-05 20:03:46.788000+00:00\", \"old_value\": \"2019-09-23 14:53:42.654000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Data Driven Security DGA\", \"old_value\": \"securelist rotexy 2018\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.\", \"old_value\": \"T. Shishkova, L. Pikman. (2018, November 22).  The Rotexy mobile Trojan \\u2013 banker and ransomware. Retrieved September 23, 2019.\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/\", \"old_value\": \"https://securelist.com/the-rotexy-mobile-trojan-banker-and-ransomware/88893/\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"securelist rotexy 2018\", \"old_value\": \"Data Driven Security DGA\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"T. Shishkova, L. Pikman. (2018, November 22).  The Rotexy mobile Trojan \\u2013 banker and ransomware. Retrieved September 23, 2019.\", \"old_value\": \"Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://securelist.com/the-rotexy-mobile-trojan-banker-and-ransomware/88893/\", \"old_value\": \"https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--fd211238-f767-4599-8c0d-9dca36624626",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 19:59:03.161000+00:00",
                        "modified": "2022-04-05 19:59:22.888000+00:00",
                        "name": "Domain Generation Algorithms",
                        "description": "Adversaries may use [Domain Generation Algorithms](https://attack.mitre.org/techniques/T1637/001) (DGAs) to procedurally generate domain names for uses such as command and control communication   or malicious application distribution.(Citation: securelist rotexy 2018)\n\nDGAs increase the difficulty for defenders to block, track, or take over the command and control channel, as there could potentially be thousands of domains that malware can check for instructions.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "command-and-control"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1637/001",
                                "external_id": "T1637.001"
                            },
                            {
                                "source_name": "Data Driven Security DGA",
                                "description": "Jacobs, J. (2014, October 2). Building a DGA Classifier: Part 2, Feature Engineering. Retrieved February 18, 2019.",
                                "url": "https://datadrivensecurity.info/blog/posts/2014/Oct/dga-part2/"
                            },
                            {
                                "source_name": "securelist rotexy 2018",
                                "description": "T. Shishkova, L. Pikman. (2018, November 22).  The Rotexy mobile Trojan \u2013 banker and ransomware. Retrieved September 23, 2019.",
                                "url": "https://securelist.com/the-rotexy-mobile-trojan-banker-and-ransomware/88893/"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There are a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, a more general approach for detecting a suspicious domain is to check for recently registered names ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--f58cd69a-e548-478b-9248-8a9af881dc34",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:21.667000+00:00",
                    "modified": "2022-04-06 15:50:42.480000+00:00",
                    "name": "Downgrade to Insecure Protocols",
                    "description": "An adversary could cause the mobile device to use less secure protocols, for example by jamming frequencies used by newer protocols such as LTE and only allowing older protocols such as GSM to communicate(Citation: NIST-SP800187). Use of less secure protocols may make communication easier to eavesdrop upon or manipulate.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "network-effects"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1466",
                            "external_id": "T1466"
                        },
                        {
                            "source_name": "NIST-SP800187",
                            "description": "Jeffrey Cichonski, Joshua M Franklin, Michael Bartock. (2017, December). Guide to LTE Security. Retrieved January 20, 2017.",
                            "url": "http://csrc.nist.gov/publications/drafts/800-187/sp800_187_draft.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html",
                            "external_id": "CEL-3"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Jeffrey Cichonski, Joshua M Franklin, Michael Bartock. (2017, December). Guide to LTE Security. Retrieved January 20, 2017.\", \"root['external_references'][2]['external_id']\": \"CEL-3\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1069\", \"root['external_references'][1]['external_id']\": \"CEL-3\", \"root['external_references'][2]['description']\": \"Jeffrey Cichonski, Joshua M Franklin, Michael Bartock. (2017, December). Guide to LTE Security. Retrieved January 20, 2017.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:50:42.480000+00:00\", \"old_value\": \"2019-02-03 15:16:13.386000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"NIST-SP800187\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://csrc.nist.gov/publications/drafts/800-187/sp800_187_draft.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"NIST-SP800187\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html\", \"old_value\": \"http://csrc.nist.gov/publications/drafts/800-187/sp800_187_draft.pdf\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--08e22979-d320-48ed-8711-e7bf94aabb13",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 20:11:08.894000+00:00",
                        "modified": "2022-04-11 19:27:44.048000+00:00",
                        "name": "Adversary-in-the-Middle",
                        "description": "Adversaries may attempt to position themselves between two or more networked devices to support follow-on behaviors such as [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642).  \n\n \n\n[Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1638) can be achieved through several mechanisms, such as a malicious application registering itself as a VPN client. By doing this, the adversary can effectively redirect device traffic to wherever they want. However, registering as a VPN client requires user consent on both Android and iOS. Additionally, on iOS, the application requires a special entitlement that must be granted by Apple. Alternatively, if an application is able to escalate privileges, it can potentially utilize those privileges to gain access to network traffic.  \n\n \n\nOutside of a mobile device, adversaries may be able to capture traffic by employing a rogue base station or Wi-Fi access point. These devices will allow adversaries to capture network traffic after it has left the device, while it is flowing to its destination. On a local network, enterprise techniques could be used, such as DNS redirection or DNS poisoning.  \n\n \n\nIf applications properly encrypt their network traffic, sensitive data may not be accessible an adversary, depending on the point of capture. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1638",
                                "external_id": "T1638"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html",
                                "external_id": "CEL-3"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html",
                                "external_id": "APP-0"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html",
                                "external_id": "APP-1"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-8.html",
                                "external_id": "APP-8"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-12.html",
                                "external_id": "ECO-12"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Application vetting services should look for applications that request VPN access. These applications should be heavily scrutinized since VPN functionality is not very common. Mobile security products can potentially detect rogue Wi-Fi access points if the adversary is attempting to decrypt traffic using an untrusted SSL certificate. \n\n \n\nOn both Android and iOS, users must grant consent to an application to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is active. Users can see registered VPN services in the device settings. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "2.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--393e8c12-a416-4575-ba90-19cc85656796",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:26.104000+00:00",
                    "modified": "2022-04-05 20:17:46.147000+00:00",
                    "name": "Eavesdrop on Insecure Network Communication",
                    "description": "If network traffic between the mobile device and remote servers is unencrypted or is encrypted in an insecure manner, then an adversary positioned on the network can eavesdrop on communication.(Citation: mHealth)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "network-effects"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1439",
                            "external_id": "T1439"
                        },
                        {
                            "source_name": "mHealth",
                            "description": "D. He et al.. (2014). Security Concerns in Android mHealth Apps. Retrieved December 24, 2016.",
                            "url": "https://experts.illinois.edu/en/publications/security-concerns-in-android-mhealth-apps"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html",
                            "external_id": "APP-0"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html",
                            "external_id": "APP-1"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"D. He et al.. (2014). Security Concerns in Android mHealth Apps. Retrieved December 24, 2016.\", \"root['external_references'][3]['external_id']\": \"APP-1\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1042\", \"root['external_references'][1]['external_id']\": \"APP-0\", \"root['external_references'][3]['description']\": \"D. He et al.. (2014). Security Concerns in Android mHealth Apps. Retrieved December 24, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-05 20:17:46.147000+00:00\", \"old_value\": \"2019-02-03 14:54:29.631000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"mHealth\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://experts.illinois.edu/en/publications/security-concerns-in-android-mhealth-apps\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html\"}, \"root['external_references'][2]['external_id']\": {\"new_value\": \"APP-0\", \"old_value\": \"APP-1\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"mHealth\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html\", \"old_value\": \"https://experts.illinois.edu/en/publications/security-concerns-in-android-mhealth-apps\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--08e22979-d320-48ed-8711-e7bf94aabb13",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 20:11:08.894000+00:00",
                        "modified": "2022-04-11 19:27:44.048000+00:00",
                        "name": "Adversary-in-the-Middle",
                        "description": "Adversaries may attempt to position themselves between two or more networked devices to support follow-on behaviors such as [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642).  \n\n \n\n[Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1638) can be achieved through several mechanisms, such as a malicious application registering itself as a VPN client. By doing this, the adversary can effectively redirect device traffic to wherever they want. However, registering as a VPN client requires user consent on both Android and iOS. Additionally, on iOS, the application requires a special entitlement that must be granted by Apple. Alternatively, if an application is able to escalate privileges, it can potentially utilize those privileges to gain access to network traffic.  \n\n \n\nOutside of a mobile device, adversaries may be able to capture traffic by employing a rogue base station or Wi-Fi access point. These devices will allow adversaries to capture network traffic after it has left the device, while it is flowing to its destination. On a local network, enterprise techniques could be used, such as DNS redirection or DNS poisoning.  \n\n \n\nIf applications properly encrypt their network traffic, sensitive data may not be accessible an adversary, depending on the point of capture. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1638",
                                "external_id": "T1638"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html",
                                "external_id": "CEL-3"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html",
                                "external_id": "APP-0"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html",
                                "external_id": "APP-1"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-8.html",
                                "external_id": "APP-8"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-12.html",
                                "external_id": "ECO-12"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Application vetting services should look for applications that request VPN access. These applications should be heavily scrutinized since VPN functionality is not very common. Mobile security products can potentially detect rogue Wi-Fi access points if the adversary is attempting to decrypt traffic using an untrusted SSL certificate. \n\n \n\nOn both Android and iOS, users must grant consent to an application to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is active. Users can see registered VPN services in the device settings. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "2.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--786f488c-cb1f-4602-89c5-86d982ee326b",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-10-02 14:46:43.632000+00:00",
                    "modified": "2022-03-30 17:54:56.590000+00:00",
                    "name": "Evade Analysis Environment",
                    "description": "Malicious applications may attempt to detect their operating environment prior to fully executing their payloads. These checks are often used to ensure the application is not running within an analysis environment such as a sandbox used for application vetting, security research, or reverse engineering. \nAdversaries may use many different checks such as physical sensors, location, and system properties to fingerprint emulators and sandbox environments.(Citation: Talos Gustuff Apr 2019)(Citation: ThreatFabric Cerberus)(Citation: Xiao-ZergHelper)(Citation: Cyberscoop Evade Analysis January 2019) Adversaries may access `android.os.SystemProperties` via Java reflection to obtain specific system information.(Citation: Github Anti-emulator) Standard values such as phone number, IMEI, IMSI, device IDs, and device drivers may be checked against default signatures of common sandboxes.(Citation: Sophos Anti-emulation)\n",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "discovery"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1523",
                            "external_id": "T1523"
                        },
                        {
                            "source_name": "Sophos Anti-emulation",
                            "description": "Chen Yu et al. . (2017, April 13). Android malware anti-emulation techniques. Retrieved October 2, 2019.",
                            "url": "https://news.sophos.com/en-us/2017/04/13/android-malware-anti-emulation-techniques/"
                        },
                        {
                            "source_name": "Xiao-ZergHelper",
                            "description": "Claud Xiao. (2016, February 21). Pirated iOS App Store\u2019s Client Successfully Evaded Apple iOS Code Review. Retrieved December 12, 2016.",
                            "url": "http://researchcenter.paloaltonetworks.com/2016/02/pirated-ios-app-stores-client-successfully-evaded-apple-ios-code-review/"
                        },
                        {
                            "source_name": "Cyberscoop Evade Analysis January 2019",
                            "description": "Jeff Stone. (2019, January 18). Sneaky motion-detection feature found on Android malware. Retrieved October 2, 2019.",
                            "url": "https://www.cyberscoop.com/android-malware-motion-detection-trend-micro/"
                        },
                        {
                            "source_name": "ThreatFabric Cerberus",
                            "description": "ThreatFabric. (2019, August). Cerberus - A new banking Trojan from the underworld. Retrieved September 18, 2019.",
                            "url": "https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html"
                        },
                        {
                            "source_name": "Github Anti-emulator",
                            "description": "Tim Strazzere. (n.d.). Android Anti-Emulator. Retrieved October 2, 2019.",
                            "url": "https://github.com/strazzere/anti-emulator"
                        },
                        {
                            "source_name": "Talos Gustuff Apr 2019",
                            "description": "Vitor Ventura. (2019, April 9).  Gustuff banking botnet targets Australia . Retrieved September 3, 2019.",
                            "url": "https://blog.talosintelligence.com/2019/04/gustuff-targets-australia.html"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Analysis Environment avoidance capabilities can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 17:54:56.590000+00:00\", \"old_value\": \"2019-10-11 14:48:50.525000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Sophos Anti-emulation\", \"old_value\": \"Talos Gustuff Apr 2019\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"Chen Yu et al. . (2017, April 13). Android malware anti-emulation techniques. Retrieved October 2, 2019.\", \"old_value\": \"Vitor Ventura. (2019, April 9).  Gustuff banking botnet targets Australia . Retrieved September 3, 2019.\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://news.sophos.com/en-us/2017/04/13/android-malware-anti-emulation-techniques/\", \"old_value\": \"https://blog.talosintelligence.com/2019/04/gustuff-targets-australia.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Xiao-ZergHelper\", \"old_value\": \"ThreatFabric Cerberus\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Claud Xiao. (2016, February 21). Pirated iOS App Store\\u2019s Client Successfully Evaded Apple iOS Code Review. Retrieved December 12, 2016.\", \"old_value\": \"ThreatFabric. (2019, August). Cerberus - A new banking Trojan from the underworld. Retrieved September 18, 2019.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"http://researchcenter.paloaltonetworks.com/2016/02/pirated-ios-app-stores-client-successfully-evaded-apple-ios-code-review/\", \"old_value\": \"https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Cyberscoop Evade Analysis January 2019\", \"old_value\": \"Xiao-ZergHelper\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Jeff Stone. (2019, January 18). Sneaky motion-detection feature found on Android malware. Retrieved October 2, 2019.\", \"old_value\": \"Claud Xiao. (2016, February 21). Pirated iOS App Store\\u2019s Client Successfully Evaded Apple iOS Code Review. Retrieved December 12, 2016.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://www.cyberscoop.com/android-malware-motion-detection-trend-micro/\", \"old_value\": \"http://researchcenter.paloaltonetworks.com/2016/02/pirated-ios-app-stores-client-successfully-evaded-apple-ios-code-review/\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"ThreatFabric Cerberus\", \"old_value\": \"Cyberscoop Evade Analysis January 2019\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"ThreatFabric. (2019, August). Cerberus - A new banking Trojan from the underworld. Retrieved September 18, 2019.\", \"old_value\": \"Jeff Stone. (2019, January 18). Sneaky motion-detection feature found on Android malware. Retrieved October 2, 2019.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html\", \"old_value\": \"https://www.cyberscoop.com/android-malware-motion-detection-trend-micro/\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"Talos Gustuff Apr 2019\", \"old_value\": \"Sophos Anti-emulation\"}, \"root['external_references'][6]['description']\": {\"new_value\": \"Vitor Ventura. (2019, April 9).  Gustuff banking botnet targets Australia . Retrieved September 3, 2019.\", \"old_value\": \"Chen Yu et al. . (2017, April 13). Android malware anti-emulation techniques. Retrieved October 2, 2019.\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://blog.talosintelligence.com/2019/04/gustuff-targets-australia.html\", \"old_value\": \"https://news.sophos.com/en-us/2017/04/13/android-malware-anti-emulation-techniques/\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--6ffad4be-bfe0-424f-abde-4d9a84a800ad",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 17:53:35.582000+00:00",
                        "modified": "2022-04-21 17:34:12.113000+00:00",
                        "name": "System Checks",
                        "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behavior after checking for the presence of artifacts indicative of a virtual environment or sandbox. If the adversary detects a virtual environment, they may alter their malware\u2019s behavior to disengage from the victim or conceal the core functions of the implant. They may also search for virtualization artifacts before dropping secondary or additional payloads. \n\nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. \n\nHardware checks, such as the presence of motion sensors, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1633/001",
                                "external_id": "T1633.001"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Application vetting services could look for applications attempting to get `android.os.SystemProperties` or `getprop` with the runtime `exec()` commands. This could indicate some level of sandbox evasion, as Google recommends against using system properties within applications.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--b3c2e5de-0941-4b57-ba61-af029eb5517a",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:27.307000+00:00",
                    "modified": "2022-04-18 19:46:02.529000+00:00",
                    "name": "Exfiltration Over Other Network Medium",
                    "description": "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a standard Internet connection, the exfiltration may occur, for example, via Bluetooth, or another radio frequency (RF) channel. \n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network. ",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1438",
                            "external_id": "T1438"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-30.html",
                            "external_id": "APP-30"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Exfiltration over other network mediums can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"Exfiltration over other network mediums can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1041\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-18 19:46:02.529000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['name']\": {\"new_value\": \"Exfiltration Over Other Network Medium\", \"old_value\": \"Alternate Network Mediums\"}, \"root['description']\": {\"new_value\": \"Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a standard Internet connection, the exfiltration may occur, for example, via Bluetooth, or another radio frequency (RF) channel. \\n\\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network. \", \"old_value\": \"Adversaries can communicate using cellular networks rather than enterprise Wi-Fi in order to bypass enterprise network monitoring systems. Adversaries may also communicate using other non-Internet Protocol mediums such as SMS, NFC, or Bluetooth to bypass network monitoring systems.\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,3 @@\\n-Adversaries can communicate using cellular networks rather than enterprise Wi-Fi in order to bypass enterprise network monitoring systems. Adversaries may also communicate using other non-Internet Protocol mediums such as SMS, NFC, or Bluetooth to bypass network monitoring systems.\\n+Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a standard Internet connection, the exfiltration may occur, for example, via Bluetooth, or another radio frequency (RF) channel. \\n+\\n+Adversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network. \"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.0\", \"old_value\": \"1.0\"}}, \"iterable_item_removed\": {\"root['kill_chain_phases'][1]\": {\"kill_chain_name\": \"mitre-mobile-attack\", \"phase_name\": \"exfiltration\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--ec4c4baa-026f-43e8-8f56-58c36f3162dd",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-06 15:27:34.300000+00:00",
                        "modified": "2022-04-29 17:29:15.978000+00:00",
                        "name": "Out of Band Data",
                        "description": "Adversaries may communicate with compromised devices using out of band data streams. This could be done for a variety of reasons, including evading network traffic monitoring, as a backup method of command and control, or for data exfiltration if the device is not connected to any Internet-providing networks (i.e. cellular or Wi-Fi). Several out of band data streams exist, such as SMS messages, NFC, and Bluetooth. \n\n \n\nOn Android, applications can read push notifications to capture content from SMS messages, or other out of band data streams. This requires that the user manually grant notification access to the application via the settings menu. However, the application could launch an Intent to take the user directly there. \n\n \n\nOn iOS, there is no way to programmatically read push notifications. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "command-and-control"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1644",
                                "external_id": "T1644"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "If a user sees a notification with text they do not recognize, they should review their list of installed applications.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "2.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--52651225-0b3a-482d-aa7e-10618fd063b5",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:09.864000+00:00",
                    "modified": "2022-04-05 19:54:12.657000+00:00",
                    "name": "Exploit SS7 to Track Device Location",
                    "description": "An adversary could exploit signaling system vulnerabilities to track the location of mobile devices. (Citation: Engel-SS7) (Citation: Engel-SS7-2008) (Citation: 3GPP-Security) (Citation: Positive-SS7) (Citation: CSRIC5-WG10-FinalReport)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "network-effects"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1450",
                            "external_id": "T1450"
                        },
                        {
                            "source_name": "3GPP-Security",
                            "description": "3GPP. (2000, January). A Guide to 3rd Generation Security. Retrieved December 19, 2016.",
                            "url": "http://www.3gpp.org/ftp/tsg_sa/wg3_security/_specs/33900-120.pdf"
                        },
                        {
                            "source_name": "CSRIC5-WG10-FinalReport",
                            "description": "Communications Security, Reliability, Interoperability Council (CSRIC). (2017, March). Working Group 10 Legacy Systems Risk Reductions Final Report. Retrieved May 24, 2017.",
                            "url": "https://www.fcc.gov/files/csric5-wg10-finalreport031517pdf"
                        },
                        {
                            "source_name": "CSRIC-WG1-FinalReport",
                            "description": "CSRIC-WG1-FinalReport"
                        },
                        {
                            "source_name": "Positive-SS7",
                            "description": "Positive Technologies. (n.d.). SS7 Attack Discovery. Retrieved December 19, 2016.",
                            "url": "https://www.ptsecurity.com/upload/ptcom/PT-SS7-AD-Data-Sheet-eng.pdf"
                        },
                        {
                            "source_name": "Engel-SS7-2008",
                            "description": "Tobias Engel. (2008, December). Locating Mobile Phones using SS7. Retrieved December 19, 2016.",
                            "url": "https://www.youtube.com/watch?v=q0n5ySqbfdI"
                        },
                        {
                            "source_name": "Engel-SS7",
                            "description": "Tobias Engel. (2014, December). SS7: Locate. Track. Manipulate.. Retrieved December 19, 2016.",
                            "url": "https://berlin.ccc.de/~tobias/31c3-ss7-locate-track-manipulate.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-38.html",
                            "external_id": "CEL-38"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Network carriers may be able to use firewalls, Intrusion Detection Systems (IDS), or Intrusion Prevention Systems (IPS) to detect and/or block SS7 exploitation.(Citation: CSRIC-WG1-FinalReport) The CSRIC also suggests threat information sharing between telecommunications industry members.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"3GPP. (2000, January). A Guide to 3rd Generation Security. Retrieved December 19, 2016.\", \"root['external_references'][7]['url']\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-38.html\", \"root['external_references'][7]['external_id']\": \"CEL-38\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1053\", \"root['external_references'][1]['external_id']\": \"CEL-38\", \"root['external_references'][3]['url']\": \"https://www.youtube.com/watch?v=q0n5ySqbfdI\", \"root['external_references'][7]['description']\": \"CSRIC-WG1-FinalReport\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-05 19:54:12.657000+00:00\", \"old_value\": \"2019-02-03 15:06:10.014000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"3GPP-Security\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://www.3gpp.org/ftp/tsg_sa/wg3_security/_specs/33900-120.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-38.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"CSRIC5-WG10-FinalReport\", \"old_value\": \"Engel-SS7\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Communications Security, Reliability, Interoperability Council (CSRIC). (2017, March). Working Group 10 Legacy Systems Risk Reductions Final Report. Retrieved May 24, 2017.\", \"old_value\": \"Tobias Engel. (2014, December). SS7: Locate. Track. Manipulate.. Retrieved December 19, 2016.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://www.fcc.gov/files/csric5-wg10-finalreport031517pdf\", \"old_value\": \"https://berlin.ccc.de/~tobias/31c3-ss7-locate-track-manipulate.pdf\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"CSRIC-WG1-FinalReport\", \"old_value\": \"Engel-SS7-2008\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"CSRIC-WG1-FinalReport\", \"old_value\": \"Tobias Engel. (2008, December). Locating Mobile Phones using SS7. Retrieved December 19, 2016.\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Positive-SS7\", \"old_value\": \"3GPP-Security\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"Positive Technologies. (n.d.). SS7 Attack Discovery. Retrieved December 19, 2016.\", \"old_value\": \"3GPP. (2000, January). A Guide to 3rd Generation Security. Retrieved December 19, 2016.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://www.ptsecurity.com/upload/ptcom/PT-SS7-AD-Data-Sheet-eng.pdf\", \"old_value\": \"http://www.3gpp.org/ftp/tsg_sa/wg3_security/_specs/33900-120.pdf\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"Engel-SS7-2008\", \"old_value\": \"Positive-SS7\"}, \"root['external_references'][5]['description']\": {\"new_value\": \"Tobias Engel. (2008, December). Locating Mobile Phones using SS7. Retrieved December 19, 2016.\", \"old_value\": \"Positive Technologies. (n.d.). SS7 Attack Discovery. Retrieved December 19, 2016.\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://www.youtube.com/watch?v=q0n5ySqbfdI\", \"old_value\": \"https://www.ptsecurity.com/upload/ptcom/PT-SS7-AD-Data-Sheet-eng.pdf\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"Engel-SS7\", \"old_value\": \"CSRIC5-WG10-FinalReport\"}, \"root['external_references'][6]['description']\": {\"new_value\": \"Tobias Engel. (2014, December). SS7: Locate. Track. Manipulate.. Retrieved December 19, 2016.\", \"old_value\": \"Communications Security, Reliability, Interoperability Council (CSRIC). (2017, March). Working Group 10 Legacy Systems Risk Reductions Final Report. Retrieved May 24, 2017.\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://berlin.ccc.de/~tobias/31c3-ss7-locate-track-manipulate.pdf\", \"old_value\": \"https://www.fcc.gov/files/csric5-wg10-finalreport031517pdf\"}, \"root['external_references'][7]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"CSRIC-WG1-FinalReport\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--0f4fb01b-d57a-4375-b7a2-342c9d3248f7",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 19:49:58.938000+00:00",
                        "modified": "2022-04-11 19:10:05.885000+00:00",
                        "name": "Impersonate SS7 Nodes",
                        "description": "Adversaries may exploit the lack of authentication in signaling system network nodes to track the to track the location of mobile devices by impersonating a node.(Citation: Engel-SS7)(Citation: Engel-SS7-2008)(Citation: 3GPP-Security)(Citation: Positive-SS7)(Citation: CSRIC5-WG10-FinalReport) \n\n \n\nBy providing the victim\u2019s MSISDN (phone number) and impersonating network internal nodes to query subscriber information from other nodes, adversaries may use data collected from each hop to eventually determine the device\u2019s geographical cell area or nearest cell tower.(Citation: Engel-SS7)",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            },
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "discovery"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1430/002",
                                "external_id": "T1430.002"
                            },
                            {
                                "source_name": "3GPP-Security",
                                "description": "3GPP. (2000, January). A Guide to 3rd Generation Security. Retrieved December 19, 2016.",
                                "url": "http://www.3gpp.org/ftp/tsg_sa/wg3_security/_specs/33900-120.pdf"
                            },
                            {
                                "source_name": "CSRIC5-WG10-FinalReport",
                                "description": "Communications Security, Reliability, Interoperability Council (CSRIC). (2017, March). Working Group 10 Legacy Systems Risk Reductions Final Report. Retrieved May 24, 2017.",
                                "url": "https://www.fcc.gov/files/csric5-wg10-finalreport031517pdf"
                            },
                            {
                                "source_name": "CSRIC-WG1-FinalReport",
                                "description": "CSRIC-WG1-FinalReport"
                            },
                            {
                                "source_name": "Positive-SS7",
                                "description": "Positive Technologies. (n.d.). SS7 Attack Discovery. Retrieved December 19, 2016.",
                                "url": "https://www.ptsecurity.com/upload/ptcom/PT-SS7-AD-Data-Sheet-eng.pdf"
                            },
                            {
                                "source_name": "Engel-SS7-2008",
                                "description": "Tobias Engel. (2008, December). Locating Mobile Phones using SS7. Retrieved December 19, 2016.",
                                "url": "https://www.youtube.com/watch?v=q0n5ySqbfdI"
                            },
                            {
                                "source_name": "Engel-SS7",
                                "description": "Tobias Engel. (2014, December). SS7: Locate. Track. Manipulate.. Retrieved December 19, 2016.",
                                "url": "https://berlin.ccc.de/~tobias/31c3-ss7-locate-track-manipulate.pdf"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-38.html",
                                "external_id": "CEL-38"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Network carriers may be able to use firewalls, Intrusion Detection Systems (IDS), or Intrusion Prevention Systems (IPS) to detect and/or block SS7 exploitation.(Citation: CSRIC-WG1-FinalReport) The CSRIC also suggests threat information sharing between telecommunications industry members.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--f981d199-2720-467e-9dc9-eea04dbe05cf",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:18.937000+00:00",
                    "modified": "2022-04-06 13:57:49.177000+00:00",
                    "name": "Generate Fraudulent Advertising Revenue",
                    "description": "An adversary could seek to generate fraudulent advertising revenue from mobile devices, for example by triggering automatic clicks of advertising links without user involvement.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1472",
                            "external_id": "T1472"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1075\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 13:57:49.177000+00:00\", \"old_value\": \"2019-07-03 20:21:22.168000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--a8e971b8-8dc7-4514-8249-ae95427ec467",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-06 13:55:14.390000+00:00",
                        "modified": "2022-04-06 13:55:14.390000+00:00",
                        "name": "Generate Traffic from Victim",
                        "description": "Adversaries may generate outbound traffic from devices. This is typically performed to manipulate external outcomes, such as to achieve carrier billing fraud or to manipulate app store rankings or ratings. Outbound traffic is typically generated as SMS messages or general web traffic, but may take other forms as well.\n\nIf done via SMS messages, Android apps must hold the `SEND_SMS` permission. Additionally, sending an SMS message requires user consent if the recipient is a premium number. Applications cannot send SMS messages on iOS",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "impact"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1643",
                                "external_id": "T1643"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-16.html",
                                "external_id": "APP-16"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "On Android, users can review which applications can use premium SMS features in the \u201cSpecial access\u201d page within application settings. Application vetting services can detect when applications request the `SEND_SMS` permission, which should be infrequently used.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--8197f026-64da-4700-93b9-b55ba55f3b31",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2020-09-11 15:04:14.532000+00:00",
                    "modified": "2022-03-30 20:43:31.244000+00:00",
                    "name": "Geofencing",
                    "description": "Adversaries may use a device\u2019s geographical location to limit certain malicious behaviors. For example, malware operators may limit the distribution of a second stage payload to certain geographic regions.(Citation: Lookout eSurv)\n\n[Geofencing](https://attack.mitre.org/techniques/T1581) is accomplished by persuading the user to grant the application permission to access location services. The application can then collect, process, and exfiltrate the device\u2019s location to perform location-based actions, such as ceasing malicious behavior or showing region-specific advertisements.\n\nOne method to accomplish [Geofencing](https://attack.mitre.org/techniques/T1581) on Android is to use the built-in Geofencing API to automatically trigger certain behaviors when the device enters or exits a specified radius around a geographical location. Similar to other [Geofencing](https://attack.mitre.org/techniques/T1581) methods, this requires that the user has granted the `ACCESS_FINE_LOCATION` and `ACCESS_BACKGROUND_LOCATION` permissions. The latter is only required if the application targets Android 10 (API level 29) or higher. However, Android 11 introduced additional permission controls that may restrict background location collection based on user permission choices at runtime. These additional controls include \u201cAllow only while using the app\u201d, which will effectively prohibit background location collection.(Citation: Android Geofencing API)\n\nSimilarly, on iOS, developers can use built-in APIs to setup and execute geofencing. Depending on the use case, the app will either need to call `requestWhenInUseAuthorization()` or `requestAlwaysAuthorization()`, depending on when access to the location services is required. Similar to Android, users also have the option to limit when the application can access the device\u2019s location, including one-time use and only when the application is running in the foreground.(Citation: Apple Location Services)\n\n[Geofencing](https://attack.mitre.org/techniques/T1581) can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. For example, location data could be used to limit malware spread and/or capabilities, which could also potentially evade application analysis environments (ex: malware analysis outside of the target geographic area). Other malicious usages could include showing language-specific [Input Prompt](https://attack.mitre.org/techniques/T1411)s and/or advertisements.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1581",
                            "external_id": "T1581"
                        },
                        {
                            "source_name": "Lookout eSurv",
                            "description": "A. Bauer. (2019, April 8). Lookout discovers phishing sites distributing new iOS and Android surveillanceware. Retrieved September 11, 2020.",
                            "url": "https://blog.lookout.com/esurv-research"
                        },
                        {
                            "source_name": "Apple Location Services",
                            "description": "Apple. (n.d.). Requesting Authorization for Location Services. Retrieved September 11, 2020.",
                            "url": "https://developer.apple.com/documentation/corelocation/requesting_authorization_for_location_services"
                        },
                        {
                            "source_name": "Android Geofencing API",
                            "description": "Google. (n.d.). Create and monitor geofences. Retrieved September 11, 2020.",
                            "url": "https://developer.android.com/training/location/geofencing"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Users can review which applications have location permissions in the operating system\u2019s settings menu. On Android 10 and later, the system shows a notification to the user when an app has been accessing device location in the background.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 20:43:31.244000+00:00\", \"old_value\": \"2020-10-01 12:43:41.494000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Apple Location Services\", \"old_value\": \"Android Geofencing API\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Apple. (n.d.). Requesting Authorization for Location Services. Retrieved September 11, 2020.\", \"old_value\": \"Google. (n.d.). Create and monitor geofences. Retrieved September 11, 2020.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://developer.apple.com/documentation/corelocation/requesting_authorization_for_location_services\", \"old_value\": \"https://developer.android.com/training/location/geofencing\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Android Geofencing API\", \"old_value\": \"Apple Location Services\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Google. (n.d.). Create and monitor geofences. Retrieved September 11, 2020.\", \"old_value\": \"Apple. (n.d.). Requesting Authorization for Location Services. Retrieved September 11, 2020.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://developer.android.com/training/location/geofencing\", \"old_value\": \"https://developer.apple.com/documentation/corelocation/requesting_authorization_for_location_services\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--e422b6fa-4739-46b9-992e-82f1b350c780",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 20:36:03.177000+00:00",
                        "modified": "2022-04-21 17:30:57.081000+00:00",
                        "name": "Geofencing",
                        "description": "Adversaries may use a device\u2019s geographical location to limit certain malicious behaviors. For example, malware operators may limit the distribution of a second stage payload to certain geographic regions.(Citation: Lookout eSurv)\n\n[Geofencing](https://attack.mitre.org/techniques/T1627/001)\u202fis accomplished by persuading the user to grant the application permission to access location services. The application can then collect, process, and exfiltrate the device\u2019s location to perform location-based actions, such as ceasing malicious behavior or showing region-specific advertisements. \n\nOne method to accomplish\u202f[Geofencing](https://attack.mitre.org/techniques/T1627/001)\u202fon Android is to use the built-in Geofencing API to automatically trigger certain behaviors when the device enters or exits a specified radius around a geographical location. Similar to  other\u202f[Geofencing](https://attack.mitre.org/techniques/T1627/001) methods, this requires that the user has granted the `ACCESS_FINE_LOCATION` and `ACCESS_BACKGROUND_LOCATION` permissions. The latter is only required if the application targets Android 10 (API level 29) or higher. However, Android 11 introduced additional permission controls that may restrict background location collection based on user permission choices at runtime. These additional controls include \"Allow only while using the app\", which will effectively prohibit background location collection.  \n\nSimilarly, on iOS, developers can use built-in APIs to setup and execute geofencing. Depending on the use case, the app will either need to call\u202f`requestWhenInUseAuthorization()`\u202for\u202f`requestAlwaysAuthorization()`, depending on when access to the location services is required. Similar to Android, users also have the option to limit when the application can access the device\u2019s location, including one-time use and only when the application is running in the foreground.  \n\n[Geofencing](https://attack.mitre.org/techniques/T1627/001)\u202fcan be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. For example, location data could be used to limit malware spread and/or capabilities, which could also potentially evade application analysis environments (ex: malware analysis outside of the target geographic area). Other malicious usages could include showing language-specific input prompts and/or advertisements.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1627/001",
                                "external_id": "T1627.001"
                            },
                            {
                                "source_name": "Lookout eSurv",
                                "description": "A. Bauer. (2019, April 8). Lookout discovers phishing sites distributing new iOS and Android surveillanceware. Retrieved September 11, 2020.",
                                "url": "https://blog.lookout.com/esurv-research"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Users can review which applications have location permissions in the operating system\u2019s settings menu. On Android 10 and later, the system shows a notification to the user when an app has been accessing device location in the background. Application vetting services can detect unnecessary and potentially abused location permissions or API calls.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--3dd58c80-4c2e-458c-9503-1b2cd273c4d2",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:34.407000+00:00",
                    "modified": "2022-04-05 19:52:32.190000+00:00",
                    "name": "Input Prompt",
                    "description": "The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Adversaries may mimic this functionality to prompt users for sensitive information.\n\nCompared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this technique\u2019s use.(Citation: Felt-PhishingOnMobileDevices)\n\nSpecific approaches to this technique include:\n\n### Impersonate the identity of a legitimate application\n\nA malicious application could impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and get installed on the device. The malicious app could then prompt the user for sensitive information.(Citation: eset-finance)\n\n### Display a prompt on top of a running legitimate application\n\nA malicious application could display a prompt on top of a running legitimate application to trick users into entering sensitive information into the malicious application rather than the legitimate application. Typically, the malicious application would need to know when the targeted application (and individual activity within the targeted application) is running in the foreground, so that the malicious application knows when to display its prompt. Android 5.0 and 5.1.1, respectively, increased the difficulty of determining the current foreground application through modifications to the `ActivityManager` API.(Citation: Android-getRunningTasks)(Citation: StackOverflow-getRunningAppProcesses). A malicious application can still abuse Android\u2019s accessibility features to determine which application is currently in the foreground.(Citation: ThreatFabric Cerberus) Approaches to display a prompt include:\n\n* A malicious application could start a new activity on top of a running legitimate application.(Citation: Felt-PhishingOnMobileDevices)(Citation: Hassell-ExploitingAndroid) Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique.(Citation: Android Background)\n* A malicious application could create an application overlay window on top of a running legitimate application. Applications must hold the `SYSTEM_ALERT_WINDOW` permission to create overlay windows. This permission is handled differently than typical Android permissions, and at least under certain conditions is automatically granted to applications installed from the Google Play Store.(Citation: Cloak and Dagger)(Citation: NowSecure Android Overlay)(Citation: Skycure-Accessibility) The `SYSTEM_ALERT_WINDOW` permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.(Citation: XDA Bubbles)\n\n### Fake device notifications\n\nA malicious application could send fake device notifications to the user. Clicking on the device notification could trigger the malicious application to display an input prompt.(Citation: Group IB Gustuff Mar 2019)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1411",
                            "external_id": "T1411"
                        },
                        {
                            "source_name": "Felt-PhishingOnMobileDevices",
                            "description": "A.P. Felt and D. Wagner. (2011, May 26). Phishing on Mobile Devices. Retrieved August 25, 2016.",
                            "url": "http://w2spconf.com/2011/papers/felt-mobilephishing.pdf"
                        },
                        {
                            "source_name": "Android Background",
                            "description": "Android Developers. (n.d.). Restrictions on starting activities from the background. Retrieved September 18, 2019.",
                            "url": "https://developer.android.com/guide/components/activities/background-starts"
                        },
                        {
                            "source_name": "Android-getRunningTasks",
                            "description": "Android. (n.d.). ActivityManager getRunningTasks documentation. Retrieved January 19, 2017.",
                            "url": "https://developer.android.com/reference/android/app/ActivityManager.html#getRunningTasks%28int%29"
                        },
                        {
                            "source_name": "Cloak and Dagger",
                            "description": "Fratantonio, Y., et al.. (2017). Cloak & Dagger. Retrieved September 18, 2019.",
                            "url": "http://cloak-and-dagger.org/"
                        },
                        {
                            "source_name": "Group IB Gustuff Mar 2019",
                            "description": "Group-IB. (2019, March 28). Group-IB uncovers Android Trojan named \u00abGustuff\u00bb capable of targeting more than 100 global banking apps, cryptocurrency and marketplace applications. Retrieved September 3, 2019.",
                            "url": "https://www.group-ib.com/blog/gustuff"
                        },
                        {
                            "source_name": "eset-finance",
                            "description": "Luk\u00e1\u0161 \u0160tefanko. (2016, July 7). Fake finance apps on Google Play target users from around the world. Retrieved September 24, 2018.",
                            "url": "https://www.welivesecurity.com/2018/09/19/fake-finance-apps-google-play-target-around-world/"
                        },
                        {
                            "source_name": "Hassell-ExploitingAndroid",
                            "description": "R. Hassell. (2011, October 12-13). Exploiting Androids for Fun and Profit. Retrieved October 10, 2019.",
                            "url": "https://conference.hitb.org/hitbsecconf2011kul/materials/D1T1%20-%20Riley%20Hassell%20-%20Exploiting%20Androids%20for%20Fun%20and%20Profit.pdf"
                        },
                        {
                            "source_name": "XDA Bubbles",
                            "description": "Rahman, M.. (2019, May 8). Bubbles in Android Q will fully replace the overlay API in a future Android version. Retrieved September 18, 2019.",
                            "url": "https://www.xda-developers.com/android-q-system-alert-window-deprecate-bubbles/"
                        },
                        {
                            "source_name": "NowSecure Android Overlay",
                            "description": "Ramirez, T.. (2017, May 25). \u2018SAW\u2019-ing through the UI: Android overlay malware and the System Alert Window permission explained. Retrieved September 18, 2019.",
                            "url": "https://www.nowsecure.com/blog/2017/05/25/android-overlay-malware-system-alert-window-permission/"
                        },
                        {
                            "source_name": "ThreatFabric Cerberus",
                            "description": "ThreatFabric. (2019, August). Cerberus - A new banking Trojan from the underworld. Retrieved September 18, 2019.",
                            "url": "https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html"
                        },
                        {
                            "source_name": "StackOverflow-getRunningAppProcesses",
                            "description": "Various. (n.d.). Android 5.1.1 and above - getRunningAppProcesses() returns my application package only. Retrieved January 19, 2017.",
                            "url": "http://stackoverflow.com/questions/30619349/android-5-1-1-and-above-getrunningappprocesses-returns-my-application-packag"
                        },
                        {
                            "source_name": "Skycure-Accessibility",
                            "description": "Yair Amit. (2016, March 3). \u201cAccessibility Clickjacking\u201d \u2013 The Next Evolution in Android Malware that Impacts More Than 500 Million Devices. Retrieved December 21, 2016.",
                            "url": "https://www.skycure.com/blog/accessibility-clickjacking/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html",
                            "external_id": "APP-31"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "The user can view and manage which applications hold the SYSTEM_ALERT_WINDOW permission to create overlay windows on top of other apps through the device settings in Apps & notifications -> Special app access -> Display over other apps (the exact menu location may vary between Android versions).",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"A.P. Felt and D. Wagner. (2011, May 26). Phishing on Mobile Devices. Retrieved August 25, 2016.\", \"root['external_references'][13]['external_id']\": \"APP-31\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1014\", \"root['external_references'][1]['external_id']\": \"APP-31\", \"root['external_references'][13]['description']\": \"Group-IB. (2019, March 28). Group-IB uncovers Android Trojan named \\u00abGustuff\\u00bb capable of targeting more than 100 global banking apps, cryptocurrency and marketplace applications. Retrieved September 3, 2019.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-05 19:52:32.190000+00:00\", \"old_value\": \"2020-06-24 15:04:20.321000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Felt-PhishingOnMobileDevices\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://w2spconf.com/2011/papers/felt-mobilephishing.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Android Background\", \"old_value\": \"Felt-PhishingOnMobileDevices\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Android Developers. (n.d.). Restrictions on starting activities from the background. Retrieved September 18, 2019.\", \"old_value\": \"A.P. Felt and D. Wagner. (2011, May 26). Phishing on Mobile Devices. Retrieved August 25, 2016.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://developer.android.com/guide/components/activities/background-starts\", \"old_value\": \"http://w2spconf.com/2011/papers/felt-mobilephishing.pdf\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Android-getRunningTasks\", \"old_value\": \"eset-finance\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Android. (n.d.). ActivityManager getRunningTasks documentation. Retrieved January 19, 2017.\", \"old_value\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2016, July 7). Fake finance apps on Google Play target users from around the world. Retrieved September 24, 2018.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://developer.android.com/reference/android/app/ActivityManager.html#getRunningTasks%28int%29\", \"old_value\": \"https://www.welivesecurity.com/2018/09/19/fake-finance-apps-google-play-target-around-world/\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Cloak and Dagger\", \"old_value\": \"Android-getRunningTasks\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"Fratantonio, Y., et al.. (2017). Cloak & Dagger. Retrieved September 18, 2019.\", \"old_value\": \"Android. (n.d.). ActivityManager getRunningTasks documentation. Retrieved January 19, 2017.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"http://cloak-and-dagger.org/\", \"old_value\": \"https://developer.android.com/reference/android/app/ActivityManager.html#getRunningTasks%28int%29\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"Group IB Gustuff Mar 2019\", \"old_value\": \"StackOverflow-getRunningAppProcesses\"}, \"root['external_references'][5]['description']\": {\"new_value\": \"Group-IB. (2019, March 28). Group-IB uncovers Android Trojan named \\u00abGustuff\\u00bb capable of targeting more than 100 global banking apps, cryptocurrency and marketplace applications. Retrieved September 3, 2019.\", \"old_value\": \"Various. (n.d.). Android 5.1.1 and above - getRunningAppProcesses() returns my application package only. Retrieved January 19, 2017.\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://www.group-ib.com/blog/gustuff\", \"old_value\": \"http://stackoverflow.com/questions/30619349/android-5-1-1-and-above-getrunningappprocesses-returns-my-application-packag\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"eset-finance\", \"old_value\": \"ThreatFabric Cerberus\"}, \"root['external_references'][6]['description']\": {\"new_value\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2016, July 7). Fake finance apps on Google Play target users from around the world. Retrieved September 24, 2018.\", \"old_value\": \"ThreatFabric. (2019, August). Cerberus - A new banking Trojan from the underworld. Retrieved September 18, 2019.\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://www.welivesecurity.com/2018/09/19/fake-finance-apps-google-play-target-around-world/\", \"old_value\": \"https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html\"}, \"root['external_references'][8]['source_name']\": {\"new_value\": \"XDA Bubbles\", \"old_value\": \"Android Background\"}, \"root['external_references'][8]['description']\": {\"new_value\": \"Rahman, M.. (2019, May 8). Bubbles in Android Q will fully replace the overlay API in a future Android version. Retrieved September 18, 2019.\", \"old_value\": \"Android Developers. (n.d.). Restrictions on starting activities from the background. Retrieved September 18, 2019.\"}, \"root['external_references'][8]['url']\": {\"new_value\": \"https://www.xda-developers.com/android-q-system-alert-window-deprecate-bubbles/\", \"old_value\": \"https://developer.android.com/guide/components/activities/background-starts\"}, \"root['external_references'][9]['source_name']\": {\"new_value\": \"NowSecure Android Overlay\", \"old_value\": \"Cloak and Dagger\"}, \"root['external_references'][9]['description']\": {\"new_value\": \"Ramirez, T.. (2017, May 25). \\u2018SAW\\u2019-ing through the UI: Android overlay malware and the System Alert Window permission explained. Retrieved September 18, 2019.\", \"old_value\": \"Fratantonio, Y., et al.. (2017). Cloak & Dagger. Retrieved September 18, 2019.\"}, \"root['external_references'][9]['url']\": {\"new_value\": \"https://www.nowsecure.com/blog/2017/05/25/android-overlay-malware-system-alert-window-permission/\", \"old_value\": \"http://cloak-and-dagger.org/\"}, \"root['external_references'][10]['source_name']\": {\"new_value\": \"ThreatFabric Cerberus\", \"old_value\": \"NowSecure Android Overlay\"}, \"root['external_references'][10]['description']\": {\"new_value\": \"ThreatFabric. (2019, August). Cerberus - A new banking Trojan from the underworld. Retrieved September 18, 2019.\", \"old_value\": \"Ramirez, T.. (2017, May 25). \\u2018SAW\\u2019-ing through the UI: Android overlay malware and the System Alert Window permission explained. Retrieved September 18, 2019.\"}, \"root['external_references'][10]['url']\": {\"new_value\": \"https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html\", \"old_value\": \"https://www.nowsecure.com/blog/2017/05/25/android-overlay-malware-system-alert-window-permission/\"}, \"root['external_references'][11]['source_name']\": {\"new_value\": \"StackOverflow-getRunningAppProcesses\", \"old_value\": \"Skycure-Accessibility\"}, \"root['external_references'][11]['description']\": {\"new_value\": \"Various. (n.d.). Android 5.1.1 and above - getRunningAppProcesses() returns my application package only. Retrieved January 19, 2017.\", \"old_value\": \"Yair Amit. (2016, March 3). \\u201cAccessibility Clickjacking\\u201d \\u2013 The Next Evolution in Android Malware that Impacts More Than 500 Million Devices. Retrieved December 21, 2016.\"}, \"root['external_references'][11]['url']\": {\"new_value\": \"http://stackoverflow.com/questions/30619349/android-5-1-1-and-above-getrunningappprocesses-returns-my-application-packag\", \"old_value\": \"https://www.skycure.com/blog/accessibility-clickjacking/\"}, \"root['external_references'][12]['source_name']\": {\"new_value\": \"Skycure-Accessibility\", \"old_value\": \"XDA Bubbles\"}, \"root['external_references'][12]['description']\": {\"new_value\": \"Yair Amit. (2016, March 3). \\u201cAccessibility Clickjacking\\u201d \\u2013 The Next Evolution in Android Malware that Impacts More Than 500 Million Devices. Retrieved December 21, 2016.\", \"old_value\": \"Rahman, M.. (2019, May 8). Bubbles in Android Q will fully replace the overlay API in a future Android version. Retrieved September 18, 2019.\"}, \"root['external_references'][12]['url']\": {\"new_value\": \"https://www.skycure.com/blog/accessibility-clickjacking/\", \"old_value\": \"https://www.xda-developers.com/android-q-system-alert-window-deprecate-bubbles/\"}, \"root['external_references'][13]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Group IB Gustuff Mar 2019\"}, \"root['external_references'][13]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html\", \"old_value\": \"https://www.group-ib.com/blog/gustuff\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--4c58b7c6-a839-4789-bda9-9de33e4d4512",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 19:48:31.195000+00:00",
                        "modified": "2022-04-05 19:48:31.195000+00:00",
                        "name": "GUI Input Capture",
                        "description": "Adversaries may mimic common operating system GUI components to prompt users for sensitive information with a seemingly legitimate prompt. The operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials, bank account information, or Personally Identifiable Information (PII). Compared to traditional PCs, the constrained display size of mobile devices may impair the ability to provide users with contextual information, making users more susceptible to this technique\u2019s use.(Citation: Felt-PhishingOnMobileDevices)\n\nThere are several approaches adversaries may use to mimic this functionality. Adversaries may impersonate the identity of a legitimate application (e.g. use the same application name and/or icon) and, when installed on the device, may prompt the user for sensitive information.(Citation: eset-finance) Adversaries may also send fake device notifications to the user that may trigger the display of an input prompt when clicked.(Citation: Group IB Gustuff Mar 2019) \n\nAdditionally, adversaries may display a prompt on top of a running, legitimate application to trick users into entering sensitive information into a malicious application rather than the legitimate application. Typically, adversaries need to know when the targeted application and the individual activity within the targeted application is running in the foreground to display the prompt at the proper time. Adversaries can abuse Android\u2019s accessibility features to determine which application is currently in the foreground.(Citation: ThreatFabric Cerberus) Two known approaches to displaying a prompt include:\n\n* Adversaries start a new activity on top of a running legitimate application.(Citation: Felt-PhishingOnMobileDevices)(Citation: Hassell-ExploitingAndroid) Android 10 places new restrictions on the ability for an application to start a new activity on top of another application, which may make it more difficult for adversaries to utilize this technique.(Citation: Android Background)\n* Adversaries create an application overlay window on top of a running legitimate application. Applications must hold the `SYSTEM_ALERT_WINDOW` permission to create overlay windows. This permission is handled differently than typical Android permissions and, at least under certain conditions, is automatically granted to applications installed from the Google Play Store.(Citation: Cloak and Dagger)(Citation: NowSecure Android Overlay)(Citation: Skycure-Accessibility) The `SYSTEM_ALERT_WINDOW` permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of Android in favor of a new API.(Citation: XDA Bubbles)",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "credential-access"
                            },
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1417/002",
                                "external_id": "T1417.002"
                            },
                            {
                                "source_name": "Felt-PhishingOnMobileDevices",
                                "description": "A.P. Felt and D. Wagner. (2011, May 26). Phishing on Mobile Devices. Retrieved August 25, 2016.",
                                "url": "http://w2spconf.com/2011/papers/felt-mobilephishing.pdf"
                            },
                            {
                                "source_name": "Android Background",
                                "description": "Android Developers. (n.d.). Restrictions on starting activities from the background. Retrieved September 18, 2019.",
                                "url": "https://developer.android.com/guide/components/activities/background-starts"
                            },
                            {
                                "source_name": "Cloak and Dagger",
                                "description": "Fratantonio, Y., et al.. (2017). Cloak & Dagger. Retrieved September 18, 2019.",
                                "url": "http://cloak-and-dagger.org/"
                            },
                            {
                                "source_name": "Group IB Gustuff Mar 2019",
                                "description": "Group-IB. (2019, March 28). Group-IB uncovers Android Trojan named \u00abGustuff\u00bb capable of targeting more than 100 global banking apps, cryptocurrency and marketplace applications. Retrieved September 3, 2019.",
                                "url": "https://www.group-ib.com/blog/gustuff"
                            },
                            {
                                "source_name": "eset-finance",
                                "description": "Luk\u00e1\u0161 \u0160tefanko. (2016, July 7). Fake finance apps on Google Play target users from around the world. Retrieved September 24, 2018.",
                                "url": "https://www.welivesecurity.com/2018/09/19/fake-finance-apps-google-play-target-around-world/"
                            },
                            {
                                "source_name": "Hassell-ExploitingAndroid",
                                "description": "R. Hassell. (2011, October 12-13). Exploiting Androids for Fun and Profit. Retrieved October 10, 2019.",
                                "url": "https://conference.hitb.org/hitbsecconf2011kul/materials/D1T1%20-%20Riley%20Hassell%20-%20Exploiting%20Androids%20for%20Fun%20and%20Profit.pdf"
                            },
                            {
                                "source_name": "XDA Bubbles",
                                "description": "Rahman, M.. (2019, May 8). Bubbles in Android Q will fully replace the overlay API in a future Android version. Retrieved September 18, 2019.",
                                "url": "https://www.xda-developers.com/android-q-system-alert-window-deprecate-bubbles/"
                            },
                            {
                                "source_name": "NowSecure Android Overlay",
                                "description": "Ramirez, T.. (2017, May 25). \u2018SAW\u2019-ing through the UI: Android overlay malware and the System Alert Window permission explained. Retrieved September 18, 2019.",
                                "url": "https://www.nowsecure.com/blog/2017/05/25/android-overlay-malware-system-alert-window-permission/"
                            },
                            {
                                "source_name": "ThreatFabric Cerberus",
                                "description": "ThreatFabric. (2019, August). Cerberus - A new banking Trojan from the underworld. Retrieved September 18, 2019.",
                                "url": "https://www.threatfabric.com/blogs/cerberus-a-new-banking-trojan-from-the-underworld.html"
                            },
                            {
                                "source_name": "Skycure-Accessibility",
                                "description": "Yair Amit. (2016, March 3). \u201cAccessibility Clickjacking\u201d \u2013 The Next Evolution in Android Malware that Impacts More Than 500 Million Devices. Retrieved December 21, 2016.",
                                "url": "https://www.skycure.com/blog/accessibility-clickjacking/"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html",
                                "external_id": "APP-31"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Android users can view and manage which applications hold the `SYSTEM_ALERT_WINDOW` permission through the device settings in Apps & notifications -> Special app access -> Display over other apps (the exact menu location may vary between Android versions). \n\nApplication vetting services can look for applications requesting the `android.permission.SYSTEM_ALERT_WINDOW` permission in the list of permissions in the app manifest. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--cde2cb84-455e-410c-8aa9-086f2788bcd2",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2018-10-17 00:14:20.652000+00:00",
                    "modified": "2022-03-30 18:18:15.903000+00:00",
                    "name": "Install Insecure or Malicious Configuration",
                    "description": "An adversary could attempt to install insecure or malicious configuration settings on the mobile device, through means such as phishing emails or text messages either directly containing the configuration settings as an attachment, or containing a web link to the configuration settings. The device user may be tricked into installing the configuration settings through social engineering techniques (Citation: Symantec-iOSProfile).\n\nFor example, an unwanted Certification Authority (CA) certificate could be placed in the device's trusted certificate store, increasing the device's susceptibility to adversary-in-the-middle network attacks seeking to eavesdrop on or manipulate the device's network communication ([Eavesdrop on Insecure Network Communication](https://attack.mitre.org/techniques/T1439) and [Manipulate Device Communication](https://attack.mitre.org/techniques/T1463)).\n\nOn iOS, malicious Configuration Profiles could contain unwanted Certification Authority (CA) certificates or other insecure settings such as unwanted proxy server or VPN settings to route the device's network traffic through an adversary's system. The device could also potentially be enrolled into a malicious Mobile Device Management (MDM) system (Citation: Talos-MDM).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1478",
                            "external_id": "T1478"
                        },
                        {
                            "source_name": "Talos-MDM",
                            "description": "Warren Mercer, Paul Rascagneres, Andrew Williams. (2018, July 12). Advanced Mobile Malware Campaign in India uses Malicious MDM. Retrieved September 24, 2018.",
                            "url": "https://blog.talosintelligence.com/2018/07/Mobile-Malware-Campaign-uses-Malicious-MDM.html"
                        },
                        {
                            "source_name": "Symantec-iOSProfile",
                            "description": "Yair Amit. (2013, March 12). Malicious Profiles \u2013 The Sleeping Giant of iOS Security. Retrieved September 24, 2018.",
                            "url": "https://www.symantec.com/connect/blogs/malicious-profiles-sleeping-giant-ios-security"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-7.html",
                            "external_id": "STA-7"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, the user can view trusted CA certificates through the device settings and look for unexpected certificates. A mobile security product could similarly examine the trusted CA certificate store for anomalies.\n\nOn iOS, the user can view installed Configuration Profiles through the device settings and look for unexpected profiles. A Mobile Device Management (MDM) system could use the iOS MDM APIs to examine the list of installed Configuration Profiles for anomalies.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Warren Mercer, Paul Rascagneres, Andrew Williams. (2018, July 12). Advanced Mobile Malware Campaign in India uses Malicious MDM. Retrieved September 24, 2018.\", \"root['external_references'][3]['external_id']\": \"STA-7\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1081\", \"root['external_references'][1]['external_id']\": \"STA-7\", \"root['external_references'][3]['description']\": \"Warren Mercer, Paul Rascagneres, Andrew Williams. (2018, July 12). Advanced Mobile Malware Campaign in India uses Malicious MDM. Retrieved September 24, 2018.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 18:18:15.903000+00:00\", \"old_value\": \"2021-11-01 18:29:08.293000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Talos-MDM\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://blog.talosintelligence.com/2018/07/Mobile-Malware-Campaign-uses-Malicious-MDM.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-7.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Talos-MDM\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-7.html\", \"old_value\": \"https://blog.talosintelligence.com/2018/07/Mobile-Malware-Campaign-uses-Malicious-MDM.html\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--fcb11f06-ce0e-490b-bcc1-04a1623579f0",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 18:13:26.003000+00:00",
                        "modified": "2022-04-21 17:31:50.071000+00:00",
                        "name": "Code Signing Policy Modification",
                        "description": "Adversaries may modify code signing policies to enable execution of applications signed with unofficial or unknown keys. Code signing provides a level of authenticity on an app from a developer, guaranteeing that the program has not been tampered with and comes from an official source. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on a device. \n\nMobile devices generally enable these security controls by default, such as preventing the installation of unknown applications on Android. Adversaries may modify these policies in a number of ways, including [Input Injection](https://attack.mitre.org/techniques/T1516) or malicious configuration profiles.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1632/001",
                                "external_id": "T1632.001"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-7.html",
                                "external_id": "STA-7"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "On Android, the user can use the device settings menu to view trusted CA certificates and look for unexpected or unknown certificates. A mobile security product could similarly examine the trusted CA certificate store for anomalies. Users can use the device settings menu to view which applications on the device are allowed to install unknown applications.\n\nOn iOS, the user can use the device settings menu to view installed Configuration Profiles and look for unexpected or unknown profiles. A Mobile Device Management (MDM) system could use the iOS MDM APIs to examine the list of installed Configuration Profiles for anomalies.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--27f483c6-6666-44fa-8532-ffd5fc7dab38",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2020-06-24 17:33:49.778000+00:00",
                    "modified": "2022-04-01 15:02:43.470000+00:00",
                    "name": "Keychain",
                    "description": "Adversaries may collect the keychain storage data from an iOS device to acquire credentials. Keychains are the built-in way for iOS to keep track of users' passwords and credentials for many services and features such as Wi-Fi passwords, websites, secure notes, certificates, private keys, and VPN credentials.\n\nOn the device, the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data. Standard iOS APIs allow applications access to their own keychain contained within the database. By utilizing a privilege escalation exploit or existing root access, an adversary can access the entire encrypted database.(Citation: Apple Keychain Services)(Citation: Elcomsoft Decrypt Keychain)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1579",
                            "external_id": "T1579"
                        },
                        {
                            "source_name": "Apple Keychain Services",
                            "description": "Apple, Inc.. (n.d.). Keychain Services. Retrieved June 24, 2020.",
                            "url": "https://developer.apple.com/documentation/security/keychain_services"
                        },
                        {
                            "source_name": "Elcomsoft Decrypt Keychain",
                            "description": "V. Katalov. (2018, December 18). Six Ways to Decrypt iPhone Passwords from the Keychain. Retrieved June 24, 2020.",
                            "url": "https://blog.elcomsoft.com/2018/12/six-ways-to-decrypt-iphone-passwords-from-the-keychain/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-11.html",
                            "external_id": "AUT-11"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products can potentially detect jailbroken devices and perform further actions as necessary.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Apple, Inc.. (n.d.). Keychain Services. Retrieved June 24, 2020.\", \"root['external_references'][3]['external_id']\": \"AUT-11\"}, \"dictionary_item_removed\": {\"root['external_references'][1]['external_id']\": \"AUT-11\", \"root['external_references'][3]['description']\": \"V. Katalov. (2018, December 18). Six Ways to Decrypt iPhone Passwords from the Keychain. Retrieved June 24, 2020.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 15:02:43.470000+00:00\", \"old_value\": \"2020-06-24 19:02:46.237000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Apple Keychain Services\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://developer.apple.com/documentation/security/keychain_services\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-11.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Elcomsoft Decrypt Keychain\", \"old_value\": \"Apple Keychain Services\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"V. Katalov. (2018, December 18). Six Ways to Decrypt iPhone Passwords from the Keychain. Retrieved June 24, 2020.\", \"old_value\": \"Apple, Inc.. (n.d.). Keychain Services. Retrieved June 24, 2020.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://blog.elcomsoft.com/2018/12/six-ways-to-decrypt-iphone-passwords-from-the-keychain/\", \"old_value\": \"https://developer.apple.com/documentation/security/keychain_services\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Elcomsoft Decrypt Keychain\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-11.html\", \"old_value\": \"https://blog.elcomsoft.com/2018/12/six-ways-to-decrypt-iphone-passwords-from-the-keychain/\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--8605a0ec-b44a-4e98-a7fc-87d4bd3acb66",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-01 15:01:32.169000+00:00",
                        "modified": "2022-04-05 17:09:03.861000+00:00",
                        "name": "Keychain",
                        "description": "Adversaries may collect keychain data from an iOS device to acquire credentials. Keychains are the built-in way for iOS to keep track of users' passwords and credentials for many services and features such as Wi-Fi passwords, websites, secure notes, certificates, private keys, and VPN credentials. \n\nOn the device, the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data. Standard iOS APIs allow applications access to their own keychain contained within the database. By utilizing a privilege escalation exploit or existing root access, adversaries can access the entire encrypted database.(Citation: Apple Keychain Services)(Citation: Elcomsoft Decrypt Keychain) ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "credential-access"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1634/001",
                                "external_id": "T1634.001"
                            },
                            {
                                "source_name": "Apple Keychain Services",
                                "description": "Apple, Inc.. (n.d.). Keychain Services. Retrieved June 24, 2020.",
                                "url": "https://developer.apple.com/documentation/security/keychain_services"
                            },
                            {
                                "source_name": "Elcomsoft Decrypt Keychain",
                                "description": "V. Katalov. (2018, December 18). Six Ways to Decrypt iPhone Passwords from the Keychain. Retrieved June 24, 2020.",
                                "url": "https://blog.elcomsoft.com/2018/12/six-ways-to-decrypt-iphone-passwords-from-the-keychain/"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-11.html",
                                "external_id": "AUT-11"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Mobile security products can potentially detect jailbroken devices. Application vetting services may be able to detect known privilege escalation exploits contained within applications, as well as searching application packages for strings that correlate to known password store locations.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--76c12fc8-a4eb-45d6-a3b7-e371a7248f69",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:07.460000+00:00",
                    "modified": "2022-04-06 13:57:24.726000+00:00",
                    "name": "Manipulate App Store Rankings or Ratings",
                    "description": "An adversary could use access to a compromised device's credentials to attempt to manipulate app store rankings or ratings by triggering application downloads or posting fake reviews of applications. This technique likely requires privileged access (a rooted or jailbroken device).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1452",
                            "external_id": "T1452"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1055\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 13:57:24.726000+00:00\", \"old_value\": \"2019-07-03 20:25:59.845000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--a8e971b8-8dc7-4514-8249-ae95427ec467",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-06 13:55:14.390000+00:00",
                        "modified": "2022-04-06 13:55:14.390000+00:00",
                        "name": "Generate Traffic from Victim",
                        "description": "Adversaries may generate outbound traffic from devices. This is typically performed to manipulate external outcomes, such as to achieve carrier billing fraud or to manipulate app store rankings or ratings. Outbound traffic is typically generated as SMS messages or general web traffic, but may take other forms as well.\n\nIf done via SMS messages, Android apps must hold the `SEND_SMS` permission. Additionally, sending an SMS message requires user consent if the recipient is a premium number. Applications cannot send SMS messages on iOS",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "impact"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1643",
                                "external_id": "T1643"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-16.html",
                                "external_id": "APP-16"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "On Android, users can review which applications can use premium SMS features in the \u201cSpecial access\u201d page within application settings. Application vetting services can detect when applications request the `SEND_SMS` permission, which should be infrequently used.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d731c21e-f27d-4756-b418-0e2aaabd6d63",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:25.322000+00:00",
                    "modified": "2022-04-06 15:44:48.421000+00:00",
                    "name": "Manipulate Device Communication",
                    "description": "If network traffic between the mobile device and a remote server is not securely protected, then an attacker positioned on the network may be able to manipulate network communication without being detected. For example, FireEye researchers found in 2014 that 68% of the top 1,000 free applications in the Google Play Store had at least one Transport Layer Security (TLS) implementation vulnerability potentially opening the applications' network traffic to adversary-in-the-middle attacks (Citation: FireEye-SSL).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "network-effects"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1463",
                            "external_id": "T1463"
                        },
                        {
                            "source_name": "FireEye-SSL",
                            "description": "Adrian Mettler, Yulong Zhang, Vishwanath Raman. (2014, August 20). SSL VULNERABILITIES: WHO LISTENS WHEN ANDROID APPLICATIONS TALK?. Retrieved December 24, 2016.",
                            "url": "https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html",
                            "external_id": "APP-1"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Adrian Mettler, Yulong Zhang, Vishwanath Raman. (2014, August 20). SSL VULNERABILITIES: WHO LISTENS WHEN ANDROID APPLICATIONS TALK?. Retrieved December 24, 2016.\", \"root['external_references'][2]['external_id']\": \"APP-1\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1066\", \"root['external_references'][1]['external_id']\": \"APP-1\", \"root['external_references'][2]['description']\": \"Adrian Mettler, Yulong Zhang, Vishwanath Raman. (2014, August 20). SSL VULNERABILITIES: WHO LISTENS WHEN ANDROID APPLICATIONS TALK?. Retrieved December 24, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:44:48.421000+00:00\", \"old_value\": \"2021-07-28 18:45:08.382000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"FireEye-SSL\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"FireEye-SSL\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html\", \"old_value\": \"https://www.fireeye.com/blog/threat-research/2014/08/ssl-vulnerabilities-who-listens-when-android-applications-talk.html\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--08e22979-d320-48ed-8711-e7bf94aabb13",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 20:11:08.894000+00:00",
                        "modified": "2022-04-11 19:27:44.048000+00:00",
                        "name": "Adversary-in-the-Middle",
                        "description": "Adversaries may attempt to position themselves between two or more networked devices to support follow-on behaviors such as [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642).  \n\n \n\n[Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1638) can be achieved through several mechanisms, such as a malicious application registering itself as a VPN client. By doing this, the adversary can effectively redirect device traffic to wherever they want. However, registering as a VPN client requires user consent on both Android and iOS. Additionally, on iOS, the application requires a special entitlement that must be granted by Apple. Alternatively, if an application is able to escalate privileges, it can potentially utilize those privileges to gain access to network traffic.  \n\n \n\nOutside of a mobile device, adversaries may be able to capture traffic by employing a rogue base station or Wi-Fi access point. These devices will allow adversaries to capture network traffic after it has left the device, while it is flowing to its destination. On a local network, enterprise techniques could be used, such as DNS redirection or DNS poisoning.  \n\n \n\nIf applications properly encrypt their network traffic, sensitive data may not be accessible an adversary, depending on the point of capture. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1638",
                                "external_id": "T1638"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html",
                                "external_id": "CEL-3"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html",
                                "external_id": "APP-0"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html",
                                "external_id": "APP-1"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-8.html",
                                "external_id": "APP-8"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-12.html",
                                "external_id": "ECO-12"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Application vetting services should look for applications that request VPN access. These applications should be heavily scrutinized since VPN functionality is not very common. Mobile security products can potentially detect rogue Wi-Fi access points if the adversary is attempting to decrypt traffic using an untrusted SSL certificate. \n\n \n\nOn both Android and iOS, users must grant consent to an application to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is active. Users can see registered VPN services in the device settings. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "2.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c5089859-b21f-40a3-8be4-63e381b8b1c0",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:30.890000+00:00",
                    "modified": "2022-03-30 15:18:21.242000+00:00",
                    "name": "Modify System Partition",
                    "description": "If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device system partition, where it may persist after device resets and may not be easily removed by the device user.\n\nMany Android devices provide the ability to unlock the bootloader for development purposes. An unlocked bootloader may provide the ability for an adversary to modify the system partition. Even if the bootloader is locked, it may be possible for an adversary to escalate privileges and then modify the system partition.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "impact"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1400",
                            "external_id": "T1400"
                        },
                        {
                            "source_name": "Android-VerifiedBoot",
                            "description": "Android. (n.d.). Verified Boot. Retrieved December 21, 2016.",
                            "url": "https://source.android.com/security/verifiedboot/"
                        },
                        {
                            "source_name": "Apple-iOSSecurityGuide",
                            "description": "Apple. (2016, May). iOS Security. Retrieved December 21, 2016.",
                            "url": "https://www.apple.com/business/docs/iOS_Security_Guide.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html",
                            "external_id": "APP-27"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Android devices with the Verified Boot capability (Citation: Android-VerifiedBoot) perform cryptographic checks of the integrity of the system partition.\n\nThe Android SafetyNet API's remote attestation capability could potentially be used to identify and respond to compromised devices.\n\nSamsung KNOX also provides a remote attestation capability on supported Samsung Android devices.\n\niOS devices will fail to boot or fail to allow device activation if unauthorized modifications are detected.(Citation: Apple-iOSSecurityGuide)",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Android. (n.d.). Verified Boot. Retrieved December 21, 2016.\", \"root['external_references'][3]['external_id']\": \"APP-27\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1003\", \"root['external_references'][1]['external_id']\": \"APP-27\", \"root['external_references'][3]['description']\": \"Apple. (2016, May). iOS Security. Retrieved December 21, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 15:18:21.242000+00:00\", \"old_value\": \"2019-09-04 13:35:57.549000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Android-VerifiedBoot\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://source.android.com/security/verifiedboot/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Apple-iOSSecurityGuide\", \"old_value\": \"Android-VerifiedBoot\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Apple. (2016, May). iOS Security. Retrieved December 21, 2016.\", \"old_value\": \"Android. (n.d.). Verified Boot. Retrieved December 21, 2016.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://www.apple.com/business/docs/iOS_Security_Guide.pdf\", \"old_value\": \"https://source.android.com/security/verifiedboot/\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Apple-iOSSecurityGuide\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html\", \"old_value\": \"https://www.apple.com/business/docs/iOS_Security_Guide.pdf\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--c6e17ca2-08b5-4379-9786-89bd05241831",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 15:07:51.646000+00:00",
                        "modified": "2022-04-05 16:52:49.037000+00:00",
                        "name": "System Runtime API Hijacking",
                        "description": "Adversaries may execute their own malicious payloads by hijacking the way an operating system run applications. Hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur at later points in time. \n\n\nOn Android, adversaries may overwrite the standard OS API library with a malicious alternative to hook into core functions to achieve persistence. By doing this, the adversary\u2019s code will be executed every time the overwritten API function is called by an app on the infected device.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "persistence"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1625/001",
                                "external_id": "T1625.001"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html",
                                "external_id": "APP-27"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Mobile threat defense agents could detect unauthorized operating system modifications by using attestation. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e4c347e9-fb91-4bc5-83b8-391e389131e2",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-07-10 15:18:16.753000+00:00",
                    "modified": "2022-03-31 16:33:55.068000+00:00",
                    "name": "Network Information Discovery",
                    "description": "Adversaries may use device sensors to collect information about nearby networks, such as Wi-Fi and Bluetooth.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1507",
                            "external_id": "T1507"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-31 16:33:55.068000+00:00\", \"old_value\": \"2019-07-10 15:18:16.753000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--dd818ea5-adf5-41c7-93b5-f3b839a219fb",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2017-10-25 14:48:33.574000+00:00",
                        "modified": "2022-03-31 16:31:12.821000+00:00",
                        "name": "System Network Connections Discovery",
                        "description": "Adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network. \n\n \n\nThis is typically accomplished by utilizing device APIs to collect information about nearby networks, such as Wi-Fi, Bluetooth, and cellular tower connections. On Android, this can be done by querying the respective APIs: \n\n \n\n* `WifiInfo` for information about the current Wi-Fi connection, as well as nearby Wi-Fi networks. Querying the `WiFiInfo` API requires the application to hold the `ACCESS_FINE_LOCATION` permission. \n\n* `BluetoothAdapter` for information about Bluetooth devices, which also requires the application to hold several permissions granted by the user at runtime. \n\n* For Android versions prior to Q, applications can use the `TelephonyManager.getNeighboringCellInfo()` method. For Q and later, applications can use the `TelephonyManager.getAllCellInfo()` method. Both methods require the application hold the `ACCESS_FINE_LOCATION` permission.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "discovery"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1421",
                                "external_id": "T1421"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "System Network Connections Discovery can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "2.1",
                        "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"System Network Connections Discovery can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1024\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-31 16:31:12.821000+00:00\", \"old_value\": \"2019-02-01 19:34:17.460000+00:00\"}, \"root['description']\": {\"new_value\": \"Adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network. \\n\\n \\n\\nThis is typically accomplished by utilizing device APIs to collect information about nearby networks, such as Wi-Fi, Bluetooth, and cellular tower connections. On Android, this can be done by querying the respective APIs: \\n\\n \\n\\n* `WifiInfo` for information about the current Wi-Fi connection, as well as nearby Wi-Fi networks. Querying the `WiFiInfo` API requires the application to hold the `ACCESS_FINE_LOCATION` permission. \\n\\n* `BluetoothAdapter` for information about Bluetooth devices, which also requires the application to hold several permissions granted by the user at runtime. \\n\\n* For Android versions prior to Q, applications can use the `TelephonyManager.getNeighboringCellInfo()` method. For Q and later, applications can use the `TelephonyManager.getAllCellInfo()` method. Both methods require the application hold the `ACCESS_FINE_LOCATION` permission.\", \"old_value\": \"On Android, applications can use standard APIs to gather a list of network connections to and from the device. For example, the Network Connections app available in the Google Play Store (Citation: ConnMonitor) advertises this functionality.\", \"diff\": \"--- \\n+++ \\n@@ -1 +1,13 @@\\n-On Android, applications can use standard APIs to gather a list of network connections to and from the device. For example, the Network Connections app available in the Google Play Store (Citation: ConnMonitor) advertises this functionality.\\n+Adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network. \\n+\\n+ \\n+\\n+This is typically accomplished by utilizing device APIs to collect information about nearby networks, such as Wi-Fi, Bluetooth, and cellular tower connections. On Android, this can be done by querying the respective APIs: \\n+\\n+ \\n+\\n+* `WifiInfo` for information about the current Wi-Fi connection, as well as nearby Wi-Fi networks. Querying the `WiFiInfo` API requires the application to hold the `ACCESS_FINE_LOCATION` permission. \\n+\\n+* `BluetoothAdapter` for information about Bluetooth devices, which also requires the application to hold several permissions granted by the user at runtime. \\n+\\n+* For Android versions prior to Q, applications can use the `TelephonyManager.getNeighboringCellInfo()` method. For Q and later, applications can use the `TelephonyManager.getAllCellInfo()` method. Both methods require the application hold the `ACCESS_FINE_LOCATION` permission.\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.1\", \"old_value\": \"2.0\"}}, \"iterable_item_removed\": {\"root['external_references'][1]\": {\"source_name\": \"ConnMonitor\", \"description\": \"Anti Spy Mobile. (2016, March 14). Network Connections. Retrieved December 21, 2016.\", \"url\": \"https://play.google.com/store/apps/details?id=com.antispycell.connmonitor&hl=en\"}}}",
                        "previous_version": "2.0",
                        "version_change": "2.0 \u2192 2.1",
                        "description_change_table": "\n    <table class=\"diff\" id=\"difflib_chg_to698__top\"\n           cellspacing=\"0\" cellpadding=\"0\" rules=\"groups\" >\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <colgroup></colgroup> <colgroup></colgroup> <colgroup></colgroup>\n        <thead><tr><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">Old Description</th><th class=\"diff_next\"><br /></th><th colspan=\"2\" class=\"diff_header\">New Description</th></tr></thead>\n        <tbody>\n            <tr><td class=\"diff_next\" id=\"difflib_chg_to698__0\"><a href=\"#difflib_chg_to698__top\">t</a></td><td class=\"diff_header\" id=\"from698_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_sub\">On&nbsp;Android,&nbsp;applications&nbsp;can&nbsp;use&nbsp;standard&nbsp;APIs&nbsp;to&nbsp;gather&nbsp;a&nbsp;l</span></td><td class=\"diff_next\"><a href=\"#difflib_chg_to698__top\">t</a></td><td class=\"diff_header\" id=\"to698_1\">1</td><td nowrap=\"nowrap\"><span class=\"diff_add\">Adversaries&nbsp;may&nbsp;attempt&nbsp;to&nbsp;get&nbsp;a&nbsp;listing&nbsp;of&nbsp;network&nbsp;connecti</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">ist&nbsp;of&nbsp;network&nbsp;connections&nbsp;to&nbsp;and&nbsp;from&nbsp;the&nbsp;device.&nbsp;For&nbsp;examp</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ons&nbsp;to&nbsp;or&nbsp;from&nbsp;the&nbsp;compromised&nbsp;device&nbsp;they&nbsp;are&nbsp;currently&nbsp;acc</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">le,&nbsp;the&nbsp;Network&nbsp;Connections&nbsp;app&nbsp;available&nbsp;in&nbsp;the&nbsp;Google&nbsp;Play</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">essing&nbsp;or&nbsp;from&nbsp;remote&nbsp;systems&nbsp;by&nbsp;querying&nbsp;for&nbsp;information&nbsp;ov</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">&nbsp;Store&nbsp;(Citation:&nbsp;ConnMonitor)&nbsp;advertises&nbsp;this&nbsp;functionality</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">er&nbsp;the&nbsp;network.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This&nbsp;is&nbsp;typically&nbsp;accomplished&nbsp;by&nbsp;utili</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_sub\">.</span></td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">zing&nbsp;device&nbsp;APIs&nbsp;to&nbsp;collect&nbsp;information&nbsp;about&nbsp;nearby&nbsp;network</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s,&nbsp;such&nbsp;as&nbsp;Wi-Fi,&nbsp;Bluetooth,&nbsp;and&nbsp;cellular&nbsp;tower&nbsp;connections.</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;On&nbsp;Android,&nbsp;this&nbsp;can&nbsp;be&nbsp;done&nbsp;by&nbsp;querying&nbsp;the&nbsp;respective&nbsp;API</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">s:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;`WifiInfo`&nbsp;for&nbsp;information&nbsp;about&nbsp;the&nbsp;current&nbsp;Wi-Fi</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;connection,&nbsp;as&nbsp;well&nbsp;as&nbsp;nearby&nbsp;Wi-Fi&nbsp;networks.&nbsp;Querying&nbsp;the&nbsp;</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">`WiFiInfo`&nbsp;API&nbsp;requires&nbsp;the&nbsp;application&nbsp;to&nbsp;hold&nbsp;the&nbsp;`ACCESS_</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">FINE_LOCATION`&nbsp;permission.&nbsp;&nbsp;&nbsp;*&nbsp;`BluetoothAdapter`&nbsp;for&nbsp;inform</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ation&nbsp;about&nbsp;Bluetooth&nbsp;devices,&nbsp;which&nbsp;also&nbsp;requires&nbsp;the&nbsp;appli</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">cation&nbsp;to&nbsp;hold&nbsp;several&nbsp;permissions&nbsp;granted&nbsp;by&nbsp;the&nbsp;user&nbsp;at&nbsp;ru</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ntime.&nbsp;&nbsp;&nbsp;*&nbsp;For&nbsp;Android&nbsp;versions&nbsp;prior&nbsp;to&nbsp;Q,&nbsp;applications&nbsp;can</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;use&nbsp;the&nbsp;`TelephonyManager.getNeighboringCellInfo()`&nbsp;method.</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">&nbsp;For&nbsp;Q&nbsp;and&nbsp;later,&nbsp;applications&nbsp;can&nbsp;use&nbsp;the&nbsp;`TelephonyManager</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">.getAllCellInfo()`&nbsp;method.&nbsp;Both&nbsp;methods&nbsp;require&nbsp;the&nbsp;applicat</span></td></tr>\n            <tr><td class=\"diff_next\"></td><td class=\"diff_header\"></td><td nowrap=\"nowrap\">&nbsp;</td><td class=\"diff_next\"></td><td class=\"diff_header\">></td><td nowrap=\"nowrap\"><span class=\"diff_add\">ion&nbsp;hold&nbsp;the&nbsp;`ACCESS_FINE_LOCATION`&nbsp;permission.</span></td></tr>\n        </tbody>\n    </table>",
                        "changelog_mitigations": {
                            "shared": [],
                            "new": [],
                            "dropped": [
                                "M1005: Application Vetting"
                            ]
                        },
                        "changelog_detections": {
                            "shared": [],
                            "new": [],
                            "dropped": []
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--3b0b604f-10db-41a0-b54c-493124d455b9",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:14.982000+00:00",
                    "modified": "2022-04-15 17:52:24.123000+00:00",
                    "name": "Network Traffic Capture or Redirection",
                    "description": "An adversary may capture network traffic to and from the device to obtain credentials or other sensitive data, or redirect network traffic to flow through an adversary-controlled gateway to do the same.\n\nA malicious app could register itself as a VPN client on Android or iOS to gain access to network packets. However, on both platforms, the user must grant consent to the app to act as a VPN client, and on iOS the app requires a special entitlement that must be granted by Apple.\n\nAlternatively, if a malicious app is able to escalate operating system privileges, it may be able to use those privileges to gain access to network traffic.\n\nAn adversary could redirect network traffic to an adversary-controlled gateway by establishing a VPN connection or by manipulating the device's proxy settings. For example, Skycure (Citation: Skycure-Profiles) describes the ability to redirect network traffic by installing a malicious iOS Configuration Profile.\n\nIf applications encrypt their network traffic, sensitive data may not be accessible to an adversary, depending on the point of capture.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1410",
                            "external_id": "T1410"
                        },
                        {
                            "source_name": "Skycure-Profiles",
                            "description": "Yair Amit. (2013, March 12). Malicious Profiles - The Sleeping Giant of iOS Security. Retrieved December 22, 2016.",
                            "url": "https://www.skycure.com/blog/malicious-profiles-the-sleeping-giant-of-ios-security/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On both Android and iOS the user must grant consent to an app to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is in place.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1013\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-15 17:52:24.123000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--08e22979-d320-48ed-8711-e7bf94aabb13",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 20:11:08.894000+00:00",
                        "modified": "2022-04-11 19:27:44.048000+00:00",
                        "name": "Adversary-in-the-Middle",
                        "description": "Adversaries may attempt to position themselves between two or more networked devices to support follow-on behaviors such as [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642).  \n\n \n\n[Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1638) can be achieved through several mechanisms, such as a malicious application registering itself as a VPN client. By doing this, the adversary can effectively redirect device traffic to wherever they want. However, registering as a VPN client requires user consent on both Android and iOS. Additionally, on iOS, the application requires a special entitlement that must be granted by Apple. Alternatively, if an application is able to escalate privileges, it can potentially utilize those privileges to gain access to network traffic.  \n\n \n\nOutside of a mobile device, adversaries may be able to capture traffic by employing a rogue base station or Wi-Fi access point. These devices will allow adversaries to capture network traffic after it has left the device, while it is flowing to its destination. On a local network, enterprise techniques could be used, such as DNS redirection or DNS poisoning.  \n\n \n\nIf applications properly encrypt their network traffic, sensitive data may not be accessible an adversary, depending on the point of capture. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1638",
                                "external_id": "T1638"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html",
                                "external_id": "CEL-3"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html",
                                "external_id": "APP-0"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html",
                                "external_id": "APP-1"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-8.html",
                                "external_id": "APP-8"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-12.html",
                                "external_id": "ECO-12"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Application vetting services should look for applications that request VPN access. These applications should be heavily scrutinized since VPN functionality is not very common. Mobile security products can potentially detect rogue Wi-Fi access points if the adversary is attempting to decrypt traffic using an untrusted SSL certificate. \n\n \n\nOn both Android and iOS, users must grant consent to an application to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is active. Users can see registered VPN services in the device settings. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "2.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--6f86d346-f092-4abc-80df-8558a90c426a",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:21.023000+00:00",
                    "modified": "2022-04-05 19:40:25.068000+00:00",
                    "name": "Remotely Track Device Without Authorization",
                    "description": "An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an enterprise mobility management (EMM) / mobile device management (MDM) server console could use that access to track mobile devices.(Citation: Krebs-Location)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "remote-service-effects"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1468",
                            "external_id": "T1468"
                        },
                        {
                            "source_name": "Krebs-Location",
                            "description": "Brian Krebs. (2018, May 17). Tracking Firm LocationSmart Leaked Location Data for Customers of All Major U.S. Mobile Carriers Without Consent in Real Time Via Its Web Site. Retrieved November 8, 2018.",
                            "url": "https://krebsonsecurity.com/2018/05/tracking-firm-locationsmart-leaked-location-data-for-customers-of-all-major-u-s-mobile-carriers-in-real-time-via-its-web-site/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-5.html",
                            "external_id": "ECO-5"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-7.html",
                            "external_id": "EMM-7"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Google sends a notification to the device when Android Device Manager is used to locate it. Additionally, Google provides the ability for users to view their general account activity. Apple iCloud also provides notifications to users of account activity.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Brian Krebs. (2018, May 17). Tracking Firm LocationSmart Leaked Location Data for Customers of All Major U.S. Mobile Carriers Without Consent in Real Time Via Its Web Site. Retrieved November 8, 2018.\", \"root['external_references'][3]['external_id']\": \"EMM-7\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1071\", \"root['external_references'][1]['external_id']\": \"ECO-5\", \"root['external_references'][3]['description']\": \"Brian Krebs. (2018, May 17). Tracking Firm LocationSmart Leaked Location Data for Customers of All Major U.S. Mobile Carriers Without Consent in Real Time Via Its Web Site. Retrieved November 8, 2018.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-05 19:40:25.068000+00:00\", \"old_value\": \"2019-02-03 14:16:59.424000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Krebs-Location\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://krebsonsecurity.com/2018/05/tracking-firm-locationsmart-leaked-location-data-for-customers-of-all-major-u-s-mobile-carriers-in-real-time-via-its-web-site/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-5.html\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-5.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-7.html\"}, \"root['external_references'][2]['external_id']\": {\"new_value\": \"ECO-5\", \"old_value\": \"EMM-7\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Krebs-Location\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-7.html\", \"old_value\": \"https://krebsonsecurity.com/2018/05/tracking-firm-locationsmart-leaked-location-data-for-customers-of-all-major-u-s-mobile-carriers-in-real-time-via-its-web-site/\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--9ef05e3d-52db-4c12-be4f-519214bbe91f",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 19:37:15.984000+00:00",
                        "modified": "2022-04-19 19:58:48.039000+00:00",
                        "name": "Remote Device Management Services",
                        "description": "An adversary may use access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an enterprise mobility management (EMM)/mobile device management (MDM) server console to track the location of mobile devices managed by the service.(Citation: Krebs-Location) ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            },
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "discovery"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1430/001",
                                "external_id": "T1430.001"
                            },
                            {
                                "source_name": "Krebs-Location",
                                "description": "Brian Krebs. (2018, May 17). Tracking Firm LocationSmart Leaked Location Data for Customers of All Major U.S. Mobile Carriers Without Consent in Real Time Via Its Web Site. Retrieved November 8, 2018.",
                                "url": "https://krebsonsecurity.com/2018/05/tracking-firm-locationsmart-leaked-location-data-for-customers-of-all-major-u-s-mobile-carriers-in-real-time-via-its-web-site/"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-5.html",
                                "external_id": "ECO-5"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-7.html",
                                "external_id": "EMM-7"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Google sends a notification to the device when Android Device Manager is used to locate it. Additionally, Google provides the ability for users to view their general account activity and alerts users when their credentials have been used on a new device. Apple iCloud also provides notifications to users of account activity such as when credentials have been used. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a5de0540-73e7-4c67-96da-4143afedc7ed",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:22.296000+00:00",
                    "modified": "2022-04-06 15:52:41.578000+00:00",
                    "name": "Rogue Cellular Base Station",
                    "description": "An adversary could set up a rogue cellular base station and then use it to eavesdrop on or manipulate cellular device communication. A compromised cellular femtocell could be used to carry out this technique(Citation: Computerworld-Femtocell).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "network-effects"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1467",
                            "external_id": "T1467"
                        },
                        {
                            "source_name": "Computerworld-Femtocell",
                            "description": "Jaikumar Vijayan. (2013, August 1). Researchers exploit cellular tech flaws to intercept phone calls. Retrieved December 24, 2016.",
                            "url": "http://www.computerworld.com/article/2484538/cybercrime-hacking/researchers-exploit-cellular-tech-flaws-to-intercept-phone-calls.html"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-7.html",
                            "external_id": "CEL-7"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Jaikumar Vijayan. (2013, August 1). Researchers exploit cellular tech flaws to intercept phone calls. Retrieved December 24, 2016.\", \"root['external_references'][2]['external_id']\": \"CEL-7\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1070\", \"root['external_references'][1]['external_id']\": \"CEL-7\", \"root['external_references'][2]['description']\": \"Jaikumar Vijayan. (2013, August 1). Researchers exploit cellular tech flaws to intercept phone calls. Retrieved December 24, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:52:41.578000+00:00\", \"old_value\": \"2019-02-03 15:17:11.346000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Computerworld-Femtocell\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://www.computerworld.com/article/2484538/cybercrime-hacking/researchers-exploit-cellular-tech-flaws-to-intercept-phone-calls.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-7.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Computerworld-Femtocell\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-7.html\", \"old_value\": \"http://www.computerworld.com/article/2484538/cybercrime-hacking/researchers-exploit-cellular-tech-flaws-to-intercept-phone-calls.html\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--08e22979-d320-48ed-8711-e7bf94aabb13",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 20:11:08.894000+00:00",
                        "modified": "2022-04-11 19:27:44.048000+00:00",
                        "name": "Adversary-in-the-Middle",
                        "description": "Adversaries may attempt to position themselves between two or more networked devices to support follow-on behaviors such as [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642).  \n\n \n\n[Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1638) can be achieved through several mechanisms, such as a malicious application registering itself as a VPN client. By doing this, the adversary can effectively redirect device traffic to wherever they want. However, registering as a VPN client requires user consent on both Android and iOS. Additionally, on iOS, the application requires a special entitlement that must be granted by Apple. Alternatively, if an application is able to escalate privileges, it can potentially utilize those privileges to gain access to network traffic.  \n\n \n\nOutside of a mobile device, adversaries may be able to capture traffic by employing a rogue base station or Wi-Fi access point. These devices will allow adversaries to capture network traffic after it has left the device, while it is flowing to its destination. On a local network, enterprise techniques could be used, such as DNS redirection or DNS poisoning.  \n\n \n\nIf applications properly encrypt their network traffic, sensitive data may not be accessible an adversary, depending on the point of capture. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1638",
                                "external_id": "T1638"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html",
                                "external_id": "CEL-3"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html",
                                "external_id": "APP-0"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html",
                                "external_id": "APP-1"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-8.html",
                                "external_id": "APP-8"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-12.html",
                                "external_id": "ECO-12"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Application vetting services should look for applications that request VPN access. These applications should be heavily scrutinized since VPN functionality is not very common. Mobile security products can potentially detect rogue Wi-Fi access points if the adversary is attempting to decrypt traffic using an untrusted SSL certificate. \n\n \n\nOn both Android and iOS, users must grant consent to an application to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is active. Users can see registered VPN services in the device settings. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "2.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--633baf01-6de4-4963-bb54-ff6c6357bed3",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:21.354000+00:00",
                    "modified": "2022-04-06 15:51:11.938000+00:00",
                    "name": "Rogue Wi-Fi Access Points",
                    "description": "An adversary could set up unauthorized Wi-Fi access points or compromise existing access points and, if the device connects to them, carry out network-based attacks such as eavesdropping on or modifying network communication(Citation: NIST-SP800153)(Citation: Kaspersky-DarkHotel).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "network-effects"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1465",
                            "external_id": "T1465"
                        },
                        {
                            "source_name": "Kaspersky-DarkHotel",
                            "description": "Alex Drozhzhin. (2014, November 10). Darkhotel: a spy campaign in luxury Asian hotels. Retrieved December 24, 2016.",
                            "url": "https://blog.kaspersky.com/darkhotel-apt/6613/"
                        },
                        {
                            "source_name": "NIST-SP800153",
                            "description": "M. Souppaya and K. Scarfone. (2012, February). NIST SP 800-153 Guidelines for Securing Wireless Local Area Networks (WLANs). Retrieved December 24, 2016.",
                            "url": "http://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-153.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/lan-pan-threats/LPN-0.html",
                            "external_id": "LPN-0"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Alex Drozhzhin. (2014, November 10). Darkhotel: a spy campaign in luxury Asian hotels. Retrieved December 24, 2016.\", \"root['external_references'][3]['external_id']\": \"LPN-0\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1068\", \"root['external_references'][1]['external_id']\": \"LPN-0\", \"root['external_references'][3]['description']\": \"Alex Drozhzhin. (2014, November 10). Darkhotel: a spy campaign in luxury Asian hotels. Retrieved December 24, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:51:11.938000+00:00\", \"old_value\": \"2019-02-03 15:15:18.023000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Kaspersky-DarkHotel\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://blog.kaspersky.com/darkhotel-apt/6613/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/lan-pan-threats/LPN-0.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Kaspersky-DarkHotel\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/lan-pan-threats/LPN-0.html\", \"old_value\": \"https://blog.kaspersky.com/darkhotel-apt/6613/\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--08e22979-d320-48ed-8711-e7bf94aabb13",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-05 20:11:08.894000+00:00",
                        "modified": "2022-04-11 19:27:44.048000+00:00",
                        "name": "Adversary-in-the-Middle",
                        "description": "Adversaries may attempt to position themselves between two or more networked devices to support follow-on behaviors such as [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1642).  \n\n \n\n[Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1638) can be achieved through several mechanisms, such as a malicious application registering itself as a VPN client. By doing this, the adversary can effectively redirect device traffic to wherever they want. However, registering as a VPN client requires user consent on both Android and iOS. Additionally, on iOS, the application requires a special entitlement that must be granted by Apple. Alternatively, if an application is able to escalate privileges, it can potentially utilize those privileges to gain access to network traffic.  \n\n \n\nOutside of a mobile device, adversaries may be able to capture traffic by employing a rogue base station or Wi-Fi access point. These devices will allow adversaries to capture network traffic after it has left the device, while it is flowing to its destination. On a local network, enterprise techniques could be used, such as DNS redirection or DNS poisoning.  \n\n \n\nIf applications properly encrypt their network traffic, sensitive data may not be accessible an adversary, depending on the point of capture. ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "collection"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1638",
                                "external_id": "T1638"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-3.html",
                                "external_id": "CEL-3"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-0.html",
                                "external_id": "APP-0"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-1.html",
                                "external_id": "APP-1"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-8.html",
                                "external_id": "APP-8"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-12.html",
                                "external_id": "ECO-12"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Application vetting services should look for applications that request VPN access. These applications should be heavily scrutinized since VPN functionality is not very common. Mobile security products can potentially detect rogue Wi-Fi access points if the adversary is attempting to decrypt traffic using an untrusted SSL certificate. \n\n \n\nOn both Android and iOS, users must grant consent to an application to act as a VPN. Both platforms also provide visual context to the user in the top status bar when a VPN connection is active. Users can see registered VPN services in the device settings. ",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": false,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "2.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fd658820-cbba-4c95-8ac9-0fac6b1099e2",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-07-11 18:09:42.039000+00:00",
                    "modified": "2022-03-30 20:07:33.279000+00:00",
                    "name": "Suppress Application Icon",
                    "description": "A malicious application could suppress its icon from being displayed to the user in the application launcher to hide the fact that it is installed, and to make it more difficult for the user to uninstall the application. Hiding the application's icon programmatically does not require any special permissions.\n\nThis behavior has been seen in the BankBot/Spy Banker family of malware.(Citation: android-trojan-steals-paypal-2fa)(Citation: sunny-stolen-credentials)(Citation: bankbot-spybanker)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1508",
                            "external_id": "T1508"
                        },
                        {
                            "source_name": "sunny-stolen-credentials",
                            "description": "Luk\u00e1\u0161 \u0160tefanko. (2017, February 22). Sunny with a chance of stolen credentials: Malicious weather app found on Google Play. Retrieved July 11, 2019.",
                            "url": "https://www.welivesecurity.com/2017/02/22/sunny-chance-stolen-credentials-malicious-weather-app-found-google-play/"
                        },
                        {
                            "source_name": "android-trojan-steals-paypal-2fa",
                            "description": "Luk\u00e1\u0161 \u0160tefanko. (2018, December 11). Android Trojan steals money from PayPal accounts even with 2FA on. Retrieved July 11, 2019.",
                            "url": "https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/"
                        },
                        {
                            "source_name": "bankbot-spybanker",
                            "description": "NJCCIC. (2017, March 2). BankBot/Spy Banker. Retrieved July 11, 2019.",
                            "url": "https://www.cyber.nj.gov/threat-profiles/android-malware-variants/bankbot-spybanker"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "The user can examine the list of all installed applications, including those with a suppressed icon, in the device settings.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_contributors']\": [\"Emily Ratliff, IBM\"]}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 20:07:33.279000+00:00\", \"old_value\": \"2019-11-14 18:03:26.460000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"sunny-stolen-credentials\", \"old_value\": \"android-trojan-steals-paypal-2fa\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2017, February 22). Sunny with a chance of stolen credentials: Malicious weather app found on Google Play. Retrieved July 11, 2019.\", \"old_value\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2018, December 11). Android Trojan steals money from PayPal accounts even with 2FA on. Retrieved July 11, 2019.\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.welivesecurity.com/2017/02/22/sunny-chance-stolen-credentials-malicious-weather-app-found-google-play/\", \"old_value\": \"https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"android-trojan-steals-paypal-2fa\", \"old_value\": \"sunny-stolen-credentials\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2018, December 11). Android Trojan steals money from PayPal accounts even with 2FA on. Retrieved July 11, 2019.\", \"old_value\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2017, February 22). Sunny with a chance of stolen credentials: Malicious weather app found on Google Play. Retrieved July 11, 2019.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/\", \"old_value\": \"https://www.welivesecurity.com/2017/02/22/sunny-chance-stolen-credentials-malicious-weather-app-found-google-play/\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--f05fc151-aa62-47e3-ae57-2d1b23d64bf6",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 20:06:22.194000+00:00",
                        "modified": "2022-05-20 17:16:08.997000+00:00",
                        "name": "Suppress Application Icon",
                        "description": "A malicious application could suppress its icon from being displayed to the user in the application launcher. This hides the fact that it is installed, and can make it more difficult for the user to uninstall the application. Hiding the application's icon programmatically does not require any special permissions. \n\nThis behavior has been seen in the BankBot/Spy Banker family of malware.(Citation: android-trojan-steals-paypal-2fa)(Citation: sunny-stolen-credentials)(Citation: bankbot-spybanker) \n\nBeginning in Android 10, changes were introduced to inhibit malicious applications\u2019 ability to hide their icon. If an app is a system app, requests no permissions, or does not have a launcher activity, the application\u2019s icon will be fully hidden. Further, if the device is fully managed or the application is in a work profile, the icon will be fully hidden. Otherwise, a synthesized activity is shown, which is a launcher icon that represents the app\u2019s details page in the system settings. If the user clicks the synthesized activity in the launcher, they are taken to the application\u2019s details page in the system settings.(Citation: Android 10 Limitations to Hiding App Icons)(Citation: LauncherApps getActivityList)",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1628/001",
                                "external_id": "T1628.001"
                            },
                            {
                                "source_name": "Android 10 Limitations to Hiding App Icons",
                                "description": "Android. (n.d.). Android 10 Release Notes: Limitations to hiding app icons. Retrieved March 30, 2022.",
                                "url": "https://source.android.com/setup/start/android-10-release#limitations_to_hiding_app_icons"
                            },
                            {
                                "source_name": "LauncherApps getActivityList",
                                "description": "Android. (n.d.). LauncherApps: getActivityList. Retrieved March 30, 2022.",
                                "url": "https://developer.android.com/reference/kotlin/android/content/pm/LauncherApps#getactivitylist"
                            },
                            {
                                "source_name": "sunny-stolen-credentials",
                                "description": "Luk\u00e1\u0161 \u0160tefanko. (2017, February 22). Sunny with a chance of stolen credentials: Malicious weather app found on Google Play. Retrieved July 11, 2019.",
                                "url": "https://www.welivesecurity.com/2017/02/22/sunny-chance-stolen-credentials-malicious-weather-app-found-google-play/"
                            },
                            {
                                "source_name": "android-trojan-steals-paypal-2fa",
                                "description": "Luk\u00e1\u0161 \u0160tefanko. (2018, December 11). Android Trojan steals money from PayPal accounts even with 2FA on. Retrieved July 11, 2019.",
                                "url": "https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/"
                            },
                            {
                                "source_name": "bankbot-spybanker",
                                "description": "NJCCIC. (2017, March 2). BankBot/Spy Banker. Retrieved July 11, 2019.",
                                "url": "https://www.cyber.nj.gov/threat-profiles/android-malware-variants/bankbot-spybanker"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_contributors": [
                            "Emily Ratliff, IBM"
                        ],
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "The user can examine the list of all installed applications, including those with a suppressed icon, in the device settings. If the user is redirected to the device settings when tapping an application\u2019s icon, they should inspect the application to ensure it is genuine. Application vetting services could potentially detect the usage of APIs intended for suppressing the application\u2019s icon.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--77e30eee-fd48-40b4-99ec-73e97c158b58",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:32.008000+00:00",
                    "modified": "2022-04-01 15:17:21.508000+00:00",
                    "name": "URI Hijacking",
                    "description": "Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data.\n\nApplications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If a malicious application were to register for a URI that was already in use by a genuine application, the malicious application may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the malicious application to gain access to resources.(Citation: Trend Micro iOS URL Hijacking)(Citation: IETF-PKCE)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1416",
                            "external_id": "T1416"
                        },
                        {
                            "source_name": "Trend Micro iOS URL Hijacking",
                            "description": "L. Wu, Y. Zhou, M. Li. (2019, July 12).  iOS URL Scheme Susceptible to Hijacking. Retrieved September 11, 2020.",
                            "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/ios-url-scheme-susceptible-to-hijacking/"
                        },
                        {
                            "source_name": "IETF-PKCE",
                            "description": "N. Sakimura, J. Bradley, and N. Agarwal. (2015, September). IETF RFC 7636: Proof Key for Code Exchange by OAuth Public Clients. Retrieved December 21, 2016.",
                            "url": "https://tools.ietf.org/html/rfc7636"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "On Android, users may be presented with a popup to select the appropriate application to open the URI in. If the user sees an application they do not recognize, they can remove it.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_contributors']\": [\"Leo Zhang, Trend Micro\", \"Steven Du, Trend Micro\"], \"root['x_mitre_old_attack_id']\": \"MOB-T1019\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-01 15:17:21.508000+00:00\", \"old_value\": \"2020-10-01 12:42:21.628000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--789ef15a-34d9-4b32-a779-8cbbc9eb32f5",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-01 15:15:35.640000+00:00",
                        "modified": "2022-04-06 12:44:03.799000+00:00",
                        "name": "URI Hijacking",
                        "description": "Adversaries may register Uniform Resource Identifiers (URIs) to intercept sensitive data. \n\nApplications regularly register URIs with the operating system to act as a response handler for various actions, such as logging into an app using an external account via single sign-on. This allows redirections to that specific URI to be intercepted by the application. If an adversary were to register for a URI that was already in use by a genuine application, the adversary may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application. Intercepted data may include OAuth authorization codes or tokens that could be used by the adversary to gain access to protected resources.(Citation: Trend Micro iOS URL Hijacking)(Citation: IETF-PKCE) ",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "credential-access"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1635/001",
                                "external_id": "T1635.001"
                            },
                            {
                                "source_name": "Android-AppLinks",
                                "description": "Android. (n.d.). Handling App Links. Retrieved December 21, 2016.",
                                "url": "https://developer.android.com/training/app-links/index.html"
                            },
                            {
                                "source_name": "Trend Micro iOS URL Hijacking",
                                "description": "L. Wu, Y. Zhou, M. Li. (2019, July 12).  iOS URL Scheme Susceptible to Hijacking. Retrieved September 11, 2020.",
                                "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/ios-url-scheme-susceptible-to-hijacking/"
                            },
                            {
                                "source_name": "IETF-PKCE",
                                "description": "N. Sakimura, J. Bradley, and N. Agarwal. (2015, September). IETF RFC 7636: Proof Key for Code Exchange by OAuth Public Clients. Retrieved December 21, 2016.",
                                "url": "https://tools.ietf.org/html/rfc7636"
                            },
                            {
                                "source_name": "IETF-OAuthNativeApps",
                                "description": "W. Denniss and J. Bradley. (2017, October). IETF RFC 8252: OAuth 2.0 for Native Apps. Retrieved November 30, 2018.",
                                "url": "https://tools.ietf.org/html/rfc8252"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_contributors": [
                            "Leo Zhang, Trend Micro",
                            "Steven Du, Trend Micro"
                        ],
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "On Android, users may be presented with a popup to select the appropriate application to open the URI in. If the user sees an application they do not recognize, they can remove it. When vetting applications for potential security weaknesses, the vetting process could look for insecure use of Intents. Developers should be encouraged to use techniques to ensure that the intent can only be sent to an appropriate destination (e.g., use explicit rather than implicit intents, permission checking, checking of the destination app's signing certificate, or utilizing the App Links feature). For mobile applications using OAuth, encourage use of best practice. (Citation: IETF-OAuthNativeApps)(Citation: Android-AppLinks)",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android",
                            "iOS"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--8c7862ff-3449-4ac6-b0fd-ac1298a822a5",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2020-05-04 13:49:34.706000+00:00",
                    "modified": "2022-03-30 19:34:09.371000+00:00",
                    "name": "Uninstall Malicious Application",
                    "description": "Adversaries may include functionality in malware that uninstalls the malicious application from the device. This can be achieved by:\n\n* Abusing device owner permissions to perform silent uninstallation using device owner API calls.\n* Abusing root permissions to delete files from the filesystem.\n* Abusing the accessibility service. This requires an intent be sent to the system to request uninstallation, and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1576",
                            "external_id": "T1576"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-43.html",
                            "external_id": "APP-43"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-30 19:34:09.371000+00:00\", \"old_value\": \"2020-05-26 18:05:37.393000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--0cdd66ad-26ac-4338-a764-4972a1e17ee3",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-03-30 19:31:31.855000+00:00",
                        "modified": "2022-04-21 17:33:44.504000+00:00",
                        "name": "Uninstall Malicious Application",
                        "description": "Adversaries may include functionality in malware that uninstalls the malicious application from the device. This can be achieved by: \n \n* Abusing device owner permissions to perform silent uninstallation using device owner API calls. \n* Abusing root permissions to delete files from the filesystem. \n* Abusing the accessibility service. This requires sending an intent to the system to request uninstallation, and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1630/001",
                                "external_id": "T1630.001"
                            },
                            {
                                "source_name": "NIST Mobile Threat Catalogue",
                                "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-43.html",
                                "external_id": "APP-43"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Users can see a list of applications that can use accessibility services in the device settings. Application vetting services could look for use of the accessibility service or features that typically require root access.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--2f0e8d80-4b8b-4f4a-b5cc-132afe7e057d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2021-09-30 18:18:52.285000+00:00",
                    "modified": "2022-04-11 20:06:56.032000+00:00",
                    "name": "User Evasion",
                    "description": "Adversaries may attempt to avoid detection by hiding malicious behavior from the user. By doing this, an adversary\u2019s modifications would most likely remain installed on the device for longer, allowing the adversary to continue to operate on that device. \n\nWhile there are many ways this can be accomplished, one method is by using the device\u2019s sensors. By utilizing the various motion sensors on a device, such as accelerometer or gyroscope, an application could detect that the device is being interacted with. That way, the application could continue to run while the device is not in use but cease operating while the user is using the device, hiding anything that would indicate malicious activity was ongoing. Accessing the sensors in this way does not require any permissions from the user, so it would be completely transparent.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": true,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1618",
                            "external_id": "T1618"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_detection": "Mobile security products may be able to detect some forms of user evasion. Otherwise, the act of hiding malicious activity could be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-11 20:06:56.032000+00:00\", \"old_value\": \"2021-10-12 18:13:25.586000+00:00\"}, \"root['revoked']\": {\"new_value\": true, \"old_value\": false}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}",
                    "revoked_by": {
                        "type": "attack-pattern",
                        "id": "attack-pattern--24a77e53-0751-46fc-b207-99378fb35c08",
                        "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "created": "2022-04-11 20:05:56.069000+00:00",
                        "modified": "2022-04-11 20:05:56.069000+00:00",
                        "name": "User Evasion",
                        "description": "Adversaries may attempt to avoid detection by hiding malicious behavior from the user. By doing this, an adversary\u2019s modifications would most likely remain installed on the device for longer, allowing the adversary to continue to operate on that device. \n\nWhile there are many ways this can be accomplished, one method is by using the device\u2019s sensors. By utilizing the various motion sensors on a device, such as accelerometer or gyroscope, an application could detect that the device is being interacted with. That way, the application could continue to run while the device is not in use but cease operating while the user is using the device, hiding anything that would indicate malicious activity was ongoing. Accessing the sensors in this way does not require any permissions from the user, so it would be completely transparent.",
                        "kill_chain_phases": [
                            {
                                "kill_chain_name": "mitre-mobile-attack",
                                "phase_name": "defense-evasion"
                            }
                        ],
                        "revoked": false,
                        "external_references": [
                            {
                                "source_name": "mitre-attack",
                                "url": "https://attack.mitre.org/techniques/T1628/002",
                                "external_id": "T1628.002"
                            }
                        ],
                        "object_marking_refs": [
                            "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                        ],
                        "x_mitre_attack_spec_version": "2.1.0",
                        "x_mitre_deprecated": false,
                        "x_mitre_detection": "Mobile security products may be able to detect some forms of user evasion. Otherwise, the act of hiding malicious activity could be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversarial behavior.",
                        "x_mitre_domains": [
                            "mobile-attack"
                        ],
                        "x_mitre_is_subtechnique": true,
                        "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                        "x_mitre_platforms": [
                            "Android"
                        ],
                        "x_mitre_tactic_type": [
                            "Post-Adversary Device Access"
                        ],
                        "x_mitre_version": "1.0"
                    }
                }
            ],
            "deprecations": [
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--29e07491-8947-43a3-8d4e-9a787c45f3d3",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:17.176000+00:00",
                    "modified": "2022-04-06 15:37:34.463000+00:00",
                    "name": "Access Sensitive Data in Device Logs",
                    "description": "On versions of Android prior to 4.1, an adversary may use a malicious application that holds the READ_LOGS permission to obtain private keys, passwords, other credentials, or other sensitive data stored in the device's system log. On Android 4.1 and later, an adversary would need to attempt to perform an operating system privilege escalation attack to be able to access the log.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "collection"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1413",
                            "external_id": "T1413"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-3.html",
                            "external_id": "APP-3"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-13.html",
                            "external_id": "APP-13"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1016\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:37:34.463000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a0464539-e1b7-4455-a355-12495987c300",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:13.625000+00:00",
                    "modified": "2022-04-06 15:39:14.695000+00:00",
                    "name": "Attack PC via USB Connection",
                    "description": "With escalated privileges, an adversary could program the mobile device to impersonate USB devices such as input devices (keyboard and mouse), storage devices, and/or networking devices in order to attack a physically connected PC(Citation: Wang-ExploitingUSB)(Citation: ArsTechnica-PoisonTap) This technique has been demonstrated on Android. We are unaware of any demonstrations on iOS.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "lateral-movement"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1427",
                            "external_id": "T1427"
                        },
                        {
                            "source_name": "ArsTechnica-PoisonTap",
                            "description": "Dan Goodin. (2016, November 16). Meet PoisonTap, the $5 tool that ransacks password-protected computers. Retrieved December 22, 2016.",
                            "url": "http://arstechnica.com/security/2016/11/meet-poisontap-the-5-tool-that-ransacks-password-protected-computers/"
                        },
                        {
                            "source_name": "Wang-ExploitingUSB",
                            "description": "Z. Wang and A. Stavrou. (2010, December 6-10). Exploiting smart-phone USB connectivity for fun and profit. Retrieved December 22, 2016.",
                            "url": "http://dl.acm.org/citation.cfm?id=1920314"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/physical-threats/PHY-2.html",
                            "external_id": "PHY-2"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Dan Goodin. (2016, November 16). Meet PoisonTap, the $5 tool that ransacks password-protected computers. Retrieved December 22, 2016.\", \"root['external_references'][3]['external_id']\": \"PHY-2\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1030\", \"root['external_references'][1]['external_id']\": \"PHY-2\", \"root['external_references'][3]['description']\": \"Dan Goodin. (2016, November 16). Meet PoisonTap, the $5 tool that ransacks password-protected computers. Retrieved December 22, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:39:14.695000+00:00\", \"old_value\": \"2019-02-03 14:51:19.932000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"ArsTechnica-PoisonTap\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://arstechnica.com/security/2016/11/meet-poisontap-the-5-tool-that-ransacks-password-protected-computers/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/physical-threats/PHY-2.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"ArsTechnica-PoisonTap\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/physical-threats/PHY-2.html\", \"old_value\": \"http://arstechnica.com/security/2016/11/meet-poisontap-the-5-tool-that-ransacks-password-protected-computers/\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--3911658a-6506-4deb-9ab4-595a51ae71ad",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:16.650000+00:00",
                    "modified": "2022-04-06 15:40:47.556000+00:00",
                    "name": "Commonly Used Port",
                    "description": "Adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection. \n\nThey may use commonly open ports such as\n\n* TCP:80 (HTTP)\n* TCP:443 (HTTPS)\n* TCP:25 (SMTP)\n* TCP/UDP:53 (DNS)\n\nThey may use the protocol associated with the port or a completely different protocol.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "command-and-control"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "exfiltration"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1436",
                            "external_id": "T1436"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1039\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:40:47.556000+00:00\", \"old_value\": \"2019-06-19 19:25:33.180000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d9db3d46-66ca-44b4-9daa-1ef97cb7465a",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2018-10-17 00:14:20.652000+00:00",
                    "modified": "2022-04-06 15:41:33.827000+00:00",
                    "name": "Deliver Malicious App via Authorized App Store",
                    "description": "Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. Mobile devices often are configured to allow application installation only from an authorized app store (e.g., Google Play Store or Apple App Store). An adversary may seek to place a malicious application in an authorized app store, enabling the application to be installed onto targeted devices.\n\nApp stores typically require developer registration and use vetting techniques to identify malicious applications. Adversaries may use these techniques against app store defenses:\n\n* [Download New Code at Runtime](https://attack.mitre.org/techniques/T1407)\n* [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1406)\n\nAdversaries may also seek to evade vetting by placing code in a malicious application to detect whether it is running in an app analysis environment and, if so, avoid performing malicious actions while under analysis. (Citation: Petsas) (Citation: Oberheide-Bouncer) (Citation: Percoco-Bouncer) (Citation: Wang)\n\nAdversaries may also use fake identities, payment cards, etc., to create developer accounts to publish malicious applications to app stores. (Citation: Oberheide-Bouncer)\n\nAdversaries may also use control of a target's Google account to use the Google Play Store's remote installation capability to install apps onto the Android devices associated with the Google account. (Citation: Oberheide-RemoteInstall) (Citation: Konoth) (Only applications that are available for download through the Google Play Store can be remotely installed using this technique.)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1475",
                            "external_id": "T1475"
                        },
                        {
                            "source_name": "Oberheide-Bouncer",
                            "description": "Jon Oberheide and Charlie Miller. (2012). Dissecting the Android Bouncer. Retrieved December 12, 2016.",
                            "url": "https://jon.oberheide.org/files/summercon12-bouncer.pdf"
                        },
                        {
                            "source_name": "Oberheide-RemoteInstall",
                            "description": "Jon Oberheide. (2010, June 25). Remote Kill and Install on Google Android. Retrieved December 12, 2016.",
                            "url": "https://jon.oberheide.org/blog/2010/06/25/remote-kill-and-install-on-google-android/"
                        },
                        {
                            "source_name": "Percoco-Bouncer",
                            "description": "Nicholas J. Percoco and Sean Schulte. (2012). Adventures in BouncerLand. Retrieved December 12, 2016.",
                            "url": "https://media.blackhat.com/bh-us-12/Briefings/Percoco/BH_US_12_Percoco_Adventures_in_Bouncerland_WP.pdf"
                        },
                        {
                            "source_name": "Konoth",
                            "description": "Radhesh Krishnan Konoth, Victor van der Veen, and Herbert Bos. (n.d.). How Anywhere Computing Just Killed Your Phone-Based Two-Factor Authentication. Retrieved December 12, 2016.",
                            "url": "http://www.vvdveen.com/publications/BAndroid.pdf"
                        },
                        {
                            "source_name": "Petsas",
                            "description": "Thanasis Petsas, Giannis Voyatzis, Elias Athanasopoulos, Michalis Polychronakis, Sotiris Ioannidis. (2014, April). Rage Against the Virtual Machine: Hindering Dynamic Analysis of Android Malware. Retrieved December 12, 2016.",
                            "url": "http://dl.acm.org/citation.cfm?id=2592796"
                        },
                        {
                            "source_name": "Wang",
                            "description": "Tielei Wang, Kangjie Lu, Long Lu, Simon Chung, and Wenke Lee. (2013, August). Jekyll on iOS: When Benign Apps Become Evil. Retrieved December 9, 2016.",
                            "url": "https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/wang_tielei"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-4.html",
                            "external_id": "ECO-4"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-16.html",
                            "external_id": "ECO-16"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-17.html",
                            "external_id": "ECO-17"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-20.html",
                            "external_id": "APP-20"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-21.html",
                            "external_id": "APP-21"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-22.html",
                            "external_id": "ECO-22"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "* An EMM/MDM or mobile threat defense solution can identify the presence of unwanted or known insecure or malicious apps on devices.\n* Developers can scan (or have a third party scan on their behalf) the app stores for presence of unauthorized apps that were submitted using the developer's identity.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Jon Oberheide and Charlie Miller. (2012). Dissecting the Android Bouncer. Retrieved December 12, 2016.\", \"root['external_references'][2]['description']\": \"Jon Oberheide. (2010, June 25). Remote Kill and Install on Google Android. Retrieved December 12, 2016.\", \"root['external_references'][3]['description']\": \"Nicholas J. Percoco and Sean Schulte. (2012). Adventures in BouncerLand. Retrieved December 12, 2016.\", \"root['external_references'][4]['description']\": \"Radhesh Krishnan Konoth, Victor van der Veen, and Herbert Bos. (n.d.). How Anywhere Computing Just Killed Your Phone-Based Two-Factor Authentication. Retrieved December 12, 2016.\", \"root['external_references'][5]['description']\": \"Thanasis Petsas, Giannis Voyatzis, Elias Athanasopoulos, Michalis Polychronakis, Sotiris Ioannidis. (2014, April). Rage Against the Virtual Machine: Hindering Dynamic Analysis of Android Malware. Retrieved December 12, 2016.\", \"root['external_references'][6]['description']\": \"Tielei Wang, Kangjie Lu, Long Lu, Simon Chung, and Wenke Lee. (2013, August). Jekyll on iOS: When Benign Apps Become Evil. Retrieved December 9, 2016.\", \"root['external_references'][7]['external_id']\": \"ECO-4\", \"root['external_references'][8]['external_id']\": \"ECO-16\", \"root['external_references'][9]['external_id']\": \"ECO-17\", \"root['external_references'][10]['external_id']\": \"APP-20\", \"root['external_references'][11]['external_id']\": \"APP-21\", \"root['external_references'][12]['external_id']\": \"ECO-22\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1078\", \"root['external_references'][1]['external_id']\": \"ECO-4\", \"root['external_references'][2]['external_id']\": \"ECO-16\", \"root['external_references'][3]['external_id']\": \"ECO-17\", \"root['external_references'][4]['external_id']\": \"APP-20\", \"root['external_references'][5]['external_id']\": \"APP-21\", \"root['external_references'][6]['external_id']\": \"ECO-22\", \"root['external_references'][7]['description']\": \"Thanasis Petsas, Giannis Voyatzis, Elias Athanasopoulos, Michalis Polychronakis, Sotiris Ioannidis. (2014, April). Rage Against the Virtual Machine: Hindering Dynamic Analysis of Android Malware. Retrieved December 12, 2016.\", \"root['external_references'][8]['description']\": \"Jon Oberheide and Charlie Miller. (2012). Dissecting the Android Bouncer. Retrieved December 12, 2016.\", \"root['external_references'][9]['description']\": \"Nicholas J. Percoco and Sean Schulte. (2012). Adventures in BouncerLand. Retrieved December 12, 2016.\", \"root['external_references'][10]['description']\": \"Tielei Wang, Kangjie Lu, Long Lu, Simon Chung, and Wenke Lee. (2013, August). Jekyll on iOS: When Benign Apps Become Evil. Retrieved December 9, 2016.\", \"root['external_references'][11]['description']\": \"Jon Oberheide. (2010, June 25). Remote Kill and Install on Google Android. Retrieved December 12, 2016.\", \"root['external_references'][12]['description']\": \"Radhesh Krishnan Konoth, Victor van der Veen, and Herbert Bos. (n.d.). How Anywhere Computing Just Killed Your Phone-Based Two-Factor Authentication. Retrieved December 12, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:41:33.827000+00:00\", \"old_value\": \"2019-10-14 17:42:49.817000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Oberheide-Bouncer\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://jon.oberheide.org/files/summercon12-bouncer.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-4.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Oberheide-RemoteInstall\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://jon.oberheide.org/blog/2010/06/25/remote-kill-and-install-on-google-android/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-16.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Percoco-Bouncer\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://media.blackhat.com/bh-us-12/Briefings/Percoco/BH_US_12_Percoco_Adventures_in_Bouncerland_WP.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-17.html\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Konoth\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"http://www.vvdveen.com/publications/BAndroid.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-20.html\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"Petsas\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"http://dl.acm.org/citation.cfm?id=2592796\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-21.html\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"Wang\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/wang_tielei\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-22.html\"}, \"root['external_references'][7]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Petsas\"}, \"root['external_references'][7]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-4.html\", \"old_value\": \"http://dl.acm.org/citation.cfm?id=2592796\"}, \"root['external_references'][8]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Oberheide-Bouncer\"}, \"root['external_references'][8]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-16.html\", \"old_value\": \"https://jon.oberheide.org/files/summercon12-bouncer.pdf\"}, \"root['external_references'][9]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Percoco-Bouncer\"}, \"root['external_references'][9]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-17.html\", \"old_value\": \"https://media.blackhat.com/bh-us-12/Briefings/Percoco/BH_US_12_Percoco_Adventures_in_Bouncerland_WP.pdf\"}, \"root['external_references'][10]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Wang\"}, \"root['external_references'][10]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-20.html\", \"old_value\": \"https://www.usenix.org/conference/usenixsecurity13/technical-sessions/presentation/wang_tielei\"}, \"root['external_references'][11]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Oberheide-RemoteInstall\"}, \"root['external_references'][11]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-21.html\", \"old_value\": \"https://jon.oberheide.org/blog/2010/06/25/remote-kill-and-install-on-google-android/\"}, \"root['external_references'][12]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Konoth\"}, \"root['external_references'][12]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-22.html\", \"old_value\": \"http://www.vvdveen.com/publications/BAndroid.pdf\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--53263a67-075e-48fa-974b-91c5b5445db7",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2018-10-17 00:14:20.652000+00:00",
                    "modified": "2022-04-06 15:41:16.863000+00:00",
                    "name": "Deliver Malicious App via Other Means",
                    "description": "Malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices. This technique describes installing a malicious application on targeted mobile devices without involving an authorized app store (e.g., Google Play Store or Apple App Store). Adversaries may wish to avoid placing malicious applications in an authorized app store due to increased potential risk of detection or other reasons. However, mobile devices often are configured to allow application installation only from an authorized app store which would prevent this technique from working.\n\nDelivery methods for the malicious application include:\n\n* [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) - Including the mobile app package as an attachment to an email message.\n* [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) - Including a link to the mobile app package within an email, text message (e.g. SMS, iMessage, Hangouts, WhatsApp, etc.), web site, QR code, or other means.\n* Third-Party App Store - Installed from a third-party app store (as opposed to an authorized app store that the device implicitly trusts as part of its default behavior), which may not apply the same level of scrutiny to apps as applied by an authorized app store.(Citation: IBTimes-ThirdParty)(Citation: TrendMicro-RootingMalware)(Citation: TrendMicro-FlappyBird)\n\nSome Android malware comes with functionality to install additional applications, either automatically or when the adversary instructs it to.(Citation: android-trojan-steals-paypal-2fa)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1476",
                            "external_id": "T1476"
                        },
                        {
                            "source_name": "IBTimes-ThirdParty",
                            "description": "A Prasad. (2016, February 19). Danger lurks in third-party Android app stores. Retrieved November 8, 2018.",
                            "url": "https://www.ibtimes.co.uk/danger-lurks-third-party-android-app-stores-1544861"
                        },
                        {
                            "source_name": "TrendMicro-RootingMalware",
                            "description": "Jordan Pan. (2016, February 10). User Beware: Rooting Malware Found in 3rd Party App Stores. Retrieved November 8, 2018.",
                            "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/user-beware-rooting-malware-found-in-3rd-party-app-stores/"
                        },
                        {
                            "source_name": "android-trojan-steals-paypal-2fa",
                            "description": "Luk\u00e1\u0161 \u0160tefanko. (2018, December 11). Android Trojan steals money from PayPal accounts even with 2FA on. Retrieved July 11, 2019.",
                            "url": "https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/"
                        },
                        {
                            "source_name": "TrendMicro-FlappyBird",
                            "description": "Veo Zhang. (2014, February 18). Flappy Bird and Third-Party App Stores. Retrieved November 8, 2018.",
                            "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/flappy-bird-and-third-party-app-stores/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-9.html",
                            "external_id": "AUT-9"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-13.html",
                            "external_id": "ECO-13"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-21.html",
                            "external_id": "ECO-21"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "* An EMM/MDM or mobile threat defense solution may be able to identify the presence of apps installed from sources other than an authorized app store. \n* An EMM/MDM or mobile threat defense solution may be able to identify Android devices configured to allow apps to be installed from \"Unknown Sources\".\n* Enterprise email security solutions can identify the presence of Android or iOS application packages within email messages.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"A Prasad. (2016, February 19). Danger lurks in third-party Android app stores. Retrieved November 8, 2018.\", \"root['external_references'][2]['description']\": \"Jordan Pan. (2016, February 10). User Beware: Rooting Malware Found in 3rd Party App Stores. Retrieved November 8, 2018.\", \"root['external_references'][3]['description']\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2018, December 11). Android Trojan steals money from PayPal accounts even with 2FA on. Retrieved July 11, 2019.\", \"root['external_references'][5]['external_id']\": \"AUT-9\", \"root['external_references'][6]['external_id']\": \"ECO-13\", \"root['external_references'][7]['external_id']\": \"ECO-21\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1079\", \"root['external_references'][1]['external_id']\": \"AUT-9\", \"root['external_references'][2]['external_id']\": \"ECO-13\", \"root['external_references'][3]['external_id']\": \"ECO-21\", \"root['external_references'][5]['description']\": \"Jordan Pan. (2016, February 10). User Beware: Rooting Malware Found in 3rd Party App Stores. Retrieved November 8, 2018.\", \"root['external_references'][6]['description']\": \"Veo Zhang. (2014, February 18). Flappy Bird and Third-Party App Stores. Retrieved November 8, 2018.\", \"root['external_references'][7]['description']\": \"Luk\\u00e1\\u0161 \\u0160tefanko. (2018, December 11). Android Trojan steals money from PayPal accounts even with 2FA on. Retrieved July 11, 2019.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:41:16.863000+00:00\", \"old_value\": \"2021-02-09 14:28:47.076000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"IBTimes-ThirdParty\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.ibtimes.co.uk/danger-lurks-third-party-android-app-stores-1544861\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-9.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"TrendMicro-RootingMalware\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://blog.trendmicro.com/trendlabs-security-intelligence/user-beware-rooting-malware-found-in-3rd-party-app-stores/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-13.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"android-trojan-steals-paypal-2fa\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-21.html\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"TrendMicro-FlappyBird\", \"old_value\": \"IBTimes-ThirdParty\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"Veo Zhang. (2014, February 18). Flappy Bird and Third-Party App Stores. Retrieved November 8, 2018.\", \"old_value\": \"A Prasad. (2016, February 19). Danger lurks in third-party Android app stores. Retrieved November 8, 2018.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://blog.trendmicro.com/trendlabs-security-intelligence/flappy-bird-and-third-party-app-stores/\", \"old_value\": \"https://www.ibtimes.co.uk/danger-lurks-third-party-android-app-stores-1544861\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"TrendMicro-RootingMalware\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/authentication-threats/AUT-9.html\", \"old_value\": \"https://blog.trendmicro.com/trendlabs-security-intelligence/user-beware-rooting-malware-found-in-3rd-party-app-stores/\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"TrendMicro-FlappyBird\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-13.html\", \"old_value\": \"https://blog.trendmicro.com/trendlabs-security-intelligence/flappy-bird-and-third-party-app-stores/\"}, \"root['external_references'][7]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"android-trojan-steals-paypal-2fa\"}, \"root['external_references'][7]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-21.html\", \"old_value\": \"https://www.welivesecurity.com/2018/12/11/android-trojan-steals-money-paypal-accounts-2fa/\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fb3fa94a-3aee-4ab0-b7e7-abdf0a51286d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:06.524000+00:00",
                    "modified": "2022-04-06 15:53:27.032000+00:00",
                    "name": "Exploit SS7 to Redirect Phone Calls/SMS",
                    "description": "An adversary could exploit signaling system vulnerabilities to redirect calls or text messages (SMS) to a phone number under the attacker's control. The adversary could then act as an adversary-in-the-middle to intercept or manipulate the communication. (Citation: Engel-SS7) (Citation: Engel-SS7-2008) (Citation: 3GPP-Security) (Citation: Positive-SS7) (Citation: CSRIC5-WG10-FinalReport) Interception of SMS messages could enable adversaries to obtain authentication codes used for multi-factor authentication(Citation: TheRegister-SS7).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "network-effects"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1449",
                            "external_id": "T1449"
                        },
                        {
                            "source_name": "3GPP-Security",
                            "description": "3GPP. (2000, January). A Guide to 3rd Generation Security. Retrieved December 19, 2016.",
                            "url": "http://www.3gpp.org/ftp/tsg_sa/wg3_security/_specs/33900-120.pdf"
                        },
                        {
                            "source_name": "CSRIC5-WG10-FinalReport",
                            "description": "Communications Security, Reliability, Interoperability Council (CSRIC). (2017, March). Working Group 10 Legacy Systems Risk Reductions Final Report. Retrieved May 24, 2017.",
                            "url": "https://www.fcc.gov/files/csric5-wg10-finalreport031517pdf"
                        },
                        {
                            "source_name": "TheRegister-SS7",
                            "description": "Iain Thomson. (2017, May 3). After years of warnings, mobile network hackers exploit SS7 flaws to drain bank accounts. Retrieved November 8, 2018.",
                            "url": "https://www.theregister.co.uk/2017/05/03/hackers_fire_up_ss7_flaw/"
                        },
                        {
                            "source_name": "Positive-SS7",
                            "description": "Positive Technologies. (n.d.). SS7 Attack Discovery. Retrieved December 19, 2016.",
                            "url": "https://www.ptsecurity.com/upload/ptcom/PT-SS7-AD-Data-Sheet-eng.pdf"
                        },
                        {
                            "source_name": "Engel-SS7-2008",
                            "description": "Tobias Engel. (2008, December). Locating Mobile Phones using SS7. Retrieved December 19, 2016.",
                            "url": "https://www.youtube.com/watch?v=q0n5ySqbfdI"
                        },
                        {
                            "source_name": "Engel-SS7",
                            "description": "Tobias Engel. (2014, December). SS7: Locate. Track. Manipulate.. Retrieved December 19, 2016.",
                            "url": "https://berlin.ccc.de/~tobias/31c3-ss7-locate-track-manipulate.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-37.html",
                            "external_id": "CEL-37"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "Network carriers may be able to use firewalls, Intrusion Detection Systems (IDS), or Intrusion Prevention Systems (IPS) to detect and/or block SS7 exploitation as described by the Communications, Security, Reliability, and Interoperability Council (CSRIC). (Citation: CSRIC5-WG10-FinalReport) The CSRIC also suggests threat information sharing between telecommunications industry members.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"3GPP. (2000, January). A Guide to 3rd Generation Security. Retrieved December 19, 2016.\", \"root['external_references'][7]['external_id']\": \"CEL-37\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1052\", \"root['external_references'][1]['external_id']\": \"CEL-37\", \"root['external_references'][7]['description']\": \"Iain Thomson. (2017, May 3). After years of warnings, mobile network hackers exploit SS7 flaws to drain bank accounts. Retrieved November 8, 2018.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:53:27.032000+00:00\", \"old_value\": \"2021-07-28 18:43:50.490000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"3GPP-Security\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://www.3gpp.org/ftp/tsg_sa/wg3_security/_specs/33900-120.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-37.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"CSRIC5-WG10-FinalReport\", \"old_value\": \"Engel-SS7\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Communications Security, Reliability, Interoperability Council (CSRIC). (2017, March). Working Group 10 Legacy Systems Risk Reductions Final Report. Retrieved May 24, 2017.\", \"old_value\": \"Tobias Engel. (2014, December). SS7: Locate. Track. Manipulate.. Retrieved December 19, 2016.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://www.fcc.gov/files/csric5-wg10-finalreport031517pdf\", \"old_value\": \"https://berlin.ccc.de/~tobias/31c3-ss7-locate-track-manipulate.pdf\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"TheRegister-SS7\", \"old_value\": \"Engel-SS7-2008\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Iain Thomson. (2017, May 3). After years of warnings, mobile network hackers exploit SS7 flaws to drain bank accounts. Retrieved November 8, 2018.\", \"old_value\": \"Tobias Engel. (2008, December). Locating Mobile Phones using SS7. Retrieved December 19, 2016.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://www.theregister.co.uk/2017/05/03/hackers_fire_up_ss7_flaw/\", \"old_value\": \"https://www.youtube.com/watch?v=q0n5ySqbfdI\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Positive-SS7\", \"old_value\": \"3GPP-Security\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"Positive Technologies. (n.d.). SS7 Attack Discovery. Retrieved December 19, 2016.\", \"old_value\": \"3GPP. (2000, January). A Guide to 3rd Generation Security. Retrieved December 19, 2016.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://www.ptsecurity.com/upload/ptcom/PT-SS7-AD-Data-Sheet-eng.pdf\", \"old_value\": \"http://www.3gpp.org/ftp/tsg_sa/wg3_security/_specs/33900-120.pdf\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"Engel-SS7-2008\", \"old_value\": \"Positive-SS7\"}, \"root['external_references'][5]['description']\": {\"new_value\": \"Tobias Engel. (2008, December). Locating Mobile Phones using SS7. Retrieved December 19, 2016.\", \"old_value\": \"Positive Technologies. (n.d.). SS7 Attack Discovery. Retrieved December 19, 2016.\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://www.youtube.com/watch?v=q0n5ySqbfdI\", \"old_value\": \"https://www.ptsecurity.com/upload/ptcom/PT-SS7-AD-Data-Sheet-eng.pdf\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"Engel-SS7\", \"old_value\": \"CSRIC5-WG10-FinalReport\"}, \"root['external_references'][6]['description']\": {\"new_value\": \"Tobias Engel. (2014, December). SS7: Locate. Track. Manipulate.. Retrieved December 19, 2016.\", \"old_value\": \"Communications Security, Reliability, Interoperability Council (CSRIC). (2017, March). Working Group 10 Legacy Systems Risk Reductions Final Report. Retrieved May 24, 2017.\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://berlin.ccc.de/~tobias/31c3-ss7-locate-track-manipulate.pdf\", \"old_value\": \"https://www.fcc.gov/files/csric5-wg10-finalreport031517pdf\"}, \"root['external_references'][7]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"TheRegister-SS7\"}, \"root['external_references'][7]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/cellular-threats/CEL-37.html\", \"old_value\": \"https://www.theregister.co.uk/2017/05/03/hackers_fire_up_ss7_flaw/\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ef771e03-e080-43b4-a619-ac6f84899884",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:22.716000+00:00",
                    "modified": "2022-04-06 15:41:57.666000+00:00",
                    "name": "Exploit TEE Vulnerability",
                    "description": "A malicious app or other attack vector could be used to exploit vulnerabilities in code running within the Trusted Execution Environment (TEE) (Citation: Thomas-TrustZone). The adversary could then obtain privileges held by the TEE potentially including the ability to access cryptographic keys or other sensitive data (Citation: QualcommKeyMaster). Escalated operating system privileges may be first required in order to have the ability to attack the TEE (Citation: EkbergTEE). If not, privileges within the TEE can potentially be used to exploit the operating system (Citation: laginimaineb-TEE).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "credential-access"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "privilege-escalation"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1405",
                            "external_id": "T1405"
                        },
                        {
                            "source_name": "EkbergTEE",
                            "description": "Jan-Erik Ekberg. (2015, September 10). Android and trusted execution environments. Retrieved December 9, 2016.",
                            "url": "https://usmile.at/symposium/program/2015/ekberg"
                        },
                        {
                            "source_name": "Thomas-TrustZone",
                            "description": "Josh Thomas and Charles Holmes. (2015, September). An infestation of dragons: Exploring vulnerabilities in the ARM TrustZone architecture. Retrieved December 9, 2016.",
                            "url": "https://usmile.at/symposium/program/2015/thomas-holmes"
                        },
                        {
                            "source_name": "QualcommKeyMaster",
                            "description": "laginimaineb. (2016, June). Extracting Qualcomm's KeyMaster Keys - Breaking Android Full Disk Encryption. Retrieved December 9, 2016.",
                            "url": "https://bits-please.blogspot.in/2016/06/extracting-qualcomms-keymaster-keys.html"
                        },
                        {
                            "source_name": "laginimaineb-TEE",
                            "description": "laginimaineb. (2016, May). War of the Worlds - Hijacking the Linux Kernel from QSEE. Retrieved December 21, 2016.",
                            "url": "http://bits-please.blogspot.co.il/2016/05/war-of-worlds-hijacking-linux-kernel.html"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html",
                            "external_id": "APP-27"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Jan-Erik Ekberg. (2015, September 10). Android and trusted execution environments. Retrieved December 9, 2016.\", \"root['external_references'][5]['external_id']\": \"APP-27\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1008\", \"root['external_references'][1]['external_id']\": \"APP-27\", \"root['external_references'][5]['description']\": \"laginimaineb. (2016, May). War of the Worlds - Hijacking the Linux Kernel from QSEE. Retrieved December 21, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:41:57.666000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"EkbergTEE\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://usmile.at/symposium/program/2015/ekberg\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"laginimaineb-TEE\", \"old_value\": \"EkbergTEE\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"laginimaineb. (2016, May). War of the Worlds - Hijacking the Linux Kernel from QSEE. Retrieved December 21, 2016.\", \"old_value\": \"Jan-Erik Ekberg. (2015, September 10). Android and trusted execution environments. Retrieved December 9, 2016.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"http://bits-please.blogspot.co.il/2016/05/war-of-worlds-hijacking-linux-kernel.html\", \"old_value\": \"https://usmile.at/symposium/program/2015/ekberg\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"laginimaineb-TEE\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html\", \"old_value\": \"http://bits-please.blogspot.co.il/2016/05/war-of-worlds-hijacking-linux-kernel.html\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--2d646840-f6f5-4619-a5a8-29c8316bbac5",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2018-10-17 00:14:20.652000+00:00",
                    "modified": "2022-04-06 15:42:13.444000+00:00",
                    "name": "Exploit via Radio Interfaces",
                    "description": "The mobile device may be targeted for exploitation through its interface to cellular networks or other radio interfaces.\n\n### Baseband Vulnerability Exploitation\n\nA message sent over a radio interface (typically cellular, but potentially Bluetooth, GPS, NFC, Wi-Fi(Citation: ProjectZero-BroadcomWiFi) or other) to the mobile device could exploit a vulnerability in code running on the device(Citation: Register-BaseStation)(Citation: Weinmann-Baseband).\n\n### Malicious SMS Message\n\nAn SMS message could contain content designed to exploit vulnerabilities in the SMS parser on the receiving device(Citation: Forbes-iPhoneSMS). An SMS message could also contain a link to a web site containing malicious content designed to exploit the device web browser. Vulnerable SIM cards may be remotely exploited and reprogrammed via SMS messages(Citation: SRLabs-SIMCard).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1477",
                            "external_id": "T1477"
                        },
                        {
                            "source_name": "Forbes-iPhoneSMS",
                            "description": "Andy Greenberg. (2009, July 28). How to Hijack 'Every iPhone In The World'. Retrieved December 23, 2016.",
                            "url": "http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html"
                        },
                        {
                            "source_name": "Register-BaseStation",
                            "description": "D. Pauli. (2015, November 12). Samsung S6 calls open to man-in-the-middle base station snooping. Retrieved December 23, 2016.",
                            "url": "http://www.theregister.co.uk/2015/11/12/mobile_pwn2own1/"
                        },
                        {
                            "source_name": "ProjectZero-BroadcomWiFi",
                            "description": "Gal Beniamini. (2017, April 4). Over The Air: Exploiting Broadcom's Wi-Fi Stack. Retrieved November 8, 2018.",
                            "url": "https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html"
                        },
                        {
                            "source_name": "Weinmann-Baseband",
                            "description": "R. Weinmann. (2012, August 6-7). Baseband Attacks: Remote Exploitation of Memory Corruptions in Cellular Protocol Stacks. Retrieved December 23, 2016.",
                            "url": "https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf"
                        },
                        {
                            "source_name": "SRLabs-SIMCard",
                            "description": "SRLabs. (n.d.). SIM cards are prone to remote hacking. Retrieved December 23, 2016.",
                            "url": "https://srlabs.de/bites/rooting-sim-cards/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1080\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:42:13.444000+00:00\", \"old_value\": \"2019-02-03 15:19:22.439000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Forbes-iPhoneSMS\", \"old_value\": \"ProjectZero-BroadcomWiFi\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"Andy Greenberg. (2009, July 28). How to Hijack 'Every iPhone In The World'. Retrieved December 23, 2016.\", \"old_value\": \"Gal Beniamini. (2017, April 4). Over The Air: Exploiting Broadcom's Wi-Fi Stack. Retrieved November 8, 2018.\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\", \"old_value\": \"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"ProjectZero-BroadcomWiFi\", \"old_value\": \"Weinmann-Baseband\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Gal Beniamini. (2017, April 4). Over The Air: Exploiting Broadcom's Wi-Fi Stack. Retrieved November 8, 2018.\", \"old_value\": \"R. Weinmann. (2012, August 6-7). Baseband Attacks: Remote Exploitation of Memory Corruptions in Cellular Protocol Stacks. Retrieved December 23, 2016.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://googleprojectzero.blogspot.com/2017/04/over-air-exploiting-broadcoms-wi-fi_4.html\", \"old_value\": \"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Weinmann-Baseband\", \"old_value\": \"Forbes-iPhoneSMS\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"R. Weinmann. (2012, August 6-7). Baseband Attacks: Remote Exploitation of Memory Corruptions in Cellular Protocol Stacks. Retrieved December 23, 2016.\", \"old_value\": \"Andy Greenberg. (2009, July 28). How to Hijack 'Every iPhone In The World'. Retrieved December 23, 2016.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://www.usenix.org/system/files/conference/woot12/woot12-final24.pdf\", \"old_value\": \"http://www.forbes.com/2009/07/28/hackers-iphone-apple-technology-security-hackers.html\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a93ccb8f-3996-42e2-b7c7-bb599d4e205f",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:35.247000+00:00",
                    "modified": "2022-04-06 15:45:52.558000+00:00",
                    "name": "Masquerade as Legitimate Application",
                    "description": "An adversary could distribute developed malware by masquerading the malware as a legitimate application. This can be done in two different ways: by embedding the malware in a legitimate application, or by pretending to be a legitimate application.\n\nEmbedding the malware in a legitimate application is done by downloading the application, disassembling it, adding the malicious code, and then re-assembling it.(Citation: Zhou) The app would appear to be the original app, but would contain additional malicious functionality. The adversary could then publish the malicious application to app stores or use another delivery method.\n\nPretending to be a legitimate application relies heavily on lack of scrutinization by the user. Typically, a malicious app pretending to be a legitimate one will have many similar details as the legitimate one, such as name, icon, and description.(Citation: Palo Alto HenBox)\n\nMalicious applications may also masquerade as legitimate applications when requesting access to the accessibility service in order to appear as legitimate to the user, increasing the likelihood that the access will be granted.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "initial-access"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1444",
                            "external_id": "T1444"
                        },
                        {
                            "source_name": "Palo Alto HenBox",
                            "description": "A. Hinchliffe, M. Harbison, J. Miller-Osborn, et al. (2018, March 13). HenBox: The Chickens Come Home to Roost. Retrieved September 9, 2019.",
                            "url": "https://unit42.paloaltonetworks.com/unit42-henbox-chickens-come-home-roost/"
                        },
                        {
                            "source_name": "Zhou",
                            "description": "Yajin Zhou and Xuxian Jiang. (2012, May). Dissecting Android Malware: Characterization and Evolution. Retrieved December 9, 2016.",
                            "url": "http://ieeexplore.ieee.org/document/6234407"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html",
                            "external_id": "APP-31"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-14.html",
                            "external_id": "APP-14"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_contributors": [
                        "Alex Hinchliffe, Palo Alto Networks"
                    ],
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "Users can detect malicious applications by watching for nuances that could indicate the application is not the intended one when it is being installed.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "2.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"A. Hinchliffe, M. Harbison, J. Miller-Osborn, et al. (2018, March 13). HenBox: The Chickens Come Home to Roost. Retrieved September 9, 2019.\", \"root['external_references'][2]['description']\": \"Yajin Zhou and Xuxian Jiang. (2012, May). Dissecting Android Malware: Characterization and Evolution. Retrieved December 9, 2016.\", \"root['external_references'][3]['external_id']\": \"APP-31\", \"root['external_references'][4]['external_id']\": \"APP-14\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1047\", \"root['external_references'][1]['external_id']\": \"APP-31\", \"root['external_references'][2]['external_id']\": \"APP-14\", \"root['external_references'][3]['description']\": \"Yajin Zhou and Xuxian Jiang. (2012, May). Dissecting Android Malware: Characterization and Evolution. Retrieved December 9, 2016.\", \"root['external_references'][4]['description']\": \"A. Hinchliffe, M. Harbison, J. Miller-Osborn, et al. (2018, March 13). HenBox: The Chickens Come Home to Roost. Retrieved September 9, 2019.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:45:52.558000+00:00\", \"old_value\": \"2020-04-08 15:19:56.147000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Palo Alto HenBox\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://unit42.paloaltonetworks.com/unit42-henbox-chickens-come-home-roost/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Zhou\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"http://ieeexplore.ieee.org/document/6234407\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-14.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Zhou\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-31.html\", \"old_value\": \"http://ieeexplore.ieee.org/document/6234407\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Palo Alto HenBox\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-14.html\", \"old_value\": \"https://unit42.paloaltonetworks.com/unit42-henbox-chickens-come-home-roost/\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--88932a8c-3a17-406f-9431-1da3ff19f6d6",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:29.092000+00:00",
                    "modified": "2022-04-06 15:46:29.338000+00:00",
                    "name": "Modify Cached Executable Code",
                    "description": "ART (the Android Runtime) compiles optimized code on the device itself to improve performance. An adversary may be able to use escalated privileges to modify the cached code in order to hide malicious behavior. Since the code is compiled on the device, it may not receive the same level of integrity checks that are provided to code running in the system partition.(Citation: Sabanal-ART)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1403",
                            "external_id": "T1403"
                        },
                        {
                            "source_name": "Sabanal-ART",
                            "description": "Paul Sabanal. (2015). Hiding Behind ART. Retrieved December 21, 2016.",
                            "url": "https://www.blackhat.com/docs/asia-15/materials/asia-15-Sabanal-Hiding-Behind-ART-wp.pdf"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "Modifications to cached executable code can be difficult to detect, and therefore enterprises may be better served focusing on detection at other stages of adversary behavior.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1006\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:46:29.338000+00:00\", \"old_value\": \"2019-10-09 19:39:32.872000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--f1c3d071-0c24-483d-aca0-e8b8496ce468",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:18.583000+00:00",
                    "modified": "2022-04-06 15:48:41.647000+00:00",
                    "name": "Modify Trusted Execution Environment",
                    "description": "If an adversary can escalate privileges, he or she may be able to use those privileges to place malicious code in the device's Trusted Execution Environment (TEE) or other similar isolated execution environment where the code can evade detection, may persist after device resets, and may not be removable by the device user. Running code within the TEE may provide an adversary with the ability to monitor or tamper with overall device behavior.(Citation: Roth-Rootkits)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "defense-evasion"
                        },
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "persistence"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1399",
                            "external_id": "T1399"
                        },
                        {
                            "source_name": "Apple-iOSSecurityGuide",
                            "description": "Apple. (2016, May). iOS Security. Retrieved December 21, 2016.",
                            "url": "https://www.apple.com/business/docs/iOS_Security_Guide.pdf"
                        },
                        {
                            "source_name": "Roth-Rootkits",
                            "description": "Thomas Roth. (2013). Next generation mobile rootkits. Retrieved December 21, 2016.",
                            "url": "https://hackinparis.com/data/slides/2013/Slidesthomasroth.pdf"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html",
                            "external_id": "APP-27"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "Devices may perform cryptographic integrity checks of code running within the TEE at boot time.\n\niOS devices will fail to boot if the software running within the Secure Enclave does not pass signature verification.(Citation: Apple-iOSSecurityGuide)",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_tactic_type": [
                        "Post-Adversary Device Access"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Apple. (2016, May). iOS Security. Retrieved December 21, 2016.\", \"root['external_references'][3]['external_id']\": \"APP-27\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1002\", \"root['external_references'][1]['external_id']\": \"APP-27\", \"root['external_references'][3]['description']\": \"Apple. (2016, May). iOS Security. Retrieved December 21, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:48:41.647000+00:00\", \"old_value\": \"2019-02-03 14:23:10.576000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Apple-iOSSecurityGuide\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.apple.com/business/docs/iOS_Security_Guide.pdf\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Apple-iOSSecurityGuide\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/application-threats/APP-27.html\", \"old_value\": \"https://www.apple.com/business/docs/iOS_Security_Guide.pdf\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--0c71033e-401e-4b97-9309-7a7c95e43a5d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:18.237000+00:00",
                    "modified": "2022-04-06 15:54:11.189000+00:00",
                    "name": "Obtain Device Cloud Backups",
                    "description": "An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud backup services (e.g. Google's Android backup service or Apple's iCloud) could use that access to obtain sensitive data stored in device backups. For example, the Elcomsoft Phone Breaker product advertises the ability to retrieve iOS backup data from Apple's iCloud (Citation: Elcomsoft-EPPB). Elcomsoft also describes (Citation: Elcomsoft-WhatsApp) obtaining WhatsApp communication histories from backups stored in iCloud.",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "remote-service-effects"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1470",
                            "external_id": "T1470"
                        },
                        {
                            "source_name": "Elcomsoft-EPPB",
                            "description": "Elcomsoft. (n.d.). Elcomsoft Phone Breaker. Retrieved December 29, 2016.",
                            "url": "https://www.elcomsoft.com/eppb.html"
                        },
                        {
                            "source_name": "Elcomsoft-WhatsApp",
                            "description": "Oleg Afonin. (2017, July 20). Extract and Decrypt WhatsApp Backups from iCloud. Retrieved July 6, 2018.",
                            "url": "https://blog.elcomsoft.com/2017/07/extract-and-decrypt-whatsapp-backups-from-icloud/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-0.html",
                            "external_id": "ECO-0"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-1.html",
                            "external_id": "ECO-1"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "Google provides the ability for users to view their account activity. Apple iCloud also provides notifications to users of account activity.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Elcomsoft. (n.d.). Elcomsoft Phone Breaker. Retrieved December 29, 2016.\", \"root['external_references'][2]['description']\": \"Oleg Afonin. (2017, July 20). Extract and Decrypt WhatsApp Backups from iCloud. Retrieved July 6, 2018.\", \"root['external_references'][3]['external_id']\": \"ECO-0\", \"root['external_references'][4]['external_id']\": \"ECO-1\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1073\", \"root['external_references'][1]['external_id']\": \"ECO-0\", \"root['external_references'][2]['external_id']\": \"ECO-1\", \"root['external_references'][3]['description']\": \"Elcomsoft. (n.d.). Elcomsoft Phone Breaker. Retrieved December 29, 2016.\", \"root['external_references'][4]['description']\": \"Oleg Afonin. (2017, July 20). Extract and Decrypt WhatsApp Backups from iCloud. Retrieved July 6, 2018.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:54:11.189000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Elcomsoft-EPPB\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.elcomsoft.com/eppb.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-0.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Elcomsoft-WhatsApp\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://blog.elcomsoft.com/2017/07/extract-and-decrypt-whatsapp-backups-from-icloud/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-1.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Elcomsoft-EPPB\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-0.html\", \"old_value\": \"https://www.elcomsoft.com/eppb.html\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Elcomsoft-WhatsApp\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-1.html\", \"old_value\": \"https://blog.elcomsoft.com/2017/07/extract-and-decrypt-whatsapp-backups-from-icloud/\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--537ea573-8a1c-468c-956b-d16d2ed9d067",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:07.827000+00:00",
                    "modified": "2022-04-06 15:54:28.187000+00:00",
                    "name": "Remotely Wipe Data Without Authorization",
                    "description": "An adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services (e.g. Google's Android Device Manager or Apple iCloud's Find my iPhone) or to an EMM console could use that access to wipe enrolled devices (Citation: Honan-Hacking).",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "remote-service-effects"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1469",
                            "external_id": "T1469"
                        },
                        {
                            "source_name": "Honan-Hacking",
                            "description": "Mat Honan. (2012, August 6). How Apple and Amazon Security Flaws Led to My Epic Hacking. Retrieved December 29, 2016.",
                            "url": "https://www.wired.com/2012/08/apple-amazon-mat-honan-hacking/"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-5.html",
                            "external_id": "ECO-5"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-7.html",
                            "external_id": "EMM-7"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "Google provides the ability for users to view their general account activity. Apple iCloud also provides notifications to users of account activity.",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_is_subtechnique']\": false, \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Mat Honan. (2012, August 6). How Apple and Amazon Security Flaws Led to My Epic Hacking. Retrieved December 29, 2016.\", \"root['external_references'][3]['external_id']\": \"EMM-7\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1072\", \"root['external_references'][1]['external_id']\": \"ECO-5\", \"root['external_references'][3]['description']\": \"Mat Honan. (2012, August 6). How Apple and Amazon Security Flaws Led to My Epic Hacking. Retrieved December 29, 2016.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:54:28.187000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Honan-Hacking\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"https://www.wired.com/2012/08/apple-amazon-mat-honan-hacking/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-5.html\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/ecosystem-threats/ECO-5.html\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-7.html\"}, \"root['external_references'][2]['external_id']\": {\"new_value\": \"ECO-5\", \"old_value\": \"EMM-7\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"Honan-Hacking\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/emm-threats/EMM-7.html\", \"old_value\": \"https://www.wired.com/2012/08/apple-amazon-mat-honan-hacking/\"}}}"
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a64a820a-cb21-471f-920c-506a2ff04fa5",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:20.329000+00:00",
                    "modified": "2022-04-06 15:53:54.872000+00:00",
                    "name": "SIM Card Swap",
                    "description": "An adversary could convince the mobile network operator (e.g. through social networking, forged identification, or insider attacks performed by trusted employees) to issue a new SIM card and associate it with an existing phone number and account.(Citation: NYGov-Simswap)(Citation: Motherboard-Simswap2) The adversary could then obtain SMS messages or hijack phone calls intended for someone else.(Citation: Betanews-Simswap)\n\nOne use case is intercepting authentication messages or phone calls to obtain illicit access to online banking or other online accounts, as many online services allow account password resets by sending an authentication code over SMS to a phone number associated with the account.(Citation: Guardian-Simswap)(Citation: Motherboard-Simswap1)(Citation: Krebs-SimSwap)(Citation: TechCrunch-SimSwap)",
                    "kill_chain_phases": [
                        {
                            "kill_chain_name": "mitre-mobile-attack",
                            "phase_name": "network-effects"
                        }
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/techniques/T1451",
                            "external_id": "T1451"
                        },
                        {
                            "source_name": "Betanews-Simswap",
                            "description": "Alex Cambell. (2016, February 12). Everything you need to know about SIM swap scams. Retrieved December 12, 2016.",
                            "url": "http://betanews.com/2016/02/12/everything-you-need-to-know-about-sim-swap-scams/"
                        },
                        {
                            "source_name": "Krebs-SimSwap",
                            "description": "Brian Krebs. (2018, May 18). T-Mobile Employee Made Unauthorized \u2018SIM Swap\u2019 to Steal Instagram Account. Retrieved November 8, 2018.",
                            "url": "https://krebsonsecurity.com/2018/05/t-mobile-employee-made-unauthorized-sim-swap-to-steal-instagram-account/"
                        },
                        {
                            "source_name": "TechCrunch-SimSwap",
                            "description": "John Biggs. (2017, August 23). I was hacked. Retrieved November 8, 2018.",
                            "url": "https://techcrunch.com/2017/08/23/i-was-hacked/"
                        },
                        {
                            "source_name": "Motherboard-Simswap2",
                            "description": "Lorenzo Franceschi-Bicchierai. (2018, August 3). How Criminals Recruit Telecom Employees to Help Them Hijack SIM Cards. Retrieved August 11, 2018.",
                            "url": "https://motherboard.vice.com/en_us/article/3ky5a5/criminals-recruit-telecom-employees-sim-swapping-port-out-scam"
                        },
                        {
                            "source_name": "Motherboard-Simswap1",
                            "description": "Lorenzo Franceschi-Bicchierai. (2018, July 17). The SIM Hijackers. Retrieved August 11, 2018.",
                            "url": "https://motherboard.vice.com/en_us/article/vbqax3/hackers-sim-swapping-steal-phone-numbers-instagram-bitcoin"
                        },
                        {
                            "source_name": "Guardian-Simswap",
                            "description": "Miles Brignall. (2016, April 16). Sim-swap fraud claims another mobile banking victim. Retrieved December 12, 2016.",
                            "url": "https://www.theguardian.com/money/2016/apr/16/sim-swap-fraud-mobile-banking-fraudsters"
                        },
                        {
                            "source_name": "NYGov-Simswap",
                            "description": "New York Department of State. (2016, February 12). AT&T SIM-Card Switch Scam. Retrieved August 23, 2016.",
                            "url": "http://www.dos.ny.gov/consumerprotection/scams/att-sim.html"
                        },
                        {
                            "source_name": "NIST Mobile Threat Catalogue",
                            "url": "https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-22.html",
                            "external_id": "STA-22"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_contributors": [
                        "Karim Hasanen, @_karimhasanen"
                    ],
                    "x_mitre_deprecated": true,
                    "x_mitre_detection": "",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_is_subtechnique": false,
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android",
                        "iOS"
                    ],
                    "x_mitre_tactic_type": [
                        "Without Adversary Device Access"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_detection']\": \"\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['description']\": \"Alex Cambell. (2016, February 12). Everything you need to know about SIM swap scams. Retrieved December 12, 2016.\", \"root['external_references'][8]['external_id']\": \"STA-22\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-T1054\", \"root['external_references'][1]['external_id']\": \"STA-22\", \"root['external_references'][8]['description']\": \"John Biggs. (2017, August 23). I was hacked. Retrieved November 8, 2018.\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 15:53:54.872000+00:00\", \"old_value\": \"2021-09-30 18:45:26.323000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"Betanews-Simswap\", \"old_value\": \"NIST Mobile Threat Catalogue\"}, \"root['external_references'][1]['url']\": {\"new_value\": \"http://betanews.com/2016/02/12/everything-you-need-to-know-about-sim-swap-scams/\", \"old_value\": \"https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-22.html\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Krebs-SimSwap\", \"old_value\": \"NYGov-Simswap\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Brian Krebs. (2018, May 18). T-Mobile Employee Made Unauthorized \\u2018SIM Swap\\u2019 to Steal Instagram Account. Retrieved November 8, 2018.\", \"old_value\": \"New York Department of State. (2016, February 12). AT&T SIM-Card Switch Scam. Retrieved August 23, 2016.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://krebsonsecurity.com/2018/05/t-mobile-employee-made-unauthorized-sim-swap-to-steal-instagram-account/\", \"old_value\": \"http://www.dos.ny.gov/consumerprotection/scams/att-sim.html\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"TechCrunch-SimSwap\", \"old_value\": \"Motherboard-Simswap2\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"John Biggs. (2017, August 23). I was hacked. Retrieved November 8, 2018.\", \"old_value\": \"Lorenzo Franceschi-Bicchierai. (2018, August 3). How Criminals Recruit Telecom Employees to Help Them Hijack SIM Cards. Retrieved August 11, 2018.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://techcrunch.com/2017/08/23/i-was-hacked/\", \"old_value\": \"https://motherboard.vice.com/en_us/article/3ky5a5/criminals-recruit-telecom-employees-sim-swapping-port-out-scam\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Motherboard-Simswap2\", \"old_value\": \"Betanews-Simswap\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"Lorenzo Franceschi-Bicchierai. (2018, August 3). How Criminals Recruit Telecom Employees to Help Them Hijack SIM Cards. Retrieved August 11, 2018.\", \"old_value\": \"Alex Cambell. (2016, February 12). Everything you need to know about SIM swap scams. Retrieved December 12, 2016.\"}, \"root['external_references'][4]['url']\": {\"new_value\": \"https://motherboard.vice.com/en_us/article/3ky5a5/criminals-recruit-telecom-employees-sim-swapping-port-out-scam\", \"old_value\": \"http://betanews.com/2016/02/12/everything-you-need-to-know-about-sim-swap-scams/\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"Motherboard-Simswap1\", \"old_value\": \"Guardian-Simswap\"}, \"root['external_references'][5]['description']\": {\"new_value\": \"Lorenzo Franceschi-Bicchierai. (2018, July 17). The SIM Hijackers. Retrieved August 11, 2018.\", \"old_value\": \"Miles Brignall. (2016, April 16). Sim-swap fraud claims another mobile banking victim. Retrieved December 12, 2016.\"}, \"root['external_references'][5]['url']\": {\"new_value\": \"https://motherboard.vice.com/en_us/article/vbqax3/hackers-sim-swapping-steal-phone-numbers-instagram-bitcoin\", \"old_value\": \"https://www.theguardian.com/money/2016/apr/16/sim-swap-fraud-mobile-banking-fraudsters\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"Guardian-Simswap\", \"old_value\": \"Motherboard-Simswap1\"}, \"root['external_references'][6]['description']\": {\"new_value\": \"Miles Brignall. (2016, April 16). Sim-swap fraud claims another mobile banking victim. Retrieved December 12, 2016.\", \"old_value\": \"Lorenzo Franceschi-Bicchierai. (2018, July 17). The SIM Hijackers. Retrieved August 11, 2018.\"}, \"root['external_references'][6]['url']\": {\"new_value\": \"https://www.theguardian.com/money/2016/apr/16/sim-swap-fraud-mobile-banking-fraudsters\", \"old_value\": \"https://motherboard.vice.com/en_us/article/vbqax3/hackers-sim-swapping-steal-phone-numbers-instagram-bitcoin\"}, \"root['external_references'][7]['source_name']\": {\"new_value\": \"NYGov-Simswap\", \"old_value\": \"Krebs-SimSwap\"}, \"root['external_references'][7]['description']\": {\"new_value\": \"New York Department of State. (2016, February 12). AT&T SIM-Card Switch Scam. Retrieved August 23, 2016.\", \"old_value\": \"Brian Krebs. (2018, May 18). T-Mobile Employee Made Unauthorized \\u2018SIM Swap\\u2019 to Steal Instagram Account. Retrieved November 8, 2018.\"}, \"root['external_references'][7]['url']\": {\"new_value\": \"http://www.dos.ny.gov/consumerprotection/scams/att-sim.html\", \"old_value\": \"https://krebsonsecurity.com/2018/05/t-mobile-employee-made-unauthorized-sim-swap-to-steal-instagram-account/\"}, \"root['external_references'][8]['source_name']\": {\"new_value\": \"NIST Mobile Threat Catalogue\", \"old_value\": \"TechCrunch-SimSwap\"}, \"root['external_references'][8]['url']\": {\"new_value\": \"https://pages.nist.gov/mobile-threat-catalogue/stack-threats/STA-22.html\", \"old_value\": \"https://techcrunch.com/2017/08/23/i-was-hacked/\"}}}"
                }
            ],
            "deletions": []
        },
        "software": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [
                {
                    "type": "malware",
                    "id": "malware--a5528622-3a8a-4633-86ce-8cdaf8423858",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2018-01-16 16:13:52.465000+00:00",
                    "modified": "2022-03-02 15:47:13.329000+00:00",
                    "name": "FinFisher",
                    "description": "[FinFisher](https://attack.mitre.org/software/S0182) is a government-grade commercial surveillance spyware reportedly sold exclusively to government agencies for use in targeted and lawful criminal investigations. It is heavily obfuscated and uses multiple anti-analysis techniques. It has other variants including [Wingbird](https://attack.mitre.org/software/S0176). (Citation: FinFisher Citation) (Citation: Microsoft SIR Vol 21) (Citation: FireEye FinSpy Sept 2017) (Citation: Securelist BlackOasis Oct 2017) (Citation: Microsoft FinFisher March 2018)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/software/S0182",
                            "external_id": "S0182"
                        },
                        {
                            "source_name": "FinFisher",
                            "description": "(Citation: FinFisher Citation) (Citation: Microsoft SIR Vol 21) (Citation: FireEye FinSpy Sept 2017) (Citation: Securelist BlackOasis Oct 2017)"
                        },
                        {
                            "source_name": "FinSpy",
                            "description": "(Citation: FireEye FinSpy Sept 2017) (Citation: Securelist BlackOasis Oct 2017)"
                        },
                        {
                            "source_name": "FinFisher Citation",
                            "description": "FinFisher. (n.d.). Retrieved December 20, 2017.",
                            "url": "http://www.finfisher.com/FinFisher/index.html"
                        },
                        {
                            "source_name": "Microsoft SIR Vol 21",
                            "description": "Anthe, C. et al. (2016, December 14). Microsoft Security Intelligence Report Volume 21. Retrieved November 27, 2017.",
                            "url": "http://download.microsoft.com/download/E/B/0/EB0F50CC-989C-4B66-B7F6-68CD3DC90DE3/Microsoft_Security_Intelligence_Report_Volume_21_English.pdf"
                        },
                        {
                            "source_name": "FireEye FinSpy Sept 2017",
                            "description": "Jiang, G., et al. (2017, September 12). FireEye Uncovers CVE-2017-8759: Zero-Day Used in the Wild to Distribute FINSPY. Retrieved February 15, 2018.",
                            "url": "https://www.fireeye.com/blog/threat-research/2017/09/zero-day-used-to-distribute-finspy.html"
                        },
                        {
                            "source_name": "Securelist BlackOasis Oct 2017",
                            "description": "Kaspersky Lab's Global Research & Analysis Team. (2017, October 16). BlackOasis APT and new targeted attacks leveraging zero-day exploit. Retrieved February 15, 2018.",
                            "url": "https://securelist.com/blackoasis-apt-and-new-targeted-attacks-leveraging-zero-day-exploit/82732/"
                        },
                        {
                            "source_name": "Microsoft FinFisher March 2018",
                            "description": "Allievi, A.,Flori, E. (2018, March 01). FinFisher exposed: A researcher\u2019s tale of defeating traps, tricks, and complex virtual machines. Retrieved July 9, 2018.",
                            "url": "https://cloudblogs.microsoft.com/microsoftsecure/2018/03/01/finfisher-exposed-a-researchers-tale-of-defeating-traps-tricks-and-complex-virtual-machines/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_aliases": [
                        "FinFisher",
                        "FinSpy"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "enterprise-attack",
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Windows",
                        "Android"
                    ],
                    "x_mitre_version": "1.4",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"enterprise-attack\", \"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-02 15:47:13.329000+00:00\", \"old_value\": \"2020-03-30 15:32:08.360000+00:00\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.4\", \"old_value\": \"1.3\"}}}",
                    "previous_version": "1.3",
                    "version_change": "1.3 \u2192 1.4"
                },
                {
                    "type": "malware",
                    "id": "malware--29944858-da52-4d3d-b428-f8a6eb8dde6f",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2020-07-20 13:58:53.422000+00:00",
                    "modified": "2021-12-07 14:46:08.852000+00:00",
                    "name": "XLoader for iOS",
                    "description": "[XLoader for iOS](https://attack.mitre.org/software/S0490) is a malicious iOS application that is capable of gathering system information.(Citation: TrendMicro-XLoader-FakeSpy) It is tracked separately from the [XLoader for Android](https://attack.mitre.org/software/S0318).",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/software/S0490",
                            "external_id": "S0490"
                        },
                        {
                            "source_name": "TrendMicro-XLoader-FakeSpy",
                            "description": "Hiroaki, H., Wu, L., Wu, L.. (2019, April 2). XLoader Disguises as Android Apps, Has FakeSpy Links. Retrieved July 20, 2020.",
                            "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/new-version-of-xloader-that-disguises-as-android-apps-and-an-ios-profile-holds-new-links-to-fakespy/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_aliases": [
                        "XLoader for iOS"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "iOS"
                    ],
                    "x_mitre_version": "1.1",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2021-12-07 14:46:08.852000+00:00\", \"old_value\": \"2020-10-16 01:48:10.412000+00:00\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.1\", \"old_value\": \"1.0\"}}}",
                    "previous_version": "1.0",
                    "version_change": "1.0 \u2192 1.1"
                }
            ],
            "other_version_changes": [
                {
                    "type": "malware",
                    "id": "malware--f6ac21b6-2592-400c-8472-10d0e2f1bfaf",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:47.038000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "Adups",
                    "description": "[Adups](https://attack.mitre.org/software/S0309) is software that was pre-installed onto Android devices, including those made by BLU Products. The software was reportedly designed to help a Chinese phone manufacturer monitor user behavior, transferring sensitive data to a Chinese server. (Citation: NYTimes-BackDoor) (Citation: BankInfoSecurity-BackDoor)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0309",
                            "external_id": "S0309"
                        },
                        {
                            "source_name": "Adups",
                            "description": "(Citation: NYTimes-BackDoor) (Citation: BankInfoSecurity-BackDoor)"
                        },
                        {
                            "source_name": "NYTimes-BackDoor",
                            "description": "Matt Apuzzo and Michael S. Schmidt. (2016, November 15). Secret Back Door in Some U.S. Phones Sent Data to China, Analysts Say. Retrieved February 6, 2017.",
                            "url": "https://www.nytimes.com/2016/11/16/us/politics/china-phones-software-security.html"
                        },
                        {
                            "source_name": "BankInfoSecurity-BackDoor",
                            "description": "Jeremy Kirk. (2016, November 16). Why Did Chinese Spyware Linger in U.S. Phones?. Retrieved February 6, 2017.",
                            "url": "http://www.bankinfosecurity.com/did-chinese-spyware-linger-in-us-phones-a-9534"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"Adups\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0025\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--08784a9d-09e9-4dce-a839-9612398214e8",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2018-10-17 00:14:20.652000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "Allwinner",
                    "description": "[Allwinner](https://attack.mitre.org/software/S0319) is a company that supplies processors used in Android tablets and other devices. A Linux kernel distributed by [Allwinner](https://attack.mitre.org/software/S0319) for use on these devices reportedly contained a backdoor. (Citation: HackerNews-Allwinner)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0319",
                            "external_id": "S0319"
                        },
                        {
                            "source_name": "Allwinner",
                            "description": "(Citation: HackerNews-Allwinner)"
                        },
                        {
                            "source_name": "HackerNews-Allwinner",
                            "description": "Mohit Kumar. (2016, May 11). Kernel Backdoor found in Gadgets Powered by Popular Chinese ARM Maker. Retrieved September 18, 2018.",
                            "url": "https://thehackernews.com/2016/05/android-kernal-exploit.html"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"Allwinner\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0035\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--a3dad2be-ce62-4440-953b-00fbce7aba93",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:47.363000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "AndroRAT",
                    "description": "[AndroRAT](https://attack.mitre.org/software/S0292) is malware that allows a third party to control the device and collect information. (Citation: Lookout-EnterpriseApps)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0292",
                            "external_id": "S0292"
                        },
                        {
                            "source_name": "AndroRAT",
                            "description": "(Citation: Lookout-EnterpriseApps)"
                        },
                        {
                            "source_name": "Lookout-EnterpriseApps",
                            "description": "Lookout. (2016, May 25). 5 active mobile threats spoofing enterprise apps. Retrieved December 19, 2016.",
                            "url": "https://blog.lookout.com/blog/2016/05/25/spoofed-apps/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"AndroRAT\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0008\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--e13d084c-382f-40fd-aa9a-98d69e20301e",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:47.674000+00:00",
                    "modified": "2022-04-15 15:36:43.770000+00:00",
                    "name": "BrainTest",
                    "description": "[BrainTest](https://attack.mitre.org/software/S0293) is a family of Android malware. (Citation: CheckPoint-BrainTest) (Citation: Lookout-BrainTest)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/software/S0293",
                            "external_id": "S0293"
                        },
                        {
                            "source_name": "CheckPoint-BrainTest",
                            "description": "Andrey Polkovnichenko and Alon Boxiner. (2015, September 21). BrainTest \u2013 A New Level of Sophistication in Mobile Malware. Retrieved December 21, 2016.",
                            "url": "http://blog.checkpoint.com/2015/09/21/braintest-a-new-level-of-sophistication-in-mobile-malware/"
                        },
                        {
                            "source_name": "Lookout-BrainTest",
                            "description": "Chris Dehghanpoor. (2016, January 6). Brain Test re-emerges: 13 apps found in Google Play  Read more: Brain Test re-emerges: 13 apps found in Google Play. Retrieved December 21, 2016.",
                            "url": "https://blog.lookout.com/blog/2016/01/06/brain-test-re-emerges/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['url']\": \"http://blog.checkpoint.com/2015/09/21/braintest-a-new-level-of-sophistication-in-mobile-malware/\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"BrainTest\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0009\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-15 15:36:43.770000+00:00\", \"old_value\": \"2018-12-11 20:40:31.461000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"CheckPoint-BrainTest\", \"old_value\": \"BrainTest\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"Andrey Polkovnichenko and Alon Boxiner. (2015, September 21). BrainTest \\u2013 A New Level of Sophistication in Mobile Malware. Retrieved December 21, 2016.\", \"old_value\": \"(Citation: CheckPoint-BrainTest) (Citation: Lookout-BrainTest)\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Lookout-BrainTest\", \"old_value\": \"CheckPoint-BrainTest\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Chris Dehghanpoor. (2016, January 6). Brain Test re-emerges: 13 apps found in Google Play  Read more: Brain Test re-emerges: 13 apps found in Google Play. Retrieved December 21, 2016.\", \"old_value\": \"Andrey Polkovnichenko and Alon Boxiner. (2015, September 21). BrainTest \\u2013 A New Level of Sophistication in Mobile Malware. Retrieved December 21, 2016.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://blog.lookout.com/blog/2016/01/06/brain-test-re-emerges/\", \"old_value\": \"http://blog.checkpoint.com/2015/09/21/braintest-a-new-level-of-sophistication-in-mobile-malware/\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}, \"iterable_item_removed\": {\"root['external_references'][3]\": {\"source_name\": \"Lookout-BrainTest\", \"description\": \"Chris Dehghanpoor. (2016, January 6). Brain Test re-emerges: 13 apps found in Google Play  Read more: Brain Test re-emerges: 13 apps found in Google Play. Retrieved December 21, 2016.\", \"url\": \"https://blog.lookout.com/blog/2016/01/06/brain-test-re-emerges/\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--ff742eeb-1f90-4f5a-8b92-9d40fffd99ca",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:37.856000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "DressCode",
                    "description": "[DressCode](https://attack.mitre.org/software/S0300) is an Android malware family. (Citation: TrendMicro-DressCode)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0300",
                            "external_id": "S0300"
                        },
                        {
                            "source_name": "DressCode",
                            "description": "(Citation: TrendMicro-DressCode)"
                        },
                        {
                            "source_name": "TrendMicro-DressCode",
                            "description": "Echo Duan. (2016, September 29). DressCode and its Potential Impact for Enterprises. Retrieved December 22, 2016.",
                            "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/dresscode-potential-impact-enterprises/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"DressCode\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0016\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--507fe748-5e4a-4b45-9e9f-8b1115f4e878",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:41.721000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "DualToy",
                    "description": "[DualToy](https://attack.mitre.org/software/S0315) is Windows malware that installs malicious applications onto Android and iOS devices connected over USB. (Citation: PaloAlto-DualToy)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0315",
                            "external_id": "S0315"
                        },
                        {
                            "source_name": "DualToy",
                            "description": "(Citation: PaloAlto-DualToy)"
                        },
                        {
                            "source_name": "PaloAlto-DualToy",
                            "description": "Claud Xiao. (2016, September 13). DualToy: New Windows Trojan Sideloads Risky Apps to Android and iOS Devices. Retrieved January 24, 2017.",
                            "url": "https://researchcenter.paloaltonetworks.com/2016/09/dualtoy-new-windows-trojan-sideloads-risky-apps-to-android-and-ios-devices/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"DualToy\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0031\", \"root['x_mitre_platforms']\": [\"Android\", \"iOS\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--c8770c81-c29f-40d2-a140-38544206b2b4",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:42.948000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "HummingBad",
                    "description": "[HummingBad](https://attack.mitre.org/software/S0322) is a family of Android malware that generates fraudulent advertising revenue and has the ability to obtain root access on older, vulnerable versions of Android. (Citation: ArsTechnica-HummingBad)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0322",
                            "external_id": "S0322"
                        },
                        {
                            "source_name": "HummingBad",
                            "description": "(Citation: ArsTechnica-HummingBad)"
                        },
                        {
                            "source_name": "ArsTechnica-HummingBad",
                            "description": "Dan Goodin. (2016, July 7). 10 million Android phones infected by all-powerful auto-rooting apps. Retrieved January 24, 2017.",
                            "url": "http://arstechnica.com/security/2016/07/virulent-auto-rooting-malware-takes-control-of-10-million-android-devices/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"HummingBad\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0038\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--6447e3a1-ef4d-44b1-99d5-6b1c4888674f",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:40.259000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "HummingWhale",
                    "description": "[HummingWhale](https://attack.mitre.org/software/S0321) is an Android malware family that performs ad fraud. (Citation: ArsTechnica-HummingWhale)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0321",
                            "external_id": "S0321"
                        },
                        {
                            "source_name": "HummingWhale",
                            "description": "(Citation: ArsTechnica-HummingWhale)"
                        },
                        {
                            "source_name": "ArsTechnica-HummingWhale",
                            "description": "Dan Goodin. (2017, January 23). Virulent Android malware returns, gets >2 million downloads on Google Play. Retrieved January 24, 2017.",
                            "url": "http://arstechnica.com/security/2017/01/virulent-android-malware-returns-gets-2-million-downloads-on-google-play/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"HummingWhale\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0037\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--172444ab-97fc-4d94-b142-179452bfb760",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2018-10-17 00:14:20.652000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "Judy",
                    "description": "[Judy](https://attack.mitre.org/software/S0325) is auto-clicking adware that was distributed through multiple apps in the Google Play Store. (Citation: CheckPoint-Judy)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0325",
                            "external_id": "S0325"
                        },
                        {
                            "source_name": "Judy",
                            "description": "(Citation: CheckPoint-Judy)"
                        },
                        {
                            "source_name": "CheckPoint-Judy",
                            "description": "CheckPoint. (2017, May 25). The Judy Malware: Possibly the largest malware campaign found on Google Play. Retrieved September 18, 2018.",
                            "url": "https://blog.checkpoint.com/2017/05/25/judy-malware-possibly-largest-malware-campaign-found-google-play/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"Judy\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0041\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--3bc1f0ad-ef11-4afc-83c0-fcffe08d4e50",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:43.815000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "KeyRaider",
                    "description": "[KeyRaider](https://attack.mitre.org/software/S0288) is malware that steals Apple account credentials and other data from jailbroken iOS devices. It also has ransomware functionality. (Citation: Xiao-KeyRaider)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0288",
                            "external_id": "S0288"
                        },
                        {
                            "source_name": "KeyRaider",
                            "description": "(Citation: Xiao-KeyRaider)"
                        },
                        {
                            "source_name": "Xiao-KeyRaider",
                            "description": "Claud Xiao. (2015, August 30). KeyRaider: iOS Malware Steals Over 225,000 Apple Accounts to Create Free App Utopia. Retrieved December 12, 2016.",
                            "url": "http://researchcenter.paloaltonetworks.com/2015/08/keyraider-ios-malware-steals-over-225000-apple-accounts-to-create-free-app-utopia/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"KeyRaider\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0004\", \"root['x_mitre_platforms']\": [\"iOS\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--f9854ba6-989d-43bf-828b-7240b8a65291",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2018-10-17 00:14:20.652000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "Marcher",
                    "description": "[Marcher](https://attack.mitre.org/software/S0317) is Android malware that is used for financial fraud. (Citation: Proofpoint-Marcher)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0317",
                            "external_id": "S0317"
                        },
                        {
                            "source_name": "Proofpoint-Marcher",
                            "description": "Proofpoint. (2017, November 3). Credential phishing and an Android banking Trojan combine in Austrian mobile attacks. Retrieved July 6, 2018.",
                            "url": "https://www.proofpoint.com/us/threat-insight/post/credential-phishing-and-android-banking-trojan-combine-austrian-mobile-attacks"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['url']\": \"https://www.proofpoint.com/us/threat-insight/post/credential-phishing-and-android-banking-trojan-combine-austrian-mobile-attacks\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"Marcher\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0033\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['external_references'][1]['source_name']\": {\"new_value\": \"Proofpoint-Marcher\", \"old_value\": \"Marcher\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"Proofpoint. (2017, November 3). Credential phishing and an Android banking Trojan combine in Austrian mobile attacks. Retrieved July 6, 2018.\", \"old_value\": \"(Citation: Proofpoint-Marcher)\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}, \"iterable_item_removed\": {\"root['external_references'][2]\": {\"source_name\": \"Proofpoint-Marcher\", \"description\": \"Proofpoint. (2017, November 3). Credential phishing and an Android banking Trojan combine in Austrian mobile attacks. Retrieved July 6, 2018.\", \"url\": \"https://www.proofpoint.com/us/threat-insight/post/credential-phishing-and-android-banking-trojan-combine-austrian-mobile-attacks\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--5ddf81ea-2c06-497b-8c30-5f1ab89a40f9",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:40.875000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "MazarBOT",
                    "description": "[MazarBOT](https://attack.mitre.org/software/S0303) is Android malware that was distributed via SMS in Denmark in 2016. (Citation: Tripwire-MazarBOT)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0303",
                            "external_id": "S0303"
                        },
                        {
                            "source_name": "MazarBOT",
                            "description": "(Citation: Tripwire-MazarBOT)"
                        },
                        {
                            "source_name": "Tripwire-MazarBOT",
                            "description": "Graham Cluley. (2016, February 16). Android users warned of malware attack spreading via SMS. Retrieved December 23, 2016.",
                            "url": "https://www.tripwire.com/state-of-security/security-data-protection/android-malware-sms/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"MazarBOT\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0019\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--23040c15-e7d8-47b5-8c16-8fd3e0e297fe",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:36.707000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "NotCompatible",
                    "description": "[NotCompatible](https://attack.mitre.org/software/S0299) is an Android malware family that was used between at least 2014 and 2016. It has multiple variants that have become more sophisticated over time. (Citation: Lookout-NotCompatible)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0299",
                            "external_id": "S0299"
                        },
                        {
                            "source_name": "NotCompatible",
                            "description": "(Citation: Lookout-NotCompatible)"
                        },
                        {
                            "source_name": "Lookout-NotCompatible",
                            "description": "Tim Strazzere. (2014, November 19). The new NotCompatible: Sophisticated and evasive threat harbors the potential to compromise enterprise networks. Retrieved December 22, 2016.",
                            "url": "https://blog.lookout.com/blog/2014/11/19/notcompatible/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"NotCompatible\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0015\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--ca4f63b9-a358-4214-bb26-8c912318cfde",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:44.540000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "OBAD",
                    "description": "OBAD is an Android malware family. (Citation: TrendMicro-Obad)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0286",
                            "external_id": "S0286"
                        },
                        {
                            "source_name": "OBAD",
                            "description": "(Citation: TrendMicro-Obad)"
                        },
                        {
                            "source_name": "TrendMicro-Obad",
                            "description": "Veo Zhang. (2013, June 13). Cybercriminals Improve Android Malware Stealth Routines with OBAD. Retrieved December 9, 2016.",
                            "url": "http://blog.trendmicro.com/trendlabs-security-intelligence/cybercriminals-improve-android-malware-stealth-routines-with-obad/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"OBAD\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0002\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--2074b2ad-612e-4758-adce-7901c1b49bbc",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:45.155000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "OldBoot",
                    "description": "[OldBoot](https://attack.mitre.org/software/S0285) is an Android malware family. (Citation: HackerNews-OldBoot)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0285",
                            "external_id": "S0285"
                        },
                        {
                            "source_name": "OldBoot",
                            "description": "(Citation: HackerNews-OldBoot)"
                        },
                        {
                            "source_name": "HackerNews-OldBoot",
                            "description": "Sudhir K Bansal. (2014, January 28). First widely distributed Android bootkit Malware infects more than 350,000 Devices. Retrieved December 21, 2016.",
                            "url": "http://thehackernews.com/2014/01/first-widely-distributed-android.html"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"OldBoot\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0001\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--c709da93-20c3-4d17-ab68-48cba76b2137",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:43.527000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "PJApps",
                    "description": "[PJApps](https://attack.mitre.org/software/S0291) is an Android malware family. (Citation: Lookout-EnterpriseApps)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0291",
                            "external_id": "S0291"
                        },
                        {
                            "source_name": "PJApps",
                            "description": "(Citation: Lookout-EnterpriseApps)"
                        },
                        {
                            "source_name": "Lookout-EnterpriseApps",
                            "description": "Lookout. (2016, May 25). 5 active mobile threats spoofing enterprise apps. Retrieved December 19, 2016.",
                            "url": "https://blog.lookout.com/blog/2016/05/25/spoofed-apps/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"PJApps\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0007\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--936be60d-90eb-4c36-9247-4b31128432c4",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:48.917000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "RuMMS",
                    "description": "[RuMMS](https://attack.mitre.org/software/S0313) is an Android malware family. (Citation: FireEye-RuMMS)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0313",
                            "external_id": "S0313"
                        },
                        {
                            "source_name": "RuMMS",
                            "description": "(Citation: FireEye-RuMMS)"
                        },
                        {
                            "source_name": "FireEye-RuMMS",
                            "description": "Wu Zhou, Deyu Hu, Jimmy Su, Yong Kang. (2016, April 26). RUMMS: THE LATEST FAMILY OF ANDROID MALWARE ATTACKING USERS IN RUSSIA VIA SMS PHISHING. Retrieved February 6, 2017.",
                            "url": "https://www.fireeye.com/blog/threat-research/2016/04/rumms-android-malware.html"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"RuMMS\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0029\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--c80a6bef-b3ce-44d0-b113-946e93124898",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:38.690000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "ShiftyBug",
                    "description": "[ShiftyBug](https://attack.mitre.org/software/S0294) is an auto-rooting adware family of malware for Android. The family is very similar to the other Android families known as Shedun, Shuanet, Kemoge, though it is not believed all the families were created by the same group. (Citation: Lookout-Adware)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0294",
                            "external_id": "S0294"
                        },
                        {
                            "source_name": "ShiftyBug",
                            "description": "(Citation: Lookout-Adware)"
                        },
                        {
                            "source_name": "Lookout-Adware",
                            "description": "Michael Bentley. (2015, November 4). Lookout discovers new trojanized adware; 20K popular apps caught in the crossfire. Retrieved December 21, 2016.",
                            "url": "https://blog.lookout.com/blog/2015/11/04/trojanized-adware/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"ShiftyBug\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0010\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--a1867c56-8c86-455a-96ad-b0d5f7e2bc17",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:46.411000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "Trojan-SMS.AndroidOS.Agent.ao",
                    "description": "[Trojan-SMS.AndroidOS.Agent.ao](https://attack.mitre.org/software/S0307) is Android malware. (Citation: Kaspersky-MobileMalware)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0307",
                            "external_id": "S0307"
                        },
                        {
                            "source_name": "Trojan-SMS.AndroidOS.Agent.ao",
                            "description": "(Citation: Kaspersky-MobileMalware)"
                        },
                        {
                            "source_name": "Kaspersky-MobileMalware",
                            "description": "Roman Unuchek and Victor Chebyshev. (2014, February 24). Mobile Malware Evolution: 2013. Retrieved December 22, 2016.",
                            "url": "https://securelist.com/mobile-malware-evolution-2013/58335/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"Trojan-SMS.AndroidOS.Agent.ao\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0023\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--28e39395-91e7-4f02-b694-5e079c964da9",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:46.107000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "Trojan-SMS.AndroidOS.FakeInst.a",
                    "description": "[Trojan-SMS.AndroidOS.FakeInst.a](https://attack.mitre.org/software/S0306) is Android malware. (Citation: Kaspersky-MobileMalware)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0306",
                            "external_id": "S0306"
                        },
                        {
                            "source_name": "Trojan-SMS.AndroidOS.FakeInst.a",
                            "description": "(Citation: Kaspersky-MobileMalware)"
                        },
                        {
                            "source_name": "Kaspersky-MobileMalware",
                            "description": "Roman Unuchek and Victor Chebyshev. (2014, February 24). Mobile Malware Evolution: 2013. Retrieved December 22, 2016.",
                            "url": "https://securelist.com/mobile-malware-evolution-2013/58335/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"Trojan-SMS.AndroidOS.FakeInst.a\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0022\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--d89c132d-7752-4c7f-9372-954a71522985",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:46.734000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "Trojan-SMS.AndroidOS.OpFake.a",
                    "description": "[Trojan-SMS.AndroidOS.OpFake.a](https://attack.mitre.org/software/S0308) is Android malware. (Citation: Kaspersky-MobileMalware)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0308",
                            "external_id": "S0308"
                        },
                        {
                            "source_name": "Trojan-SMS.AndroidOS.OpFake.a",
                            "description": "(Citation: Kaspersky-MobileMalware)"
                        },
                        {
                            "source_name": "Kaspersky-MobileMalware",
                            "description": "Roman Unuchek and Victor Chebyshev. (2014, February 24). Mobile Malware Evolution: 2013. Retrieved December 22, 2016.",
                            "url": "https://securelist.com/mobile-malware-evolution-2013/58335/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"Trojan-SMS.AndroidOS.OpFake.a\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0024\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--326eaf7b-5784-4f08-8fc2-61fd5d5bc5fb",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:37.020000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "WireLurker",
                    "description": "[WireLurker](https://attack.mitre.org/software/S0312) is a family of macOS malware that targets iOS devices connected over USB. (Citation: PaloAlto-WireLurker)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0312",
                            "external_id": "S0312"
                        },
                        {
                            "source_name": "WireLurker",
                            "description": "Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.",
                            "url": "https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf"
                        },
                        {
                            "source_name": "PaloAlto-WireLurker",
                            "description": "Claud Xiao. (2014, November 5). WireLurker: A New Era in OS X and iOS Malware. Retrieved January 24, 2017.",
                            "url": "https://researchcenter.paloaltonetworks.com/2014/11/wirelurker-new-era-os-x-ios-malware/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\", \"root['external_references'][1]['url']\": \"https://www.paloaltonetworks.com/content/dam/pan/en_US/assets/pdf/reports/Unit_42/unit42-wirelurker.pdf\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"WireLurker\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0028\", \"root['x_mitre_platforms']\": [\"iOS\"]}, \"values_changed\": {\"root['external_references'][1]['description']\": {\"new_value\": \"Claud Xiao. (n.d.). WireLurker: A New Era in iOS and OS X Malware. Retrieved July 10, 2017.\", \"old_value\": \"(Citation: PaloAlto-WireLurker)\"}, \"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--56660521-6db4-4e5a-a927-464f22954b7c",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:42.034000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "X-Agent for Android",
                    "description": "[X-Agent for Android](https://attack.mitre.org/software/S0314) is Android malware that was placed in a repackaged version of a Ukrainian artillery targeting application. The malware reportedly retrieved general location data on where the victim device was used, and therefore could likely indicate the potential location of Ukrainian artillery. (Citation: CrowdStrike-Android) Is it tracked separately from the [CHOPSTICK](https://attack.mitre.org/software/S0023).",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0314",
                            "external_id": "S0314"
                        },
                        {
                            "source_name": "X-Agent for Android",
                            "description": "(Citation: CrowdStrike-Android)"
                        },
                        {
                            "source_name": "CrowdStrike-Android",
                            "description": "CrowdStrike Global Intelligence Team. (2016). Use of Fancy Bear Android Malware in Tracking of Ukrainian FIeld Artillery Units. Retrieved February 6, 2017.",
                            "url": "https://www.crowdstrike.com/wp-content/brochures/FancyBearTracksUkrainianArtillery.pdf"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"X-Agent for Android\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0030\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "tool",
                    "id": "tool--da21929e-40c0-443d-bdf4-6b60d15448b4",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:48.609000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "Xbot",
                    "description": "[Xbot](https://attack.mitre.org/software/S0298) is an Android malware family that was observed in 2016 primarily targeting Android users in Russia and Australia. (Citation: PaloAlto-Xbot)",
                    "revoked": false,
                    "labels": [
                        "tool"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0298",
                            "external_id": "S0298"
                        },
                        {
                            "source_name": "Xbot",
                            "description": "(Citation: PaloAlto-Xbot)"
                        },
                        {
                            "source_name": "PaloAlto-Xbot",
                            "description": "Cong Zheng, Claud Xiao and Zhi Xu. (2016, February 18). New Android Trojan \u201cXbot\u201d Phishes Credit Cards and Bank Accounts, Encrypts Devices for Ransom. Retrieved December 21, 2016.",
                            "url": "http://researchcenter.paloaltonetworks.com/2016/02/new-android-trojan-xbot-phishes-credit-cards-and-bank-accounts-encrypts-devices-for-ransom/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"Xbot\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0014\", \"root['x_mitre_platforms']\": [\"Android\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--d9e07aea-baad-4b68-bdca-90c77647d7f9",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:42.661000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "XcodeGhost",
                    "description": "[XcodeGhost](https://attack.mitre.org/software/S0297) is iOS malware that infected at least 39 iOS apps in 2015 and potentially affected millions of users. (Citation: PaloAlto-XcodeGhost1) (Citation: PaloAlto-XcodeGhost)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0297",
                            "external_id": "S0297"
                        },
                        {
                            "source_name": "XcodeGhost",
                            "description": "(Citation: PaloAlto-XcodeGhost1) (Citation: PaloAlto-XcodeGhost)"
                        },
                        {
                            "source_name": "PaloAlto-XcodeGhost1",
                            "description": "Claud Xiao. (2015, September 17). Novel Malware XcodeGhost Modifies Xcode, Infects Apple iOS Apps and Hits App Store. Retrieved December 21, 2016.",
                            "url": "http://researchcenter.paloaltonetworks.com/2015/09/novel-malware-xcodeghost-modifies-xcode-infects-apple-ios-apps-and-hits-app-store/"
                        },
                        {
                            "source_name": "PaloAlto-XcodeGhost",
                            "description": "Claud Xiao. (2015, September 18). Update: XcodeGhost Attacker Can Phish Passwords and Open URLs through Infected Apps. Retrieved December 21, 2016.",
                            "url": "http://researchcenter.paloaltonetworks.com/2015/09/update-xcodeghost-attacker-can-phish-passwords-and-open-urls-though-infected-apps/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"XcodeGhost\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0013\", \"root['x_mitre_platforms']\": [\"iOS\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--a15c9357-2be0-4836-beec-594f28b9b4a9",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:48.301000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "YiSpecter",
                    "description": "[YiSpecter](https://attack.mitre.org/software/S0311) iOS malware that affects both jailbroken and non-jailbroken iOS devices. It is also unique because it abuses private APIs in the iOS system to implement functionality. (Citation: PaloAlto-YiSpecter)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0311",
                            "external_id": "S0311"
                        },
                        {
                            "source_name": "YiSpecter",
                            "description": "(Citation: PaloAlto-YiSpecter)"
                        },
                        {
                            "source_name": "PaloAlto-YiSpecter",
                            "description": "Claud Xiao. (2015, October 4). YiSpecter: First iOS Malware That Attacks Non-jailbroken Apple iOS Devices by Abusing Private APIs. Retrieved January 20, 2017.",
                            "url": "https://researchcenter.paloaltonetworks.com/2015/10/yispecter-first-ios-malware-attacks-non-jailbroken-ios-devices-by-abusing-private-apis/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"YiSpecter\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0027\", \"root['x_mitre_platforms']\": [\"iOS\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                },
                {
                    "type": "malware",
                    "id": "malware--3c3b55a6-c3e9-4043-8aae-283fe96220c0",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:44.853000+00:00",
                    "modified": "2018-12-11 20:40:31.461000+00:00",
                    "name": "ZergHelper",
                    "description": "[ZergHelper](https://attack.mitre.org/software/S0287) is iOS riskware that was unique due to its apparent evasion of Apple's App Store review process. No malicious functionality was identified in the app, but it presents security risks. (Citation: Xiao-ZergHelper)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-mobile-attack",
                            "url": "https://attack.mitre.org/software/S0287",
                            "external_id": "S0287"
                        },
                        {
                            "source_name": "ZergHelper",
                            "description": "(Citation: Xiao-ZergHelper)"
                        },
                        {
                            "source_name": "Xiao-ZergHelper",
                            "description": "Claud Xiao. (2016, February 21). Pirated iOS App Store\u2019s Client Successfully Evaded Apple iOS Code Review. Retrieved December 12, 2016.",
                            "url": "http://researchcenter.paloaltonetworks.com/2016/02/pirated-ios-app-stores-client-successfully-evaded-apple-ios-code-review/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_aliases']\": [\"ZergHelper\"], \"root['x_mitre_old_attack_id']\": \"MOB-S0003\", \"root['x_mitre_platforms']\": [\"iOS\"]}, \"values_changed\": {\"root['x_mitre_version']\": {\"new_value\": \"1.0\", \"old_value\": \"1.1\"}}}",
                    "previous_version": "1.1",
                    "version_change": "1.1 \u2192 1.0"
                }
            ],
            "patches": [
                {
                    "type": "malware",
                    "id": "malware--05c4f87c-be8f-46ea-8d9a-2a0aad8f52c1",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:40.571000+00:00",
                    "modified": "2022-05-20 17:13:16.506000+00:00",
                    "name": "DroidJack",
                    "description": "[DroidJack](https://attack.mitre.org/software/S0320) is an Android remote access tool that has been observed posing as legitimate applications including the Super Mario Run and Pokemon GO games. (Citation: Zscaler-SuperMarioRun) (Citation: Proofpoint-Droidjack)",
                    "revoked": false,
                    "labels": [
                        "malware"
                    ],
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/software/S0320",
                            "external_id": "S0320"
                        },
                        {
                            "source_name": "DroidJack",
                            "description": "(Citation: Zscaler-SuperMarioRun) (Citation: Proofpoint-Droidjack)"
                        },
                        {
                            "source_name": "Proofpoint-Droidjack",
                            "description": "Proofpoint. (2016, July 7). DroidJack Uses Side-Load\u2026It's Super Effective! Backdoored Pokemon GO Android App Found. Retrieved January 20, 2017.",
                            "url": "https://www.proofpoint.com/us/threat-insight/post/droidjack-uses-side-load-backdoored-pokemon-go-android-app"
                        },
                        {
                            "source_name": "Zscaler-SuperMarioRun",
                            "description": "Viral Gandhi. (2017, January 12). Super Mario Run Malware #2 \u2013 DroidJack RAT. Retrieved January 20, 2017.",
                            "url": "https://www.zscaler.com/blogs/security-research/super-mario-run-malware-2-droidjack-rat"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_aliases": [
                        "DroidJack"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": false,
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_platforms": [
                        "Android"
                    ],
                    "x_mitre_version": "1.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-S0036\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-05-20 17:13:16.506000+00:00\", \"old_value\": \"2019-08-09 18:02:06.618000+00:00\"}, \"root['external_references'][0]['source_name']\": {\"new_value\": \"mitre-attack\", \"old_value\": \"mitre-mobile-attack\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"Proofpoint-Droidjack\", \"old_value\": \"Zscaler-SuperMarioRun\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"Proofpoint. (2016, July 7). DroidJack Uses Side-Load\\u2026It's Super Effective! Backdoored Pokemon GO Android App Found. Retrieved January 20, 2017.\", \"old_value\": \"Viral Gandhi. (2017, January 12). Super Mario Run Malware #2 \\u2013 DroidJack RAT. Retrieved January 20, 2017.\"}, \"root['external_references'][2]['url']\": {\"new_value\": \"https://www.proofpoint.com/us/threat-insight/post/droidjack-uses-side-load-backdoored-pokemon-go-android-app\", \"old_value\": \"https://www.zscaler.com/blogs/research/super-mario-run-malware-2-\\u2013-droidjack-rat\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Zscaler-SuperMarioRun\", \"old_value\": \"Proofpoint-Droidjack\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"Viral Gandhi. (2017, January 12). Super Mario Run Malware #2 \\u2013 DroidJack RAT. Retrieved January 20, 2017.\", \"old_value\": \"Proofpoint. (2016, July 7). DroidJack Uses Side-Load\\u2026It's Super Effective! Backdoored Pokemon GO Android App Found. Retrieved January 20, 2017.\"}, \"root['external_references'][3]['url']\": {\"new_value\": \"https://www.zscaler.com/blogs/security-research/super-mario-run-malware-2-droidjack-rat\", \"old_value\": \"https://www.proofpoint.com/us/threat-insight/post/droidjack-uses-side-load-backdoored-pokemon-go-android-app\"}}}",
                    "previous_version": "1.2"
                }
            ],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "groups": {
            "additions": [],
            "major_version_changes": [
                {
                    "type": "intrusion-set",
                    "id": "intrusion-set--bef4c620-0787-42a8-a96d-b7eb6e85917c",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-05-31 21:31:48.664000+00:00",
                    "modified": "2022-03-16 18:08:13.958000+00:00",
                    "name": "APT28",
                    "description": "[APT28](https://attack.mitre.org/groups/G0007) is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165.(Citation: NSA/FBI Drovorub August 2020)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021) This group has been active since at least 2004.(Citation: DOJ GRU Indictment Jul 2018)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Crowdstrike DNC June 2016)(Citation: FireEye APT28)(Citation: SecureWorks TG-4127)(Citation: FireEye APT28 January 2017)(Citation: GRIZZLY STEPPE JAR)(Citation: Sofacy DealersChoice)(Citation: Palo Alto Sofacy 06-2018)(Citation: Symantec APT28 Oct 2018)(Citation: ESET Zebrocy May 2019)\n\n[APT28](https://attack.mitre.org/groups/G0007) reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election. (Citation: Crowdstrike DNC June 2016) In 2018, the US indicted five GRU Unit 26165 officers associated with [APT28](https://attack.mitre.org/groups/G0007) for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations.(Citation: US District Court Indictment GRU Oct 2018) Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as [Sandworm Team](https://attack.mitre.org/groups/G0034). ",
                    "aliases": [
                        "APT28",
                        "IRON TWILIGHT",
                        "SNAKEMACKEREL",
                        "Swallowtail",
                        "Group 74",
                        "Sednit",
                        "Sofacy",
                        "Pawn Storm",
                        "Fancy Bear",
                        "STRONTIUM",
                        "Tsar Team",
                        "Threat Group-4127",
                        "TG-4127"
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/groups/G0007",
                            "external_id": "G0007"
                        },
                        {
                            "source_name": "APT28",
                            "description": "(Citation: FireEye APT28) (Citation: SecureWorks TG-4127) (Citation: Crowdstrike DNC June 2016) (Citation: Kaspersky Sofacy) (Citation: ESET Sednit Part 3) (Citation: Ars Technica GRU indictment Jul 2018)(Citation: Talos Seduploader Oct 2017)(Citation: Symantec APT28 Oct 2018)(Citation: Securelist Sofacy Feb 2018)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021)"
                        },
                        {
                            "source_name": "IRON TWILIGHT",
                            "description": "(Citation: Secureworks IRON TWILIGHT Profile)(Citation: Secureworks IRON TWILIGHT Active Measures March 2017)"
                        },
                        {
                            "source_name": "SNAKEMACKEREL",
                            "description": "(Citation: Accenture SNAKEMACKEREL Nov 2018)"
                        },
                        {
                            "source_name": "Swallowtail",
                            "description": "(Citation: Symantec APT28 Oct 2018)"
                        },
                        {
                            "source_name": "Group 74",
                            "description": "(Citation: Talos Seduploader Oct 2017)"
                        },
                        {
                            "source_name": "Sednit",
                            "description": "This designation has been used in reporting both to refer to the threat group and its associated malware [JHUHUGIT](https://attack.mitre.org/software/S0044).(Citation: FireEye APT28 January 2017)(Citation: SecureWorks TG-4127)(Citation: Kaspersky Sofacy)(Citation: Ars Technica GRU indictment Jul 2018)"
                        },
                        {
                            "source_name": "Sofacy",
                            "description": "This designation has been used in reporting both to refer to the threat group and its associated malware.(Citation: FireEye APT28)(Citation: SecureWorks TG-4127)(Citation: Crowdstrike DNC June 2016)(Citation: ESET Sednit Part 3)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Talos Seduploader Oct 2017)"
                        },
                        {
                            "source_name": "Pawn Storm",
                            "description": "(Citation: SecureWorks TG-4127)(Citation: ESET Sednit Part 3)(Citation: TrendMicro Pawn Storm Dec 2020) "
                        },
                        {
                            "source_name": "Fancy Bear",
                            "description": "(Citation: Crowdstrike DNC June 2016)(Citation: Kaspersky Sofacy)(Citation: ESET Sednit Part 3)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Talos Seduploader Oct 2017)(Citation: Symantec APT28 Oct 2018)(Citation: Securelist Sofacy Feb 2018)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021)"
                        },
                        {
                            "source_name": "STRONTIUM",
                            "description": "(Citation: Kaspersky Sofacy)(Citation: ESET Sednit Part 3)(Citation: Microsoft STRONTIUM Aug 2019)(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020)(Citation: TrendMicro Pawn Storm Dec 2020)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021)"
                        },
                        {
                            "source_name": "Tsar Team",
                            "description": "(Citation: ESET Sednit Part 3)(Citation: Talos Seduploader Oct 2017)(Citation: Talos Seduploader Oct 2017)"
                        },
                        {
                            "source_name": "Threat Group-4127",
                            "description": "(Citation: SecureWorks TG-4127)"
                        },
                        {
                            "source_name": "TG-4127",
                            "description": "(Citation: SecureWorks TG-4127)"
                        },
                        {
                            "source_name": "NSA/FBI Drovorub August 2020",
                            "description": "NSA/FBI. (2020, August). Russian GRU 85th GTsSS Deploys Previously Undisclosed Drovorub Malware. Retrieved August 25, 2020.",
                            "url": "https://media.defense.gov/2020/Aug/13/2002476465/-1/-1/0/CSA_DROVORUB_RUSSIAN_GRU_MALWARE_AUG_2020.PDF"
                        },
                        {
                            "source_name": "Cybersecurity Advisory GRU Brute Force Campaign July 2021",
                            "description": "NSA, CISA, FBI, NCSC. (2021, July). Russian GRU Conducting Global Brute Force Campaign to Compromise Enterprise and Cloud Environments. Retrieved July 26, 2021.",
                            "url": "https://media.defense.gov/2021/Jul/01/2002753896/-1/-1/1/CSA_GRU_GLOBAL_BRUTE_FORCE_CAMPAIGN_UOO158036-21.PDF"
                        },
                        {
                            "source_name": "DOJ GRU Indictment Jul 2018",
                            "description": "Mueller, R. (2018, July 13). Indictment - United States of America vs. VIKTOR BORISOVICH NETYKSHO, et al. Retrieved September 13, 2018.",
                            "url": "https://www.justice.gov/file/1080281/download"
                        },
                        {
                            "source_name": "Ars Technica GRU indictment Jul 2018",
                            "description": "Gallagher, S. (2018, July 27). How they did it (and will likely try again): GRU hackers vs. US elections. Retrieved September 13, 2018.",
                            "url": "https://arstechnica.com/information-technology/2018/07/from-bitly-to-x-agent-how-gru-hackers-targeted-the-2016-presidential-election/"
                        },
                        {
                            "source_name": "Crowdstrike DNC June 2016",
                            "description": "Alperovitch, D.. (2016, June 15). Bears in the Midst: Intrusion into the Democratic National Committee. Retrieved August 3, 2016.",
                            "url": "https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/"
                        },
                        {
                            "source_name": "FireEye APT28",
                            "description": "FireEye. (2015). APT28: A WINDOW INTO RUSSIA\u2019S CYBER ESPIONAGE OPERATIONS?. Retrieved August 19, 2015.",
                            "url": "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-apt28.pdf"
                        },
                        {
                            "source_name": "SecureWorks TG-4127",
                            "description": "SecureWorks Counter Threat Unit Threat Intelligence. (2016, June 16). Threat Group-4127 Targets Hillary Clinton Presidential Campaign. Retrieved August 3, 2016.",
                            "url": "https://www.secureworks.com/research/threat-group-4127-targets-hillary-clinton-presidential-campaign"
                        },
                        {
                            "source_name": "FireEye APT28 January 2017",
                            "description": "FireEye iSIGHT Intelligence. (2017, January 11). APT28: At the Center of the Storm. Retrieved January 11, 2017.",
                            "url": "https://www2.fireeye.com/rs/848-DID-242/images/APT28-Center-of-Storm-2017.pdf"
                        },
                        {
                            "source_name": "GRIZZLY STEPPE JAR",
                            "description": "Department of Homeland Security and Federal Bureau of Investigation. (2016, December 29). GRIZZLY STEPPE \u2013 Russian Malicious Cyber Activity. Retrieved January 11, 2017.",
                            "url": "https://www.us-cert.gov/sites/default/files/publications/JAR_16-20296A_GRIZZLY%20STEPPE-2016-1229.pdf"
                        },
                        {
                            "source_name": "Sofacy DealersChoice",
                            "description": "Falcone, R. (2018, March 15). Sofacy Uses DealersChoice to Target European Government Agency. Retrieved June 4, 2018.",
                            "url": "https://researchcenter.paloaltonetworks.com/2018/03/unit42-sofacy-uses-dealerschoice-target-european-government-agency/"
                        },
                        {
                            "source_name": "Palo Alto Sofacy 06-2018",
                            "description": "Lee, B., Falcone, R. (2018, June 06). Sofacy Group\u2019s Parallel Attacks. Retrieved June 18, 2018.",
                            "url": "https://researchcenter.paloaltonetworks.com/2018/06/unit42-sofacy-groups-parallel-attacks/"
                        },
                        {
                            "source_name": "Symantec APT28 Oct 2018",
                            "description": "Symantec Security Response. (2018, October 04). APT28: New Espionage Operations Target Military and Government Organizations. Retrieved November 14, 2018.",
                            "url": "https://www.symantec.com/blogs/election-security/apt28-espionage-military-government"
                        },
                        {
                            "source_name": "ESET Zebrocy May 2019",
                            "description": "ESET Research. (2019, May 22). A journey to Zebrocy land. Retrieved June 20, 2019.",
                            "url": "https://www.welivesecurity.com/2019/05/22/journey-zebrocy-land/"
                        },
                        {
                            "source_name": "US District Court Indictment GRU Oct 2018",
                            "description": "Brady, S . (2018, October 3). Indictment - United States vs Aleksei Sergeyevich Morenets, et al.. Retrieved October 1, 2020.",
                            "url": "https://www.justice.gov/opa/page/file/1098481/download"
                        },
                        {
                            "source_name": "Kaspersky Sofacy",
                            "description": "Kaspersky Lab's Global Research and Analysis Team. (2015, December 4). Sofacy APT hits high profile targets with updated toolset. Retrieved December 10, 2015.",
                            "url": "https://securelist.com/sofacy-apt-hits-high-profile-targets-with-updated-toolset/72924/"
                        },
                        {
                            "source_name": "ESET Sednit Part 3",
                            "description": "ESET. (2016, October). En Route with Sednit - Part 3: A Mysterious Downloader. Retrieved November 21, 2016.",
                            "url": "http://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part3.pdf"
                        },
                        {
                            "source_name": "Talos Seduploader Oct 2017",
                            "description": "Mercer, W., et al. (2017, October 22). \"Cyber Conflict\" Decoy Document Used in Real Cyber Conflict. Retrieved November 2, 2018.",
                            "url": "https://blog.talosintelligence.com/2017/10/cyber-conflict-decoy-document.html"
                        },
                        {
                            "source_name": "Securelist Sofacy Feb 2018",
                            "description": "Kaspersky Lab's Global Research & Analysis Team. (2018, February 20). A Slice of 2017 Sofacy Activity. Retrieved November 27, 2018.",
                            "url": "https://securelist.com/a-slice-of-2017-sofacy-activity/83930/"
                        },
                        {
                            "source_name": "Secureworks IRON TWILIGHT Profile",
                            "description": "Secureworks CTU. (n.d.). IRON TWILIGHT. Retrieved February 28, 2022.",
                            "url": "https://www.secureworks.com/research/threat-profiles/iron-twilight"
                        },
                        {
                            "source_name": "Secureworks IRON TWILIGHT Active Measures March 2017",
                            "description": "Secureworks CTU. (2017, March 30). IRON TWILIGHT Supports Active Measures. Retrieved February 28, 2022.",
                            "url": "https://www.secureworks.com/research/iron-twilight-supports-active-measures"
                        },
                        {
                            "source_name": "Accenture SNAKEMACKEREL Nov 2018",
                            "description": "Accenture Security. (2018, November 29). SNAKEMACKEREL. Retrieved April 15, 2019.",
                            "url": "https://www.accenture.com/t20181129T203820Z__w__/us-en/_acnmedia/PDF-90/Accenture-snakemackerel-delivers-zekapab-malware.pdf#zoom=50"
                        },
                        {
                            "source_name": "TrendMicro Pawn Storm Dec 2020",
                            "description": "Hacquebord, F., Remorin, L. (2020, December 17). Pawn Storm\u2019s Lack of Sophistication as a Strategy. Retrieved January 13, 2021.",
                            "url": "https://www.trendmicro.com/en_us/research/20/l/pawn-storm-lack-of-sophistication-as-a-strategy.html"
                        },
                        {
                            "source_name": "Microsoft STRONTIUM Aug 2019",
                            "description": "MSRC Team. (2019, August 5). Corporate IoT \u2013 a path to intrusion. Retrieved August 16, 2019.",
                            "url": "https://msrc-blog.microsoft.com/2019/08/05/corporate-iot-a-path-to-intrusion/"
                        },
                        {
                            "source_name": "Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020",
                            "description": "Microsoft Threat Intelligence Center (MSTIC). (2020, September 10). STRONTIUM: Detecting new patterns in credential harvesting. Retrieved September 11, 2020.",
                            "url": "https://www.microsoft.com/security/blog/2020/09/10/strontium-detecting-new-patters-credential-harvesting/"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_contributors": [
                        "S\u00e9bastien Ruel, CGI",
                        "Drew Church, Splunk",
                        "Emily Ratliff, IBM",
                        "Richard Gold, Digital Shadows"
                    ],
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "4.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['external_references'][13]['url']\": \"https://media.defense.gov/2020/Aug/13/2002476465/-1/-1/0/CSA_DROVORUB_RUSSIAN_GRU_MALWARE_AUG_2020.PDF\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-03-16 18:08:13.958000+00:00\", \"old_value\": \"2021-10-18 20:34:03.233000+00:00\"}, \"root['external_references'][2]['source_name']\": {\"new_value\": \"IRON TWILIGHT\", \"old_value\": \"SNAKEMACKEREL\"}, \"root['external_references'][2]['description']\": {\"new_value\": \"(Citation: Secureworks IRON TWILIGHT Profile)(Citation: Secureworks IRON TWILIGHT Active Measures March 2017)\", \"old_value\": \"(Citation: Accenture SNAKEMACKEREL Nov 2018)\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"SNAKEMACKEREL\", \"old_value\": \"Swallowtail\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"(Citation: Accenture SNAKEMACKEREL Nov 2018)\", \"old_value\": \"(Citation: Symantec APT28 Oct 2018)\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Swallowtail\", \"old_value\": \"Group 74\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"(Citation: Symantec APT28 Oct 2018)\", \"old_value\": \"(Citation: Talos Seduploader Oct 2017)\"}, \"root['external_references'][5]['source_name']\": {\"new_value\": \"Group 74\", \"old_value\": \"Sednit\"}, \"root['external_references'][5]['description']\": {\"new_value\": \"(Citation: Talos Seduploader Oct 2017)\", \"old_value\": \"This designation has been used in reporting both to refer to the threat group and its associated malware JHUHUGIT.(Citation: FireEye APT28 January 2017)(Citation: SecureWorks TG-4127)(Citation: Kaspersky Sofacy)(Citation: Ars Technica GRU indictment Jul 2018)\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"Sednit\", \"old_value\": \"Sofacy\"}, \"root['external_references'][6]['description']\": {\"new_value\": \"This designation has been used in reporting both to refer to the threat group and its associated malware [JHUHUGIT](https://attack.mitre.org/software/S0044).(Citation: FireEye APT28 January 2017)(Citation: SecureWorks TG-4127)(Citation: Kaspersky Sofacy)(Citation: Ars Technica GRU indictment Jul 2018)\", \"old_value\": \"This designation has been used in reporting both to refer to the threat group and its associated malware.(Citation: FireEye APT28)(Citation: SecureWorks TG-4127)(Citation: Crowdstrike DNC June 2016)(Citation: ESET Sednit Part 3)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Talos Seduploader Oct 2017)\"}, \"root['external_references'][7]['source_name']\": {\"new_value\": \"Sofacy\", \"old_value\": \"Pawn Storm\"}, \"root['external_references'][7]['description']\": {\"new_value\": \"This designation has been used in reporting both to refer to the threat group and its associated malware.(Citation: FireEye APT28)(Citation: SecureWorks TG-4127)(Citation: Crowdstrike DNC June 2016)(Citation: ESET Sednit Part 3)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Talos Seduploader Oct 2017)\", \"old_value\": \"(Citation: SecureWorks TG-4127)(Citation: ESET Sednit Part 3)(Citation: TrendMicro Pawn Storm Dec 2020) \"}, \"root['external_references'][8]['source_name']\": {\"new_value\": \"Pawn Storm\", \"old_value\": \"Fancy Bear\"}, \"root['external_references'][8]['description']\": {\"new_value\": \"(Citation: SecureWorks TG-4127)(Citation: ESET Sednit Part 3)(Citation: TrendMicro Pawn Storm Dec 2020) \", \"old_value\": \"(Citation: Crowdstrike DNC June 2016)(Citation: Kaspersky Sofacy)(Citation: ESET Sednit Part 3)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Talos Seduploader Oct 2017)(Citation: Symantec APT28 Oct 2018)(Citation: Securelist Sofacy Feb 2018)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021)\"}, \"root['external_references'][9]['source_name']\": {\"new_value\": \"Fancy Bear\", \"old_value\": \"STRONTIUM\"}, \"root['external_references'][9]['description']\": {\"new_value\": \"(Citation: Crowdstrike DNC June 2016)(Citation: Kaspersky Sofacy)(Citation: ESET Sednit Part 3)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Talos Seduploader Oct 2017)(Citation: Symantec APT28 Oct 2018)(Citation: Securelist Sofacy Feb 2018)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021)\", \"old_value\": \"(Citation: Kaspersky Sofacy)(Citation: ESET Sednit Part 3)(Citation: Microsoft STRONTIUM Aug 2019)(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020)(Citation: TrendMicro Pawn Storm Dec 2020)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021)\"}, \"root['external_references'][10]['source_name']\": {\"new_value\": \"STRONTIUM\", \"old_value\": \"Tsar Team\"}, \"root['external_references'][10]['description']\": {\"new_value\": \"(Citation: Kaspersky Sofacy)(Citation: ESET Sednit Part 3)(Citation: Microsoft STRONTIUM Aug 2019)(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020)(Citation: TrendMicro Pawn Storm Dec 2020)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021)\", \"old_value\": \"(Citation: ESET Sednit Part 3)(Citation: Talos Seduploader Oct 2017)(Citation: Talos Seduploader Oct 2017)\"}, \"root['external_references'][11]['source_name']\": {\"new_value\": \"Tsar Team\", \"old_value\": \"Threat Group-4127\"}, \"root['external_references'][11]['description']\": {\"new_value\": \"(Citation: ESET Sednit Part 3)(Citation: Talos Seduploader Oct 2017)(Citation: Talos Seduploader Oct 2017)\", \"old_value\": \"(Citation: SecureWorks TG-4127)\"}, \"root['external_references'][12]['source_name']\": {\"new_value\": \"Threat Group-4127\", \"old_value\": \"TG-4127\"}, \"root['external_references'][13]['source_name']\": {\"new_value\": \"TG-4127\", \"old_value\": \"NSA/FBI Drovorub August 2020\"}, \"root['external_references'][13]['description']\": {\"new_value\": \"(Citation: SecureWorks TG-4127)\", \"old_value\": \"NSA/FBI. (2020, August). Russian GRU 85th GTsSS Deploys Previously Undisclosed Drovorub Malware. Retrieved August 25, 2020.\"}, \"root['external_references'][14]['source_name']\": {\"new_value\": \"NSA/FBI Drovorub August 2020\", \"old_value\": \"Cybersecurity Advisory GRU Brute Force Campaign July 2021\"}, \"root['external_references'][14]['description']\": {\"new_value\": \"NSA/FBI. (2020, August). Russian GRU 85th GTsSS Deploys Previously Undisclosed Drovorub Malware. Retrieved August 25, 2020.\", \"old_value\": \"NSA, CISA, FBI, NCSC. (2021, July). Russian GRU Conducting Global Brute Force Campaign to Compromise Enterprise and Cloud Environments. Retrieved July 26, 2021.\"}, \"root['external_references'][14]['url']\": {\"new_value\": \"https://media.defense.gov/2020/Aug/13/2002476465/-1/-1/0/CSA_DROVORUB_RUSSIAN_GRU_MALWARE_AUG_2020.PDF\", \"old_value\": \"https://media.defense.gov/2021/Jul/01/2002753896/-1/-1/1/CSA_GRU_GLOBAL_BRUTE_FORCE_CAMPAIGN_UOO158036-21.PDF\"}, \"root['external_references'][15]['source_name']\": {\"new_value\": \"Cybersecurity Advisory GRU Brute Force Campaign July 2021\", \"old_value\": \"DOJ GRU Indictment Jul 2018\"}, \"root['external_references'][15]['description']\": {\"new_value\": \"NSA, CISA, FBI, NCSC. (2021, July). Russian GRU Conducting Global Brute Force Campaign to Compromise Enterprise and Cloud Environments. Retrieved July 26, 2021.\", \"old_value\": \"Mueller, R. (2018, July 13). Indictment - United States of America vs. VIKTOR BORISOVICH NETYKSHO, et al. Retrieved September 13, 2018.\"}, \"root['external_references'][15]['url']\": {\"new_value\": \"https://media.defense.gov/2021/Jul/01/2002753896/-1/-1/1/CSA_GRU_GLOBAL_BRUTE_FORCE_CAMPAIGN_UOO158036-21.PDF\", \"old_value\": \"https://www.justice.gov/file/1080281/download\"}, \"root['external_references'][16]['source_name']\": {\"new_value\": \"DOJ GRU Indictment Jul 2018\", \"old_value\": \"Ars Technica GRU indictment Jul 2018\"}, \"root['external_references'][16]['description']\": {\"new_value\": \"Mueller, R. (2018, July 13). Indictment - United States of America vs. VIKTOR BORISOVICH NETYKSHO, et al. Retrieved September 13, 2018.\", \"old_value\": \"Gallagher, S. (2018, July 27). How they did it (and will likely try again): GRU hackers vs. US elections. Retrieved September 13, 2018.\"}, \"root['external_references'][16]['url']\": {\"new_value\": \"https://www.justice.gov/file/1080281/download\", \"old_value\": \"https://arstechnica.com/information-technology/2018/07/from-bitly-to-x-agent-how-gru-hackers-targeted-the-2016-presidential-election/\"}, \"root['external_references'][17]['source_name']\": {\"new_value\": \"Ars Technica GRU indictment Jul 2018\", \"old_value\": \"Crowdstrike DNC June 2016\"}, \"root['external_references'][17]['description']\": {\"new_value\": \"Gallagher, S. (2018, July 27). How they did it (and will likely try again): GRU hackers vs. US elections. Retrieved September 13, 2018.\", \"old_value\": \"Alperovitch, D.. (2016, June 15). Bears in the Midst: Intrusion into the Democratic National Committee. Retrieved August 3, 2016.\"}, \"root['external_references'][17]['url']\": {\"new_value\": \"https://arstechnica.com/information-technology/2018/07/from-bitly-to-x-agent-how-gru-hackers-targeted-the-2016-presidential-election/\", \"old_value\": \"https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/\"}, \"root['external_references'][18]['source_name']\": {\"new_value\": \"Crowdstrike DNC June 2016\", \"old_value\": \"FireEye APT28\"}, \"root['external_references'][18]['description']\": {\"new_value\": \"Alperovitch, D.. (2016, June 15). Bears in the Midst: Intrusion into the Democratic National Committee. Retrieved August 3, 2016.\", \"old_value\": \"FireEye. (2015). APT28: A WINDOW INTO RUSSIA\\u2019S CYBER ESPIONAGE OPERATIONS?. Retrieved August 19, 2015.\"}, \"root['external_references'][18]['url']\": {\"new_value\": \"https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/\", \"old_value\": \"https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-apt28.pdf\"}, \"root['external_references'][19]['source_name']\": {\"new_value\": \"FireEye APT28\", \"old_value\": \"SecureWorks TG-4127\"}, \"root['external_references'][19]['description']\": {\"new_value\": \"FireEye. (2015). APT28: A WINDOW INTO RUSSIA\\u2019S CYBER ESPIONAGE OPERATIONS?. Retrieved August 19, 2015.\", \"old_value\": \"SecureWorks Counter Threat Unit Threat Intelligence. (2016, June 16). Threat Group-4127 Targets Hillary Clinton Presidential Campaign. Retrieved August 3, 2016.\"}, \"root['external_references'][19]['url']\": {\"new_value\": \"https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-apt28.pdf\", \"old_value\": \"https://www.secureworks.com/research/threat-group-4127-targets-hillary-clinton-presidential-campaign\"}, \"root['external_references'][20]['source_name']\": {\"new_value\": \"SecureWorks TG-4127\", \"old_value\": \"FireEye APT28 January 2017\"}, \"root['external_references'][20]['description']\": {\"new_value\": \"SecureWorks Counter Threat Unit Threat Intelligence. (2016, June 16). Threat Group-4127 Targets Hillary Clinton Presidential Campaign. Retrieved August 3, 2016.\", \"old_value\": \"FireEye iSIGHT Intelligence. (2017, January 11). APT28: At the Center of the Storm. Retrieved January 11, 2017.\"}, \"root['external_references'][20]['url']\": {\"new_value\": \"https://www.secureworks.com/research/threat-group-4127-targets-hillary-clinton-presidential-campaign\", \"old_value\": \"https://www2.fireeye.com/rs/848-DID-242/images/APT28-Center-of-Storm-2017.pdf\"}, \"root['external_references'][21]['source_name']\": {\"new_value\": \"FireEye APT28 January 2017\", \"old_value\": \"GRIZZLY STEPPE JAR\"}, \"root['external_references'][21]['description']\": {\"new_value\": \"FireEye iSIGHT Intelligence. (2017, January 11). APT28: At the Center of the Storm. Retrieved January 11, 2017.\", \"old_value\": \"Department of Homeland Security and Federal Bureau of Investigation. (2016, December 29). GRIZZLY STEPPE \\u2013 Russian Malicious Cyber Activity. Retrieved January 11, 2017.\"}, \"root['external_references'][21]['url']\": {\"new_value\": \"https://www2.fireeye.com/rs/848-DID-242/images/APT28-Center-of-Storm-2017.pdf\", \"old_value\": \"https://www.us-cert.gov/sites/default/files/publications/JAR_16-20296A_GRIZZLY%20STEPPE-2016-1229.pdf\"}, \"root['external_references'][22]['source_name']\": {\"new_value\": \"GRIZZLY STEPPE JAR\", \"old_value\": \"Sofacy DealersChoice\"}, \"root['external_references'][22]['description']\": {\"new_value\": \"Department of Homeland Security and Federal Bureau of Investigation. (2016, December 29). GRIZZLY STEPPE \\u2013 Russian Malicious Cyber Activity. Retrieved January 11, 2017.\", \"old_value\": \"Falcone, R. (2018, March 15). Sofacy Uses DealersChoice to Target European Government Agency. Retrieved June 4, 2018.\"}, \"root['external_references'][22]['url']\": {\"new_value\": \"https://www.us-cert.gov/sites/default/files/publications/JAR_16-20296A_GRIZZLY%20STEPPE-2016-1229.pdf\", \"old_value\": \"https://researchcenter.paloaltonetworks.com/2018/03/unit42-sofacy-uses-dealerschoice-target-european-government-agency/\"}, \"root['external_references'][23]['source_name']\": {\"new_value\": \"Sofacy DealersChoice\", \"old_value\": \"Palo Alto Sofacy 06-2018\"}, \"root['external_references'][23]['description']\": {\"new_value\": \"Falcone, R. (2018, March 15). Sofacy Uses DealersChoice to Target European Government Agency. Retrieved June 4, 2018.\", \"old_value\": \"Lee, B., Falcone, R. (2018, June 06). Sofacy Group\\u2019s Parallel Attacks. Retrieved June 18, 2018.\"}, \"root['external_references'][23]['url']\": {\"new_value\": \"https://researchcenter.paloaltonetworks.com/2018/03/unit42-sofacy-uses-dealerschoice-target-european-government-agency/\", \"old_value\": \"https://researchcenter.paloaltonetworks.com/2018/06/unit42-sofacy-groups-parallel-attacks/\"}, \"root['external_references'][24]['source_name']\": {\"new_value\": \"Palo Alto Sofacy 06-2018\", \"old_value\": \"Symantec APT28 Oct 2018\"}, \"root['external_references'][24]['description']\": {\"new_value\": \"Lee, B., Falcone, R. (2018, June 06). Sofacy Group\\u2019s Parallel Attacks. Retrieved June 18, 2018.\", \"old_value\": \"Symantec Security Response. (2018, October 04). APT28: New Espionage Operations Target Military and Government Organizations. Retrieved November 14, 2018.\"}, \"root['external_references'][24]['url']\": {\"new_value\": \"https://researchcenter.paloaltonetworks.com/2018/06/unit42-sofacy-groups-parallel-attacks/\", \"old_value\": \"https://www.symantec.com/blogs/election-security/apt28-espionage-military-government\"}, \"root['external_references'][25]['source_name']\": {\"new_value\": \"Symantec APT28 Oct 2018\", \"old_value\": \"ESET Zebrocy May 2019\"}, \"root['external_references'][25]['description']\": {\"new_value\": \"Symantec Security Response. (2018, October 04). APT28: New Espionage Operations Target Military and Government Organizations. Retrieved November 14, 2018.\", \"old_value\": \"ESET Research. (2019, May 22). A journey to Zebrocy land. Retrieved June 20, 2019.\"}, \"root['external_references'][25]['url']\": {\"new_value\": \"https://www.symantec.com/blogs/election-security/apt28-espionage-military-government\", \"old_value\": \"https://www.welivesecurity.com/2019/05/22/journey-zebrocy-land/\"}, \"root['external_references'][26]['source_name']\": {\"new_value\": \"ESET Zebrocy May 2019\", \"old_value\": \"US District Court Indictment GRU Oct 2018\"}, \"root['external_references'][26]['description']\": {\"new_value\": \"ESET Research. (2019, May 22). A journey to Zebrocy land. Retrieved June 20, 2019.\", \"old_value\": \"Brady, S . (2018, October 3). Indictment - United States vs Aleksei Sergeyevich Morenets, et al.. Retrieved October 1, 2020.\"}, \"root['external_references'][26]['url']\": {\"new_value\": \"https://www.welivesecurity.com/2019/05/22/journey-zebrocy-land/\", \"old_value\": \"https://www.justice.gov/opa/page/file/1098481/download\"}, \"root['external_references'][27]['source_name']\": {\"new_value\": \"US District Court Indictment GRU Oct 2018\", \"old_value\": \"Kaspersky Sofacy\"}, \"root['external_references'][27]['description']\": {\"new_value\": \"Brady, S . (2018, October 3). Indictment - United States vs Aleksei Sergeyevich Morenets, et al.. Retrieved October 1, 2020.\", \"old_value\": \"Kaspersky Lab's Global Research and Analysis Team. (2015, December 4). Sofacy APT hits high profile targets with updated toolset. Retrieved December 10, 2015.\"}, \"root['external_references'][27]['url']\": {\"new_value\": \"https://www.justice.gov/opa/page/file/1098481/download\", \"old_value\": \"https://securelist.com/sofacy-apt-hits-high-profile-targets-with-updated-toolset/72924/\"}, \"root['external_references'][28]['source_name']\": {\"new_value\": \"Kaspersky Sofacy\", \"old_value\": \"ESET Sednit Part 3\"}, \"root['external_references'][28]['description']\": {\"new_value\": \"Kaspersky Lab's Global Research and Analysis Team. (2015, December 4). Sofacy APT hits high profile targets with updated toolset. Retrieved December 10, 2015.\", \"old_value\": \"ESET. (2016, October). En Route with Sednit - Part 3: A Mysterious Downloader. Retrieved November 21, 2016.\"}, \"root['external_references'][28]['url']\": {\"new_value\": \"https://securelist.com/sofacy-apt-hits-high-profile-targets-with-updated-toolset/72924/\", \"old_value\": \"http://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part3.pdf\"}, \"root['external_references'][29]['source_name']\": {\"new_value\": \"ESET Sednit Part 3\", \"old_value\": \"Talos Seduploader Oct 2017\"}, \"root['external_references'][29]['description']\": {\"new_value\": \"ESET. (2016, October). En Route with Sednit - Part 3: A Mysterious Downloader. Retrieved November 21, 2016.\", \"old_value\": \"Mercer, W., et al. (2017, October 22). \\\"Cyber Conflict\\\" Decoy Document Used in Real Cyber Conflict. Retrieved November 2, 2018.\"}, \"root['external_references'][29]['url']\": {\"new_value\": \"http://www.welivesecurity.com/wp-content/uploads/2016/10/eset-sednit-part3.pdf\", \"old_value\": \"https://blog.talosintelligence.com/2017/10/cyber-conflict-decoy-document.html\"}, \"root['external_references'][30]['source_name']\": {\"new_value\": \"Talos Seduploader Oct 2017\", \"old_value\": \"Securelist Sofacy Feb 2018\"}, \"root['external_references'][30]['description']\": {\"new_value\": \"Mercer, W., et al. (2017, October 22). \\\"Cyber Conflict\\\" Decoy Document Used in Real Cyber Conflict. Retrieved November 2, 2018.\", \"old_value\": \"Kaspersky Lab's Global Research & Analysis Team. (2018, February 20). A Slice of 2017 Sofacy Activity. Retrieved November 27, 2018.\"}, \"root['external_references'][30]['url']\": {\"new_value\": \"https://blog.talosintelligence.com/2017/10/cyber-conflict-decoy-document.html\", \"old_value\": \"https://securelist.com/a-slice-of-2017-sofacy-activity/83930/\"}, \"root['external_references'][31]['source_name']\": {\"new_value\": \"Securelist Sofacy Feb 2018\", \"old_value\": \"Accenture SNAKEMACKEREL Nov 2018\"}, \"root['external_references'][31]['description']\": {\"new_value\": \"Kaspersky Lab's Global Research & Analysis Team. (2018, February 20). A Slice of 2017 Sofacy Activity. Retrieved November 27, 2018.\", \"old_value\": \"Accenture Security. (2018, November 29). SNAKEMACKEREL. Retrieved April 15, 2019.\"}, \"root['external_references'][31]['url']\": {\"new_value\": \"https://securelist.com/a-slice-of-2017-sofacy-activity/83930/\", \"old_value\": \"https://www.accenture.com/t20181129T203820Z__w__/us-en/_acnmedia/PDF-90/Accenture-snakemackerel-delivers-zekapab-malware.pdf#zoom=50\"}, \"root['external_references'][32]['source_name']\": {\"new_value\": \"Secureworks IRON TWILIGHT Profile\", \"old_value\": \"TrendMicro Pawn Storm Dec 2020\"}, \"root['external_references'][32]['description']\": {\"new_value\": \"Secureworks CTU. (n.d.). IRON TWILIGHT. Retrieved February 28, 2022.\", \"old_value\": \"Hacquebord, F., Remorin, L. (2020, December 17). Pawn Storm\\u2019s Lack of Sophistication as a Strategy. Retrieved January 13, 2021.\"}, \"root['external_references'][32]['url']\": {\"new_value\": \"https://www.secureworks.com/research/threat-profiles/iron-twilight\", \"old_value\": \"https://www.trendmicro.com/en_us/research/20/l/pawn-storm-lack-of-sophistication-as-a-strategy.html\"}, \"root['external_references'][33]['source_name']\": {\"new_value\": \"Secureworks IRON TWILIGHT Active Measures March 2017\", \"old_value\": \"Microsoft STRONTIUM Aug 2019\"}, \"root['external_references'][33]['description']\": {\"new_value\": \"Secureworks CTU. (2017, March 30). IRON TWILIGHT Supports Active Measures. Retrieved February 28, 2022.\", \"old_value\": \"MSRC Team. (2019, August 5). Corporate IoT \\u2013 a path to intrusion. Retrieved August 16, 2019.\"}, \"root['external_references'][33]['url']\": {\"new_value\": \"https://www.secureworks.com/research/iron-twilight-supports-active-measures\", \"old_value\": \"https://msrc-blog.microsoft.com/2019/08/05/corporate-iot-a-path-to-intrusion/\"}, \"root['external_references'][34]['source_name']\": {\"new_value\": \"Accenture SNAKEMACKEREL Nov 2018\", \"old_value\": \"Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020\"}, \"root['external_references'][34]['description']\": {\"new_value\": \"Accenture Security. (2018, November 29). SNAKEMACKEREL. Retrieved April 15, 2019.\", \"old_value\": \"Microsoft Threat Intelligence Center (MSTIC). (2020, September 10). STRONTIUM: Detecting new patterns in credential harvesting. Retrieved September 11, 2020.\"}, \"root['external_references'][34]['url']\": {\"new_value\": \"https://www.accenture.com/t20181129T203820Z__w__/us-en/_acnmedia/PDF-90/Accenture-snakemackerel-delivers-zekapab-malware.pdf#zoom=50\", \"old_value\": \"https://www.microsoft.com/security/blog/2020/09/10/strontium-detecting-new-patters-credential-harvesting/\"}, \"root['x_mitre_version']\": {\"new_value\": \"4.0\", \"old_value\": \"3.2\"}}, \"iterable_item_added\": {\"root['aliases'][1]\": \"IRON TWILIGHT\", \"root['external_references'][35]\": {\"source_name\": \"TrendMicro Pawn Storm Dec 2020\", \"description\": \"Hacquebord, F., Remorin, L. (2020, December 17). Pawn Storm\\u2019s Lack of Sophistication as a Strategy. Retrieved January 13, 2021.\", \"url\": \"https://www.trendmicro.com/en_us/research/20/l/pawn-storm-lack-of-sophistication-as-a-strategy.html\"}, \"root['external_references'][36]\": {\"source_name\": \"Microsoft STRONTIUM Aug 2019\", \"description\": \"MSRC Team. (2019, August 5). Corporate IoT \\u2013 a path to intrusion. Retrieved August 16, 2019.\", \"url\": \"https://msrc-blog.microsoft.com/2019/08/05/corporate-iot-a-path-to-intrusion/\"}, \"root['external_references'][37]\": {\"source_name\": \"Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020\", \"description\": \"Microsoft Threat Intelligence Center (MSTIC). (2020, September 10). STRONTIUM: Detecting new patterns in credential harvesting. Retrieved September 11, 2020.\", \"url\": \"https://www.microsoft.com/security/blog/2020/09/10/strontium-detecting-new-patters-credential-harvesting/\"}}}",
                    "previous_version": "3.2",
                    "version_change": "3.2 \u2192 4.0"
                }
            ],
            "minor_version_changes": [
                {
                    "type": "intrusion-set",
                    "id": "intrusion-set--381fcf73-60f6-4ab2-9991-6af3cbc35192",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-05-31 21:32:04.588000+00:00",
                    "modified": "2022-05-23 21:21:17.572000+00:00",
                    "name": "Sandworm Team",
                    "description": "[Sandworm Team](https://attack.mitre.org/groups/G0034) is a destructive threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) Main Center for Special Technologies (GTsST) military unit 74455.(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020) This group has been active since at least 2009.(Citation: iSIGHT Sandworm 2014)(Citation: CrowdStrike VOODOO BEAR)(Citation: USDOJ Sandworm Feb 2020)(Citation: NCSC Sandworm Feb 2020)\n\nIn October 2020, the US indicted six GRU Unit 74455 officers associated with [Sandworm Team](https://attack.mitre.org/groups/G0034) for the following cyber operations: the 2015 and 2016 attacks against Ukrainian electrical companies and government organizations, the 2017 worldwide [NotPetya](https://attack.mitre.org/software/S0368) attack, targeting of the 2017 French presidential campaign, the 2018 [Olympic Destroyer](https://attack.mitre.org/software/S0365) attack against the Winter Olympic Games, the 2018 operation against the Organisation for the Prohibition of Chemical Weapons, and attacks against the country of Georgia in 2018 and 2019.(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020) Some of these were conducted with the assistance of GRU Unit 26165, which is also referred to as [APT28](https://attack.mitre.org/groups/G0007).(Citation: US District Court Indictment GRU Oct 2018)",
                    "aliases": [
                        "Sandworm Team",
                        "ELECTRUM",
                        "Telebots",
                        "IRON VIKING",
                        "BlackEnergy (Group)",
                        "Quedagh",
                        "VOODOO BEAR"
                    ],
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/groups/G0034",
                            "external_id": "G0034"
                        },
                        {
                            "source_name": "VOODOO BEAR",
                            "description": "(Citation: CrowdStrike VOODOO BEAR)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)"
                        },
                        {
                            "source_name": "ELECTRUM",
                            "description": "(Citation: Dragos ELECTRUM)(Citation: UK NCSC Olympic Attacks October 2020)"
                        },
                        {
                            "source_name": "Sandworm Team",
                            "description": "(Citation: iSIGHT Sandworm 2014) (Citation: F-Secure BlackEnergy 2014) (Citation: InfoSecurity Sandworm Oct 2014)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)"
                        },
                        {
                            "source_name": "Quedagh",
                            "description": "(Citation: iSIGHT Sandworm 2014) (Citation: F-Secure BlackEnergy 2014)(Citation: UK NCSC Olympic Attacks October 2020)"
                        },
                        {
                            "source_name": "BlackEnergy (Group)",
                            "description": "(Citation: NCSC Sandworm Feb 2020)(Citation: UK NCSC Olympic Attacks October 2020)"
                        },
                        {
                            "source_name": "Telebots",
                            "description": "(Citation: NCSC Sandworm Feb 2020)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)"
                        },
                        {
                            "source_name": "IRON VIKING",
                            "description": "(Citation: Secureworks IRON VIKING )(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)"
                        },
                        {
                            "source_name": "US District Court Indictment GRU Oct 2018",
                            "description": "Brady, S . (2018, October 3). Indictment - United States vs Aleksei Sergeyevich Morenets, et al.. Retrieved October 1, 2020.",
                            "url": "https://www.justice.gov/opa/page/file/1098481/download"
                        },
                        {
                            "source_name": "Dragos ELECTRUM",
                            "description": "Dragos. (2017, January 1). ELECTRUM Threat Profile. Retrieved June 10, 2020.",
                            "url": "https://www.dragos.com/resource/electrum/"
                        },
                        {
                            "source_name": "F-Secure BlackEnergy 2014",
                            "description": "F-Secure Labs. (2014). BlackEnergy & Quedagh: The convergence of crimeware and APT attacks. Retrieved March 24, 2016.",
                            "url": "https://blog-assets.f-secure.com/wp-content/uploads/2019/10/15163408/BlackEnergy_Quedagh.pdf"
                        },
                        {
                            "source_name": "iSIGHT Sandworm 2014",
                            "description": "Hultquist, J.. (2016, January 7). Sandworm Team and the Ukrainian Power Authority Attacks. Retrieved October 6, 2017.",
                            "url": "https://www.fireeye.com/blog/threat-research/2016/01/ukraine-and-sandworm-team.html"
                        },
                        {
                            "source_name": "CrowdStrike VOODOO BEAR",
                            "description": "Meyers, A. (2018, January 19). Meet CrowdStrike\u2019s Adversary of the Month for January: VOODOO BEAR. Retrieved May 22, 2018.",
                            "url": "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-january-voodoo-bear/"
                        },
                        {
                            "source_name": "InfoSecurity Sandworm Oct 2014",
                            "description": "Muncaster, P.. (2014, October 14). Microsoft Zero Day Traced to Russian \u2018Sandworm\u2019 Hackers. Retrieved October 6, 2017.",
                            "url": "https://www.infosecurity-magazine.com/news/microsoft-zero-day-traced-russian/"
                        },
                        {
                            "source_name": "NCSC Sandworm Feb 2020",
                            "description": "NCSC. (2020, February 20). NCSC supports US advisory regarding GRU intrusion set Sandworm. Retrieved June 10, 2020.",
                            "url": "https://www.ncsc.gov.uk/news/ncsc-supports-sandworm-advisory"
                        },
                        {
                            "source_name": "USDOJ Sandworm Feb 2020",
                            "description": "Pompeo, M. (2020, February 20). The United States Condemns Russian Cyber Attack Against the Country of Georgia. Retrieved June 18, 2020.",
                            "url": "https://2017-2021.state.gov/the-united-states-condemns-russian-cyber-attack-against-the-country-of-georgia//index.html"
                        },
                        {
                            "source_name": "US District Court Indictment GRU Unit 74455 October 2020",
                            "description": "Scott W. Brady. (2020, October 15). United States vs. Yuriy Sergeyevich Andrienko et al.. Retrieved November 25, 2020.",
                            "url": "https://www.justice.gov/opa/press-release/file/1328521/download"
                        },
                        {
                            "source_name": "Secureworks IRON VIKING ",
                            "description": "Secureworks. (2020, May 1). IRON VIKING Threat Profile. Retrieved June 10, 2020.",
                            "url": "https://www.secureworks.com/research/threat-profiles/iron-viking"
                        },
                        {
                            "source_name": "UK NCSC Olympic Attacks October 2020",
                            "description": "UK NCSC. (2020, October 19). UK exposes series of Russian cyber attacks against Olympic and Paralympic Games . Retrieved November 30, 2020.",
                            "url": "https://www.gov.uk/government/news/uk-exposes-series-of-russian-cyber-attacks-against-olympic-and-paralympic-games"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_contributors": [
                        "Dragos  Threat  Intelligence"
                    ],
                    "x_mitre_deprecated": false,
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "2.2",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_contributors']\": [\"Dragos  Threat  Intelligence\"], \"root['x_mitre_deprecated']\": false, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-05-23 21:21:17.572000+00:00\", \"old_value\": \"2021-10-15 21:46:19.437000+00:00\"}, \"root['external_references'][1]['source_name']\": {\"new_value\": \"VOODOO BEAR\", \"old_value\": \"Sandworm Team\"}, \"root['external_references'][1]['description']\": {\"new_value\": \"(Citation: CrowdStrike VOODOO BEAR)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)\", \"old_value\": \"(Citation: iSIGHT Sandworm 2014) (Citation: F-Secure BlackEnergy 2014) (Citation: InfoSecurity Sandworm Oct 2014)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)\"}, \"root['external_references'][3]['source_name']\": {\"new_value\": \"Sandworm Team\", \"old_value\": \"Telebots\"}, \"root['external_references'][3]['description']\": {\"new_value\": \"(Citation: iSIGHT Sandworm 2014) (Citation: F-Secure BlackEnergy 2014) (Citation: InfoSecurity Sandworm Oct 2014)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)\", \"old_value\": \"(Citation: NCSC Sandworm Feb 2020)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)\"}, \"root['external_references'][4]['source_name']\": {\"new_value\": \"Quedagh\", \"old_value\": \"IRON VIKING\"}, \"root['external_references'][4]['description']\": {\"new_value\": \"(Citation: iSIGHT Sandworm 2014) (Citation: F-Secure BlackEnergy 2014)(Citation: UK NCSC Olympic Attacks October 2020)\", \"old_value\": \"(Citation: Secureworks IRON VIKING )(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)\"}, \"root['external_references'][6]['source_name']\": {\"new_value\": \"Telebots\", \"old_value\": \"Quedagh\"}, \"root['external_references'][6]['description']\": {\"new_value\": \"(Citation: NCSC Sandworm Feb 2020)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)\", \"old_value\": \"(Citation: iSIGHT Sandworm 2014) (Citation: F-Secure BlackEnergy 2014)(Citation: UK NCSC Olympic Attacks October 2020)\"}, \"root['external_references'][7]['source_name']\": {\"new_value\": \"IRON VIKING\", \"old_value\": \"VOODOO BEAR\"}, \"root['external_references'][7]['description']\": {\"new_value\": \"(Citation: Secureworks IRON VIKING )(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)\", \"old_value\": \"(Citation: CrowdStrike VOODOO BEAR)(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020)\"}, \"root['external_references'][8]['source_name']\": {\"new_value\": \"US District Court Indictment GRU Oct 2018\", \"old_value\": \"US District Court Indictment GRU Unit 74455 October 2020\"}, \"root['external_references'][8]['description']\": {\"new_value\": \"Brady, S . (2018, October 3). Indictment - United States vs Aleksei Sergeyevich Morenets, et al.. Retrieved October 1, 2020.\", \"old_value\": \"Scott W. Brady. (2020, October 15). United States vs. Yuriy Sergeyevich Andrienko et al.. Retrieved November 25, 2020.\"}, \"root['external_references'][8]['url']\": {\"new_value\": \"https://www.justice.gov/opa/page/file/1098481/download\", \"old_value\": \"https://www.justice.gov/opa/press-release/file/1328521/download\"}, \"root['external_references'][9]['source_name']\": {\"new_value\": \"Dragos ELECTRUM\", \"old_value\": \"UK NCSC Olympic Attacks October 2020\"}, \"root['external_references'][9]['description']\": {\"new_value\": \"Dragos. (2017, January 1). ELECTRUM Threat Profile. Retrieved June 10, 2020.\", \"old_value\": \"UK NCSC. (2020, October 19). UK exposes series of Russian cyber attacks against Olympic and Paralympic Games . Retrieved November 30, 2020.\"}, \"root['external_references'][9]['url']\": {\"new_value\": \"https://www.dragos.com/resource/electrum/\", \"old_value\": \"https://www.gov.uk/government/news/uk-exposes-series-of-russian-cyber-attacks-against-olympic-and-paralympic-games\"}, \"root['external_references'][10]['source_name']\": {\"new_value\": \"F-Secure BlackEnergy 2014\", \"old_value\": \"iSIGHT Sandworm 2014\"}, \"root['external_references'][10]['description']\": {\"new_value\": \"F-Secure Labs. (2014). BlackEnergy & Quedagh: The convergence of crimeware and APT attacks. Retrieved March 24, 2016.\", \"old_value\": \"Hultquist, J.. (2016, January 7). Sandworm Team and the Ukrainian Power Authority Attacks. Retrieved October 6, 2017.\"}, \"root['external_references'][10]['url']\": {\"new_value\": \"https://blog-assets.f-secure.com/wp-content/uploads/2019/10/15163408/BlackEnergy_Quedagh.pdf\", \"old_value\": \"https://www.fireeye.com/blog/threat-research/2016/01/ukraine-and-sandworm-team.html\"}, \"root['external_references'][11]['source_name']\": {\"new_value\": \"iSIGHT Sandworm 2014\", \"old_value\": \"CrowdStrike VOODOO BEAR\"}, \"root['external_references'][11]['description']\": {\"new_value\": \"Hultquist, J.. (2016, January 7). Sandworm Team and the Ukrainian Power Authority Attacks. Retrieved October 6, 2017.\", \"old_value\": \"Meyers, A. (2018, January 19). Meet CrowdStrike\\u2019s Adversary of the Month for January: VOODOO BEAR. Retrieved May 22, 2018.\"}, \"root['external_references'][11]['url']\": {\"new_value\": \"https://www.fireeye.com/blog/threat-research/2016/01/ukraine-and-sandworm-team.html\", \"old_value\": \"https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-january-voodoo-bear/\"}, \"root['external_references'][12]['source_name']\": {\"new_value\": \"CrowdStrike VOODOO BEAR\", \"old_value\": \"USDOJ Sandworm Feb 2020\"}, \"root['external_references'][12]['description']\": {\"new_value\": \"Meyers, A. (2018, January 19). Meet CrowdStrike\\u2019s Adversary of the Month for January: VOODOO BEAR. Retrieved May 22, 2018.\", \"old_value\": \"Pompeo, M. (2020, February 20). The United States Condemns Russian Cyber Attack Against the Country of Georgia. Retrieved June 18, 2020.\"}, \"root['external_references'][12]['url']\": {\"new_value\": \"https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-january-voodoo-bear/\", \"old_value\": \"https://2017-2021.state.gov/the-united-states-condemns-russian-cyber-attack-against-the-country-of-georgia//index.html\"}, \"root['external_references'][13]['source_name']\": {\"new_value\": \"InfoSecurity Sandworm Oct 2014\", \"old_value\": \"NCSC Sandworm Feb 2020\"}, \"root['external_references'][13]['description']\": {\"new_value\": \"Muncaster, P.. (2014, October 14). Microsoft Zero Day Traced to Russian \\u2018Sandworm\\u2019 Hackers. Retrieved October 6, 2017.\", \"old_value\": \"NCSC. (2020, February 20). NCSC supports US advisory regarding GRU intrusion set Sandworm. Retrieved June 10, 2020.\"}, \"root['external_references'][13]['url']\": {\"new_value\": \"https://www.infosecurity-magazine.com/news/microsoft-zero-day-traced-russian/\", \"old_value\": \"https://www.ncsc.gov.uk/news/ncsc-supports-sandworm-advisory\"}, \"root['external_references'][14]['source_name']\": {\"new_value\": \"NCSC Sandworm Feb 2020\", \"old_value\": \"US District Court Indictment GRU Oct 2018\"}, \"root['external_references'][14]['description']\": {\"new_value\": \"NCSC. (2020, February 20). NCSC supports US advisory regarding GRU intrusion set Sandworm. Retrieved June 10, 2020.\", \"old_value\": \"Brady, S . (2018, October 3). Indictment - United States vs Aleksei Sergeyevich Morenets, et al.. Retrieved October 1, 2020.\"}, \"root['external_references'][14]['url']\": {\"new_value\": \"https://www.ncsc.gov.uk/news/ncsc-supports-sandworm-advisory\", \"old_value\": \"https://www.justice.gov/opa/page/file/1098481/download\"}, \"root['external_references'][15]['source_name']\": {\"new_value\": \"USDOJ Sandworm Feb 2020\", \"old_value\": \"F-Secure BlackEnergy 2014\"}, \"root['external_references'][15]['description']\": {\"new_value\": \"Pompeo, M. (2020, February 20). The United States Condemns Russian Cyber Attack Against the Country of Georgia. Retrieved June 18, 2020.\", \"old_value\": \"F-Secure Labs. (2014). BlackEnergy & Quedagh: The convergence of crimeware and APT attacks. Retrieved March 24, 2016.\"}, \"root['external_references'][15]['url']\": {\"new_value\": \"https://2017-2021.state.gov/the-united-states-condemns-russian-cyber-attack-against-the-country-of-georgia//index.html\", \"old_value\": \"https://blog-assets.f-secure.com/wp-content/uploads/2019/10/15163408/BlackEnergy_Quedagh.pdf\"}, \"root['external_references'][16]['source_name']\": {\"new_value\": \"US District Court Indictment GRU Unit 74455 October 2020\", \"old_value\": \"InfoSecurity Sandworm Oct 2014\"}, \"root['external_references'][16]['description']\": {\"new_value\": \"Scott W. Brady. (2020, October 15). United States vs. Yuriy Sergeyevich Andrienko et al.. Retrieved November 25, 2020.\", \"old_value\": \"Muncaster, P.. (2014, October 14). Microsoft Zero Day Traced to Russian \\u2018Sandworm\\u2019 Hackers. Retrieved October 6, 2017.\"}, \"root['external_references'][16]['url']\": {\"new_value\": \"https://www.justice.gov/opa/press-release/file/1328521/download\", \"old_value\": \"https://www.infosecurity-magazine.com/news/microsoft-zero-day-traced-russian/\"}, \"root['external_references'][17]['source_name']\": {\"new_value\": \"Secureworks IRON VIKING \", \"old_value\": \"Dragos ELECTRUM\"}, \"root['external_references'][17]['description']\": {\"new_value\": \"Secureworks. (2020, May 1). IRON VIKING Threat Profile. Retrieved June 10, 2020.\", \"old_value\": \"Dragos. (2017, January 1). ELECTRUM Threat Profile. Retrieved June 10, 2020.\"}, \"root['external_references'][17]['url']\": {\"new_value\": \"https://www.secureworks.com/research/threat-profiles/iron-viking\", \"old_value\": \"https://www.dragos.com/resource/electrum/\"}, \"root['external_references'][18]['source_name']\": {\"new_value\": \"UK NCSC Olympic Attacks October 2020\", \"old_value\": \"Secureworks IRON VIKING \"}, \"root['external_references'][18]['description']\": {\"new_value\": \"UK NCSC. (2020, October 19). UK exposes series of Russian cyber attacks against Olympic and Paralympic Games . Retrieved November 30, 2020.\", \"old_value\": \"Secureworks. (2020, May 1). IRON VIKING Threat Profile. Retrieved June 10, 2020.\"}, \"root['external_references'][18]['url']\": {\"new_value\": \"https://www.gov.uk/government/news/uk-exposes-series-of-russian-cyber-attacks-against-olympic-and-paralympic-games\", \"old_value\": \"https://www.secureworks.com/research/threat-profiles/iron-viking\"}, \"root['x_mitre_version']\": {\"new_value\": \"2.2\", \"old_value\": \"2.1\"}}}",
                    "previous_version": "2.1",
                    "version_change": "2.1 \u2192 2.2"
                }
            ],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "campaigns": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "mitigations": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1553b156-6767-47f7-9eb4-2a692505666d",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2019-10-18 12:49:58.924000+00:00",
                    "modified": "2022-04-06 14:47:46.019000+00:00",
                    "name": "Application Vetting",
                    "description": "Enterprises can vet applications for exploitable vulnerabilities or unwanted (privacy-invasive or malicious) behaviors. Enterprises can inspect applications themselves or use a third-party service.\n\nEnterprises may impose policies to only allow pre-approved applications to be installed on their devices or may impose policies to block use of specific applications known to have issues. In Bring Your Own Device (BYOD) environments, enterprises may only be able to impose these policies over an enterprise-managed portion of the device.\n\nApplication Vetting is not a complete mitigation. Techniques such as [Evade Analysis Environment](https://attack.mitre.org/techniques/T1523) exist that can enable adversaries to bypass vetting.",
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/mitigations/M1005",
                            "external_id": "M1005"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 14:47:46.019000+00:00\", \"old_value\": \"2021-02-18 16:14:17.809000+00:00\"}}}"
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e944670c-d03a-4e93-a21c-b3d4c53ec4c9",
                    "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "created": "2017-10-25 14:48:51.365000+00:00",
                    "modified": "2022-04-06 14:47:19.714000+00:00",
                    "name": "Caution with Device Administrator Access",
                    "description": "Warn device users not to accept requests to grant Device Administrator access to applications without good reason.\n\nAdditionally, application vetting should include a check on whether the application requests Device Administrator access. Applications that do request Device Administrator access should be carefully scrutinized and only allowed to be used if a valid reason exists.",
                    "revoked": false,
                    "external_references": [
                        {
                            "source_name": "mitre-attack",
                            "url": "https://attack.mitre.org/mitigations/M1007",
                            "external_id": "M1007"
                        }
                    ],
                    "object_marking_refs": [
                        "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
                    ],
                    "x_mitre_attack_spec_version": "2.1.0",
                    "x_mitre_deprecated": true,
                    "x_mitre_domains": [
                        "mobile-attack"
                    ],
                    "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
                    "x_mitre_version": "1.0",
                    "detailed_diff": "{\"dictionary_item_added\": {\"root['x_mitre_attack_spec_version']\": \"2.1.0\", \"root['x_mitre_deprecated']\": true, \"root['x_mitre_domains']\": [\"mobile-attack\"], \"root['x_mitre_modified_by_ref']\": \"identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5\"}, \"dictionary_item_removed\": {\"root['x_mitre_old_attack_id']\": \"MOB-M1007\"}, \"values_changed\": {\"root['modified']\": {\"new_value\": \"2022-04-06 14:47:19.714000+00:00\", \"old_value\": \"2018-10-17 00:14:20.652000+00:00\"}}}"
                }
            ],
            "deletions": []
        },
        "datasources": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "datacomponents": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        }
    },
    "ics-attack": {
        "techniques": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "software": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "groups": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "campaigns": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "mitigations": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "datasources": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        },
        "datacomponents": {
            "additions": [],
            "major_version_changes": [],
            "minor_version_changes": [],
            "other_version_changes": [],
            "patches": [],
            "revocations": [],
            "deprecations": [],
            "deletions": []
        }
    },
    "new-contributors": [
        "Alex Hinchliffe, Palo Alto Networks",
        "Dragos  Threat  Intelligence",
        "Emily Ratliff, IBM",
        "Leo Zhang, Trend Micro",
        "Steven Du, Trend Micro"
    ]
}